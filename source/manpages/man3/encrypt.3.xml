<?xml version="1.0" encoding="UTF-8"?>
<!-- ********************************************************************
     man3/encrypt.3.xml, 2002-12-20 22:54:36 nilgun
******************************************************************** -->
<refentry xml:id="man3-encrypt" xmlns="http://docbook.org/ns/docbook"
 xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:lang="tr">
 <info xmlns:t="http://tlbp.gen.tr/ns/tlbp">
  <t:pageinfo>
   <t:name>encrypt</t:name>
   <t:volnum>3</t:volnum>
   <t:section>Kriptografik İşlevler</t:section>
   <t:source></t:source>
   <t:date>2003-04-04</t:date>
<t:remark>.ig
Copyright 2000 Nicol?s Lichtmaier &lt;nick@debian.org&gt;
Created 2000-07-22 00:52-0300
|
This is free documentation; you can redistribute it and/or
modify it under the terms of the GNU General Public License as
published by the Free Software Foundation; either version 2 of
the License, or (at your option) any later version.
|
The GNU General Public License's references to "object code"
and "executables" are to be interpreted as the output of any
document formatting or typesetting system, including
intermediate and printed output.
|
This manual is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
|
Modified 2002-07-23 19:21:35 CEST 2002 Walter Harms
&lt;walter.harms@informatik.uni-oldenburg.de&gt;
|
Modified 2003-04-04, aeb
..</t:remark>
  </t:pageinfo>
 </info>
 <refnamediv>
  <refname>encrypt</refname>
  <refpurpose>64 bitlik iletileri şifreler</refpurpose>
 </refnamediv>
 <refnamediv>
  <refname>setkey</refname>
  <refpurpose><command>encrypt</command>() tarafından kullanılan anahtarı belirler</refpurpose>
 </refnamediv>
 <refnamediv>
  <refname>encrypt_r</refname>
  <refpurpose>64 bitlik iletileri şifreler (evresel)</refpurpose>
 </refnamediv>
 <refnamediv>
  <refname>setkey_r</refname>
  <refpurpose><command>encrypt_r</command>() tarafından kullanılan anahtarı belirler (evresel)</refpurpose>
 </refnamediv>
 <refsynopsisdiv><title>BİLDİRİM</title>
  <funcsynopsis>
   <funcsynopsisinfo>
    <option>#include _XOPEN_SOURCE</option>
    <option>#include &lt;unistd.h></option>
   </funcsynopsisinfo>
   <funcprototype>
    <funcdef>void <function>encrypt</function></funcdef>
    <paramdef>char <parameter>block</parameter><command>[64]</command></paramdef>
    <paramdef>int <parameter>edflag</parameter></paramdef>
   </funcprototype>
   <funcsynopsisinfo>
    <option>#include _XOPEN_SOURCE</option>
    <option>#include &lt;stdlib.h></option>
   </funcsynopsisinfo>
   <funcprototype>
    <funcdef>void <function>setkey</function></funcdef>
    <paramdef>const char *<parameter>key</parameter></paramdef>
   </funcprototype>
   <funcsynopsisinfo>
    <option>#include _XOPEN_SOURCE</option>
    <option>#include &lt;crypt.h></option>
   </funcsynopsisinfo>
   <funcprototype>
    <funcdef>void <function>setkey_r</function></funcdef>
    <paramdef>const char *<parameter>key</parameter></paramdef>
    <paramdef>struct crypt_data *<parameter>data</parameter></paramdef>
   </funcprototype>
   <funcprototype>
    <funcdef>void <function>encrypt</function></funcdef>
    <paramdef>char *<parameter>block</parameter></paramdef>
    <paramdef>int <parameter>edflag</parameter></paramdef>
    <paramdef>struct crypt_data *<parameter>data</parameter></paramdef>
   </funcprototype>
  </funcsynopsis>
  <para>
   Bunların herbiri <command>-lcrypt</command> ile ilintileme gerektirir.
  </para>
 </refsynopsisdiv>
 <refsect1><title>AÇIKLAMA</title>
  <para>
   Bu işlevler 64 bitlik iletileri şifreler ve deşifrelerler. <command>setkey</command>() işlevi <command>encrypt</command>() işlevi tarafından kullanılan anahtarı belirler. Burada kullanılan <replaceable>key</replaceable> parametresi bir bayt dizisidir ve her bayt 1 ya da 0 sayısal değerine sahiptir. <replaceable>key</replaceable><command>[n]</command> dizisinin indis değeri <command>n=8*i-1</command> olan elemanları yoksayılır, bu durumda asıl anahtar uzunluğu 56 bit olur.
  </para>
  <para>
   <command>setkey</command>() işlevi kendine aktarılan tamponu <replaceable>edflag</replaceable> olarak 0 verilmişse şifreleyerek, 0 verilmişse deşifreleyerek değiştirir. <replaceable>key</replaceable> parametresi gibi <replaceable>block</replaceable> parametresi de şifrelenmiş değerin bit gösteriminin vektörüdür. Sonuç aynı vektör içinde döner.
  </para>
  <para>
   Bu iki işlev evresel değildir, yani anahtar verisi durağan bellek bölgesinde saklanır. <command>setkey_r</command>() ve <command>encrypt_r</command>() işlevleri evreseldir. ve anahtar verisini saklamak için <replaceable>crypt_data</replaceable> veri yapısını kullanırlar:
  </para>
  <literallayout>struct crypt_data {
       char keysched[16 * 8];
       char sb0[32768];
       char sb1[32768];
       char sb2[32768];
       char sb3[32768];
       char crypt_3_buf[14];
       char current_salt[2];
       long int current_saltbits;
       int  direction, initialized;
};
</literallayout>
 </refsect1>
 <refsect1><title>DÖNÜŞ DEĞERİ</title>
  <para>
   Bu işlevler herhangi bir değer döndürmez.
  </para>
 </refsect1>
 <refsect1><title>HATALAR</title>
  <para>
   Yukarıdaki işlevler çağrılmadan önce <replaceable>errno</replaceable> değişkeni sıfırlanır. Başarı durumunda değeri değişmez.
  </para>
  <glosslist>
   <glossentry>
   <glossterm><constant>ENOSYS</constant></glossterm>
    <glossdef>
     <para>
      İşlev kütüphanede bulunmamaktadır (Örneğin, ABD'nin ihracat sınırlamalarından dolayı).
     </para>
    </glossdef>
   </glossentry>
  </glosslist>
 </refsect1>
 <refsect1><title>ÖRNEK</title>
  <para>
   Bu örneği glibc2.2 ile derlemek için <command>libcrypt</command> ile ilintilemeniz gerekir. Anlamlı bir çalıştırma için <replaceable>anahtar</replaceable>[] ve <replaceable>ileti</replaceable>[] dizilerini anlamlı bir bit kalıbı ile doldurmalısınız. <command>crypt.h</command> başlık dosyasının <command>setkey</command>() ve <command>encrypt</command>() işlevlerinin prototiplerini koşulsuz olarak verdiğini unutmayın.
  </para>
  <literallayout>#include &lt;crypt.h>

main() {
       char anahtar[64];    /* anahtarın bit kalıbı */
       char ileti[64];      /* iletinin bit kalıbı */
       setkey(anahtar);
       encrypt(ileti, 0);   /* şifreler */
       encrypt(ileti, 1);   /* deşifreler */
}
</literallayout>
 </refsect1>
 <refsect1><title>NOTLAR</title>
  <para>
   glibc2.2'de bu işlevler DES algoritmasını kullanır.
  </para>
 </refsect1>
 <refsect1><title>UYUMLULUK</title>
  <para>
   <command>encrypt</command>() ve <command>setkey</command>() işlevleri SVID, SUSv2 ve POSIX 1003.1-2001 uyumludur.  <command>encrypt_r</command>() ve <command>setkey_r</command>() işlevleri ise GNU oluşumudur.
  </para>
 </refsect1>
 <refsect1><title>İLGİLİ BELGELER</title>
  <para>
   <uri xlink:href="man3-cbc_crypt"/>, <uri xlink:href="man3-crypt"/>, <uri xlink:href="man3-ecb_crypt"/>, <uri xlink:href="man3-fcrypt"/>
  </para>
 </refsect1>
 <refsect1><title>ÇEVİREN</title>
  <simpara>Emin İslam Tatlı - Nisan 2004</simpara>
  <simpara>
   Lütfen, çeviri ile ilgili bildirimler için &lt;belgeler-genel (at) lists.sourceforge.net&gt; adresini kullanın.
  </simpara>
 </refsect1>
</refentry>
