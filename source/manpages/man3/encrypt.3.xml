<?xml version="1.0" encoding="UTF-8"?>
<!-- ********************************************************************
     man3/encrypt.3.xml, 2020-11-01, GPL2+, NBB - Eylül 2022
******************************************************************** -->
<refentry xml:id="man3-encrypt" xmlns="http://docbook.org/ns/docbook"
 xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:lang="tr">
 <info>
  <keywordset>
   <keyword>Linux, manpage, kütüphane, kitaplık, belge, belgeler</keyword>
   <keyword>encrypt, setkey, encrypt_r, setkey_r, kriptografi</keyword>
   <keyword>şifre, şifreleme, parola, veri, ileti, aş, tuz, aşlama</keyword>
   <keyword>64-bit, unistd.h, _GNU_SOURCE, crypt_data, -lcrypt</keyword>
   <keyword>libcrypt, anahtar, evresel, errno, ENOSYS</keyword>
  </keywordset>
 </info>
 <refmeta>
  <manvolnum>3</manvolnum>
  <refentrytitle>encrypt</refentrytitle>
  <refmiscinfo>
   <sectdesc>Kütüphane İşlevleri</sectdesc>
   <source>Linux man-pages 5.10</source>
   <date>1 Kasım 2020</date>
  </refmiscinfo>
  <legalnotice><title>Yasal Uyarı</title>
   <screen> * Özgün Belgenin Lisans ve Telif Hakkı bilgileri:
 *
 * Copyright 2000 Nicolás Lichtmaier &lt;nick@debian.org>
 * Created 2000-07-22 00:52-0300
 *
 * %%%LICENSE_START(GPLv2+_DOC_FULL)
 * This is free documentation; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
 *
 * The GNU General Public License's references to "object code"
 * and "executables" are to be interpreted as the output of any
 * document formatting or typesetting system, including
 * intermediate and printed output.
 *
 * This manual is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public
 * License along with this manual; if not, see
 * &lt;http://www.gnu.org/licenses/>.
 * %%%LICENSE_END
 *
 * Modified 2002-07-23 19:21:35 CEST 2002 Walter Harms
 * &lt;walter.harms@informatik.uni-oldenburg.de>
 *
 * Modified 2003-04-04, aeb
</screen>
  </legalnotice>
 </refmeta>
 <refnamediv>
  <refname>encrypt</refname>
  <refpurpose>64 bitlik iletileri şifreler</refpurpose>
 </refnamediv>
 <refnamediv>
  <refname>setkey</refname>
  <refpurpose>encrypt() için anahtarı belirler</refpurpose>
 </refnamediv>
 <refnamediv>
  <refname>encrypt_r</refname>
  <refpurpose>64 bitlik iletileri şifreler (evresel)</refpurpose>
 </refnamediv>
 <refnamediv>
  <refname>setkey_r</refname>
  <refpurpose>encrypt_r() için anahtarı belirler (evresel)</refpurpose>
 </refnamediv>
 <refsynopsisdiv><title>BİLDİRİM</title>
  <funcsynopsis>
   <funcsynopsisinfo>
    <option>#include _XOPEN_SOURCE</option>    /* Bkz: <uri xlink:href="man7-feature_test_macros"/> */
    <option>#include &lt;unistd.h></option>
   </funcsynopsisinfo>
   <funcprototype>
    <funcdef>void <function>encrypt</function></funcdef>
    <paramdef>char <parameter>block</parameter>[64]</paramdef>
    <paramdef>int <parameter>edflag</parameter></paramdef>
   </funcprototype>
  </funcsynopsis>
  <funcsynopsis>
   <funcsynopsisinfo>
    <option>#include _XOPEN_SOURCE</option>    /* Bkz: <uri xlink:href="man7-feature_test_macros"/> */
    <option>#include &lt;stdlib.h></option>
   </funcsynopsisinfo>
   <funcprototype>
    <funcdef>void <function>setkey</function></funcdef>
    <paramdef>const char *<parameter>key</parameter></paramdef>
   </funcprototype>
  </funcsynopsis>
  <funcsynopsis>
   <funcsynopsisinfo>
    <option>#include _GNU_SOURCE</option>    /* Bkz: <uri xlink:href="man7-feature_test_macros"/> */
    <option>#include &lt;crypt.h></option>
   </funcsynopsisinfo>
   <funcprototype>
    <funcdef>void <function>setkey_r</function></funcdef>
    <paramdef>const char *<parameter>key</parameter></paramdef>
    <paramdef>struct crypt_data *<parameter>data</parameter></paramdef>
   </funcprototype>
   <funcprototype>
    <funcdef>void <function>encrypt_r</function></funcdef>
    <paramdef>char *<parameter>block</parameter></paramdef>
    <paramdef>int <parameter>edflag</parameter></paramdef>
    <paramdef>struct crypt_data *<parameter>data</parameter></paramdef>
   </funcprototype>
  </funcsynopsis>
  <para>
   Bunların herbiri <command>-lcrypt</command> ile ilintileme gerektirir.
  </para>
 </refsynopsisdiv>
 <refsect1><title>AÇIKLAMA</title>
  <warning>
   <para>
    Artık güvenli kabul edilmeyen DES blok şifresini kullandıkları için <function>crypt</function>(), <function>crypt_r</function>(), <function>setkey</function>() ve <function>setkey_r</function>() glibc-2.28'de kaldırıldı. Uygulamaların <command>libcrypt</command> gibi daha güncel bir şifreleme kütüphanesine geçmesi gerekir.
   </para>
  </warning>
  <para>
   Bu işlevler 64 bitlik iletileri şifreler ve şifresini çözer. <function>setkey</function>() işlevi <function>encrypt</function>() işlevi tarafından kullanılan anahtarı belirler. Burada kullanılan <parameter>key</parameter> değiştirgesi 64 baytlık bir dizidir ve her baytın değeri <literal>1</literal> ya da <literal>0</literal>'dır. <parameter>key</parameter><literal>[n]</literal> dizisinin  <code>n=8*i-1</code> indisli elemanları yoksayılır, bu durumda asıl anahtar uzunluğu 56 bit olur.
  </para>
  <para>
   <function>encrypt</function>() işlevi aktarılan tamponda değişiklik yapar, <parameter>edflag</parameter> değiştirgesine 0 aktarılırsa <parameter>block</parameter> içeriğini şifreler, 1 aktarılırsa şifresini çözer. <parameter>key</parameter> gibi <parameter>block</parameter> değiştirgesi de şifrelenmiş değerin bit gösterimini içerir. Sonuç aynı tampon içinde döner.
  </para>
  <para>
   Bu iki işlev evresel değildir, yani anahtar verisi statik bellek bölgesinde saklanır. <function>setkey_r</function>() ve <function>encrypt_r</function>() işlevleri evreseldir ve anahtar verisini saklamak için <replaceable>crypt_data</replaceable> veri yapısını kullanır:
  </para>
  <screen>struct crypt_data {
   char keysched[16 * 8];
   char sb0[32768];
   char sb1[32768];
   char sb2[32768];
   char sb3[32768];
   char crypt_3_buf[14];
   char current_salt[2];
   long int current_saltbits;
   int  direction;
   int  initialized;
};
</screen>
  <para>
   <function>setkey_r</function>() çağrısından önce <parameter>data->initialized</parameter> alanına 0 atanır.
  </para>
 </refsect1>
 <refsect1><title>DÖNÜŞ DEĞERİ</title>
  <para>
   Bu işlevler herhangi bir değer döndürmez.
  </para>
 </refsect1>
 <refsect1><title>HATALAR</title>
  <para>
   Yukarıdaki işlevler çağrılmadan önce <replaceable>errno</replaceable> değişkeni sıfırlanır. Başarı durumunda değeri değişmez.
  </para>
  <glosslist>
   <glossentry>
   <glossterm><constant>ENOSYS</constant></glossterm>
    <glossdef>
     <para>
      İşlev kütüphanede bulunmamaktadır (Örneğin, ABD'nin ihracat sınırlamalarından dolayı).
     </para>
    </glossdef>
   </glossentry>
  </glosslist>
 </refsect1>
 <refsect1><title>ÖZNİTELİKLER</title>
  <para>
   Bu bölümde kulllanılan terimlerin açıklamaları <uri xlink:href="man7-attributes"/> sayfasında bulunabilir.
  </para>
  <informaltable>
   <tgroup cols="3" colsep='1' rowsep='1'>
    <colspec colwidth="*"/>
    <colspec colwidth="*"/>
    <colspec colwidth="*"/>
    <thead align="left">
     <row>
      <entry>İşlev</entry>
      <entry>Öznitelik</entry>
      <entry>Değer</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><function>encrypt</function>, <function>setkey</function></entry>
      <entry>Evre Güvenliği</entry>
      <entry>ÇEG-hayır yarış:crypt</entry>
     </row>
     <row>
      <entry><function>encrypt_r</function>, <function>setkey_r</function></entry>
      <entry>Evre Güvenliği</entry>
      <entry>ÇEG-evet</entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>
 <refsect1><title>UYUMLULUK</title>
  <para>
   <function>encrypt</function>(), <function>setkey</function>(): POSIX.1-2001, POSIX.1-2008, SUS, SVr4.
  </para>
  <para>
   <function>encrypt_r</function>() ve <function>setkey_r</function>() işlevi GNU eklentisidir.
  </para>
 </refsect1>
 <refsect1><title>EK BİLGİ</title>
  <para>
   Glibc'deki yararlanım: Bkz. <uri xlink:href="man3-crypt"/>
  </para>
  <para>
   Glibc'deki özellikler: Gibc-2.2'de bu işlevler DES algoritmasını kullanmaktadır.
  </para>
 </refsect1>
 <refsect1><title>ÖRNEKLER</title>
  <screen><![CDATA[#define _XOPEN_SOURCE
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <crypt.h>

int
main(void)
{
    char key[64];
    char orig[9] = "eggplant";
    char buf[64];
    char txt[9];

    for (int i = 0; i < 64; i++) {
        key[i] = rand() & 1;
    }

    for (int i = 0; i < 8; i++) {
        for (int j = 0; j < 8; j++) {
            buf[i * 8 + j] = orig[i] >> j & 1;
        }
        setkey(key);
    }
    printf("Şifrelenmeden önce: %s\n", orig);

    encrypt(buf, 0);
    for (int i = 0; i < 8; i++) {
        for (int j = 0, txt[i] = '\0'; j < 8; j++) {
            txt[i] |= buf[i * 8 + j] << j;
        }
        txt[8] = '\0';
    }
    printf("Şifrelemeden sonra:  %s\n", txt);

    encrypt(buf, 1);
    for (int i = 0; i < 8; i++) {
        for (int j = 0, txt[i] = '\0'; j < 8; j++) {
            txt[i] |= buf[i * 8 + j] << j;
        }
        txt[8] = '\0';
    }
    printf("Şifre çözüldükten sonra:  %s\n", txt);
    exit(EXIT_SUCCESS);
}]]>
</screen>
 </refsect1>
 <refsect1><title>İLGİLİ BELGELER</title>
  <para>
   <uri xlink:href="man3-cbc_crypt"/>, <uri xlink:href="man3-crypt"/>, <uri xlink:href="man3-ecb_crypt"/>
  </para>
 </refsect1>
 <refsect1><title>ÇEVİREN</title>
  <simpara>© 2004 Emin İslam Tatlı</simpara>
  <simpara>© 2022 Nilgün Belma Bugüner</simpara>
  <simpara>
   Bu çeviri özgür yazılımdır: Yasaların izin verdiği ölçüde HİÇBİR GARANTİ YOKTUR.
  </simpara>
  <simpara>
   Lütfen, çeviri ile ilgili bildirimler için &lt;belgeler-genel (at) lists.sourceforge.net&gt; adresini kullanın.
  </simpara>
 </refsect1>
</refentry>
