<?xml version="1.0" encoding="UTF-8"?>
<!-- ********************************************************************
   man3/crypt.3.xml, crypt_blowfish 1.3, permissive, FK - Eylül 2022
******************************************************************** -->
<refentry xml:id="man3-crypt" xmlns="http://docbook.org/ns/docbook"
 xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:lang="tr">
 <info>
  <keywordset>
   <keyword>Linux, manpage, kütüphane, kitaplık, belge, belgeler</keyword>
   <keyword>crypt, crypt_r, crypt_rn, crypt_ra, crypt_gensalt</keyword>
   <keyword>crypt_gensalt_ra, crypt_gensalt_rn, kriptografi</keyword>
   <keyword>şifre, şifreleme, parola, veri, ileti, aş, tuz, aşlama</keyword>
   <keyword>unistd.h, _GNU_SOURCE, sockaddr, EACCES, EADDRINUSE</keyword>
  </keywordset>
 </info>
 <refmeta>
  <manvolnum>3</manvolnum>
  <refentrytitle>crypt</refentrytitle>
  <refmiscinfo>
   <sectdesc>Kütüphane İşlevleri</sectdesc>
   <source>crypt_blowfish 1.3</source>
   <date>7 Temmuz 2014</date>
  </refmiscinfo>
  <legalnotice><title>Yasal Uyarı</title>
   <screen> * Özgün Belgenin Lisans ve Telif Hakkı bilgileri:
 *
 * Written and revised by Solar Designer &lt;solar at openwall.com> in 2000-2011.
 * No copyright is claimed, and this man page is hereby placed in the public
 * domain.  In case this attempt to disclaim copyright and place the man page
 * in the public domain is deemed null and void, then the man page is
 * Copyright (c) 2000-2011 Solar Designer and it is hereby released to the
 * general public under the following terms:
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted.
 *
 * There's ABSOLUTELY NO WARRANTY, express or implied.
 *
 * This manual page in its current form is intended for use on systems
 * based on the GNU C Library with crypt_blowfish patched into libcrypt.
</screen>
  </legalnotice>
 </refmeta>
 <refnamediv>
  <refname>crypt</refname>
  <refpurpose>parola ve veri şifrelemesi</refpurpose>
 </refnamediv>
 <refnamediv>
  <refname>crypt_r</refname>
  <refpurpose>parola ve veri şifrelemesi</refpurpose>
 </refnamediv>
 <refnamediv>
  <refname>crypt_rn</refname>
  <refpurpose>parola ve veri şifrelemesi</refpurpose>
 </refnamediv>
 <refnamediv>
  <refname>crypt_ra</refname>
  <refpurpose>parola ve veri şifrelemesi</refpurpose>
 </refnamediv>
 <refnamediv>
  <refname>crypt_gensalt</refname>
  <refpurpose>parola ve veri şifrelemesi</refpurpose>
 </refnamediv>
 <refnamediv>
  <refname>crypt_gensalt_rn</refname>
  <refpurpose>parola ve veri şifrelemesi</refpurpose>
 </refnamediv>
 <refnamediv>
  <refname>crypt_gensalt_ra</refname>
  <refpurpose>parola ve veri şifrelemesi</refpurpose>
 </refnamediv>
 <refsynopsisdiv><title>BİLDİRİM</title>
  <funcsynopsis>
   <funcsynopsisinfo>
    <option>#include _XOPEN_SOURCE</option>
    <option>#include &lt;unistd.h></option>
   </funcsynopsisinfo>
   <funcprototype>
    <funcdef>char *<function>crypt</function></funcdef>
    <paramdef>const char *<parameter>key</parameter></paramdef>
    <paramdef>const char *<parameter>setting</parameter></paramdef>
   </funcprototype>
  </funcsynopsis>
  <funcsynopsis>
   <funcsynopsisinfo>
    <option>#include _GNU_SOURCE</option>
    <option>#include &lt;crypt.h></option>
   </funcsynopsisinfo>
   <funcprototype>
    <funcdef>char *<function>crypt_r</function></funcdef>
    <paramdef>const char *<parameter>key</parameter></paramdef>
    <paramdef>const char *<parameter>setting</parameter></paramdef>
    <paramdef>struct crypt_data *<parameter>data</parameter></paramdef>
   </funcprototype>
  </funcsynopsis>
  <funcsynopsis>
   <funcsynopsisinfo>
    <option>#include _QW_SOURCE</option>
    <option>#include &lt;crypt.h></option>
   </funcsynopsisinfo>
   <funcprototype>
    <funcdef>char *<function>crypt_rn</function></funcdef>
    <paramdef>const char *<parameter>key</parameter></paramdef>
    <paramdef>const char *<parameter>setting</parameter></paramdef>
    <paramdef>void *<parameter>data</parameter></paramdef>
    <paramdef>int <parameter>size</parameter></paramdef>
   </funcprototype>
   <funcprototype>
    <funcdef>char *<function>crypt_ra</function></funcdef>
    <paramdef>const char *<parameter>key</parameter></paramdef>
    <paramdef>const char *<parameter>setting</parameter></paramdef>
    <paramdef>void **<parameter>data</parameter></paramdef>
    <paramdef>int *<parameter>size</parameter></paramdef>
   </funcprototype>
   <funcprototype>
    <funcdef>char *<function>crypt_gensalt</function></funcdef>
    <paramdef>const char *<parameter>prefix</parameter></paramdef>
    <paramdef>unsigned long <parameter>count</parameter></paramdef>
    <paramdef>const char *<parameter>input</parameter></paramdef>
    <paramdef>int <parameter>size</parameter></paramdef>
   </funcprototype>
   <funcprototype>
    <funcdef>char *<function>crypt_gensalt_rn</function></funcdef>
    <paramdef>const char *<parameter>prefix</parameter></paramdef>
    <paramdef>unsigned long <parameter>count</parameter></paramdef>
    <paramdef>const char *<parameter>input</parameter></paramdef>
    <paramdef>int <parameter>size</parameter></paramdef>
    <paramdef>char <parameter>output</parameter></paramdef>
    <paramdef>int <parameter>output_size</parameter></paramdef>
   </funcprototype>
   <funcprototype>
    <funcdef>char *<function>crypt_gensalt_ra</function></funcdef>
    <paramdef>const char *<parameter>prefix</parameter></paramdef>
    <paramdef>unsigned long <parameter>count</parameter></paramdef>
    <paramdef>const char *<parameter>input</parameter></paramdef>
    <paramdef>int <parameter>size</parameter></paramdef>
   </funcprototype>
  </funcsynopsis>
 </refsynopsisdiv>
 <refsect1><title>AÇIKLAMA</title>
  <para>
   <function>crypt</function>, <function>crypt_r</function>, <function>crypt_rn</function> ve <function>crypt_ra</function> işlevleri,  bir tuz ve muhtemelen diğer bağımsız değişkenleri de aktarmak için kullanılan bir dizi desteklenen yöntemden biriyle istendiği şekilde anahtarın kriptografik aş işlevini hesaplar.
  </para>
  <para>
   <function>crypt_r</function>, <function>crypt_rn</function> ve <function>crypt_ra</function> işlevleri <function>crypt</function>'ten farklı olarak evrelidir. Bu işlevler sonuçlarını ve muhtemelen özel verilerini, bir uygulama tarafından kendilerine belirtilen <replaceable>size</replaceable> boyutundaki bir <parameter>data</parameter> alanına ve/veya dinamik olarak ayırdıkları belleğe yerleştirir. Bazı aşlama algoritmaları veri alanını, çağrılar arasında hesaplanmış ara değerleri önbelleğe almak için kullanabilir. Bu sebeple, uygulamalar ilk kullanımdan önce veri alanını doğru bir şekilde ilklendirmelidir. <function>crypt_r</function> yalnızca <structfield>data->initialized</structfield>'in sıfırla ilklendirilmesini gerektirir; <function>crypt_rn</function> ve <function>crypt_ra</function> için tüm <replaceable>data</replaceable> alanının sıfırlarla doldurulması veya <function>crypt_ra</function> durumunda *<replaceable>data</replaceable>'nın NULL olması gerekir. Eğer <function>crypt_ra</function>, talep edilen aşlama algoritmasını NULL *<replaceable>data</replaceable> veya yeterli olmayan *<replaceable>size</replaceable> ile çağrırırsa gerekli bellek dinamik olarak <uri xlink:href="man3-realloc"/> ile ayrılır. Bu sebeple <function>crypt_ra</function>, *<replaceable>data</replaceable> NULL olmadığında bir önceki <function>crypt_ra</function> çağrısıyla veya <uri xlink:href="man3-malloc"/> ailesinden bir çağrıyla ayrılan bir alana gösterici olmalıdır. <function>crypt_ra</function> ile ayrılan belleğin <uri xlink:href="man3-free"/> ile serbest bırakılması gerekir.
  </para>
  <para>
   <function>crypt_gensalt</function>, <function>crypt_gensalt_rn</function>, ve <function>crypt_gensalt_ra</function> işlevleri belirtilen <parameter>prefix</parameter> öneki (aşlama yöntemini belirler), yineleme sayısı <parameter>count</parameter> (seçilen yöntem destekliyorsa) ve aslında tuz olarak kullanacak en fazla <parameter>size</parameter> baytlık kriptografik değerlerden oluşan <parameter>input</parameter> girdisi ile diğer işlevlerde <parameter>setting</parameter> olarak kullanılabilecek bir dizge derler. Eğer yineleme sayısı <replaceable>count</replaceable> 0 ise, düşük bir öntanımlı seçilir. Rastgele baytlar <filename>/dev/urandom</filename>'dan elde edilebilir. <function>crypt_gensalt_rn</function> ve <function>crypt_gensalt_ra</function> işlevleri <function>crypt_gensalt</function> işlevinden farklı olarak evrelidir. <function>crypt_gensalt_rn</function>, sonuçları <replaceable>output_size</replaceable> baytlık <parameter>output</parameter> tamponuna yerleştirir. <function>crypt_gensalt_ra</function> ise, sonuçları için bellekte dinamik olarak yer ayırır. Bu belleğin <uri xlink:href="man3-free"/> ile serbest bırakılması gerekir.
  </para>
 </refsect1>
 <refsect1><title>DÖNÜŞ DEĞERİ</title>
  <para>
   Başarılı bir şekilde tamamlandığında <function>crypt</function>, <function>crypt_r</function>, <function>crypt_rn</function> ve <function>crypt_ra</function> işlevleri, gerçekte kullanılan <replaceable>setting</replaceable>'i ve aşlama işlevinin yazdırılabilir kodlama değerini içeren bir dizgeye gösterici döndürür. Dizgenin tamamı, <function>crypt</function>, <function>crypt_r</function>, <function>crypt_rn</function> ve <function>crypt_ra</function>'ya yapılan çağrılarda <replaceable>setting</replaceable> olarak, <function>crypt_gensalt</function>, <function>crypt_gensalt_rn</function> ve <function>crypt_gensalt_ra</function>'ya yapılan çağrılarda <replaceable>prefix</replaceable> olarak doğrudan kullanılabilir.
  </para>
  <para>
   <function>crypt</function>'in hata durumundaki davranışları tam olarak standartlaştırılmamıştır. Bazı gerçeklemeler başarısız olamaz (süreç ölmediği sürece; bu durumda birşey döndürelemez), diğerleri NULL veya sabit dizge döndürür. Çoğu gerçeklemeler <replaceable>errno</replaceable> değişkenine atama yapmaz, bazıları yapar. SUSv2, sadece NULL döndürülmesini ve <replaceable>errno</replaceable> değişkenine atama yapılmasını geçerli bir davranış olarak belirtir ve olası tek bir hatayı tanımlar: <constant>ENOSYS</constant>, "işlevsellik bu gerçeklenimde desteklenmiyor". Ne yazık ki, mevcut çoğu uygulama <function>crypt</function>'in NULL döndürmesini işlemeye hazır değildir. Aşağıdaki açıklama sadece <function>crypt</function> ve <function>crypt_r</function>'in bu gerçeklemesine ve <function>crypt_rn</function> ile <function>crypt_ra</function> işlevlerine karşılık gelir. Bu davranış, standartlara, mevcut uygulamalara veya gerçeklenimlere uygun olarak değişebilir.
  </para>
  <para>
   <function>crypt</function> ve <function>crypt_r</function> yalnızca geçersiz veya desteklenmeyen bir <replaceable>setting</replaceable> dizgesi aktarıldığında başarısız olabilir (ve dönebilir). Bu durumda farklılığı garanti etmek için uzunluğu 13 karakterden kısa ve <replaceable>setting</replaceable>'den farklı olan sihirli bir dizgeye gösterici döndürür. Bu davranış hem yeni parolaları tanımlarken hem de mevcut parola aşlamalarına karşı kimlik doğrulaması yaparken <function>crypt</function>'in başarısız olmayacağını kabul eden eski uygulamalar için güvenlidir. <function>crypt_rn</function> ve <function>crypt_ra</function>  işlevleri hatayı belirtmek için NULL döndürür. Dört işlevin tümü, hata olduğunda hata kodunu <replaceable>errno</replaceable>'yu atar.
  </para>
  <para>
   <function>crypt_gensalt</function>, <function>crypt_gensalt_rn</function> ve <function>crypt_gensalt_ra</function> işlevleri, <replaceable>setting</replaceable> için derlenen dizgeye bir gösterici döndürür veya hata durumunda ise hata <replaceable>errno</replaceable> değişkenine atanıp NULL döndürülür.
  </para>
 </refsect1>
 <refsect1><title>HATALAR</title>
  <glosslist>
   <glossentry>
   <glossterm><constant>EINVAL</constant></glossterm>
    <glossdef>
     <para>
      <function>crypt</function>, <function>crypt_r</function>, <function>crypt_rn</function>, <function>crypt_ra</function>: <replaceable>setting</replaceable> geçersiz veya bu gerçekleme tarafından desteklenmiyor;
     </para>
     <para>
      <function>crypt_gensalt</function>, <function>crypt_gensalt_rn</function>, <function>crypt_gensalt_ra</function>: <replaceable>prefix</replaceable> geçersiz veya bu gerçekleme tarafından desteklenmiyorsa; <replaceable>count</replaceable>, talep edilen <replaceable>prefix</replaceable> için geçersiz ise; <replaceable>input</replaceable> boyutu <parameter>size</parameter>, talep edilen  önek <replaceable>prefix</replaceable> ile en küçük geçerli tuz için yeterli değil ise;  <replaceable>input</replaceable> NULL ise.
     </para>
    </glossdef>
   </glossentry>
   <glossentry>
   <glossterm><constant>ERANGE</constant></glossterm>
    <glossdef>
     <para>
      <function>crypt_ra</function>: sağlanan veri alanı boyutu <parameter>size</parameter>, talep edilen aşlama algoritması için yeterli değilse.
     </para>
     <para>
      <function>crypt_gensalt_rn</function>: <replaceable>output_size</replaceable>, derlenen <replaceable>setting</replaceable> dizgesini tutmak için çok küçükse.
     </para>
    </glossdef>
   </glossentry>
   <glossentry>
   <glossterm><constant>ENOMEM</constant></glossterm>
    <glossdef>
     <para>
      <function>crypt</function> (sadece özgün glibc): (sonraki çağrıların tekrar kullanacağı) çıktı tamponu için bellek ayrılamazsa;
     </para>
     <para>
      <function>crypt_ra</function>: *<replaceable>data</replaceable> NULL ise veya *<replaceable>size</replaceable> talep edilen aşlama algoritması için yeterli değilse ve <uri xlink:href="man3-realloc"/> başarılı olmazsa;
     </para>
     <para>
      <function>crypt_gensalt_ra</function>: derlenen <replaceable>setting</replaceable> dizgesi için bellek ayrılamazsa.
     </para>
    </glossdef>
   </glossentry>
   <glossentry>
   <glossterm><constant>ENOSYS</constant></glossterm>
    <glossdef>
     <para>
      <function>crypt</function> (SUSv2): işlevsellik bu gerçeklenimde desteklenmiyorsa;
     </para>
     <para>
      <function>crypt</function>, <function>crypt_r</function> (sadece glibc 2.0'dan 2.0.1'e kadar): <function>crypt</function> eklentisi derlenmediyse ve <replaceable>setting</replaceable> MD5 temelli algoritmadan başka bir şey istiyorsa.
     </para>
    </glossdef>
   </glossentry>
   <glossentry>
   <glossterm><constant>EOPNOTSUPP</constant></glossterm>
    <glossdef>
     <para>
      <function>crypt</function>, <function>crypt_r</function> (sadece glibc 2.0.2'den 2.1.3'e kadar): <function>crypt</function> eklentisi derlenmediyse ve <replaceable>setting</replaceable> MD5 temelli algoritmadan başka bir şey istiyorsa.
     </para>
    </glossdef>
   </glossentry>
  </glosslist>
 </refsect1>
 <refsect1><title>AŞLAMA YÖNTEMLERİ</title>
  <para>
   Gerçeklenen aşlama yöntemleri, özellikle depolama ve kimlik doğrulama için kullanıcı parolasını işlemeye yöneliktir. Diğer birçok amaç için en iyi ihtimalle verimsizdir.
  </para>
  <para>
   Parola aşlamanın, güçlü parolaların yerine geçmediğini anlamak önemlidir. Parola aşlamalarına erişebilen bir saldırganın, aşlamaya karşı aday parolaları denemesi her zaman mümkündür. Ancak, parola aşlama yöntemlerinin sahip olabileceği bazı özellikler bu anahtar arama saldırılarını biraz daha zorlaştırır.
  </para>
  <para>
   Tuz kullanan tüm aşlama yöntemleri aynı anahtar ile birçok aşlama oluşturabilir. Tuzların düzgün kullanımı bazı saldırıları yenebilir, örneğin :
  </para>
  <orderedlist>
   <listitem>
    <para>
     Aday parolaların bir denemede birçok aşlama ile denenebilmesi.
    </para>
   </listitem>
   <listitem>
    <para>
     Aday parolaların önceden aşlanmış listelerinin kullanılması.
    </para>
   </listitem>
   <listitem>
    <para>
     Parolalardan birini gerçekten tahmin etmeden iki kullanıcının (veya tek kullanıcıya ait iki hesabın), aynı mı yoksa farklı parolalara mı sahip olduğunu belirleyebilmek.
    </para>
   </listitem>
  </orderedlist>
  <para>
   Anahtar arama saldırıları, çok sayıda aday parolanın aşlama hesaplamalarına bağlıdır. Bu nedenle, iyi bir parola aşlama yönteminin hesaplama maliyeti fazla olmalıdır - fakat tabii ki kullanışsız olmayacak kadar uzun değil.
  </para>
  <para>
   <function>crypt</function>, <function>crypt_r</function>, <function>crypt_rn</function> ve <function>crypt_ra</function> arayüzlerinde gerçeklenen tüm aş yöntemleri özellikle aday parolanın arama maliyetini artırmak için temel kriptografik ilkelin birden çok yinelemesini kullanır. Ne yazık ki, donanım iyileştirmelerinden ötürü, sabit maliyete sahip aşlama yöntemleri zamanla daha az güvenli hale geldi.
  </para>
  <para>
   Tuzlara ek olarak, yeni parola aşlama yöntemleri değişken yineleme sayısını kabul ediyor. Bu, uyumluluğu korurken maliyetleri donanım iyileştirmelerine uyarlamayı mümkün kılar.
  </para>
  <para>
   Aşağıdaki aşlama yöntemleri açıklanan arayüzlerle gerçeklenebilir.
  </para>
  <refsect2><title>Geleneksel DES temelli</title>
  <para>
   Bu yöntem, <function>crypt</function> işlevinin neredeyse tüm gerçeklemelerinde desteklenir. Ne yazık ki, birçok sınırlaması nedeniyle artık yeterli güvenliği sunmuyor. Bu nedenle, parola aşlamalarını başka sistemlere taşımanız gerekmedikçe, yeni parolalar için kullanılmamalıdır.
  </para>
  <screen>
önek "" (boş dizge);
    ^[./0-9A-Za-z]{2} ile eşleşen dizge (bkz: <uri xlink:href="man7-regex"/>)

Kodlama sözdizimi
    [./0-9A-Za-z]{13}

Azami parola uzunluğu
    8 (7 bitlik karakter kullanır)

Etkili anahtar uzunluğu
    56 bite kadar

Aşlama boyutu
    64 bit

Tuz boyutu
    12 bit

Yineleme sayısı
    25
</screen>
  </refsect2>
  <refsect2><title>Genişletilmiş BSDI biçimi DES temelli</title>
  <para>
   Bu yöntem BSDI üzerinde kullanılır ve David Burren'in FreeSec kütüphanesinin kullanılması nedeniyle en azından NetBSD, OpenBSD ve FreeBSD üzerinde de mevcuttur.
  </para>
  <screen>
önek "_"

Kodlama sözdizimi
    _[./0-9A-Za-z]{19}

Azami parola uzunluğu
    sınırsız (7 bitlik karakter kullanır)

Etkili anahtar uzunluğu
    56 bite kadar

Aşlama boyutu
    64 bit

Tuz boyutu
    24 bit

Yineleme sayısı
    1 ila 2**24-1 (tek olmalıdır)
</screen>
  </refsect2>
  <refsect2><title>FreeBSD biçimi MD5 temelli</title>
  <para>
   Aslen FreeBSD için geliştirilen Poul-Henning Kamp'ın MD5 temelli parola aşlama yöntemidir. Unix benzeri çoğu sistemde, Solaris 10 ve üstlerinde desteklenir, resmi glibc'nin bir parçasıdır. Ana götürüsü sabit yineleme sayısıdır, bu da mevcut donanım için zaten çok düşüktür.
  </para>
  <screen><!-- glosslist-->
önek "$1$"

Kodlama sözdizimi
    \$1\$[^$]{1,8}\$[./0-9A-Za-z]{22}

Azami parola uzunluğu
    sınırsız (8-bit karakter kullanır)

Etkili anahtar uzunluğu
    sadece aşlama boyutuyla sınırlıdır

Aşlama boyutu
    128 bit

Tuz boyutu
    6 ila 48 bit

Yineleme sayısı
    1000
</screen>
  </refsect2>
  <refsect2><title>OpenBSD biçimi Blowfish temelli (bcrypt)</title>
  <para>
   <function>bcrypt</function>, aslen Niels Provos ve David Mazieres tarafından OpenBSD için geliştirilmiştir ve FreeBSD ile NetBSD'nin yeni sürümlerini, Solaris 10 ve üstlerini, birçok GNU/*/Linux dağıtımında desteklenmektedir. Fakat resmi glibc'nin parçası değildir.
  </para>
  <para>
   Hem <function>bcrypt</function> hem de BSDI biçimi DES temelli aşlama yönteminde değişken yineleme sayısı sunulsa da, <function>bcrypt</function> daha da hızlı donanıma bile ölçeklenebilir, yalnızca parola kırmaya özgü bazı belirli iyileştirmelere izin vermez, etkin anahtar boyutu sınırlamasına sahip değildir ve parolalar için 8 bitlik karakter kullanır.
  </para>
  <screen>
önek "$2b$"

Kodlama sözdizimi
    \$2[abxy]\$[0-9]{2}\$[./A-Za-z0-9]{53}

Azami parola uzunluğu
    72 (8 bitlik karakter kullanır)

Etkili anahtar boyutu
    sadece aşlama boyutuyla sınırlıdır

Aşlama boyutu
    184 bit

Tuz boyutu
    128 bit

Yineleme sayısı
    2**4 ila 2**99 (şu anki gerçeklenimler için 2**31)
</screen>
  <para>
   <function>bcrypt</function> ile, <function>crypt_gensalt</function>, <function>crypt_gensalt_rn</function> ve <function>crypt_gensalt_ra</function> işlevlerine aktarılan <replaceable>count</replaceable> bağımsız değişkeni, asıl yineleme sayısının 2 tabanlı logaritmasıdır.
  </para>
  <para>
   <function>bcrypt</function> aşlamaları, "$2a$" önekini 1997'den beri kullanıyordu. Ancak, 2011 senesinde crypt_blowfish paketinde (1.0.4'e kadar olan sürümler dahil) 8 bitlik parola karakterlerinin işlenmesini etkileyen bir gerçekleme hatası bulundu. Hatayı düzeltmenin yanı sıra, mevcut sistemlere yükseltme yöntemleri sağlamak için iki yeni önek tanıtıldı: hatayı tamamen yeniden tanıtan "$2x$", 7 ve 8 bitlik karakterlerin doğru işlenmesini güvenceleyen "$2y$". OpenBSD 5.5, crypt_blowfish'in "$2y$" önekiyle aynı etkiyi gösteren "$2b$" önekini tanıtmıştır ve mevcut crypt_blowfish'te bunu desteklemektedir. Ne yazık ki, "$2a$" önekinin 8 bitlik parola karakterleri üzerindeki etkisi sisteme özgü olarak kabul edilmelidir. Yeni parola aşlamaları üretilirken, "$2b$" ve "$2y$" önekleri kullanılmalıdır. (Bu tür aşlamaların, bu yeni önekleri desteklemeyen bir sisteme aktarılması gerekirse önceden oluşturulmuş aşlamaların aktarılan kopyalarındaki önek "$2a$" olarak değiştirilebilir.)
  </para>
  <para>
   <function>crypt_gensalt</function>, <function>crypt_gensalt_rn</function> ve <function>crypt_gensalt_ra</function> işlevleri, "$2x$" hariç (yeni aşlamalarda kullanılmamalıdır) "$2b$", "$2y$", ve "$2a$" öneklerini destekler. <function>crypt</function>, <function>crypt_r</function>, <function>crypt_rn</function>, <function>crypt_ra</function> işlevleri, bu dört öneki de destekler.
  </para>
  </refsect2>
 </refsect1>
 <refsect1><title>TAŞINABİLİRLİK</title>
  <para>
   Bir glibc 2.x sisteminde bu işlevlerden herhangi birini kullanan yazılımların, <systemitem class="library">libcrypt</systemitem> ile ilintilenmesi gerekir. Bununla birlikte, birçok Unix benzeri işletim sistemi ve GNU C Kitaplığının eski sürümleri, libc'de <function>crypt</function> işlevini içermektedir. <function>crypt</function> ve <function>crypt_r</function> glibc-2.28'de kaldırılmıştır.
  </para>
  <para>
   <function>crypt_r</function>, <function>crypt_rn</function>, <function>crypt_ra</function>, <function>crypt_gensalt</function>, <function>crypt_gensalt_rn</function> ve <function>crypt_gensalt_ra</function> işlevleri çok taşınabilir değildir.
  </para>
  <para>
   Desteklenen aşlama yöntemleri gerçeklenime bağımlıdır.
  </para>
 </refsect1>
 <refsect1><title>ÖZNİTELİKLER</title>
  <para>
   Bu bölümde kullanılan terimlerin açıklamaları <uri xlink:href="man7-attributes"/> sayfasında bulunabilir.
  </para>
  <informaltable>
   <tgroup cols="3" colsep='1' rowsep='1'>
    <colspec colwidth="*"/>
    <colspec colwidth="*"/>
    <colspec colwidth="*"/>
    <thead align="left">
     <row>
      <entry>İşlev</entry>
      <entry>Öznitelik</entry>
      <entry>Değer</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><function>crypt</function>, <function>crypt_gensalt</function></entry>
      <entry>Evre Güvenliği</entry>
      <entry>ÇEG-hayır yarış:crypt</entry>
     </row>
     <row>
      <entry><function>crypt_r</function>, <function>crypt_rn</function>, <function>crypt_ra</function>, <function>crypt_gensalt_rn</function>, <function>crypt_gensalt_ra</function></entry>
      <entry>Evre Güvenliği</entry>
      <entry>ÇEG-evet</entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>
 <refsect1><title>TARİHÇE</title>
  <para>
   Rotor temelli <function>crypt</function> işlevi Sürüm 6 AT&amp;T UNIX'te göründü. "Geleneksel" DES temelli <function>crypt</function> ilk kez Sürüm 7 AT&amp;T UNIX'te göründü.
  </para>
  <para>
   <function>crypt</function> işlevi SVID, X/OPEN uyumludur ve BSD 4.3 üzerinde kullanılmaktadır. <function>crypt</function> tarafından döndürülen dizgelerin uyumlu sistemler arasında taşınabilir olması gerekmez.
  </para>
  <para>
   <function>crypt_r</function> GNU C Kütüphanesinden kaynaklanır.  HP-UX ve MKS Toolkit üzerinde de bir <function>crypt_r</function> içerir fakat tanım ve anlamsallığı farklıdır.
  </para>
  <para>
   <function>crypt_gensalt</function> Openwall eklentisidir. Solaris 10 ve üstü de bir <function>crypt_gensalt</function> içerir fakat tanım ve anlamsallığı farklıdır.
  </para>
  <para>
   <function>crypt_rn</function>, <function>crypt_ra</function>, <function>crypt_gensalt_rn</function> ve <function>crypt_gensalt_ra</function> işlevleri de Openwall eklentisidir.
  </para>
 </refsect1>
 <refsect1><title>HATA AYIKLAMA</title>
  <para>
   <function>crypt</function> ve <function>crypt_gensalt</function> işlevlerinin dönüş değerleri sonraki çağrılar tarafından üzerine yazılan sabit tamponları gösterir. (Solaris'in son sürümlerinde <function>crypt</function> evreye özgü verileri kullanır ve aslında evre güvenliklidir.)
  </para>
  <para>
   Hata durumunda <function>crypt</function> işlevinin diğer gerçeklemelerinden döndürülen dizgeler, salt okunur konumlarda tutulur veya yalnızca bir kez ilklendirilir, bu da normalde göstericisi <function>crypt</function> işlevinin dönüş değeri olan tamponu sıfırlarla doldurmaya çalışmayı her zaman emniyetsiz yapar, aksi takdirde güvenlik açısından tercih edilebilir. Uygulamanın çıktı tamponlarında tam denetime (ve çoğu zaman özel verilerin bir kısmı üzerinde de) sahip olduğu, <function>crypt_r</function>, <function>crypt_rn</function> veya <function>crypt_ra</function> işlevlerinin kullanılmasıyla bu sorundan  kaçınılabilir. Ne yazık ki bu işlevler, <function>crypt</function> işlevinin istenmeyen bu özelliğine sahip sistemlerde mevcut değildir.
  </para>
  <para>
   Evre güvenlikli <function>crypt_r</function> kullanan uygulamalar, <structname>crypt_data</structname> yapısı için büyük alan (128 KB'den fazla) ayırmaya ihtiyaç duyar. Her evre, bu yapının ayrı bir örneğine ihtiyaç duyar. <function>crypt_r</function> arayüzü, ikil uyumluğu bozmadan, büyük miktarda özel veri tutabilen bir aşlama algoritmasının gerçeklenmesini imkansız kılar. <function>crypt_ra</function>, kullanılan aşlama algoritması için gereken ayırma boyutunun dinamik olarak arttırılmasına izin verir. Ne yazık ki <function>crypt_ra</function> işlevi, <function>crypt_r</function> işlevine göre daha az taşınabilirdir.
  </para>
  <para>
   Çok evreli uygulamalar veya evre güvenlikli olması gereken kütüphane işlevleri <function>crypt_gensalt</function> yerine <function>crypt_gensalt_rn</function> veya <function>crypt_gensalt_ra</function> kullanmalıdır.
  </para>
 </refsect1>
 <refsect1><title>İLGİLİ BELGELER</title>
  <para>
   <uri xlink:href="man1-login"/>, <uri xlink:href="man1-passwd"/>, <uri xlink:href="man3-crypto"/>,  <uri xlink:href="man3-encrypt"/>, <uri xlink:href="man3-free"/>,<uri xlink:href="man3-getpass"/>, <uri xlink:href="man3-getpwent"/>, <uri xlink:href="man3-malloc"/>, <uri xlink:href="man3-realloc"/>, <uri xlink:href="man3-shadow"/>, <uri xlink:href="man5-passwd"/>, <uri xlink:href="man5-shadow"/>, <uri xlink:href="man7-regex"/>, <uri xlink:href="man8-pam"/>
  </para>
 </refsect1>
 <refsect1><title>ÇEVİREN</title>
  <simpara>© 2004 Emin İslam Tatlı</simpara>
  <simpara>© 2022 Fatih Koçer</simpara>
  &manpages.notice;
 </refsect1>
</refentry>
