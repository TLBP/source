.\" http://belgeler.org \N'45' 2006\N'45'11\N'45'26T10:18:40+02:00 
.\" Copyright (c) 1996 Andries Brouwer 
.\" 
.\" This page is somewhat derived from a page that was 
.\" (c) 1980, 1989, 1991 The Regents of the University of California 
.\" and had been heavily modified by Rik Faith and myself. 
.\" (Probably no BSD text remains.) 
.\" Fragments of text were written by Werner Almesberger, Remy Card, 
.\" Stephen Tweedie and Eric Youngdale. 
.\" 
.\" This is free documentation; you can redistribute it and/or 
.\" modify it under the terms of the GNU General Public License as 
.\" published by the Free Software Foundation; either version 2 of 
.\" the License, or (at your option) any later version. 
.\" 
.\" The GNU General Public License\N'39's references to "object code" 
.\" and "executables" are to be interpreted as the output of any 
.\" document formatting or typesetting system, including 
.\" intermediate and printed output. 
.\" 
.\" This manual is distributed in the hope that it will be useful, 
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of 
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
.\" GNU General Public License for more details. 
.\" 
.\" You should have received a copy of the GNU General Public 
.\" License along with this manual; if not, write to the Free 
.\" Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, 
.\" USA. 
.\" 
.\" 960705, aeb: version for mount\N'45'2.7g 
.\" 970114, aeb: xiafs and ext are dead; romfs is new 
.\" 970623, aeb: \N'45'F option 
.\" 970914, reg: \N'45's option 
.\" 981111, K.Garloff: /etc/filesystems 
.\" 990111, aeb: documented /sbin/mount.smbfs 
.\" 990730, Yann Droneaud <lch@multimania.com>: updated page 
.\" 991214, Elrond <Elrond@Wunder\N'45'Nett.org>: added some docs on devpts 
.\" 010725, Nikita Danilov <NikitaDanilov@Yahoo.COM>: reiserfs options 
.\"   
.TH "mount" 8 "14 Eylül 1997" "Linux 2.0" "Linux Yazılımcısının Kılavuzu"
.nh    
.SH İSİM
mount \N'45' bir dosya sistemini bağlar    
.SH KULLANIM 
.nf
\fBmount\fR  [\fB\N'45'lhV\fR]
\fBmount  \N'45'a\fR [\fB\N'45'fFnrsvw\fR] [\fB\N'45't \fR\fIsdstürü\fR]
\fBmount\fR  [\fB\N'45'fnrsvw\fR] [\fB\N'45'o \fR\fIseçenekler\fR[,...]] \fIaygıt\fR | \fIdizin\fR
\fBmount\fR  [\fB\N'45'fnrsvw\fR] [\fB\N'45't \fR\fIsdstürü\fR] [\fB\N'45'o \fR\fIseçenekler\fR] \fIaygıt dizin\fR
.fi
       
.SH AÇIKLAMA     
Bir Unix sisteminde erişilebilen bütün dosyalar büyük bir ağaç yapısı, \fB/\fR dizinini kök kabul eden bir hiyerarşik bir yapı içerisinde düzenlenir.  Bu dosyalar, çeşitli aygıtları da kapsayarak uzayıp gidebilir. \fBmount\fR komutu, çeşitli aygıtlarda bulunan dosya sistemlerini, bu ağaç yapısına ekler. Bunun tam karşıtı olan \fBumount(8)\fR ise bağlanmış bir dosya sistemini bu yapıdan ayırır.     

\fBmount\fR komutunun standart şekli:     



.IP 

\fBmount \N'45't \fR\fItür aygıt dizin\fR         

.PP     

Bu komut, çekirdeğe, \fIaygıt\fR üzerinde bulunan, \fItür\fR türündeki dosya sistemini \fIdizin\fR dizinine bağlamasını söyler. Şayet varsa, bu dizindeki içerik, sahiplik ve kipler görünmez olur. Dosya sistemi bu dizine bağlı olduğu sürece bu eski içeriğe ulaşmak mümkün olmaz. \fIdizin\fR, bağlanan \fIaygıt\fRtaki dosya sisteminin kökünü içerir.     

Aşağıdaki kullanım biçimleri herhangi bir bağlama işlemi yapmazlar:     


.br
.ns
.TP 
\fBmount \N'45'h\fR
Yardım iletisi gösterir.         

.TP 
\fBmount \N'45'V\fR
Sürüm bilgilerini gösterir.         

.TP 
\fBmount \fR[\fB\N'45'l\fR] [\fB\N'45't \fR\fItür\fR]
(\fItür\fR türündeki) bağlanmış bütün dosya sistemlerini listeler. \fB\N'45'l\fR seçeneği bu listeye etiketleri (ext2, ext3 ve XFS) ekler. Ayrıntılar için aşağıya bakınız.         

.PP     

Linux 2.4.0\N'39'den beri dosya hiyerarşisinin bir kısmı başka bir yere tekrar bağlamak mümkündür.  Çağrı şu şekildedir: 



.IP 

\fBmount \N'45'\N'45'bind \fR\fIeski_dizin yeni_dizin\fR         

.PP     

proc dosya sistemi özel bir aygıt ile eşleştirilmemiştir. Onu bağlarken isteğe bağlı bir anahtar kelime, sözgelimi \fBproc\fR, aygıt tanımlaması için kullanılabilir. (Alışılagelmiş tercih olan \fBnone\fR daha az uğurludur: \fBumount\fR\N'39'dan alınacak bir \N'39'none busy\N'39' (hiçbir şey meşgul değil) hata iletisi kafa karıştırıcı olabilir.     

Pek çok aygıt /dev/sda1 gibi bir dosya ismi ile belirtilir (özel bir blok aygıtın ismi ile), fakat diğer olasılıklar da mevcuttur. Mesela, NFS\N'39'nin bağlanması durumunda, aygıt knuth.cwi.nl:/dir şeklinde görünebilir.  Özel bir blok aygıtı, onun etiket ismi ya da UUID\N'39'si (aşağıda, \fB\N'45'L\fR ve \fB\N'45'U\fR seçeneklerine bakınız) ile belirtilebilir.     

/etc/fstab dosyası (bakınız \fBfstab(5)\fR), hangi aygıtların, hangi seçenekler ile nereye bağlanacağını belirten satırlar içerebilir. Bu dosya üç değişik şekilde kullanılır:     




.IP i. 5
\fBmount \N'45'a \fR[\fB\N'45't \fR\fItür\fR]         

komutu, (genellikle bir açılış betiği içinde verilir) fstab içinde belirtilen bütün dosya sistemlerinin (gerçek türleri ile) belirtilen şekilde bağlanmasını sağlar. Sadece \fBnoauto\fR anahtar kelimesini içeren satırlarda belirtilen dosya sistemleri bağlanmaz. \fB\N'45'F\fR seçeneği ile \fBmount\fR komutu kendini bir alt süreç olarak çok sayıda çalıştıracak, bu sayede bütün dosya sistemleri aynı anda bağlanabilecektir.         

.IP ii. 5
fstab içinde belirtilen bir dosya sistemini bağlarken, sadece aygıt ya da sadece bağlantı noktasını belirtmek yeterlidir.         

.IP iii. 5
Normalde, sadece süper kullanıcı dosya sistemlerini bağlayabilir. Bunun yanında, fstab bir satırda \fBuser\fR seçeneğini de içeriyorsa, bu satırda belirtilen dosya sistemi herhangi bir kullanıcı tarafından bağlanabilir.         

.PP       

Böylece, fstab dosyasında     

.IP 

.IP
.RS
.nf
\fB/dev/cdrom  /cd  iso9660  ro,user,noauto,unhide
\fR
.fi
.RE
.IP


.PP     

olarak belirtilmiş bir satır ile herhangi bir kullanıcı CDROM\N'39'unun iso9660 dosya sistemini     

.IP 

.IP
.RS
.nf
\fBmount /dev/cdrom\fR
.fi
.RE
.IP


.PP     

veya

.IP 

.IP
.RS
.nf
\fBmount /cd\fR
.fi
.RE
.IP


.PP     

komutuyla bağlayabilir.     

Ayrıntılı bilgi için \fBfstab(5)\fR\N'39'e bakınız. Bir dosya sistemini sadece onu bağlayan kullanıcı ayırabilir.  Şayet herhangi bir kullanıcın dosya sistemlerini ayırabilmesini istiyorsanız, fstab içindeki satırda \fBuser\fR yerine \fBusers\fR kelimesini kullanın. \fBowner\fR seçeneği \fBuser\fR seçeneğine benzer. Kullanıcının, bu özel dosyanın sahibi olması zorunluluğunu getirir. Bu, mesela /dev/fd için, bir sisteme giriş betiğinin konsol kullanıcısını bu aygıtın sahibi yaptığı durumlarda yararlı olabilir.     

\fBmount\fR ve \fBumount\fR, bağlı olan dosya sistemlerinin listesini /etc/mtab dosyası içine kaydederler. Şayet \fBmount\fR komutuna herhangi bir argüman verilmemiş ise, bu liste ekrana basılır. proc dosya sistemi bağlandığı zaman (varsayalım ki /proc\N'39'da),  /etc/mtab  ve /proc/mounts dosyaları  oldukça benzer içeriklere sahip olurlar. İlkinde daha fazla bilgi mevcuttur; örneğin kullanılan mount seçenekleri gibi, fakat olması gerektiği gibi güncel değildir (aşağıdaki \fB\N'45'n\fR seçeneğine bakınız). /etc/mtab\N'39'ı bir sembolik bağ ile /proc/mounts\N'39'a bağlamak mümkündür fakat bu yöntemde bazı bilgilerin kaybolması ve bazı dönüş (loop) aygıtlarının erişilebilirliğinin kısıtlanması sorunu ortaya çıkabilir.     
   
.SH SEÇENEKLER     
Bir \fBmount\fR çağrısında kullanılabilen  bütün seçenekler, önce fstab tablosundaki dosya sistemi seçeneklerinden elde edilir ve daha sonra "\fB\N'45'o \fR\fIseçenekler\fR" ile belirtilen  seçenekler uygulanır, en sonunda da \fB\N'45'r\fR veya (hazır olduğunda) \fB\N'45'w\fR seçenekleri uygulanır.     

\fBmount\fR komutunda kullanabilecek seçenekler:     




.br
.ns
.TP 
\fB\N'45'V\fR
Sürüm bilgilerini gösterir.         

.TP 
\fB\N'45'h\fR
Bir yardım iletisi gösterir.         

.TP 
\fB\N'45'v\fR
Yapılan işlem hakkında daha ayrıntılı bilgi verir.         

.TP 
\fB\N'45'a\fR
fstab içinde kayıtlı bütün dosya sistemlerini (belirtilen türdekileri) bağlar.         

.TP 
\fB\N'45'F\fR
(\fB\N'45'a\fR ile birlikte kullanılır.) Her bir aygıt için \fBmount\fR komutunun yeni bir kopyasını çalıştırır. Bu sayede değişik aygıtlar veya NFS sunucular aynı anda bağlanabilir.  Bu yöntem hızlı olmasının yanında, NFS zamanaşımlarının da aynı anda kullanılmasını sağlar. Olumsuz tarafı ise, bağlama işlemlerinin bilinmeyen bir sırada yapılacak olmasıdır. Bu nedenle, hem /usr hem de /usr/spool sistemlerini bağlamak istiyorsanız, bu seçeneği kullanamazsınız.         

.TP 
\fB\N'45'f\fR
Gerçek sistem çağrısı hariç yapılması gereken herşeyi yapar. Tabir yerindeyse, dosya sisteminin bağlanmasını taklit eder. \fBmount\fR komutunun ne yapmaya çalıştığını izleyebilmek açısından \fB\N'45'v\fR seçeneğiyle birlikte kullanıldığında daha yararlıdır. Bu ayrıca, \fB\N'45'n\fR seçeneği ile daha önceden bağlanmış aygıtlara yeni girdiler eklemek için de kullanılabilir.         

.TP 
\fB\N'45'l\fR
\fBmount\fR çıktısına ext2, ext3 ve XFS etiketlerini ekler. Bunun için, \fBmount\fR komutunun disk aygıtlarını okuma iznine sahip olması gerekir (suid root olmak gibi). Dosya sistemlerine, ext2 veya ext3 için \fBe2label(8)\fR) komutunu kullanarak, XFS için ise \fBxfs_admin(8)\fR ile böyle bir etiket atanabilir.         

.TP 
\fB\N'45'n\fR
/etc/mtab dosyasına kaydedilmeden dosya sisteminin bağlanmasını sağlar. Bu seçenek /etc gibi \fBsalt okunur\fR dosya sistemlerinin bağlanmasında faydalı olabilir.         

.TP 
\fB\N'45's\fR
Uyduruk \fBmount\fR seçeneklerinde hata verilip işlemin yarıda kalmasını önler. Bu seçenek sayesinde, dosya sisteminde desteklenmeyen seçenekler gözardı edilir. Bütün dosya sistemleri bu seçeneği desteklemez. Bu seçenek, Linux \fBautofs\fR tabanlı özdevinimli bağlayıcılara destek için vardır.         

.TP 
\fB\N'45'r\fR
Dosya sistemini salt okunur bağlar. \fB\N'45'o ro\fR ile eşanlamlıdır.         

.TP 
\fB\N'45'w\fR
Dosya sistemini oku\N'45'yaz bağlar. \fB\N'45'o rw\fR ile eşanlamlıdır.         

.TP 
\fB\N'45'L \fR\fIetiket\fR
Belirtilen \fIetiket\fR\N'39'e sahip dosya sistemini bağlar.         

.TP 
\fB\N'45'U \fR\fIuuid\fR
\fIuuid\fR ile evrensel tek kimliği belirtilen dosya sistemini bağlar. Bu son iki seçeneğin çalışabilmesi için /proc/partitions dosyasının mevcut olması gerekir (Linux 2.1.116 sürümünden beri vardır).         

.TP 
\fB\N'45't \fR\fIsdstürü\fR
\fIsdstürü\fR ile bağlanacak dosya sisteminin türü belirtilir. Desteklenen dosya sistemi türleri şunlardır: \fBadfs, affs, autofs, coda, coherent,  cramfs,  devpts,  efs, ext,  ext2,  ext3, hfs, hpfs, iso9660, jfs, minix, msdos, ncpfs, nfs, ntfs, proc, qnx4, reiserfs, romfs, smbfs, sysv,  udf,  ufs, umsdos,  vfat,  xenix, xfs, xiafs\fR. coherent, sysv ve xenix benzerdirler ve xenix ile coherent gelecekte kullanımdan kalkacaktır. Bu nedenle sysv kullanın. Linux 2.1.21 sürümünden itibaren ext ve xiafs  desteği kalkmıştır.         

Bu türlerin pek çoğu için, \fBmount\fR\N'39'un yaptığı sıradan bir \fBmount(2)\fR sistem çağrısıdır ve dosya sistemi türü hakkında ayrıntılı bilgiye ihtiyaç duyulmaz. \fBnfs\fR, \fBsmbfs\fR, \fBncpfs\fR gibi birkaç tür içinse, sırf bu türlere özgü kod gereklidir. \fBnfs\fR türüne özgü kod yerleşiktir ama \fBsmbfs\fR ve \fBncpfs\fR ayrı birer \fBmount\fR yazılımına sahiptirler. Bütün türleri tek bir yöntemle bağlayabilmek için, \fBmount\fR komutu \fIsdstürü\fR belirtilmişse /sbin/mount.sdstürü (tabii varsa) yazılımını çalıştırır. \fBsmbmount\fR yazılımının pek çok değişik sürümü olduğu için çeşitli çağrı teamülleri vardır, istenen çağrıyı gerçekleştirbilmek için /sbin/mount.smb isminde bir kabuk betiği gerekebilir.         

\fBiso9660\fR türü öntanımlıdır.  Şayet \fB\N'45't\fR seçeneği belirtilmemişse veya \fBauto\fR türü tanımlı ise, dosya sistemi türü için, süperblok algılanmaya çalışılacaktır. (minix,  ext, ext2, ext3, xiafs, iso9660, jfs, reiserfs, romfs, ufs, ntfs, qnx4, bfs, xfs, cramfs,  hfs,  hpfs, adfs ve vxfs desteklenmektedir). Şayet bu algılamadan bir sonuç elde edilemezse; \fBmount\fR, /etc/filesystems dosyasını okumaya çalışır. Şayet bu dosya da yoksa /proc/filesystems dosyasını arar.  \N'34'nodev\N'34' etiketli olanlar (örn, devpts, proc ve nfs) hariç, burada listelenen bütün dosya sistemleri denenecektir.         

Kullanıcılar tarafından bağlanan disketler için \fBauto\fR türü faydalı olabilir. Algılama sırasını değiştirmek için, bir /etc/filesystems dosyası oluşturmak (bu sayede vfat\N'39'i msdos\N'39'tan önce denemek mümkün olur) veya çekirdek modülü olarak bir özdevinimli yükleyici kullanmak faydalı olacaktır. UYARI: Algılama için buluşsal bir yöntem kullanılır ve bu dosya sisteminin yanlış tanınmasına sebep olabilir.         

Birden fazla dosya sistemi türü, virgül ayraçlı bir liste olarak belirtilebilir. Bağlanması istenmeyen dosya sistemi türlerinin isimlerinden önce \fBno\fR öneki konulabilir. (Bu, \fB\N'45'a\fR seçeneği ile, bu daha anlamlı olabilir). Örneğin,         

.RS 

.br
.ns
.TP 

.IP
.RS
.nf
\fBmount \N'45'a \N'45't nomsdos,ext\fR
.fi
.RE
.IP


.PP
.RE
.IP


.IP 
komutuyla msdos ve ext türleri hariç bütün dosya sistemleri bağlanacaktır.         

.TP 
\fB\N'45'o \fR\fIseçenekler\fR
\fIseçenekler\fR, virgül ayraçlı bir seçenek dizgesi olarak verilebilir. Bu seçeneklerden bazıları, sadece /etc/fstab dosyası içinde mevcut iseler işe yararlar. Aşağıdaki seçenekler, bağlanmak istenen herhangi bir dosya sistemine uygulanabilirler (fakat bütün dosya sistemleri bu seçenekleri kabul etmez, örneğin \fBsync\fR seçeneği bugün için sadece ext2, ext3 ve ufs\N'39'yi etkiler):         



.RS 

.br
.ns
.TP 
\fBasync\fR
Dosya sistemine bütün G/Çlar eşzamansız yapılır.           

.TP 
\fBatime\fR
Her erişim için, dosya indisi erişim zamanı güncellenir.  Bu öntanımlıdır.           

.TP 
\fBauto\fR
\fB\N'45'a\fR seçeneği ile bağlanabilir.           

.TP 
\fBdefaults\fR
Öntanımlı seçenekler kullanır: \fBrw, suid, dev, exec,  auto, nouser, async\fR           

.TP 
\fBdev\fR
Dosya sistemi üzerindeki karakter ve özel blok aygıtları yorumlanır.           

.TP 
\fBexec\fR
Çalıştırılabilir dosyaların çalıştırılmasına izin verilir.           

.TP 
\fBnoatime\fR
Dosya sistemi üzerinde, dosya indisi erişim zamanı güncellenmez (Örneğin, haber kuyruğuna erişim çabuklaştırılarak haber sunucuları hızlandırılabilir).           

.TP 
\fBnoauto\fR
Dosya sistemi \fB\N'45'a\fR seçeneği ile bağlanmaz, bu dosya sistemi açıkça belirtilerek bağlanabilir.           

.TP 
\fBnodev\fR
Dosya sistemi üzerindeki karakter ve özel blok aygıtları yorumlanmaz.           

.TP 
\fBnoexec\fR
Çalıştırılabilir dosyaların çalıştırılmasına izin verilmez. Bu seçenek farklı bir mimariye ait çalıştırılabilir dosyaların bulunduğu bir dosya sistemi için yararlıdır.           

.TP 
\fBnosuid\fR
set\N'45'user\N'45'identifier or set\N'45'group\N'45'identifier bitlerinin (kullanıcı ve grup belirtme bitleri) etkili olmasına izin verilmez (bu güvenli görünebilir, ama gerçekte, \fBsuidperl\fR(1) betiğinin kurulu olduğu durumlarda daha güvensiz bir ortam oluşturur).           

.TP 
\fBnouser\fR
Sıradan (root olmayan) kullanıcıların dosya sistemini bağlamasına izin verilmez. Bu seçenek öntanımlıdır.           

.TP 
\fBremount\fR
Bağlı olan bir dosya sistemini tekrar bağlamaya çalışır. Buna genellikle, bağlama özelliklerinin değiştirilmesi gereken durumlarda başvurulur. Mesela, salt okunur kipte bağlanmış bir dosya sistemine yazma izni vermek için kullanılabilir.  Aygıt ya da bağlantı noktasını değiştirmez.           

.TP 
\fBro\fR
Dosya sistemini salt okunur kipte bağlar.           

.TP 
\fBrw\fR
Dosya sistemini oku\N'45'yaz kipinde bağlar.           

.TP 
\fBsuid\fR
set\N'45'user\N'45'identifier or set\N'45'group\N'45'identifier bitlerinin (kullanıcı ve grup belirtme bitleri) etkili olmasına izin verilir.           

.TP 
\fBsync\fR
Dosya sistemine bütün G/Çlar eşzamanlı yapılır.           

.TP 
\fBuser\fR
Sıradan (root olmayan) kullanıcıların dosya sistemini bağlamasına izin verilir. Sistemi bağlayan kullanıcının adı mtab\N'39'a yazılır, böylece bu kullanıcı dosya sistemini daha sonra ayırabilir. Bu seçenek, \fBnoexec\fR, \fBnosuid\fR ve \fBnodev\fR seçeneklerini de kapsar (seçenek satırındaki \fBuser\fR, \fBexec\fR, \fBdev\fR, \fBsuid\fR gibi sonraki seçenekler tarafından gözardı edilmedikleri müddetçe).           

.TP 
\fBusers\fR
Bütün kullanıcılara \fBmount\fR ve \fBumount\fR komutunu kullanma yetkisi verir. Bu seçenek, \fBnoexec\fR, \fBnosuid\fR ve \fBnodev\fR seçeneklerini de kapsar (seçenek satırındaki \fBuser\fR, \fBexec\fR, \fBdev\fR, \fBsuid\fR gibi sonraki seçenekler tarafından gözardı edilmedikleri müddetçe).           

.PP         
.RE
.IP


.PP     
   
.SH DOSYA SİSTEMİNE ÖZGÜ SEÇENEKLER     
Aşağıdaki seçenekler, sadece belirli dosya sistemlerinde geçerlidir. Bunları dosya sistemi çeşitlerine göre sıraladık. Hepsi \fB\N'45'o\fR seçeneğine argüman olarak kullanılırlar.     

.SS adfs için mount seçenekleri              
.br
.ns
.TP 
\fBuid\fR=\fIdeğer\fR ve \fBgid\fR=\fIdeğer\fR
Dosya sistemindeki dosyaların kullanıcı ve grup kimliklerini ayarlar. Öntanımlı olarak uid=gid=0 dır.         

.TP 
\fBownmask\fR=\fIdeğer\fR ve \fBothmask\fR=\fIdeğer\fR
Sırası ile \fBadfs\fR için \N'34'sahibinin\N'34' izinlerini ve \N'34'diğerlerinin\N'34' izinlerini ayarlar. (öntanımlı olarak:  sırası ile 0700 ve 0077 dir). Ayrıca   /usr/src/linux/Documentation/filesystems/adfs.txt dosyasına bakmanız faydalı olacaktır.         

.PP
     
.SS affs için mount seçenekleri              
.br
.ns
.TP 
\fBuid\fR=\fIdeğer\fR ve \fBgid\fR=\fIdeğer\fR
Dosya sistemi kökünün kullanıcı ve grup kimliklerini ayarlar. Öntanımlı olarak uid=gid=0 dır. Fakat \fBuid\fR ve \fBgid\fR seçeneklerine değer belirtilmediği durumlarda, o anki sürecin değerleri atanır.         

.TP 
\fBsetuid\fR=\fIdeğer\fR ve \fBsetgid\fR=\fIdeğer\fR
Bütün dosya sisteminin kullanıcı ve grup kimliklerini ayarlar.         

.TP 
\fBmode\fR=\fIdeğer\fR
Asıl değerleri yok sayarak, bütün dosyaların erişim izinlerini \fIdeğer \fR& 0777 olarak değiştirir. Okuma iznine sahip dizinlere arama izni ekler. \fIdeğer \fRsekizlik tabanda belirtilir.         

.TP 
\fBprotect\fR
Dosya sistemindeki koruma bitlerinde herhangi bir değişiklik yapılmasına izin vermez.         

.TP 
\fBusemp\fR
Dosya sistemi kökünün kullanıcı ve grup kimliklerini, ilk \fBsync\fR veya \fBumount\fR sonrası bağlama noktasının kullanıcı ve grup kimliklerine ayarlar ve sonra da bu seçenek temizlenir. Tuhaf...         

.TP 
\fBverbose\fR
Her başarılı bağlama için, ekrana bilgilendirici bir ileti basar.         

.TP 
\fBprefix\fR=\fIdizge\fR
Bir bağı izlerken oylum isminden önce kullanılan önek.         

.TP 
\fBvolume\fR=\fIdizge\fR
Bir sembolik bağı izlerken \fB/\fR den önce kullanılan önek (en fazla 30 karakterlik).         

.TP 
\fBreserved\fR=\fIdeğer\fR
Aygıtın başlangıcındaki kullanılmamış blok sayısı (öntanımlı: 2).         

.TP 
\fBroot\fR=\fIdeğer\fR
Kök bloğunun kesin yeri belirtilir.         

.TP 
\fBbs\fR=\fIdeğer\fR
Blok boyu belirtilir. Kullanılabilecek değerler: 512, 1024, 2048, 4096.         

.TP 
\fBgrpquota\fR, \fBnoquota\fR, \fBquota\fR, \fBusrquota\fR
Bu seçenekler geçerlidir ama yoksayılır (bununla             birlikte, bu seçenekler /etc/fstab içinde kullanılırsa kota araçları tepki verebilirler).         

.PP
     
.SS coherent için mount seçenekleri              
Yoktur.
     
.SS devpts için mount seçenekleri              
\fBdevpts\fR dosya sistemi bir sahte dosya sistemidir,  geleneksel olarak /dev/pts üzerine bağlanır. Bir sahte uçbirimi elde edebilmek için, bir süreç /dev/ptmx\N'39'i açar; daha sonra bu uçbirimin numarası bu sürece bildirilir ve yardımcı sahte uçbirime /dev/pts/<numara> şeklinde erişilebilir.       



.br
.ns
.TP 
\fBuid\fR=\fIdeğer\fR ve \fBgid\fR=\fIdeğer\fR
Yeni oluşturulan PTY\N'39'lerin kullanıcı ve grup kimliklerini ayarlar. Hiçbir şey belirtilmemişse, bu değerlere, uçbirimi oluşturan sürecin değerleri atanır. Örneğin: GID 5 ile bir tty grubu varsa, \fBgid=5\fR ile yeni açılan PTY bu gruba dahil edilir.         

.TP 
\fBmode\fR=\fIdeğer\fR
Yeni oluşturulan PTY\N'39'lerin kipini ayarlar. Öntanımlı değer 0600 dür. Hiçbir şey belirtilmemişse, bu değerlere, uçbirimi oluşturan sürecin değerleri atanır. \fBmode=620\fR ve \fBgid=5\fR değerleri ile yeni açılan PTYler için \N'34'mesg y\N'34' öntanımlı olur.         

.PP       
     
.SS ext için mount seçenekleri              
Yoktur. \N'39'ext\N'39' dosya sistemi askıya alınmıştır. Bu dosya sistemini kullanmayın. Linux\N'45'2.1.21 sürümünden beri extfs çekirdek kodunun bir parçası değildir.       
     
.SS ext2 için mount seçenekleri              
\fBext2\fR dosya sistemi Linux\N'39'un standart dosya sistemidir. Bir çekirdek hatasından dolayı, rasgele \fBmount\fR seçenekleri ile sisteme bağlanabilir (Linux 2.0.4 de bu sorun düzeltilmiştir).       



.br
.ns
.TP 
\fBbsddf\fR, \fBminixdf\fR
\fBstatfs\fR sistem çağrısı için davranışı ayarlar. \fBbsddf\fR davranışı (öntanımlıdır), ext2 dosya sistemi tarafından veri saklamak için kullanılmayan (overhead) blokları çıkarmaktayken, \fBminixdf\fR davranışı, dosya sisteminin toplam blok sayısını \fBf_blocks\fR alanında döndürür. Örnek:         



.IP
.RS
.nf
$ \fBmount /k \N'45'o minixdf; df /k; umount /k\fR
Dosya sistemi  1K\N'45'blok    Dolu      Boş   Kull%  Bağl. yeri
/dev/sda6      2630655   86954  2412169      3%   /k
$ \fBmount /k \N'45'o bsddf; df /k; umount /k\fR
Dosya sistemi  1K\N'45'blok    Dolu      Boş   Kull%  Bağl. yeri
/dev/sda6      2543714      13  2412169      0%   /k
.fi
.RE
.IP


(Not: Bu örnek, /etc/fstab içinde verilen seçeneklere, komut satırı seçeneklerinin eklenebileceğini gösterir.)       

.TP 
\fBcheck\fR, \fBcheck=normal\fR, \fBcheck=strict\fR
Denetim seviyesi belirtilir. Bu seçeneklerden en az biri belirtildiği zaman (\fBcheck=normal\fR öntanımlıdır), dosya indisleri ve blokların biteşlemleri bağlama sırasında denetlenir (bu yarım dakikaya veya büyük disklerde daha fazla zamana mal olabilir ve oldukça kullanışsızdır). \fBcheck=strict\fR seçeneği ile bloğu serbest bırakacak blok serbestleştirme denetimleri veri alanında yapılır.         

.TP 
\fBcheck=none\fR, \fBnocheck\fR
Denetim yapılmaz. Bu hızlıdır. Yeni çekirdeklerde artık bir denetim seçeneği yoktur. Denetimin \fBe2fsck(8)\fR ile yapılması daha mantıklıdır.         

.TP 
\fBdebug\fR
Her (yeniden) bağlama sırasında hata ayıklama bilgileri basılır.         

.TP 
\fBerrors=continue\fR, \fBerrors=remount\N'45'ro\fR, \fBerrors=panic\fR
Bir hata saptandığında ne yapılacağı belirtilir (ya hata yoksayılır ve sadece dosya sistemi hatasını gösterip devam eder veya dosya sistemini salt okunur olarak yeniden bağlar ya da panikleyip sistemi durdurur). Öntanımlı seçenek, dosya sisteminin süper bloğunda belirtilmiştir  ve \fBtune2fs(8)\fR kullanılarak değiştirilebilir.         

.TP 
\fBgrpid\fR veya \fBbsdgroups\fR, \fBnogrpid\fR veya \fBsysvgroups\fR
Bu seçeneklerle yeni oluşturulacak bir dosyanın hangi grup kimliğini alacağını belirtilir. \fBgrpid\fR belirtildiğinde, dosya, oluşturulduğu dizinin grup kimliğini alır.  Aksi takdirde, dizinde \fBsetgid\fR biti yoksa, o anki sürecin \fBfsgid\fR\N'39'ini alır (öntanımlıdır). Dizinde \fBsetgid\fR bitinin bulunduğu durumda,dosya, grup kimliğini üst dizinden alır ve kendisi bir dizin ise ise \fBsetgid\fR bitini de alır.         

.TP 
\fBresgid\fR=\fIn\fR, \fBresuid\fR=\fIn\fR
ext2 dosya sistemi var olan disk alanının bir kısmını ayırır (öntanımlı olarak %5, bakınız \fBmke2fs(8)\fR ve \fBtune2fs(8)\fR). Bu seçenek ile ayrılmış disk alanının kimin tarafından kullanılacağına karar verilir (kabaca: belirtilen kullanıcı kimliğe sahip kullanıcı veya belirtilen gruba ait kullanıcı).         

.TP 
\fBsb\fR=\fIn\fR
Süper blok olarak 1. blok yerine \fIn.\fR bloğun kullanılmasını sağlar. Bu seçenek dosya sistemi hasar gördüğü zamanlarda faydalı olabilir (eskiden, süper blokların kopyaları her 8192 blokta bir yaratılırdı: 1.blokta, 8193. blokta, 16385.blokta, ... ve büyük dosya sistemlerinde yüzlerce veya binlerce kopya bulunurdu).  Sürüm 1.08\N'39'den beri, \fBmke2fs\fR(8), yedek süper blokların sayısını kısıtlamak için bir seçeneğe sahiptir: \fB\N'45's\fR (seyrek süper bloklar) ve Sürüm 1.15\N'39'den beri bu seçenek öntanımlı olarak kullanılmaktadır. Bu aynı zamanda; son sürüm tarafından oluşturulmuş bir ext2 dosya sisteminin Linux 2.0.* altında oku\N'45'yaz kipinde bağlanamayacağı anlamına da gelmektedir. Blok numaralamada genellikle 1k\N'39'lık birimler kullanır.  Bir dosya sisteminde 4k\N'39'lık bloklar halinde 32768 mantıksal blok kullanmak isterseniz, \N'34'sb=131072\N'34' kullanmanız gerekir.         

.TP 
\fBgrpquota\fR, \fBnoquota\fR, \fBquota\fR, \fBusrquota\fR
Bu seçenekler geçerlidir ama yoksayılır.         

.TP 
\fBnouid32\fR
32 bitlik  kullanıcı ve grup kimliklerini kapatır. Bu seçenek, sadece 16 bitlik değerleri kabul eden eski çekirdekler ile uyumu sağlamak içindir.         

.PP
     
.SS ext3 için mount seçenekleri              
\fBext3\fR dosya sistemi, jurnalleme yeteneğine sahip bir ext2 dosya sistemidir. \fBext2\fR ile aynı seçenekleri destekler. Bunlara ek olarak aşağıdaki seçenekleri de desteklemektedir:       



.br
.ns
.TP 
\fBjournal=update\fR
\fBext3\fR dosya sisteminin jurnal dosyasını o anki biçime göre günceller.         

.TP 
\fBjournal\fR=\fIinum\fR
Şayet bir jurnal dosyası mevcut ise, bu seçenek göz ardı edilir. Diğer durumlarda, ext3 dosya sisteminin jurnal dosyasını temsil edecek dosya indisini tanımlamak için kullanılır; belirtilen dosya indisinde bir dosya varsa, ext3 yeni jurnal dosyasını bu dosyanın üzerine yazarak oluşturur.         

.TP 
\fBnoload\fR
Bağlama esnasında \fBext3\fR dosya sisteminin jurnal dosyasını yüklemez.         

.TP 
\fBdata=journal\fR, \fBdata=ordered\fR, \fBdata=writeback\fR
Dosya verileri için jurnalleme kipi belirtilir. Meta veri, daima kaydedilir.         



.RS 

.br
.ns
.TP 
\fBjournal\fR
Tüm veri, ana dosya sistemine yazılmadan önce jurnal dosyasına gönderilir.           

.TP 
\fBordered\fR
Tüm veri, meta verisi jurnal dosyasına kaydedilmeden önce mutlaka ana dosya sistemine yazılır. Bu öntanımlı kiptir.           

.TP 
\fBwriteback\fR
Veri sırasına bakılmaz. Asıl veri, meta veri jurnal dosyasına gönderildikten sonra da ana dosya sistemine yazılabilir. Bir rivayete göre bu, en yüksek erişim hızına sahip seçenektir. Dosya sisteminin iç bütünlüğünün korunmasını garanti eder, bununla birlikte, bir istemdışı kapanma sonrasında yapılan kurtarma işlemi sırasında dosyalarda son girilen veriler bulunmayabilir.           

.PP
.RE
.IP


.PP
     
.SS fat için mount seçenekleri              
(Not: \fBfat\fR bağımsız bir dosya sistemi değildir ama msdos, umsdos ve vfat dosya sistemlerinin ana parçasıdır.)       



.br
.ns
.TP 
\fBblocksize=512\fR, \fBblocksize=1024\fR, \fBblocksize=2048\fR
Blok boyu belirtilir (öntanımlı: 512).         

.TP 
\fBuid\fR=\fIdeğer\fR ve \fBgid\fR=\fIdeğer\fR
Tüm dosyaların kullanıcı ve grup kimliklerini ayarlar. Öntanımlı olarak o anki sürecin kullanıcı ve grup kimlikleri kullanılır.         

.TP 
\fBumask\fR=\fIdeğer\fR
umask\N'39'ı ayarlar (verilmeyecek izinlerin bit maskesi). Öntanımlı olarak, o anki sürecin umask\N'39'ı kullanılır. Değer sekizlik tabanda verilir.         

.TP 
\fBcheck\fR=\fIdeğer\fR
Üç farklı salamuralık seviye seçilebilir:         



.RS 

.br
.ns
.TP 
\fBr[elaxed]\fR
Büyük ve küçük harfler aynı kabul edilir ve uzun isimler kısaltılır (örneğin; epeyuzunisim.filanca, epeyuzun.fil olur), isim ve uzantıda ön ve iç boşluklar korunur.           

.TP 
\fBn[ormal]\fR
"relaxed" seçeneğine çok benzer ama pek çok özel karakter kabul edilmez (*, ?, <, boşluk, vs.).  Bu seçenek öntanımlıdır.           

.TP 
\fBs[trict]\fR
"normal" seçeneğine çok benzer ama Linux\N'39'ta bazen kullanılan fakat MS\N'45'DOS tarafından kabul edilmeyen özel karakterler ve uzun isimler reddedilir (+, =, boşluk, vs.).           

.PP
.RE
.IP


.TP 
\fBcodepage\fR=\fIdeğer\fR
FAT ve VFAT dosya sistemlerinde, kısa isim karakterlerine dönüşüm için kullanılacak kod sayfası belirtilir. Öntanımlı: 437.         

.TP 
\fBconv=b[inary]\fR, \fBconv=t[ext]\fR, \fBconv=a[uto]\fR
\fBfat\fR dosya sistemi, çekirdek içinden, CRLF<\N'45'\N'45'>LF dönüşümünü (MS\N'45'DOS metin biçiminden UNIX metin biçimine ya da tersi) yapabilir.  Şu dönüşüm kipleri kullanılabilir:         



.RS 

.br
.ns
.TP 
\fBb[inary]\fR
Dönüşüm yapılmaz. Bu öntanımlı değerdir.           

.TP 
\fBt[ext]\fR
CRLF<\N'45'\N'45'>LF dönüşümü bütün dosyalarda yapılır.           

.TP 
\fBa[uto]\fR
CRLF<\N'45'\N'45'>LF dönüşümü metin dosyası olmadıkları bilinen uzantılara sahip dosyalara uygulanmaz. Bu uzantıların adları fs/fat/misc.c dosyasının başlarında bulunabilir (2.0 da bulunan liste şudur:  exe,  com,  bin, app,  sys,  drv,  ovl, ovr, obj, lib, dll, pif, arc, zip, lha, lzh, zoo, tar, z, arj, tz, taz, tzp, tpz,  gz,  tgz, deb,  gif,  bmp, tif, gl, jpg, pcx, tfm, vf, gf, pk, pxl, dvi).           

.PP
.RE
.IP


.IP 
Hesaplanan lseeks işlemlerini gerçekleştiren yazılımlar çekirdek\N'45'içi metin dönüşümünden hoşlanmazlar. Pek çok kişi, bu dönüşüm işlemi sonucu oluşmuş veri çöplüklerine sahiptir. Bizden uyarması: DİKKATLİ OLUN!         

.IP 
İkilik kipte bağlanmış dosya sistemleri için, bu dönüşümü sağlayacak bir araç (fromdos/todos) mevcuttur.         

.TP 
\fBcvf_format\fR=\fImodül\fR
Sürücü olarak kullanılacak CVF (Compressed Volume File \N'45' Sıkıştırılmış Oylum Dosyası) modülü olarak özdevinimli saptanan modül yerine \fImodül\fR modülünü kullanmaya zorlar. Şayet çekirdek kmod destekli ise, \fBcvf_format=xxx\fR seçeneği istek üzerine CVF modülü yüklemesini de kontrol eder.         

.TP 
\fBdebug\fR
Hata ayıklama etkinleştirilir. Bir sürüm dizgesi ve bir dosya sistemi parametreleri listesi basılır (parametrelerin tutarsız göründüğü durumlarda, bu bilgi ayrıca basılır).         

.TP 
\fBfat=12\fR, \fBfat=16\fR, \fBfat=32\fR
12, 16 veya 32 bitlik fat sistemi belirtilir. Bu seçeneğin belirtildiği durumlarda özdevinimli FAT türü saptaması yoksayılır. Kullanırken DİKKATLİ OLUN!         

.TP 
\fBiocharset\fR=\fImodül\fR
8 bitlik karakterlerle, 16 bitlik Unicode karakterler arasında dönüşüm işlemi için kullanılacak karakter kümesi belirtilir. Öntanımlı değer iso\N'45'8859\N'45'1 dır. Uzun dosya isimleri disk üzerinde Unicode biçiminde saklanır.         

.TP 
\fBquiet\fR
Sessiz kip etkinleştirilir. Dosyalara chown ve chmod uygulandığında başarısızlık halinde hata döndürülmez. Kullanırken DİKKATLİ OLUN!         

.TP 
\fBsys_immutable\fR, \fBshowexec\fR, \fBdots\fR, \fBnodots\fR, \fBdotsOK=[yes|no]\fR
Bir FAT dosya sistemi üzerinde, Unix veya DOS teamüllerini zorlayan çeşitli yanlış girişimler.         

.PP
     
.SS hpfs için mount seçenekleri              
.br
.ns
.TP 
\fBuid\fR=\fIdeğer\fR ve \fBgid\fR=\fIdeğer\fR
Dosya sistemindeki dosyaların kullanıcı ve grup kimliklerini ayarlar. Öntanımlı olarak o anki sürecin kullanıcı ve grup kimlikleri kullanılır.         

.TP 
\fBumask\fR=\fIdeğer\fR
umask\N'39'ı ayarlar (verilmeyecek izinlerin bit maskesi). Öntanımlı olarak, o anki sürecin umask\N'39'ı kullanılır. Değer sekizlik tabanda verilir.         

.TP 
\fBcase=lower\fR, \fBcase=asis\fR
Bütün dosya isimlerini ya küçük harfe dönüştürür veya oldukları gibi bırakır. Öntanımlı: \fBcase=lower\fR (küçük harfe dönüştür).         

.TP 
\fBconv=binary\fR, \fBconv=text\fR, \fBconv=auto\fR
Bir dosyayı okurken, \fBconv=text\fR için,  bazı rasgele CR\N'39'leri siler (kısmen, satırsonu karakteri ile bitenlerin tümü); \fBconv=binary\fR için dosya olduğu gibi okunur; \fBconv=auto\fR için, \fBconv=binary\fR ve \fBconv=text\fR arasında daha fazla veya daha az rasgelelik seçilir. Öntanımlı: \fBconv=binary\fR.         

.TP 
\fBnocheck\fR
Tutarlılık denetimleri yapılırken hata verirse, bağlama işlemini yarıda kesmez.         

.PP
     
.SS iso9660 için mount seçenekleri              
Normal bir \fBiso9660\fR dosyası 8.3 şeklinde (tıpkı DOS\N'39'daki dosya ismi kısıtlamasında olduğu gibi) ve bütün karakterler büyük harf şeklinde görünür. Dosya sahibi, koruma, bağ sayısı, blok/karakter aygıtları için hazırlık ve benzer şeyler için ayrıca alanlar bulunmaz.       

Rock Ridge, iso9660\N'39'a bu unixvari özellikleri eklemeye yarayan bir uzantıdır. Basitçe, ek bilgilerin tamamının kaydı için her bir dizin kaydında genişletmeler vardır. Rock Ridge kullanıldığı durumlarda, dosya sistemi normal bir Unix dosya sisteminde farksızdır. Elbette, arada bir fark vardır: CDROM salt okunurdur.       



.br
.ns
.TP 
\fBnorock\fR
Rock Ridge genişletmesinin, kullanmak mümkün olsa bile, kullanılmasını önler. Aşağıda, \fBmap\fR seçeneğine bakınız.         

.TP 
\fBnojoliet\fR
Microsoft Joliet genişletmesinin, kullanmak mümkün olsa bile, kullanılmasını önler. Aşağıda, \fBmap\fR seçeneğine bakınız.         

.TP 
\fBcheck=r[elaxed]\fR, \fBcheck=s[trict]\fR
\fBcheck=r[elaxed]\fR seçeneği ile, dosyalar listelenmeden önce dosya ismi küçük harfe dönüştürülür. Bu işlem, sadece \fBnorock\fR ve \fBmap=normal\fR seçenekleri ile birlikte kullanılırsa, bir anlam ifade etmektedir. Öntanımlı olarak \fBcheck=s[trict]\fR kullanılmaktadır.         

.TP 
\fBuid\fR=\fIdeğer\fR ve \fBgid\fR=\fIdeğer\fR
Muhtemelen, Rock Ridge genişletmesinde belirtilen bilgileri önemsenmeden dosya sistemindeki bütün dosyaların sahiplik veya grup iyeliklerini belirtilen değerlere çevirir.Öntanımlı olarak \fBuid=0\fR ve \fBgid=0\fR kullanılmaktadır.         

.TP 
\fBmap=n[ormal]\fR, \fBmap=o[ff]\fR, \fBmap=a[corn]\fR
Rock Ridge olmayan bölümler için, normal isim dönüşümü ile büyük harflar küçük harflere çevrilir, isimlerin sonundaki \N'96';1\N'39'ler düşer ve \N'96';\N'39'ler \N'96'.\N'39'ya çevirir. \fBmap=o[ff]\fR seçeneği ile isim dönüşümü yapılmaz. Öntanımlı olarak \fBmap=n[ormal]\fR kullanılır. \fBmap=a[corn]\fR seçeneği, \fBmap=n[ormal]\fR ile aynıdır ama fazladan Acorn genişletmesini de ekler (tabii varsa).         

.TP 
\fBmode\fR=\fIdeğer\fR
Rock Ridge olmayan bölümler için, bütün dosyalara belirtilen kipi verir. Öntanımlı olarak herkes için okuma izni verilmiş olarak kullanılır. Linux 2.1.37\N'39'den beri, kipi ondalık olarak belirtmek gerekmemektedir. Sekizlik taban 0 ile başlatılarak gösterilir.         

.TP 
\fBunhide\fR
Gizli ve kısıtlı haklara sahip dosyaları da gösterir.         

.TP 
\fBblock\fR=[\fI512\fR|\fI1024\fR|\fI2048\fR]
Blok boyutlarını belirtilen değere göre ayarlar. Öntanımlı değer 1024\N'39'dür.         

.TP 
\fBconv=a[uto]\fR, \fBconv=b[inary]\fR, \fBconv=m[text]\fR, \fBconv=t[ext]\fR
(Öntanımlı: \fBconv=binary\fR.)  Linux 1.3.54\N'39'den beri bu seçeneğin bir etkisi kalmamıştır. (ayrıca ikilik (binary) olmayan ayarları kullanmak oldukça tehlikelidir. İstenmeyen veri bozulmalarına sebep verebilir.)         

.TP 
\fBcruft\fR
Şayet dosya uzunluğunun en kıymetli baytı bozuksa, dosya uzunluğunun en kıymetli bitlerini yok saymak için bu seçeneği ayarlayabilirsiniz. Bu seçenek ile dosya boyutları 16 MB ile sınırlandırılır.  Şayet bütün CD\N'45'ROM garip bir boyuta sahipse (negatif ya da 800MB\N'39'dan büyük), \fBcruft\fR seçeneği kendiliğinden devreye sokulur. Ayrıca oylum belirten ardışık numaralar 0 veya 1\N'39'den farklı görünüyorsa, bu seçenek yine devreye girer.         

.TP 
\fBsession=x\fR
Çoklu oturuma sahip disklerde oturum seçer. Linux 2.3.4\N'39'den beri kullanılmaktadır.         

.TP 
\fBsbsector=xxx\fR
xxx. sektörden başlayan oturumu seçer. Linux 2.3.4\N'39'den beri kullanılmaktadır.         

.PP       
     
.SS minix için mount seçenekleri              
Yoktur.
     
.SS msdos için mount seçenekleri              
\fBfat\fR dosya sistemi seçeneklerine bakınız. Şayet msdos dosya sisteminde bir tutarsızlık tespit edilirse, hata raporu verir ve dosya sistemini salt okunur bağlar. Dosya sistemini yazılabilir hale dönüştürmek için tekrar bağlamak gerekir.       
     
.SS ncp için mount seçenekleri              
Tıpkı \fBnfs\fR gibi, \fBncp\fR gerçeklemesi de, \fBmount\fR sistem çağrısı için bir ikilik argüman ister (struct ncp_mount_data). Bu argüman \fBncpmount(8)\fR tarafından oluşturulur ve \fBmount\fR komutunun şu anki geçerli sürümü (2.6h) \fBncp\fR hakkında hiçbir şey bilmez.       
     
.SS nfs için mount seçenekleri              
Çekirdek tarafından çözümlenen metin biçimli seçenek sözdizimleri yerine \fBnfs\fR dosya sistemi struct nfs_mount_data türünde ikilik argümanlar bekler.  \fBmount\fR aşağıdaki seçenekleri \N'39'isim=değer\N'39' çiftleri olarak alır ve bunları bahsi geçen yapı içine yerleştirir: \fBrsize\fR=\fIn\fR, \fBwsize\fR=\fIn\fR, \fBtimeo\fR=\fIn\fR, \fBretrans\fR=\fIn\fR, \fBacregmin\fR=\fIn\fR,   \fBacregmax\fR=\fIn\fR, \fBacdirmin\fR=\fIn\fR, \fBacdirmax\fR=\fIn\fR, \fBactimeo\fR=\fIn\fR,  \fBretry\fR=\fIn\fR, \fBport\fR=\fIn\fR, \fBmountport\fR=\fIn\fR, \fBmounthost\fR=\fIisim\fR, \fBmountprog\fR=\fIn\fR, \fBmountvers\fR=\fIn\fR, \fBnfsprog\fR=\fIn\fR, \fBnfsvers\fR=\fIn\fR, \fBnamlen\fR=\fIn\fR.  \fBaddr\fR=\fIn\fR seçeneği geçerli bir seçenek olmakla birlikte, gözardı edilir. Ayrıca şu mantıksal seçenekler, \fBno\fR öneki ile de tanınır: \fBbg, fg, soft, hard, intr, posix, cto, ac, tcp, udp, lock\fR.  Ayrıntılı bilgi için \fBnfs(5)\fR\N'39'e bakınız.       

Özellikle yararlı seçenekler şunlardır:


       
.br
.ns
.TP 
\fBrsize=8192\fR, \fBwsize=8192\fR
Bu seçenek nfs bağlantınızı, öntanımlı boyut olan 1024\N'39'e göre çok daha hızlı bir hale getirecektir. (NFSv2, \fBrsize\fR ve \fBwsize\fR seçeneklerinde bu değerlerden daha büyük değerler ile çalışmaz.)         

.TP 
\fBhard\fR
NFS tipte bağlı bir dosya sistemine erişen bir uygulama, sunucu çöktüğü zaman askıda kalacaktır. Ayrıca \fBintr\fR belirtilmeden süreç kesintiye uğratılamaz veya öldürülemez. NFS sunucu tekrar hayata dönünce, uygulama kaldığı yerden devam eder. Sanırım herkesin istediği de bu olsa gerek.         

.TP 
\fBsoft\fR
Bu seçenek sayesinde, nfs sunucunun bir süre cevap vermemesi durumunda, belli bir süre sonra çekirdeğin zamanaşımı yapmasına izin verilmiş olur. Bu süre \fBtimeo=zaman\fR biçiminde tanımlanabilir. Bu seçenek, nfs sunucunun cevap vermediği durumlarda veya bazı süreçlerin sunucudan bir dosya almaya çalışırken sunucunun tekrar başlatılması gerekebileceği durumlarda faydalı olabilir. Genellikle, sadece bol miktarda baş ağrısına sebep olur.         

.TP 
\fBnolock\fR
Kilitleme kullanılmaz, \fBlockd\fR başlatılmaz.         

.PP
     
.SS ntfs için mount seçenekleri              
.br
.ns
.TP 
\fBiocharset\fR=\fIisim\fR
Dosya isimleri alınırken kullanılacak karakter kümesidir. VFAT\N'39'den farklı olarak, NTFS dönüştürülemeyen karakterleri içeren isimleri gizler.         

.TP 
\fButf8\fR
Dosya isimlerini dönüştürmek için UTF\N'45'8 kullanılır.         

.TP 
\fBuni_xlate=[0|1|2]\fR
0 (veya \N'96'no\N'39' ya da \N'96'false\N'39') için, bilinmeyen Unicode karakterler için önceleme dizgesi kullanılmaz. 1 (veya \N'96'yes\N'39' ya da \N'96'true\N'39') veya 2 için, \N'34':\N'34' ile başlayan vfat türünde 4 baytlık önceleme dizgesi kullanılır. Burada karakter kodlamasının bayt sırası olarak, 2 için küçük sonlu (little\N'45'endian) kodlama, 1 için ise bayt yer değiştirmeli büyük sonlu (byteswapped  big\N'45'endian) kodlama kullanılır.         

.TP 
\fBposix=[0|1]\fR
Şayet etkin ise (posix=1),  dosya sistemi büyük küçük harf ayrımı yapar. Dosyaların 8.3\N'39'lük diğer isimleri ise gizlenmek yerine sabit bağlar ile temsil edilirler.         

.TP 
\fBuid\fR=\fIdeğer\fR, \fBgid\fR=\fIdeğer\fR ve \fBumask\fR=\fIdeğer\fR
Dosya sistemindeki dosya izinlerini düzenler. Öntanımlı olarak, dosyalar root kullanıcıya aittir ve başkaları tarafından okunamaz.         

.PP
     
.SS proc için mount seçenekleri              
.br
.ns
.TP 
\fBuid\fR=\fIdeğer\fR ve \fBgid\fR=\fIdeğer\fR
Bu seçenekler geçerli olmakla birlikte, gördüğüm kadarı ile hiçbir etkiye sahip değillerdir.         

.PP
     
.SS reiserfs için mount seçenekleri              
\fBreiserfs\fR için \fBmount\fR seçenekleri bu adreste ayrıntılı bir şekilde açıklanmıştır: http://www.namesys.com/mount\N'45'options.html       



.br
.ns
.TP 
\fBconv\fR
3.6 sürümü reiserfs yazılımının, 3.5 sürümü bir reiserfs dosya sistemini bağlamasını ve yeni oluşturulan nesneler için 3.6 biçiminin kullanılmasını sağlar. Bu dosya sistemi artık reiserfs 3.5 sürümü araçlarla uyumlu olmayacaktır.         

.TP 
\fBhash=rupasov\fR, \fBhash=tea\fR, \fBhash=r5\fR, \fBhash=detect\fR
reiserfs\N'39'nin dizinler içindeki dosyaları bulması için kullanılacak hash işlevini seçmek için kullanılır.         



.RS 

.br
.ns
.TP 
\fBrupasov\fR
Yury Yu. Rupasov tarafından bulunmuş bir hash yöntemi. Oldukça hızlı ve yerel ayarları koruyan bir yöntemdir, sözlüğe bağlı kalarak yakın dosya isimlerini yakın değerlere eşler. Bu seçenek kullanılmamalıdır, oldukça yüksek bir ihtimalle isim değer eşlemesinde karmaşaya yol açabilir.           

.TP 
\fBtea\fR
Jeremy Fitzhardinge tarafından gerçeklenen bir Davis\N'45'Meyer işlevi. İsimlerde, hash permütasyon bitlerini kullanır. Yüksek rastlantısallığa ve düşük olasılıkla, bir miktar işlemci gücüne mal olacak, hash uyumsuzluklarına sebep olabilir. R5 hash ile EHASHCOLLISION hatalarında uzmanlaşılmışsa bu seçenek kullanılabilir.           

.TP 
\fBr5\fR
rupasov hash\N'39'ının geliştirilmiş bir sürümü. Çok büyük dizinler yoksa ve garip dosya ismi şablonları mevcut değilse kullanılacak en iyi seçenektir. Öntanımlıdır.           

.TP 
\fBdetect\fR
Bağlanmış dosya sisteminde kullanılan hash işlevini tespit etmeye ve bu bilgiyi reiserfs süper bloğuna yazmayı sağlar. Bu seçenek sadece, eski türdeki dosya sistemlerinde ve ilk bağlama esnasında faydalı olabilir.           

.PP
.RE
.IP


.TP 
\fBhashed_relocation\fR
Blok ayırıcıları ayarlar. Bazı durumlarda başarım artışı sağlayabilir.         

.TP 
\fBno_unhashed_relocation\fR
Blok ayırıcıları ayarlar. Bazı durumlarda başarım artışı sağlayabilir.         

.TP 
\fBnoborder\fR
Yury Yu. Rupasov\N'39'un icadı olan kenar ayırıcı algoritmasını iptal eder. Bazı durumlarda başarım artışı sağlayabilir.         

.TP 
\fBnolog\fR
Günlüklemeyi (journalling) kapatır. Herhangi bir çökme durumunda hızlı kurtarma seçeneğinden vazgeçme pahasına, bir miktar başarım artışı sağlayabilir. Aslında, bu seçeneğin kullanılması durumunda bile reiserfs günlükleme işlemlerine devam edecektir ve geçerli verileri günlükleme alanına yazacaktır. \fBnolog\fR genişletmesi halen geliştirilmektedir.         

.TP 
\fBnotail\fR
Öntanımlı olarak,  reiserfs, küçük dosyaları ve dosya artıklarını doğrudan ağaç yapısına kaydeder. Bu \fBLILO\fR(8) gibi bazı uygulamaların kafasının karışmasına sebep olur. Bu seçenek, dosyaların ağacın içine paketlenmesini iptal eder. (Burada dosya artıkları, bir dosyanın tam bir bloktan artan ancak artan kısmın bir bloğu dolduramayacak kısmıdır.)         

.TP 
\fBreplayonly\fR
Günlüklemedeki işlemleri tekrarlar fakat gerçekte dosya sistemini bağlamaz. Temelde \fBreiserfsck\fR tarafından kullanılır.         

.TP 
\fBresize\fR=\fIsayı\fR
\fBreiserfs\fR bölümünün çevrimiçi genişlemesine izin veren bir tekrar bağlama seçeneğidir. \fBreiserfs\fR\N'39'ye, aygıtın \fIsayı\fR bloka sahip olduğu talimatını verir. Bu seçenek, Mantıksal oylum yönetim sistemi (LVM) kullanan aygıtlar için tasarlanmıştır. ftp://ftp.namesys.com/pub/reiserfsprogs adresinden elde edebileceğiniz özel bir yeniden boyutlandırıcı araç vardır.         

.PP
     
.SS romfs için mount seçenekleri              
Yoktur.
     
.SS smbfs için mount seçenekleri              
Tıpkı \fBnfs\fR gibi, \fBsmbfs\fR gerçeklemesi de, \fBmount\fR sistem çağrısı için bir ikilik argüman ister (struct ncp_mount_data). Bu argüman \fBsmbmount\fR(8) tarafından oluşturulur ve \fBmount\fR komutunun şu anki geçerli sürümü (2.6h) \fBsmbfs\fR hakkında hiçbir şey bilmez.       
     
.SS sysv için mount seçenekleri              
Yoktur.
     
.SS udf için mount seçenekleri              
.br
.ns
.TP 
\fBgid=\fR
Öntanımlı grup belirtilir.         

.TP 
\fBumask=\fR
Öntanımlı umask belirtilir.         

.TP 
\fBuid=\fR
Öntanımlı kullanıcı belirtilir.         

.TP 
\fBunhide\fR
Gizli dosyaları gösterir.         

.TP 
\fBundelete\fR
Silinmiş dosyaları listeler.         

.TP 
\fBstrict\fR
Kesin uyumluluk sağlar (kullanılmamaktadır).         

.TP 
\fButf8\fR
(Kullanılmamaktadır).         

.TP 
\fBiocharset\fR
(Kullanılmamaktadır).         

.TP 
\fBbs=\fR
Blok boyutunu ayarlar. (2048\N'39'den farklı bir ayarda çalışmayabilir.)         

.TP 
\fBnovrs\fR
Oylum sıralaması tanımayı atlar.         

.TP 
\fBsession=\fR
0 dan sayarak oturum numarası belirtilir. Öntanımlı: son oturum.         

.TP 
\fBanchor=\fR
Standart çapa konumunu değiştirir. Öntanımlı: 256.         

.TP 
\fBvolume=\fR
VolumeDesc konumunu değiştirir (kullanılmamaktadır).         

.TP 
\fBpartition=\fR
PartitionDesc konumunu değiştirir (kullanılmamaktadır).         

.TP 
\fBlastblock=\fR
Dosya sisteminin son bloğu belirtilir.         

.TP 
\fBfileset=\fR
Dosya kümesi blok konumunu değiştirir (kullanılmamaktadır).         

.TP 
\fBrootdir=\fR
Kök dizinin konumunu değiştirir (kullanılmamaktadır).         

.PP
     
.SS ufs için mount seçenekleri              
.br
.ns
.TP 
\fBufstype\fR=\fIdeğer\fR
UFS değişik işletim sistemlerinde geniş çapta kullanılan bir dosya sistemidir. Sorun, uygulamalar arası farklılıklardadır. Bazı uygulama özellikleri belgelenmemiştir, bu nedenle \fBufs\fR\N'39'nin türünü özdevinimli olarak tanımak çok zordur. Bu yüzden, kullanıcılar bağlama işlemi esnasında \fBufs\fR türünü belirtmek zorundadır. Muhtemel değerler şunlardır:         



.RS 

.br
.ns
.TP 
\fBold\fR
\fBufs\fR\N'39'nin eski biçimi, salt okunurdur ve öntanımlıdır.           

.TP 
\fB44bsd\fR
BSD benzeri sistemler(NetBSD, FreeBSD, OpenBSD) tarafından oluşturulmuş dosya sistemleri içindir.           

.TP 
\fBsun\fR
Sparc üzerinde sunOS veya Solaris tarafından oluşturulmuş dosya sistemleri içindir.           

.TP 
\fBsunx86\fR
x86 üzerinde Solaris tarafından oluşturulmuş dosya sistemleri içindir.           

.TP 
\fBnextstep\fR
NeXTStep tarafından (NeXT istasyonları üzerinde) oluşturulmuş dosya sistemleri içindir (şu an salt okunurdur).           

.TP 
\fBnextstep\N'45'cd\fR
NextStep CDROMlar (block_size == 2048) içindir, salt okunurdur.           

.TP 
\fBnextstep\fR
OpenStep tarafından oluşturulmuş dosya sistemleri içindir (şu an salt okunurdur).           

.PP
.RE
.IP


.TP 
\fBonerror\fR=\fIdeğer\fR
hata durumundaki davranışları ayarlar:         



.RS 

.br
.ns
.TP 
\fBpanic\fR
Bir hata durumunda çekirdek paniğine sebep olur.           

.TP 
\fB[lock|umount|repair]\fR
Bugün için, bu seçenekler bir işe yaramaz; bir hata durumunda sadece bir konsol iletisi basılır.           

.PP
.RE
.IP


.PP
     
.SS umsdos için mount seçenekleri              
\fBmsdos\fR için \fBmount\fR seçeneklerine bakınız.  \fBdotsOK\fR  seçeneği kabul edilmez.       
     
.SS vfat için mount seçenekleri              
Her şeyden önce, \fBfat\fR için olan \fBmount\fR seçenekleri, \fBvfat\fR içinde geçerlidir. \fBdotsOK\fR seçeneği \fBvfat\fR tarafından kabul edilmez. Bunların yanında şu seçenekler de mevcuttur:       



.br
.ns
.TP 
\fBuni_xlate\fR
Elde edilemeyen Unicode karakterlerini önceleme dizgesine çevirir. Böylece, içinde Unicode karakterler olan dosya isimleriyle yedekleme ve tekrar yükleme şansına sahip olursunuz. Bu seçenek olmaksızın, çevirinin mümkün olmadığı hallerde, bir \N'96'?\N'39' işareti kullanılır. Önceleme dizgesi \N'96':\N'39' dir, çünkü aksi durumda \fBvfat\fR sistemlerde geçersiz olur. Kullanılan önceleme dizgesi, u Unicode karakteri temsil etmek üzere: \N'39':\N'39', (u & 0x3f), ((u>>6) & 0x3f), (u>>12).         

.TP 
\fBposix\fR
Harf büyüklükleri farklı iki aynı isme izin verir.         

.TP 
\fBnonumtail\fR
isim~num.uzt ismini denemeden önce sıra numarasız kısa bir isim oluşturmayı dener.         

.TP 
\fButf8\fR
UTF\N'45'8, konsol tarafından kullanılan dosya sistemleri için güvenli 8 bitlik bir Unicode kodlamasıdır. Bu seçenekle etkinleştirilir. Şayet \fBuni_xlate\fR kullanılmışsa, \fButf8\fR iptal edilir.         

.PP
     
.SS xenix için mount seçenekleri              
Yoktur.
     
.SS xfs için mount seçenekleri              
.br
.ns
.TP 
\fBbiosize\fR=\fIboyut\fR
Tercih edilen tamponlu G/Ç boyutunu ayarlar (öntanımlı değer: 64K\N'39'dır). \fIboyut\fR, istenen G/Ç boyutunun 2 tabanındaki  logaritması olarak ifade edilebilmelidir. Bu seçenek için geçerli değerler 14 ile 16 arasıdır (her ikisi de dahil)ve bu değerler 16, 32 ve 64kB\N'39'a karşılıktır. 4K sayfa boyutuna sahip bir makinede, 13 (8kB) geçerli bir değerdir. Tercih edilen tamponlu G/Ç boyutu, tek tek her dosya için \fBioctl\fR(2) sistem çağrısı ile de değiştirilebilir.         

.TP 
\fBdmapi\fR, \fBxdsm\fR
DMAPI (veri yönetim uygulaması geliştirme arayüzü) olay çağrılarını etkinleştirir.         

.TP 
\fBlogbufs\fR=\fIdeğer\fR
Bellek içi günlük tamponlarının sayısını ayarlar. Geçerli değerler, her ikisi de dahil olmak üzere, 2 ila 8 arasıdır. Öntanımlı değer, 64K lık blok boyutlu bir dosya sistemi için 8 tampon, 32K blok boyutlu bir dosya sistemi için 4 tampon, 16K blok boyutlu bir dosya sistemi için 3 tampon ve diğerleri için 2 tampondur. Tampon sayısını artırmak, fazladan bellek kullanımına sebep olmakla birlikte, bazı iş yüklerinde başarım artırımı sağlayabilir.         

.TP 
\fBlogbsize\fR=\fIdeğer\fR
Bellek içi günlük tamponlarının boyunu ayarlar. Geçerli değerler 16384 (16K) ve 32768 (32K) dır. 32MB\N'39'den büyük bellekli makinelerde, öntanımlı değer 32768, daha az belleğe sahip makinelerde 16384 dür.         

.TP 
\fBlogdev\fR=\fIaygıt\fR, \fBrtdev\fR=\fIaygıt\fR
Bir dış günlük (meta veri jurnali) ve/veya gerçek zamanlı aygıt kullanılır. Bir XFS dosya sistemi en fazla üç bölüme sahip olabilir: bir veri bölümü, bir günlük bölümü ve bir gerçek zamanlı bölüm. Gerçek zamanlı bölüm isteğe bağlıdır. Günlük bölümü, veri bölümünün içinde veya dışında olabilir. Ayrıntılar için \fBxfs(5)\fR\N'39'e bakınız.         

.TP 
\fBnoalign\fR
Verilerin disklere paylaştırılmasında hizalama yapılmayacaktır.         

.TP 
\fBnoatime\fR
Bir dosya okunduğu zaman erişim zamanı değiştirilmez.         

.TP 
\fBnorecovery\fR
Dosya sistemi, günlük kurtarma çalıştırılmadan bağlanmış olacaktır. Şayet dosya sistemi düzgün olarak ayrılmamılsa, \fBnorecovery\fR kipinde bağlandığında kararsız hale gelebilir. Bundan dolayı bazı dosya ve dizinlere erişilemeyebilir. \fBnorecovery\fR seçeneği ile bağlanan dosya sistemleri, salt okunur kipte bağlanmalıdır, yoksa bağlama işlemi başarısız olur.         

.TP 
\fBosyncisdsync\fR
Dosyalara yazma işlemleri, O_SYNC yerine D_DSYNC kullanılıyormuşçasına yapılır. Böylece, veri güvenliğinden ödün vermeksizin daha iyi başarım elde edilebilir. Bununla birlikte, bu seçenek etkin iken, O_SYNC tarafından yazılan zaman damgası güncellemeleri, sistem çökmesi durumunda, kaybolabilirler.         

.TP 
\fBquota\fR, \fBusrquota\fR, \fBgqnoenforce\fR
Kullanıcı disk alanı kotaları etkinleştirilir ve sınırlara uyma  zorlanır (isteğe bağlıdır \N'45' \fBuqnoenforce\fR ile iptal edilir).         

.TP 
\fBgrpquota\fR, \fBgqnoenforce\fR
Grup disk alanı kotaları etkinleştirilir ve sınırlara uyma  zorlanır (isteğe bağlıdır \N'45' \fBgqnoenforce\fR ile iptal edilir).         

.TP 
\fBsunit\fR=\fIdeğer\fR, \fBswidth\fR=\fIdeğer\fR
Veriler çok sayıda diske paylaştırıldığında veya bir RAID aygıtı kullanıldığında paylaştırma birimi ve genişliği belirtilir. \fIdeğer\fR 512 bayt uzunluktaki blok birimleri ile verilmelidir. Bu seçenek kullanılmamış ama dosya sistemi çok diskli olarak oluşturulmuş ya da RAID aygıtı mkfs ile oluşturulurken birim ve genişlik belirtilmişse, mount sistem çağrısı değeri süper bloktan alacaktır. Doğrudan RAID aygıtları üzerinde oluşturulan dosya sistemlerinde, dosya sistemi oluşturulduktan sonra, dosya sisteminin oluşturulduğu diskin yerleşimi değişirse, bu seçenek süper bloktaki bilgileri değiştirmek için kullanılabilir. \fBsunit\fR değeri belirtilmişse \fBswidth\fR değerinin de belirtilmesi gereklidir. Ayrıca, çok sayıda \fBsunit\fR değeri belirtilebilir.         

.PP
     
.SS xiafs için mount seçenekleri              
Yoktur. Buna rağmen, \fBxiafs\fR ile ilgili yanlış bir şey yoktur, çok fazla kullanılmaz ve geliştirilmez. Linux 2.1.21 sürümünde beri, \fBxiafs\fR çekirdek kodunun bir parçası değildir. Muhtemelen bu dosya sistemini kullanmamalısınız.       
        
.SH DÖNÜŞ (LOOP) AYGITI     
İleride muhtemel mount türlerinden birisi de dönüş/loop aygıtları üzerinden yapılacak olandır. Örnek komutumuz;     




.nf
\ \ \fBmount /tmp/fdimage /mnt \N'45't msdos \N'45'o loop=/dev/loop3,blocksize=1024\fR
.fi     

/dev/loop3 aygıtını karşılık gelen /tmp/fdimage dosyasına ayarlayacak ve daha sonra bu aygıtı /mnt üzerine bağlayacaktır. Bu tür bağlama \fBloop\fR, \fBoffset\fR ve \fBencryption\fR isimleriyle belirtilen üç seçenekle yapılır (sırasıyla aygıt, konum ve şifreleme). Aslında bunlar \fBlosetup\fR(8)\N'39'a gönderilen seçeneklerdir. Şayet aygıt açık seçik belirtilmemişse (fakat \fB\N'45'o loop\fR seçeneği verilmişse), \fBmount\fR komutu kullanılmayan bir dönüş aygıtı arar ve onu kullanır.  Şayet /etc/mtab\N'39'ı /proc/mounts\N'39'a sembolik bağ yapmayacak kadar akıllı iseniz, \fBmount\fR tarafından bağlanan herhangi bir döngü aygıtı, \fBumount\fR tarafından ayrılacaktır. Ayrıca bir dönüş aygıtını elle de ayırabilirsiniz: \fBlosetup \N'45'd\fR. Ayrıntılar için \fBlosetup\fR(8)\N'39'e bakınız.     
   
.SH İLGİLİ DOSYALAR     

.nf
/etc/fstab    dosya sistemi tablosu
/etc/mtab     bağlı dosya sistemlerinin tablosu
/etc/mtab~    kilit dosyası
/etc/mtab.tmp geçici dosya
.fi     
   
.SH İLGİLİ BELGELER     
\fBmount(2)\fR, \fBumount(2)\fR, \fBfstab(5)\fR, \fBnfs(5)\fR, \fBxfs(5)\fR, \fBe2label(8)\fR, \fBlosetup(8)\fR, \fBmke2fs(8)\fR, \fBmountd(8)\fR, \fBnfsd(8)\fR, \fBswapon(8)\fR, \fBtune2fs(8)\fR, \fBumount(8)\fR, \fBxfs_admin(8)\fR.     
  
.SH YAZILIM HATALARI     
Bozulmuş bir dosya sisteminde hata vermesi muhtemeldir.     

Bazı Linux dosya sistemleri \fB\N'45'o sync\fR desteklemez (ext2 ve ext3 dosya sistemleri \fBsync\fR seçeneği ile bağlandıklarında eşzamanlı güncellemeleri desteklerler (BSD tarzı)).     

\fB\N'45'o remount\fR seçeneği \fBmount\fR parametrelerini değiştiremeyebilir (örneğin, \fBsb\fR hariç bütün \fBext2fs\fR özellikli parametreler tekrar bağlama durumunda değiştirilebilir, fakat \fBfat\fR için \fBgid\fR ve \fBumask\fR değiştirilemez.)     
  
.SH TARİHÇE     
AT&T UNIX\N'39'in 5. sürümünde bir \fBmount\fR komutu vardı.     
   
.SH ÇEVİRENLER     
Yalçın Kolukısa <yalcink01 (at) yahoo.com> ve Nilgün Belma Bugüner <nilgun (at) belgeler·gen·tr>, Ocak 2004
    
   
