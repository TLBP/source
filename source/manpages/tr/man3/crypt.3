.\" http://belgeler.org \N'45' 2006\N'45'11\N'45'26T10:18:32+02:00 
.\" Michael Haardt (michael@cantor.informatik.rwth.aachen.de) Sat Sep 3 22:00:30 MET DST 1994 
.\" 
.\" This is free documentation; you can redistribute it and/or 
.\" modify it under the terms of the GNU General Public License as 
.\" published by the Free Software Foundation; either version 2 of 
.\" the License, or (at your option) any later version. 
.\" 
.\" The GNU General Public License\N'39's references to "object code" 
.\" and "executables" are to be interpreted as the output of any 
.\" document formatting or typesetting system, including 
.\" intermediate and printed output. 
.\" 
.\" This manual is distributed in the hope that it will be useful, 
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of 
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
.\" GNU General Public License for more details. 
.\" 
.\" You should have received a copy of the GNU General Public 
.\" License along with this manual; if not, write to the Free 
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, 
.\" USA. 
.\" 
.\" Sun Feb 19 21:32:25 1995, faith@cs.unc.edu edited details away 
.\" 
.\" TO DO: This manual page should go more into detail how DES is perturbed, 
.\" which string will be encrypted, and what determines the repetition factor. 
.\" Is a simple repetition using ECB used, or something more advanced? I hope 
.\" the presented explanations are at least better than nothing, but by no 
.\" means enough. 
.\" 
.\" added _XOPEN_SOURCE, aeb, 970705 
.\" added GNU MD5 stuff, aeb, 011223   
.TH "crypt" 3 "23 Aralık 2001" "" "Kütüphane İşlevleri"
.nh   
.SH İSİM
crypt \N'45' parola ve veri şifrelemesi   
.SH KULLANIM 
.nf
#define _XOPEN_SOURCE
#include <unistd.h>

void \fBcrypt\fR (const char *\fIparola\fR, const char *\fItuz\fR);
.fi

\fB\N'45'lcrypt\fR ile ilintileme gerektirir.
      
.SH AÇIKLAMA     
\fBcrypt\fR  parola şifreleme işlevidir. Veri Şifreleme Standartı (Data Encryption Standard) algoritmasına dayanır, fakat anahtar tarama için tasarlanmış donanımlara engel olmak için bir takım farklılıklar içerir.   

\fIparola\fR kullanıcın girdiği paroladır.   

\fItuz\fR ise,  elemanları [a\N'45'zA\N'45'Z0\N'45'9./] kümesinden seçilen iki karakterli bir dizgedir. Bu dizge algoritmayı 4096 farklı ihtimalden biri ile karıştırmayı amaçlar.   

\fIparola\fRnın ilk sekiz karakterinden her birinin en düşük anlamlı 7 biti alınarak 56 bitlik parola oluşturulur. Bu 56 bitlik parola tekrar tekrar bir dizgeyi (genellikle hepsi sıfırlardan oluşan bir dizge) şifrelemede kullanılır. Dönüş değeri 13 karakterli bir ASCII dizgesi olan ve ilk iki karakteri tuzu temsil eden şifrelenmiş paroladır. Dönüş değeri, her işlev çağrısında içeriği değişen statik bir veridir.   

.br
.ns
.TP 
\fBUyarı:\fR
Anahtar aralığı 2^56 (7.2e16) farklı değer içermektedir. Bu anahtar aralığının tümünü kapsayan taramalar paralel bilgisayarlar ile mümkündür. \fBcrack(1)\fR gibi yazılımlar  bu anahtar aralığının bir kısmını tarayıp parolaları elde etmek için insanlar tarafından kullanılmaktadır. Bu sebeple, parola seçerken sık kullanılan kelime ve isimlerden sakınılmalıdır. Parola seçme işlemi esnasında kırılabilir parolaları kontrol eden \fBpasswd(1)\fR uygulaması kullanmalıdır.

.PP   

DES algoritması, \fBcrypt\fR arayüzünün parola kimlik denetimi haricinde kullanılmasını kötü bir seçenek haline getirmiştir.Eğer \fBcrypt\fR arayüzünü kriptografi projenizde kullanmayı planlıyorsanız, bundan vazgeçin: Şifreleme ve DES kütüphaneleri konusunda iyi bir kitap elde edinin.     
   
.SH DÖNÜŞ DEĞERİ     
Dönüş değeri şifrelenmiş parolaya bir göstericidir. Hata durumunda, boş gösterici döner.     
   
.SH HATALAR     
.br
.ns
.TP 
\fBENOSYS\fR
İşlev kütüphanede bulunmamaktadır (Örneğin, ABD\N'39'nin ihracat sınırlamalarından dolayı).       

.PP
   
.SH GNU OLUŞUMU     
Bu işlevin glibc2 sürümü şu ek özelliklere sahiptir. Eğer \fItuz\fR karakter dizisi, "$1$" karakterleri ile başlar ve bunun ardından en fazla 8 karakter gelirse (ve tercihan "$" karakteri ile sonlandırılırsa), bu durumda glib crypt işlevi DES motoru yerine, MD5 algoritması kullanılır ve 34  bayta kadar çıktı verilir. Çıktı "$1$<\fIdizge\fR>$" biçimindedir. Burada \fIdizge\fR, 8 karaktere kadar \fItuz\fR ve bunu takip eden [a\N'45'zA\N'45'Z0\N'45'9./] kümesinden seçilmiş 22 bayttan oluşur.  Burada bu anahtarın bütünü anlamlıdır (sadece ilk 8 baytı değil).   

Bu işlevin kullanıldığı yazılımlar derlenirken \fB\N'45'lcrypt\fR ile ilintilemelidir.     
   
.SH UYUMLULUK     
\fBcrypt()\fR işlevi SVID, X/OPEN, BSD 4.3 ve POSIX 1003.1\N'45'2001 uyumludur.     
   
.SH İLGİLİ BELGELER      
\fBlogin(1)\fR, \fBcrypt(1)\fR, \fBpasswd(1)\fR, \fBencrypt(3)\fR, \fBgetpass(3)\fR, \fBpasswd(5)\fR.     
   
.SH ÇEVİREN     
Emin İslam Tatlı <eminislam (at) web.de>, Nisan 2004
    
   
