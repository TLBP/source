.\" http://belgeler.org \N'45' 2006\N'45'11\N'45'26T10:18:37+02:00  
.TH "LISTEN" 7 "" "PostgreSQL" "SQL \N'45' Dil Deyimleri"
.nh   
.SH İSİM
LISTEN \N'45' listen for a notification   
.SH KULLANIM 
.nf
\fBLISTEN\fR \fIisim\fR.fi
    
.SH AÇIKLAMA
\fBLISTEN\fR registers the current session as a    listener on the notification condition \fIisim\fR.    If the current session is already registered as a listener for    this notification condition, nothing is done.   

Whenever the command \fBNOTIFY \fR\fIisim\fR is invoked, either    by this session or another one connected to the same database, all    the sessions currently listening on that notification condition are    notified, and each will in turn notify its connected client    application.  See the discussion of \fBNOTIFY\fR for    more information.   

A session can be unregistered for a given notify condition with the    \fBUNLISTEN\fR command.  A session\N'39's listen    registrations are automatically cleared when the session ends.   

The method a client application must use to detect notification events depends on    which PostgreSQL application programming interface it    uses.  With the \fBlibpq\fR library, the application issues    \fBLISTEN\fR as an ordinary SQL command, and then must    periodically call the function PQnotifies to find out    whether any notification events have been received.  Other interfaces such as    \fBlibpgtcl\fR provide higher\N'45'level methods for handling notify events; indeed,    with \fBlibpgtcl\fR the application programmer should not even issue    \fBLISTEN\fR or \fBUNLISTEN\fR directly.  See the    documentation for the interface you are using for more details.   

\fBNOTIFY\fR [notify(7)]    contains a more extensive    discussion of the use of \fBLISTEN\fR and    \fBNOTIFY\fR.   

.SH PARAMETRELER   
.br
.ns
.TP 
\fIisim\fR
Name of a notify condition (any identifier).     

.PP  
.SH ÖRNEKLER
Configure and execute a listen/notify sequence from    \fBpsql\fR:   


.RS 4
.nf
LISTEN virtual;
NOTIFY virtual;
Asynchronous notification "virtual" received from server process
with PID 8448.
.fi
.RE   

.SH UYUMLULUK
There is no \fBLISTEN\fR statement in the SQL    standard.   

.SH İLGİLİ BELGELER
\fBNOTIFY\fR [notify(7)], \fBUNLISTEN\fR [unlisten(7)].   

.SH ÇEVİREN
Nilgün Belma Bugüner <nilgun (at) belgeler·gen·tr>, Nisan 2005 
 
   
