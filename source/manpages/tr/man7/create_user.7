.\" http://belgeler.org \N'45' 2006\N'45'11\N'45'26T10:18:35+02:00  
.TH "CREATE USER" 7 "" "PostgreSQL" "SQL \N'45' Dil Deyimleri"
.nh   
.SH İSİM
CREATE USER \N'45' yeni bir veritabanı kullanıcısı hesabı tanımlar   
.SH KULLANIM 
.nf
\fBCREATE USER\fR \fIisim\fR [ [ \fBWITH\fR ] \fIseçenek\fR [ ... ] ]

burada \fIseçenek\fR:

\      \fBSYSID\fR \fIuid\fR
\    | \fBCREATEDB\fR | \fBNOCREATEDB\fR
\    | \fBCREATEUSER\fR | \fBNOCREATEUSER\fR
\    | \fBIN GROUP\fR \fIgrup_ismi\fR [, ...]
\    | [ \fBENCRYPTED\fR | \fBUNENCRYPTED\fR ] \fBPASSWORD\fR \N'39'\fIparola\fR\N'39'
\    | \fBVALID UNTIL\fR \N'39'\fImutlak_zaman\fR\N'39'
.fi
    
.SH AÇIKLAMA
\fBCREATE USER\fR bir PostgreSQL veritabanı kümesine yeni bir kullanıcı ekler. Bu komutu kullanmak için bir veritabanı ayrıcalıklı kullanıcısı olmalısınız. Kullanıcı ve kimlik kanıtlama işlemleri hakkında bilgi edinmek için:
.br
http://www.postgresql.org/docs/8.0/static/user\N'45'manag.html
.br
http://www.postgresql.org/docs/8.0/static/client\N'45'authentication.html   

.SH PARAMETRELER     
.br
.ns
.TP 
\fIisim\fR
Yeni kullanıcının ismi.       

.TP 
\fIuid\fR
\fBSYSID\fR deyimi yeni kullanıcının PostgreSQL kullanıcı kimliğini seçmekte kullanılabilir. Bu normalde gerekmez, ama eğer öksüz kalmış bir nesneyi yeniden oluşturuyorsanız yararlı olabilir.        

Eğer belirtilmezse, yeni kullanıcı kimliği öntanımlı olarak atanmış en büyük kullanıcı kimliğine (alt sınır 100) bir eklenerek oluşturulur.       

.TP 
\fBCREATEDB\fR, \fBNOCREATEDB\fR
Bu deyimler yeni kullanıcının veritabanı oluşturabilme yeterliliğini belirler. Eğer \fBCREATEDB\fR belirtilmişse, kullanıcı kendi veritabanını oluşturabilir olarak tanımlanmış olur. \fBNOCREATEDB\fR kullanıcıya veritabanı oluşturma yeterliliğini vermeyecektir. Hiçbiri belirtilmezse, \fBNOCREATEDB\fR öntanımlıdır.       

.TP 
\fBCREATEUSER\fR, \fBNOCREATEUSER\fR
Bu deyimler yeni kullanıcıya, yeni kullanıcılar oluşturabilme izni verilmesi ile ilgilidir. \fBCREATEUSER\fR ayrıca, kullanıcıyı tüm erişim izinlerini düzenleyebilme yetkisi olan bir ayrıcalıklı kullanıcı haline getirir. Hiçbiri belirtilmezse, \fBNOCREATEUSER\fR öntanımlıdır.       

.TP 
\fIgrup_ismi\fR
Yeni kullanıcının üyesi yapılacağı mevcut gruplardan birinin ismi. Çok sayıda grup ismi listelenebilir.       

.TP 
\fIparola\fR
Kullanıcının parolası. Parolalı kimlik kanıtlaması kullanmayı planlamıyorsanız, bu seçeneği atlayabilirsiniz, ama daha sonra kararınızı değiştirirseniz, kullanıcı bağlanamayabilecektir. Parola \fBALTER USER\fR [alter_user(7)] kullanarak sonradan atanabilir veya değiştirilebilir.       

.TP 
\fBENCRYPTED\fR, \fBUNENCRYPTED\fR
Bu sözcükler parolanın sistem kataloğunda şifreli saklanıp saklanmayacağı ile ilgilidir. Hiçbiri belirtilmezse, öntanımlı davranış  password_encryption yapılandırma parametresine göre saptanır. Eğer mevcut parola zaten MD\N'45'5 şifreli biçimdeyse, bu sözcüklerden hangisi belirtilmiş olursa olsun, olduğu gibi saklanır (zaten, şifreli bir parolayı sistem çözemez). Bu, veritabanı dökümlenirken veya yerine konurken de böyledir.        

Çok eski istemcilerin, parolaların şifreli saklanmasını gerektiren MD\N'45'5 kimlik kanıtlama mekanizması için destekten yoksun olabileceğini unutmayın.       

.TP 
\fImutlak_zaman\fR
Kullanıcının parolasının geçerliliğini yitireceği zamanı belirtmek için kullanılır. \fBVALID UNTIL\fR deyimi atlanırsa, parola daima geçerli olacaktır.       

.PP  
.SH EK BİLGİ
Bir kullanıcının özniteliklerine değiştirmek için \fBALTER USER\fR [alter_user(7)], bir kullanıcıyı silmek için de \fBDROP USER\fR [drop_user(7)] kullanın. Bir kullanıcıyı bir gruba eklemek ya da gruptan çıkarmak için \fBALTER GROUP\fR [alter_group(7)] kullanın.   

PostgreSQL, \fBCREATE USER\fR ile aynı işlevselliğe sahip olan \fBcreateuser(1)\fR diye bir uygulama içerir (Aslında o da bu komutu kullanır), fakat o komut satırından çalışır.   

\fBVALID UNTIL\fR deyimi kullanıcının hesabı için değil sadece kullanıcının parolası için son geçerlilik tarihini belirler. Parolasız kimlik kanıtlama yöntemi kullanılırken, bu değerin bir hükmü olmayacaktır.   

.SH ÖRNEKLER
Parolasız bir kullanıcı tanımlamak için:   


.RS 4
.nf
CREATE USER jonathan;
.fi
.RE   

Parolalı bir kullanıcı tanımlamak için:   


.RS 4
.nf
CREATE USER davide WITH PASSWORD \N'39'jw8s0F4\N'39';
.fi
.RE   

Parolasının son kullanma tarihi 2004 olan bir kullanıcı tanımlamak için:   


.RS 2
.nf
CREATE USER miriam WITH PASSWORD \N'39'jw8s0F4\N'39' VALID UNTIL \N'39'2005\N'45'01\N'45'01\N'39';
.fi
.RE   

Burada parola 2005\N'39'in ilk saniyesinde geçersiz olacaktır.   

Veritabanı oluşturabilme yetkisi olan bir kullanıcı oluşturmak için:   


.RS 4
.nf
CREATE USER manuel WITH PASSWORD \N'39'jw8s0F4\N'39' CREATEDB;
.fi
.RE   

.SH UYUMLULUK
\fBCREATE USER\fR cümlesi bir PostgreSQL oluşumudur.  SQL standardı kullanıcı tanımlamayı gerçeklemeye bırakmıştır.   

.SH İİGİLİ BELGELER
\fBALTER USER\fR [alter_user(7)], \fBDROP USER\fR [drop_user(7)], \fBcreateuser(1)\fR.   

.SH ÇEVİREN
Nilgün Belma Bugüner <nilgun (at) belgeler·gen·tr>, Nisan 2005 
 
   
