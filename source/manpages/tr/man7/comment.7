.\" http://belgeler.org \N'45' 2006\N'45'11\N'45'26T10:18:34+02:00  
.TH "COMMENT" 7 "" "PostgreSQL" "SQL \N'45' Dil Deyimleri"
.nh   
.SH İSİM
COMMENT \N'45' bir nesnenin açıklamasını tanımlar veya değiştirir   
.SH KULLANIM 
.nf
\fBCOMMENT ON\fR
{
\  \fBTABLE\fR \fInesne_ismi\fR |
\  \fBCOLUMN\fR \fItablo_ismi\fR.\fIsütun_ismi\fR |
\  \fBAGGREGATE\fR \fIişlev_ismi\fR (\fIişlev_türü\fR) |
\  \fBCAST\fR (\fIkaynak_türü\fR \fBAS\fR \fIhedef_türü\fR) |
\  \fBCONSTRAINT\fR \fIkısıt_ismi\fR \fBON\fR \fItablo_ismi\fR |
\  \fBCONVERSION\fR \fInesne_ismi\fR |
\  \fBDATABASE\fR \fInesne_ismi\fR |
\  \fBDOMAIN\fR \fInesne_ismi\fR |
\  \fBFUNCTION\fR \fIişlev_ismi\fR (\fIarg1_türü\fR, \fIarg2_türü\fR, ...) |
\  \fBINDEX\fR \fInesne_ismi\fR |
\  \fBLARGE OBJECT\fR \fIbüyük_nesne_oid\fR |
\  \fBOPERATOR\fR \fIişleç\fR (\fIsol_terim_türü\fR, \fIsağ_terim_türü\fR) |
\  \fBOPERATOR CLASS\fR \fInesne_ismi\fR \fBUSING\fR \fIindeks_yöntemi\fR |
\  [ \fBPROCEDURAL\fR ] \fBLANGUAGE\fR \fInesne_ismi\fR |
\  \fBRULE\fR \fIkural_ismi\fR ON \fItablo_ismi\fR |
\  \fBSCHEMA\fR \fInesne_ismi\fR |
\  \fBSEQUENCE\fR \fInesne_ismi\fR |
\  \fBTRIGGER\fR \fItetik_ismi\fR \fBON\fR \fItablo_ismi\fR |
\  \fBTYPE\fR \fInesne_ismi\fR |
\  \fBVIEW\fR \fInesne_ismi\fR
} \fBIS\fR \fI\N'39'metin\N'39'\fR
.fi
    
.SH AÇIKLAMA
\fBCOMMENT\fR bir veritabanı nesnesi hakkındaki bir açıklamayı kaydeder.   

Bir açıklamayı değiştirmek için aynı nesneye yeni bir \fBCOMMENT\fR uygulayın. Her nesnede sadece bir açıklama dizgesi bulunabilir. Bir açıklamayı silmek için \N'39'metin\N'39' dizgesi olarak NULL yazın. Bir nesne silindiğinde açıklaması da özdevinimli olarak silinir.   

Açıklamalar \fB\\dd\fR, \fB\\d+\fR ve \fB\\l+\fR \fBpsql\fR komutları ile kolayca alınabilir. Diğer kullanıcı arayüzleri açıklamaları almak için \fBpsql\fR\N'39'in yerleşik olarak kullandığı obj_description ve col_description işlevlerini kullanabilirler (bkz.
.br
http://www.postgresql.org/docs/8.0/static/functions\N'45'info.html#FUNCTIONS\N'45'INFO\N'45'COMMENT\N'45'TABLE).   

.SH PARAMETRELER   
.br
.ns
.TP 
\fInesne_ismi\fR, \fItablo_ismi.sütun_ismi\fR, \fIkısıt_ismi\fR, \fIişlev_ismi\fR, \fIişleç\fR, \fIkural_ismi\fR, \fItetik_ismi\fR
Açıklanacak nesnenin ismi. Tablolar, ortak değer işlevleri, etki alanları, işlevler, indeksler, işleçler, işleç sınıfları, kayıt listeleri, türler ve sanal tablolar şema nitelemeli olabilir.     

.TP 
\fIişlev_türü\fR
Ortak değer işlevinin veri türü. İşlev herhangi bir veri türünü kabul ediyorsa, \fB*\fR belirtilebilir.     

.TP 
\fIbüyük_nesne_oid\fR
Büyük nesnenin nesne kimliği.     

.TP 
\fBPROCEDURAL\fR
Bu sözcük parazittir.     

.TP 
\fIkaynak_türü\fR
Tür dönüşümü yapılacak kaynak veri türünün ismi.     

.TP 
\fIhedef_türü\fR
Tür dönüşümünün hedef veri türü ismi.     

.TP 
\fI\N'39'metin\N'39'\fR
Yeni açıklama ise bir dizge sabiti olarak yazılır. Açıklama silinmek isteniyorsa NULL yazılır.     

.PP   
.SH EK BİLGİ
Bir veritabanı açıklaması sadece bu veritabanında oluşturulabilir ve sadece bu veritabanından görüntülenebilir, başka veritabanından görüntülenemez.   

Açıklamalar için bir güvenlik mekanizması yoktur: bir veritabanına bağlanan her kullanıcı bu veritabanındaki nesnelerin tüm açıklamalarını görebilir (sahibi olmadığı nesnelerin açıklamalarını sadece ayrıcalıklı kullanıcı değiştirebilir). Bu nedenle, güvenlik açığı oluşturabilecek bilgileri açıklamalara yazmayın.   

.SH ÖRNEKLER
mytable tablosuna bir açıklama eklemek için:   


.RS 4
.nf
COMMENT ON TABLE mytable IS \N'39'Bu tablo benimdir.\N'39';
.fi
.RE   

Onu kaldırmak için:   


.RS 4
.nf
COMMENT ON TABLE mytable IS NULL;
.fi
.RE   

Bazı örnekler:   


.nf
COMMENT ON AGGREGATE my_aggregate (double precision)
\    IS \N'39'Örnek sapmayı hesaplar\N'39';
COMMENT ON CAST (text AS int4) IS \N'39'metinleri int4 türüne dönüştürür\N'39';
COMMENT ON COLUMN my_table.my_column IS \N'39'Personelin kimlik numarası\N'39';
COMMENT ON CONVERSION my_conv IS \N'39'Unicode\N'39'a dönüşüm\N'39';
COMMENT ON DATABASE my_database IS \N'39'Geliştirdiğim veritabanı\N'39';
COMMENT ON DOMAIN my_domain IS \N'39'Eposta adres alanı\N'39';
COMMENT ON FUNCTION my_function (timestamp) IS \N'39'Romen sayılarıyla döner\N'39';
COMMENT ON INDEX my_index IS \N'39'Kimlik numarasının eşsiz olmasını sağlar\N'39';
COMMENT ON LANGUAGE plpython
\    IS \N'39'saklanmış yordamlar için Python desteği\N'39';
COMMENT ON LARGE OBJECT 346344 IS \N'39'Planlama belgesi\N'39';
COMMENT ON OPERATOR ^ (text, text) IS \N'39'iki metni kesiştirir\N'39';
COMMENT ON OPERATOR ^ (NONE, text)
\    IS \N'39'Metin üzerinde bir önek işlecidir\N'39';
COMMENT ON OPERATOR CLASS int4ops USING btree
\    IS \N'39'4 baytlık tamsayı işleçleri\N'39';
COMMENT ON RULE my_rule ON my_table IS \N'39'Personel kayıt günlükleri\N'39';
COMMENT ON SCHEMA my_schema IS \N'39'Bölümlerin verileri\N'39';
COMMENT ON SEQUENCE my_sequence IS \N'39'Birincil anahtar üretimi için.;
COMMENT ON TABLE my_schema.my_table IS \N'39'Personel Bilgileri\N'39';
COMMENT ON TRIGGER my_trigger ON my_table IS \N'39'RI için kullanılır\N'39';
COMMENT ON TYPE complex IS \N'39'Karmaşık sayı veri türü\N'39';
COMMENT ON VIEW my_view IS \N'39'Bölüm maliyetleri\N'39';
.fi   

.SH UYUMLULUK
SQL standardında \fBCOMMENT\fR diye bir deyim yoktur.   

.SH ÇEVİREN
Nilgün Belma Bugüner <nilgun (at) belgeler·gen·tr>, Nisan 2005 
 
    
