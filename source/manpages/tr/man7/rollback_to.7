.\" http://belgeler.org \N'45' 2006\N'45'11\N'45'26T10:18:37+02:00  
.TH "ROLLBACK TO SAVEPOINT" 7 "" "PostgreSQL" "SQL \N'45' Dil Deyimleri"
.nh   
.SH İSİM
ROLLBACK TO SAVEPOINT \N'45' roll back to a savepoint   
.SH KULLANIM 
.nf
\fBROLLBACK\fR [ \fBWORK\fR | \fBTRANSACTION\fR ] \fBTO\fR [ \fBSAVEPOINT\fR ] \fIkayıt_noktası_ismi\fR
.fi
    
.SH AÇIKLAMA
Roll back all commands that were executed after the savepoint was    established.  The savepoint remains valid and can be rolled back to    again later, if needed.   

\fBROLLBACK TO SAVEPOINT\fR implicitly destroys all savepoints that    were established after the named savepoint.   

.SH PARAMETRELER   
.br
.ns
.TP 
\fIkayıt_noktası_ismi\fR
The savepoint to roll back to.     

.PP  
.SH EK BİLGİ
Use \fBRELEASE SAVEPOINT\fR [release_savepoint(7)] to destroy a savepoint without    discarding the effects of commands executed after it was established.   

Specifying a savepoint name that has not been established is an error.   

Cursors have somewhat non\N'45'transactional behavior with respect to    savepoints.  Any cursor that is opened inside a savepoint will be closed    when the savepoint is rolled back.  If a previously opened cursor is    affected by a    \fBFETCH\fR command inside a savepoint that is later rolled    back, the cursor position remains at the position that \fBFETCH\fR    left it pointing to (that is, \fBFETCH\fR is not rolled back).    Closing a cursor is not undone by rolling back, either.    A cursor whose execution causes a transaction to abort is put in a    can\N'39't\N'45'execute state, so while the transaction can be restored using    \fBROLLBACK TO SAVEPOINT\fR, the cursor can no longer be used.   

.SH ÖRNEKLER
To undo the effects of the commands executed after my_savepoint    was established:   


.RS 4
.nf
ROLLBACK TO SAVEPOINT my_savepoint;
.fi
.RE   

Cursor positions are not affected by savepoint rollback:   


.RS 4
.nf
BEGIN;

DECLARE foo CURSOR FOR SELECT 1 UNION SELECT 2;

SAVEPOINT foo;

FETCH 1 FROM foo;
?column?
\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'
\        1

ROLLBACK TO SAVEPOINT foo;

FETCH 1 FROM foo;
?column?
\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'
\        2

COMMIT;
.fi
.RE    

.SH UYUMLULUK
The SQL:2003 standard specifies that the key word    SAVEPOINT is mandatory, but PostgreSQL    and Oracle allow it to be omitted.  SQL:2003 allows    only WORK, not TRANSACTION, as a noise word    after ROLLBACK.  Also, SQL:2003 has an optional clause    AND [ NO ] CHAIN which is not currently supported by    PostgreSQL.  Otherwise, this command conforms to    the SQL standard.   

.SH İLGİLİ BELGELER
\fBBEGIN\fR [begin(7)], \fBCOMMIT\fR [commit(7)], \fBRELEASE SAVEPOINT\fR [release_savepoint(7)], \fBROLLBACK\fR [rollback(7)], \fBSAVEPOINT\fR [savepoint(7)].   

.SH ÇEVİREN
Nilgün Belma Bugüner <nilgun (at) belgeler·gen·tr>, Nisan 2005 
 
   
