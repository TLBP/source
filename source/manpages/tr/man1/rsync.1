.\" http://belgeler.org \N'45' 2006\N'45'11\N'45'26T10:18:29+02:00 
.TH "rsync" 1 "28 Şubat 2005" "" ""
.nh   
.SH İSİM
rsync \N'45' rcp yerine daha hızlı ve esnek bir araç   
.SH KULLANIM 
.nf
\fBrsync\fR [\fIseçenek\fR]... \fIkaynak\fR [\fIkaynak\fR]... [\fIkullanıcı\fR@]\fIkonak\fR:\fIhedef\fR

\fBrsync\fR [\fIseçenek\fR]... [\fIkullanıcı\fR@]\fIkonak\fR:\fIkaynak hedef\fR

\fBrsync\fR [\fIseçenek\fR]... \fIkaynak\fR [\fIkaynak\fR]... \fIhedef\fR

\fBrsync\fR [\fIseçenek\fR]... [\fIkullanıcı\fR@]\fIkonak\fR::\fIkaynak\fR [\fIhedef\fR]

\fBrsync\fR [\fIseçenek\fR]... \fIkaynak\fR [\fIkaynak\fR]... [\fIkullanıcı\fR@]\fIkonak\fR::\fIhedef\fR

\fBrsync\fR [\fIseçenek\fR]... rsync://[\fIkullanıcı\fR@]\fIkonak\fR[:\fIport\fR]/\fIkaynak\fR [\fIhedef\fR]
.fi
 
.SH AÇIKLAMA
\fBrsync\fR çoğunlukla \fBrcp\fR gibi davranan bir uygulamadır, ancak daha fazla seçenek içerir ve  özellikle hedefteki dosyanın mevcut olması halinde dosya aktarımını çok daha hızlı gerçekleştiren \fBrsync\fR uzak güncelleme protokolünü kullanır.   

\fBrsync\fR uzak güncelleme protokolü \fBrsync\fR\N'39'in ağ bağlantısı üzerinden sadece iki dosya grubu arasındaki farkları aktarmasını mümkün kılar. Bunu bu pakete eşlik eden teknik raporda açıklanan verimli bir toplama sağlaması arama algoritmasını kullanarak yapar.   

\fBrsync\fR\N'39'e özgü bazı ek özellikler:   

.IP \fBo\fR 3
bağların, aygıtların, sahip, grup ve izinlerin kopyalanmasını destekler 

.IP \fBo\fR 3
GNU \fBtar\fR\N'39'a benzer exclude ve exclude\N'45'from seçenekleri 

.IP \fBo\fR 3
CVS\N'39'nin yok sayacağı dosyaların yoksayılmasını sağlayan CVS dışlama (exclude) kipi 

.IP \fBo\fR 3
\fBrsh\fR, \fBssh\fR gibi uzak şeffaf kabukları kullanabilir 

.IP \fBo\fR 3
root kullanıcısının yetkilerine ihtiyaç duymaz 

.IP \fBo\fR 3
görünmeyen maliyetleri asgari düzeyde tutmak için dosya aktarımlarında borulama yapar 

.IP \fBo\fR 3
hem anonim hem de kimlik doğrulamalı \fBrsync\fR sunucu desteği (yansılama için ideal) 

.PP 

.SH GENEL
\fBrsync\fR sekiz farklı yöntemle kullanılabilir:   

.IP \fBo\fR 3
yerel dosyaları kopyalamak için. Bu çağrıda ne kaynak ne de hedef dosya yolu bir : ayracı içermez.   

.IP \fBo\fR 3
yerel makineden uzaktaki bir makineye bir uzak kabuk uygulaması (\fBssh\fR veya \fBrsh\fR gibi) kullanarak dosyaları kopyalamak için. Bu çağrıda sadece hedef dosya yolu tek bir : ayracı içerir.   

.IP \fBo\fR 3
uzaktaki bir makineden yerel makineye bir uzak kabuk uygulaması (\fBssh\fR veya \fBrsh\fR gibi) kullanarak dosyaları kopyalamak için. Bu çağrıda sadece kaynak dosya yolu bir : ayracı içerir.   

.IP \fBo\fR 3
uzaktaki bir \fBrsync\fR sunucusundan yerel makineye kopyalama yapmak için. Bu çağrıda sadece kaynak dosya yolu bir :: ayracı veya bir rsync:// URL\N'39'si içerir.   

.IP \fBo\fR 3
yerel makineden uzaktaki bir \fBrsync\fR sunucusuna kopyalama yapmak için. Bu çağrıda sadece hedef dosya yolu bir :: ayracı veya bir rsync:// URL\N'39'si içerir.   

.IP \fBo\fR 3
uzaktaki makinede bulunan \fBrsync\fR sunucusunu ve bir uzak kabuk uygulamasını kullanarak, uzaktaki makineden yerel makineye kopyalama yapmak için. Bu çağrıda kaynak dosya yolunun bir :: ayracı içermesi yanında \fB\N'45'\N'45'rsh=\fR\fIkomut\fR (ya da \fB\N'45'e \fR\fIkomut\fR) seçeneği de kullanılır.   

.IP \fBo\fR 3
uzaktaki makinede bulunan \fBrsync\fR sunucusunu ve bir uzak kabuk uygulamasını kullanarak, uzaktaki makineye yerel makineden kopyalama yapmak için. Bu çağrıda hedef dosya yolunun bir :: ayracı içermesi yanında \fB\N'45'\N'45'rsh=\fR\fIkomut\fR (ya da \fB\N'45'e \fR\fIkomut\fR) seçeneği de kullanılır.   

.IP \fBo\fR 3
uzaktaki makinede bulunan dosyaların listesini almak için. Bu işlem uzaktaki makineden kopyalama işlemindeki gibi ancak yerel hedefi belirtmeden yapılır.   

.PP

Tüm durumlarda (burada listelenenler dışında kalanlar dahil) kaynak ve hedef belirtimlerinden biri daima yerel olmalıdır (yani \fBrsync\fR ile iki uzak makine arasında işlem yapamazsınız). 

.SH AYARLAR
Kurulum işlemleri için README dosyasına bakınız.   

Kurduktan sonra, bir uzak kabuk üzerinden eriştiğiniz (veya \fBrsync\fR artalan kipi protokolü kullanarak eriştiğiniz) her makinede \fBrsync\fR kullanabilirsiniz. Uzak dosya aktarımları için, günümüzde \fBrsync\fR iletişimde \fBssh\fR kullanmasına rağmen öntanımlı olarak kullanacağı uzak kabuk \fBrsh\fR veya \fBremsh\fR gibi bir kabuk olarak da ayarlanabilir.   

Bundan başka \fB\N'45'e\fR komut satırı seçeneğinin argümanı olarak veya RSYNC_RSH ortam değişkenine atayarak da istediğiniz bir uzak kabuk uygulamasını belirtebilirsiniz.   

Yüksek derecede güvenlik istendiğinde ortak kanaat \fBssh\fR kullanmaktır.   

Yalnız, \fBrsync\fR\N'39'in hem yerel hem de uzak makine üzerinde kurulu olması gerektiğini unutmayın. 

.SH KULLANIMI
\fBrsync\fR\N'39'i \fBrcp\fR\N'39'yi nasıl kullanıyorsanız öyle kullanabilirsiniz. Biri uzak makine olmak üzere bir kaynak ve bir hedef belirtmelisiniz.   

Şüphesiz sözdizimini açıklamanın en kolay yolu bir örnek vermektir:   


.nf
rsync \N'45't *.c foo:src/
.fi   

Bu komut çalışma dizinindeki *.c kalıbı ile eşleşen tüm dosyaları foo makinesinin src dizinine kopyalayacaktır. Bu dosyalardan uzak makinede mevcut olanları için \fBrsync\fR uzak güncelleme protokolü kullanılarak sadece farklar gönderilir. Bu konuda daha ayrıntılı bilgi için teknik rapora bakınız.   


.nf
rsync \N'45'avz foo:src/bar /data/tmp
.fi   

Bu komut, foo makinesindeki src/bar dizinindeki tüm dosyaları varsa altdizinlerdekileri de içererek yerel makinenin /data/tmp dizinine kopyalar. Dosyaların, sembolik bağların, aygıtların, özniteliklerinin, izinlerinin, sahiplerinin, v.s.sinin korunmasını sağlayan "arşiv" kipinde aktarım yapılır. Buna ek olarak, aktarım işleminin verileri içeren kısımlarının boyutunu küçültmek için sıkıştırma uygulanır.   


.nf
rsync \N'45'avz foo:src/bar/ /data/tmp
.fi   

Kaynak yolunun sonuna eklenen / işareti hedefte ek bir dizin oluşturmaktan kaçınılması davranışını değiştirir. Sona eklenen bu / işaretinin "dizini ismiyle kopyala" davranışının zıddı olarak "bu dizinin içeriğini kopyala" anlamına geldiğini düşünebilirsiniz, fakat her iki durumda da dizinin öznitelikleri hedefteki dizine kopyalanacaktır. Başka bir deyişle, aşağıdaki komutların her biri ile dosyalar aynı şekilde, /dest/foo dizininin öznitelikleri ayarlanarak kopyalanır:   


.nf
rsync \N'45'av /src/foo /dest
rsync \N'45'av /src/foo/ /dest/foo
.fi   

Ayrıca, \fBrsync\fR\N'39'i sadece yerel kipte de kullanabilirsiniz. Bu durumda hedef ve kaynak dosya yollarının ikisi de isimlerinde \N'39':\N'39' içermeyecektir. Kopyalama işlemi güçlendirilmiş bir kopyalama komutu verilmiş gibi yürüyecektir.   


.nf
rsync somehost.mydomain.com::
.fi   

Bu komut, somehost.mydomain.com makinesindeki kullanılabilecek tüm anonim \fBrsync\fR modüllerini listeleyecektir. (Daha fazla bilgi için aşağıdaki bölümlere bakınız.) 

.SH İLERİ DÜZEY KULLANIM
Bir uzak makineden çok sayıda dosya için istek yaparken aralarında boşluk bırakılmış kaynak dosya yollarını tırnak içine alarak belirtebilirsiniz. Bazı örnekler:   


.RS 1
.nf
rsync makine::\N'39'modülismi/dizin1/dosya1 modülismi/dizin2/dosya2\N'39' /hedef
.fi
.RE   

Bu komut, bir \fBrsync\fR sunucusundan /hedef dizinine dosya1 ve dosya2 dosyalarını kopyalayacaktır. Her argüman aynı "modülismi/" önekini içermeli ve arada sadece bir boşluk karakteri bulunmalıdır. Diğer tüm boşlukların dosya isimlerine ekleneceği varsayılır.   


.nf
rsync \N'45'av makine:\N'39'dizin1/dosya1 dizin2/dosya2\N'39' /hedef
.fi   

Bu komut dosya1 ve dosya2 dosyalarını /hedef dizinine kopyalayacaktır. Sözcük ayırma işlemi uzak kabuk tarafından yapılır, yani eğer sözcük ayırma gerçekleşmemişse, bunun sebebi uzak kabuğun bu işlem için yapılandırılmamış olmasıdır (nedendir bilinmez, çok yaygındır). İsmi boşluk içeren bir dosyayı kopyalamak isterseniz, ya bunu uzak kabuğun anlayabileceği bir yöntemle yapmalı ya da boşlukların yerine dosya ismi kalıpları kullanmalısınız. İki örnek:   


.nf
rsync \N'45'av makine:\N'39'isminde\\ boşluk\\ olan\\ dosya\N'39' /hedef
rsync \N'45'av makine:isminde?boşluk?olan?dosya /hedef
.fi   

İkinci örnekte, eşleşmeyen kalıpları kabuğunuzun anlayacağı varsayılmıştır. Bu takdirde bunları tersbölü öncelemeli hale getirecektir. 

.SH BİR RSYNC SUNUCUSUNA BAĞLANMAK
Dosya aktarımı için \fBrsync\fR\N'39'i bir uzak kabuk olmaksızın da kullanmak mümkündür. Bu durumda, TCP 873. port üzerinde çalışan bir uzak \fBrsync\fR sunucusuna bağlanacaksınız.   

RSYNC_PROXY ortam değişkenine bir makine:port çifti belirterek bir vekil sunucu üzerinden de bağlantı sağlayabilirsiniz. Burada, vekil sunucunuzun yapılandırmasının 873. port üzerinden bağlantıya izin verdiğinden emin olmalısınız.   

rsync\N'39'i bu yöntemle kullanmanın bir uzak kabuk üzerinden kullanmaya farkları şunlardır:   

.IP \fBo\fR 3
ya makine ismini dosya yolundan ayırmak için tek bir : yerine :: kullanırsınız ya da bir rsync:// URL biçimini kullanırsınız.   

.IP \fBo\fR 3
uzak sunucu bağlandığınızda günün iletisini basabilir.   

.IP \fBo\fR 3
uzak sunucu için bir dosya yolu belirtmezseniz, sunucu üzerinde erişilebilir olan dosya yollarının listesini alırsınız.   

.IP \fBo\fR 3
bir yerel hedef belirtmezseniz, uzak sunucu istediğiniz dosyaların bir listesini yollar.   

.PP

Uzak sunucu üzerindeki bazı dosya depoları kimlik doğrulaması gerektirebilir. Böyle bir durumda bağlanmak istediğinizde sizden parola istenecektir. Parola istemi almamak için parolanızı RSYNC_PASSWORD ortam değişkenine kaydedebileceğiniz gibi, \fB\N'45'\N'45'password\N'45'file\fR seçeneğini de kullanabilirsiniz. Bu kullanım \fBrsync\fR\N'39'i bir betik ile kullandığınız durumlarda yararlıdır.   

.br
.ns
.TP 
\fBUyarı:\fR
Bazı sistemlerde ortam değişkenlerini tüm kullanıcılar görebilmektedir. Bu tür sistemlerde \fB\N'45'\N'45'password\N'45'file\fR seçeneğinin tercih edilmesi önerilir. 

.PP 

.SH BİR RSYNC SUNUCUSUNA BİR UZAK KABUKTAN BAĞLANMAK 
Bağlantı için \fBssh\fR veya \fBrsh\fR kullanarak ve dosya aktarımını \fBrsync\fR sunucusunun yeteneklerinden yararlanarak yapmanın mümkün olması bazan kullanışlı olabilmektedir. Özellikle, bir uzak makineye \fBssh\fR üzerinden bağlanmak istediğinizde (şifreleme için ya da güvenlik duvarından geçebilmek için) ama bunun yanında \fBrsync\fR sunucusunun yeteneklerinden de yararlanmak istediğiniz durumlarda bu yararlıdır (\fBBİR UZAK KABUKTAN BİR RSYNC SUNUCUSU ÇALIŞTIRMAK\fR bölümüne bakınız).   

Kullanıcı açısından, \fBrsync\fR\N'39'in bu yöntemle kullanılması, komut satırından uzak kabuk uygulamasının \fB\N'45'\N'45'rsh=\fR\fIkomut\fR ile belirtilmesi dışında bir \fBrsync\fR sunucusuna bağlanmaktan farksızdır. (Burada, RSYNC_RSH ortam değişkenine bir atama yaparak uzak kabuk uygulaması belirtmek, beklenen işlevselliği sağlamayacaktır.)   

Uzak kabuk kullanıcısını, \fBrsync\fR sunucu kullanıcısından ayırmak için uzak kabuk komutunda \N'39'\fB\N'45'l \fR\fIkullanıcı\fR\N'39' seçeneğini kullanabilirsiniz:   


.nf
rsync \N'45'av \N'45'\N'45'rsh="ssh \N'45'l ssh\N'45'kullanıcısı" \\
\    rsync\N'45'kullanıcısı@makine::modül[/yol] yerel\N'45'yol
.fi   

"ssh\N'45'kullanıcısı" ssh seviyesinde kullanılmalıdır; "rsync\N'45'kullanıcısı" ise uzak makinenin rsyncd.conf dosyasından sınanacaktır. 

.SH BİR RSYNC SUNUCUSU ÇALIŞTIRMAK
Bir \fBrsync\fR sunucusu bir yapılandırma dosyası kullanılarak yapılandırılır. Daha ayrıntılı bilgi için \fBrsyncd.conf(5)\fR kılavuz sayfasına bakınız. \fBrsync\fR\N'39'i bir uzak kabuk uygulaması üzerinden ve root olarak çalıştırmadıkça, öntanımlı olarak /etc/rsyncd.conf dosyası kullanılır. Aksi takdirde, uzak makinedeki çalışma dizininde (genellikle $HOME) bulunan rsyncd.conf öntanımlıdır. 

.SH BİR UZAK KABUKTAN BİR RSYNC SUNUCUSU ÇALIŞTIRMAK
\fBrsync\fR sunucusu yapılandırma dosyası ile ilgili tüm bilgiyi \fBrsyncd.conf(5)\fR kılavuz sayfasında bulabilirsiniz.   

Uzak kullanıcı root (\fBchroot\fR, setuid/setgid, v.s.) olmadıkça bazı yapılandırma seçenekleri kullanılamaz olacaktır. Eğer \fBrsync\fR sunucusunu bir uzak kabuk uygulaması üzerinden kullanıyorsanız, services dosyasında \fBrsync\fR sunucu portunun bulunması ya da \fBinetd\fR\N'39'nin yapılandırılması gerekli değildir.   

Bir tek kullanımlık ssh anahtarı dışında bir \fBrsync\fR sunucusu çalıştırmak için \fBrsyncd.conf(5)\fR kılavuz sayfasındaki bu bölüme bakınız. 

.SH ÖRNEKLER
Burada \fBrsync\fR kullanımıyla ilgili bazı örnekler bulacaksınız.   

Büyük MS  Word dosyaları ve eposta dizinlerinden oluşan eşimin ev dizinini yedeklemek için şöyle bir \fBcron\fR işi çalıştırıyorum:   


.nf
sync \N'45'Cavz . arvidsjaur:backup
.fi   

Her gece bir PPP bağlantısı üzerinden bu dizini ayrıca, kendi makinemin arvidsjaur dizinine kopyalıyorum.   

Samba kaynak ağacını eşzamanlı tutmak için şu Makefile hedeflerini kullanıyorum:   


.nf
get:
\        rsync \N'45'avuzb \N'45'\N'45'exclude \N'39'*~\N'39' samba:samba/ .
put:
\        rsync \N'45'Cavuzb . samba:samba/
sync: get put
.fi   

Bu sayede bağlantının öbür ucundaki bir CVS diziniyle benimkini güncellememi sağlıyor. Uzak makinede bir takım CVS işlemleri yaptıktan sonra uzak CVS protokolü ile bunları kendi makinemde güncellemek gecikmelerden dolayı pek verimli olmuyor.   

"eski" ve "yeni" ftp sitelerim arasında bir dizini şu komutla yansılıyorum:   


.RS 2
.nf
rsync \N'45'az \N'45'e ssh \N'45'\N'45'delete ~ftp/pub/samba nimbus:"~ftp/pub/tridge"
.fi
.RE   

Bu komut her saat başı \fBcron\fR\N'39'dan çalıştırılıyor. 

.SH ÖZETLE SEÇENEKLER
Burada \fBrsync\fR\N'39'de kullanılabilen seçeneklerin bir özetine yer verilmiştir (\fBrsync \N'45'\N'45'help\fR komutu bu listeyi çıktılar). Bu seçenekler bir sonraki bölümde ayrıntılı olarak açıklanmıştır.   


.RS 1
.nf
\N'45'v, \N'45'\N'45'verbose             çıktı daha ayrıntılı olur
\N'45'q, \N'45'\N'45'quiet               hatalar dışında bilgi verilmez
\N'45'c, \N'45'\N'45'checksum            sadece toplam sağlamaya bakılır, zaman ve
\                          boyut değişikliklerine bakılmaz
\N'45'a, \N'45'\N'45'archive             arşiv kipi; \N'45'rlptgoD (\N'45'H\N'39'sız) ile aynı
\N'45'r, \N'45'\N'45'recursive           dizinlerin alt dizinlerine inilir
\N'45'R, \N'45'\N'45'relative            göreli dosya yolları kullanılır
\    \N'45'\N'45'no\N'45'relative         \N'45'\N'45'relative kapatılır
\    \N'45'\N'45'no\N'45'implied\N'45'dirs     \N'45'R uygulanmış dizinler gönderilmez
\N'45'b, \N'45'\N'45'backup              yedekleme yapılır (\N'45'\N'45'suffix ve
\                          \N'45'\N'45'backup\N'45'dir seçeneklerine bakın)
\    \N'45'\N'45'backup\N'45'dir=DİZİN    sadece belirtilen dizinin içeriği
\                          yedeklenir
\    \N'45'\N'45'suffix=SONEK        yedekleme soneki
\                          (\N'45'\N'45'backup\N'45'dir yoksa ~ öntanımlıdır)
\N'45'u, \N'45'\N'45'update              hedeftekiler daha yeniyse bu dosyalar
\                          atlanır
\    \N'45'\N'45'inplace             hedef dosyaları yerinde günceller
\N'45'd, \N'45'\N'45'dirs                altdizinlere inmeden dizinleri aktarır
\N'45'l, \N'45'\N'45'links               sembolik bağları sembolik bağ olarak
\                          kopyalar
\N'45'L, \N'45'\N'45'copy\N'45'links          sembolik bağ değil bağın son hedefi
\                          kopyalanır
\    \N'45'\N'45'copy\N'45'unsafe\N'45'links   sadece güvensiz sembolik bağlar
\                          dönüştürülür
\    \N'45'\N'45'safe\N'45'links          ağacın dışını hedefleyen sembolik
\                          bağlar yoksayılır
\N'45'H, \N'45'\N'45'hard\N'45'links          sabit bağlar korunur
\N'45'K, \N'45'\N'45'keep\N'45'dirlinks       sembolik bağlı dizinler alıcıda dizin
\                          yapılır
\N'45'p, \N'45'\N'45'perms               izinler korunur
\N'45'o, \N'45'\N'45'owner               sahip korunur (sadece root)
\N'45'g, \N'45'\N'45'group               grup korunur
\N'45'D, \N'45'\N'45'devices             aygıtlar korunur (sadece root)
\N'45't, \N'45'\N'45'times               zamanlar korunur
\N'45'O, \N'45'\N'45'omit\N'45'dir\N'45'times      zamanlar korunurken dizinler bunun
\                          dışında tutulur
\N'45'S, \N'45'\N'45'sparse              seyrek dosyaları en verimli şekilde
\                          elde eder
\N'45'n, \N'45'\N'45'dry\N'45'run             işlemi yapıyormuş gibi gösterir ama yapmaz
\N'45'W, \N'45'\N'45'whole\N'45'file          dosyaları tamamen kopyalar
\                          (rsync algoritması ile farkları değil)
\    \N'45'\N'45'no\N'45'whole\N'45'file       daima arttırımlı \fBrsync\fR algoritması
\                          kullanılır
\N'45'x, \N'45'\N'45'one\N'45'file\N'45'system     dosya sistemi sınırlarının dışına çıkılmaz
\N'45'B, \N'45'\N'45'block\N'45'size=BOYUT    sabit bir blok boyunda sağlama toplamına
\                          zorlar
\N'45'e, \N'45'\N'45'rsh=KOMUT           kullanılacak uzak kabuk uygulaması
\                          belirtilir
\    \N'45'\N'45'rsync\N'45'path=UYGULAMA uzak makinede rsnc\N'39'in çalıştıracağı
\                          uygulama
\    \N'45'\N'45'existing            sadece hedefte mevcut olan dosyalar
\                          güncellenir
\    \N'45'\N'45'ignore\N'45'existing     hedefte mevcut olan dosyalar yoksayılır
\    \N'45'\N'45'remove\N'45'sent\N'45'files   alınan dosyalar/sembolik bağlar
\                          göndericide silinir
\    \N'45'\N'45'del                 \N'45'\N'45'delete\N'45'during ile aynı
\    \N'45'\N'45'delete              göndericide olmayan dosyalar alıcıda
\                          silinir
\    \N'45'\N'45'delete\N'45'before       alıcıda aktarım öncesi silme yapılır
\                          (öntanımlı)
\    \N'45'\N'45'delete\N'45'during       alıcıda aktarım sırasında silme yapılır
\    \N'45'\N'45'delete\N'45'after        alıcıda aktarım sonrası silme yapılır
\    \N'45'\N'45'delete\N'45'excluded     alıcıda ayrıca dışlanmış dosyalar da
\                          silinir
\    \N'45'\N'45'ignore\N'45'errors       G/Ç hataları olsa da siler
\    \N'45'\N'45'force               dizinler boş olmasa bile silinir
\    \N'45'\N'45'max\N'45'delete=SAYI     SAYIdan fazla dosya silinmez
\    \N'45'\N'45'max\N'45'size=BOYUT      BOYUTtan daha büyük dosyalar aktarılmaz
\    \N'45'\N'45'partial             kısmen aktarılmış dosyalar tutulur
\    \N'45'\N'45'partial\N'45'dir=DİZİN   kısmen aktarılmış dosyalar DİZİNde tutulur
\    \N'45'\N'45'delay\N'45'updates       güncellenecek tüm dosyalar sona bırakılır
\    \N'45'\N'45'numeric\N'45'ids         kullanıcı/grup kimliklerini isimlerle
\                          eşleştirmez
\    \N'45'\N'45'timeout=SÜRE        G/Ç zamanaşımını SÜRE saniyeye ayarlar
\N'45'I, \N'45'\N'45'ignore\N'45'times        zaman ve boyut bakımından eşleşen dosyalar
\                          atlanmaz
\    \N'45'\N'45'size\N'45'only           boyutları aynı olan dosyalar atlanır
\    \N'45'\N'45'modify\N'45'window=SAYI  doğruluğu arttırmak için değişiklik
\                          zamanları karşılaştırılır
\N'45'T, \N'45'\N'45'temp\N'45'dir=DİZİN      geçici dosyaları DİZİNde oluşturur
\N'45'y, \N'45'\N'45'fuzzy               hedefte dosya yoksa benzerini bulur
\    \N'45'\N'45'compare\N'45'dest=DİZİN  alınan dosyaları ayrıca DİZİNdekilerle
\                          karşılaştırır
\    \N'45'\N'45'link\N'45'dest=DİZİN     değişmediyse DİZİNdeki dosyalara sabit bağ
\N'45'z, \N'45'\N'45'compress            aktarım sırasında dosya verisi sıkıştırılır
\N'45'C, \N'45'\N'45'cvs\N'45'exclude         dosyalar CVS\N'39'nin yaptığı gibi yoksayılır
\N'45'f, \N'45'\N'45'filter=KURAL        bir dosya süzme kuralı ekler
\N'45'F                        \N'45'\N'45'filter=\N'39'dir\N'45'merge /.rsync\N'45'filter\N'39' ve
\                          yinelemeli: \N'45'\N'45'filter=\N'39'\N'45' .rsync\N'45'filter\N'39'
\                          ile aynı
\    \N'45'\N'45'exclude=KALIP       KALIP ile eşleşen dosyalar dışlanır
\    \N'45'\N'45'exclude\N'45'from=DOSYA  dışlama kalıpları DOSYAdan okunur
\    \N'45'\N'45'include=KALIP       KALIP ile eşleşen dosyalar dışlanmaz
\    \N'45'\N'45'include\N'45'from=DOSYA  dışlanmayan kalıplar DOSYAdan okunur
\    \N'45'\N'45'files\N'45'from=DOSYA    aktarılacak dosyaların isimlerinin listesi
\                          DOSYAdan okunur
\N'45'0, \N'45'\N'45'from0               *from seçeneklerindeki dosya listeleri boş
\                          karakter sonlandırmalı kabul edilir
\    \N'45'\N'45'version             sürüm numarasını basar
\    \N'45'\N'45'port=PORT           başka bir port belirtmek için
\    \N'45'\N'45'blocking\N'45'io         uzak kabukta engellemeli G/Ç kullanılır
\    \N'45'\N'45'no\N'45'blocking\N'45'io      engellemeli G/Ç öntanımlı olduğunda bunu
\                          iptal eder
\    \N'45'\N'45'stats               dosya aktarımı sırasında durum bilgileri
\                          verir
\    \N'45'\N'45'progress            aktarım sırasında gelişimi gösterir
\N'45'P                        \N'45'\N'45'partial \N'45'\N'45'progress ile aynı
\N'45'i, \N'45'\N'45'itemize\N'45'changes     tüm güncellemeler için bir değişiklik
\                          özeti çıktılar
\    \N'45'\N'45'log\N'45'format=BİÇİM    aktarımları belirtilen biçimde günlükler
\    \N'45'\N'45'password\N'45'file=DOSYA parola DOSYAdan okunur
\    \N'45'\N'45'list\N'45'only           dosyaları kopyalamaz, sadece listeler
\    \N'45'\N'45'bwlimit=KBPS        saniyede kBayt cinsinden G/Ç band genişliği
\    \N'45'\N'45'write\N'45'batch=DOSYA   bir betikli güncellemeyi DOSYAya yazar
\    \N'45'\N'45'read\N'45'batch=DOSYA    bir betikli güncellemeyi DOSYAdan okur
\    \N'45'\N'45'checksum\N'45'seed=SAYI  blok/dosya sağlama toplamı tohumunu ayarlar
\N'45'4, \N'45'\N'45'ipv4                IPv4 tercih edilir
\N'45'6, \N'45'\N'45'ipv6                IPv6 tercih edilir
\N'45'h, \N'45'\N'45'help                bu yardım iletisini gösterir
\  
.fi
.RE

\fBrsync\fR ayrıca bir artalan süreci olarak da çalıştırılabilir. Bu durumda şu seçenekleri kabul eder:   


.RS 1
.nf
\    \N'45'\N'45'daemon              bir rsync artalan süreci olarak çalışır
\    \N'45'\N'45'address=ADRES       belirtilen adres kullanılır
\    \N'45'\N'45'bwlimit=KBPS        saniyede kBayt cinsinden G/Ç band genişliği
\    \N'45'\N'45'config=DOSYA        rsyncd.conf yerine kullanılacak DOSYA
\    \N'45'\N'45'no\N'45'detach           üst süreçten ayrık çalışmaz
\    \N'45'\N'45'port=PORT           belirtilen PORTu dinler
\N'45'v, \N'45'\N'45'verbose             ayrıntı düzeyini arttırır
\N'45'4, \N'45'\N'45'ipv4                IPv4 tercih edilir
\N'45'6, \N'45'\N'45'ipv6                IPv6 tercih edilir
\N'45'h, \N'45'\N'45'help                bu yardım iletisini gösterir
.fi
.RE

.SH AÇIKLAMALARIYLA SEÇENEKLER 
\fBrsync\fR GNU uzun seçenekler paketini kullanır. Çoğu komut satırı seçeneği hem kısa hem de uzun seçenek içerir. Bazı seçenekler ise sadece uzun seçeneklerden oluşur. \N'96'=\N'39' işareti içeren seçeneklerdeki parametreler isteğe bağlıdır; \N'96'=\N'39' yerine boşluk kullanılabilir.   

.br
.ns
.TP 
\fB\N'45'h\fR, \fB\N'45'\N'45'help\fR
\fBrsync\fR tarafından kabul edilen seçenekleri açıklayan kısa bir yardım iletisi basar.       

.TP 
\fB\N'45'\N'45'version\fR
\fBrsync\fR sürüm numarasını basar ve çıkar.       

.TP 
\fB\N'45'v\fR, \fB\N'45'\N'45'verbose\fR
Bu seçenek aktarım sırasında verilen bilgi miktarını arttırır. \fBrsync\fR öntanımlı olarak sessiz çalışır. Tek \fB\N'45'v\fR belirtildiğinde, hangi dosyaların aktarıldığını gösterip sonunda bir özet basar. İki \fB\N'45'v\fR belirtildiğinde atlanan dosyaları gösterir ve sonunda daha fazla bilgi verir. İkiden fazla \fB\N'45'v\fR kullanımı sadece \fBrsync\fR hata ayıklaması yapıyorsanız anlamlıdır.       

Aktarılan dosya isimlerinin çıktılanmasında \fB\N'45'\N'45'log\N'45'format\fR seçeneğinin öntanımlı olarak "%n%L" ile kullanıldığı varsayılarak sadece dosyaların isimleri ve varsa sembolik bağlar hedefleri ile belirtilir. Tek \fB\N'45'v\fR seviyesinden bir ayrıntıda bir dosyanın öznitelikleri değişmişse bu gösterilmez. Değiştirilen özniteliklerin öğelere göre listelenmesi isterseniz (\fB\N'45'\N'45'itemize\N'45'changes\fR seçeneğiyle ya da \fB\N'45'\N'45'log\N'45'format\fR seçeneğine "%i" ekleyerek), istemcideki çıktıda değiştirilen tüm öğelerin ayrıntı düzeyi arttırılır. Daha fazla bilgi için \fB\N'45'\N'45'log\N'45'format\fR seçeneğinin açıklamasına bakınız.       

.TP 
\fB\N'45'q\fR, \fB\N'45'\N'45'quiet\fR
Bu seçenek aktarım sırasında verilen bilgi miktarını azaltır. Özellikle uzak sunucudaki bilgi iletileri baskılanır. Bu seçenek \fBrsync\fR\N'39'i \fBcron\fR\N'39'dan çalıştırırken yararlıdır.       

.TP 
\fB\N'45'I\fR, \fB\N'45'\N'45'ignore\N'45'times\fR
Normalde \fBrsync\fR hedefte de aynı boyutta ve aynı değişiklik zamanına sahip dosyalar varsa bunları atlayacaktır. Bu seçenek bu "hızlı sınama" davranışını kapatır.       

.TP 
\fB\N'45'\N'45'size\N'45'only\fR
Normalde \fBrsync\fR hedefte de aynı boyutta ve aynı değişiklik zamanına sahip dosyalar varsa bunları atlayacaktır. Bu seçenekle, dosyaların zamanlarına bakılmaksızın hedefte de aynı boyutta iseler aktarılmazlar. Zaman değerlerinin doğru tutulmadığı başka bir yansılama sistemini kullandıktan sonra \fBrsync\fR\N'39'i kullanmaya başlayacaksanız bu seçenek yararlıdır.       

.TP 
\fB\N'45'\N'45'modify\N'45'window=\fR\fIsayı\fR
İki zaman değerini karşılaştırırken, fark \fIsayı\fR\N'39'ya eşitse \fBrsync\fR bu değerleri eşit kabul eder. Bu fark normalde 0 dır (tam eşitlik), ancak bu farkı bazı durumlarda daha büyük bir değere ayarlamak daha yararlıdır. Örneğin, MS Windows FAT dosya sistemi (zaman değerleri 2 saniyelik çözünürlüğe sahiptir) taraflardan biri olduğunda  \fB\N'45'\N'45'modify\N'45'window=1\fR yararlıdır (1 saniyelik farklara izin vermek).       

.TP 
\fB\N'45'c\fR, \fB\N'45'\N'45'checksum\fR
Bu seçenek göndericiyi aktarımdan önce tüm dosyaları 128 bitlik MD4 sağlama toplamını kullanarak sınamaya zorlar. Sağlama toplamı doğrudan alıcıda sınanır ve mevcut olanlar arasında aynı sağlama toplamlı, aynı boyutlu ve aynı isimli olanlar aktarılmaz. Bu seçenek aktarım işlemini oldukça yavaşlatabilir.       

.TP 
\fB\N'45'a\fR, \fB\N'45'\N'45'archive\fR
Bu seçenek \fB\N'45'rlptgoD\fR seçeneklerine eşdeğerdir. Alt dizinlere inerek işlem yapılmasını ve hemen hemen herşeyin korunmasını istemenin en kestirme yoludur; bir şey dışında: \fB\N'45'\N'45'files\N'45'from\fR belirtilmişse \fB\N'45'r\fR uygulanmayacaktır.       

Çok sayıda bağlı dosyanın varlığı pahalıya mal olacağından \fB\N'45'a\fR seçeneği sabit bağları korumaz. Bunu istiyorsanız \fB\N'45'H\fR seçeneğini ayrıca belirtmelisiniz.       

.TP 
\fB\N'45'r\fR, \fB\N'45'\N'45'recursive\fR
Bu seçenek alt dizinlerinde ardışık olarak kopyalanmasını sağlar. Ayrıca  \fB\N'45'\N'45'dirs\fR (\fB\N'45'd\fR) seçeneğine de bakınız.       

.TP 
\fB\N'45'R\fR, \fB\N'45'\N'45'relative\fR
Göreli dosya yolları kullanılır. Yani, komut satırının gönderici kısmında belirtilen dosya yolunun son parçası değil, dosya yolunun tamamı kopyalanır. Bu seçenek aynı anda çok sayıda dizini göndermek için yararlıdır. Örneğin şöyle bir komut,      

.IP
.RS
.nf
rsync /foo/bar/foo.c remote:/tmp/
.fi
.RE
.IP


uzak makinede /tmp/foo.c dosyasını oluşturur. Bunun yerine şu komutu kullansaydınız,      

.IP
.RS
.nf
rsync \N'45'R /foo/bar/foo.c remote:/tmp/
.fi
.RE
.IP


uzak makinede /tmp/foo/bar/foo.c dosyası oluşturulacaktı (dosya yolunun tamamı kopyalanır). Karşıya yollanacak yol uzunluğunu sınırlamak için şöyle yapabilirsiniz:      

.IP
.RS
.nf
cd /foo
rsync \N'45'R bar/foo.c remote:/tmp/
.fi
.RE
.IP


Bu komut uzak makinede /tmp/bar/foo.c dosyasını oluşturur.       

.TP 
\fB\N'45'\N'45'no\N'45'relative\fR
\fB\N'45'\N'45'relative\fR seçeneğini iptal eder. Bu özellikle \fB\N'45'\N'45'files\N'45'from\fR seçeneğinin gerektiği durumlarda \fB\N'45'\N'45'relative\fR seçeneği uygulanmaksızın dosyaları işleme sokmakta yararlıdır.       

.TP 
\fB\N'45'\N'45'no\N'45'implied\N'45'dirs\fR
\fB\N'45'\N'45'relative\fR seçeneği ile birlikte kullanıldığında her dosya yolundaki dolaylı dizinler, aktarımın parçası olarak yinelenmez. Bu dosya aktarımını daha elverişli yaptığı gibi ayrıca dosya yolunun dolaylı parçalarında iki tarafta eşleşmeyen sembolik bağların varlığını mümkün kılar. Örneğin, "/path/foo/file" dosyasını \fB\N'45'R\fR ile aktarırsanız, hedefte "/path" ve "/path/foo" ile kaynağın dizin ve sembolik bağları tamamen eşleştirilecektir. \fB\N'45'\N'45'no\N'45'implied\N'45'dirs\fR seçeneğinin kullanımı bu dolaylı dizinlerin her ikisinin de atlanmasına yol açar. Yani, eğer "/path" bir makine üzerinde gerçek bir dizin, ancak diğer makinede bir sembolik bağ ise, \fBrsync\fR bunu değiştirmeye çalışmayacaktır.       

.TP 
\fB\N'45'b\fR, \fB\N'45'\N'45'backup\fR
Bu seçenekle, evvelce mevcut hedef dosyaların her aktarımında ya da silinmesinde bu dosyaların isimleri değiştirilir. Yedek dosyaların nereye gideceğini ve nasıl bir sonek alacaklarını \fB\N'45'\N'45'backup\N'45'dir\fR  ve \fB\N'45'\N'45'suffix\fR seçenekleri ile belirtebilirsiniz. Eğer \fB\N'45'\N'45'backup\N'45'dir\fR seçeneğini belirtmezseniz, \fB\N'45'\N'45'omit\N'45'dir\N'45'times\fR seçeneği etkin kılınacaktır.       

.TP 
\fB\N'45'\N'45'backup\N'45'dir=\fR\fIdizin\fR
\fB\N'45'\N'45'backup\fR seçeneği ile birlikte kullanıldığında bu seçenekle yedek dosyaların hangi dizinde saklanacağı belirtilebilir. Bu, arttırımlı yedekleme yaparken çok yararlıdır. Buna ek olarak \fB\N'45'\N'45'suffix\fR seçeneğini kullanarak bir yedek soneki de belirtebilirsiniz (aksi takdirde dosyalar belirtilen dizine kendi isimleri ile yedeklenir).       

.TP 
\fB\N'45'\N'45'suffix=\fR\fIsonek\fR
Bu seçenek \fB\N'45'\N'45'backup\fR (\fB\N'45'b\fR) ile kullanıldığında, belirtilen \fIsonek\fR öntanımlı yedekleme sonekinin yerine kullanılır. \fB\N'45'\N'45'backup\N'45'dir\fR belirtilmemişse, öntanımlı sonek \fB~\fR işaretidir, aksi takdirde boş bir dizgedir.       

.TP 
\fB\N'45'u\fR, \fB\N'45'\N'45'update\fR
Bu seçenek, hedefte mevcut olan bir dosyanın değişiklik zamanının kaynak dosyanınkinden daha yeni olduğu durumda atlanmasını sağlar. (Eğer hedef dosyanın değişiklik zamanı kaynağınkiyle aynıysa, ama boyutları farklıysa güncelleme yapılacaktır.)     

\N'45'\N'45'update seçeneğinin şu anki gerçekleniminde gönderici ve alıcı arasında dosya biçimlerinde bir fark varsa, bu, güncelleme için tarihlerden daha önemli olarak ele alınır. Başka bir deyişle, hedef bir dosyaya sahipken, kaynak bir dizin veya bir sembolik bağa sahipse, aktarım dosyalarını zaman değerlerine bakılmaksızın yapılır. Bu davranış ileride değişebilir (bu konuda bir fikriniz varsa, eposta listesinde bunu açıklamaktan çekinmeyin).       

.TP 
\fB\N'45'\N'45'inplace\fR
Bu seçenek \fBrsync\fR\N'39'in dosyanın yeni bir kopyasının oluşturulmamasına ve yerine taşınmamasına sebep olur. Bunun yerine \fBrsync\fR mevcut dosyanın üzerine yazacaktır,yani \fBrsync\fR algoritması ağ yükünü tamamen azaltmayı başaramaz (henüz veriyi uyumlu sıralamayı denemediğinden). Buna bir istisna, \fBrsync\fR yedek dosyaları aktarımda temel dosya olarak kullanma yeterliğinde olduğundan, seçeneğin \fB\N'45'\N'45'backup\fR ile birlikte kullanılmasıdır.     

Bu seçenek blok temelli değişiklikler olan ya da sonuna ekleme yapılan çok büyük dosyalarla, disk ve ağ bakımından sınırlı sistemlerde yararlıdır.     

Bu seçenek \fB\N'45'\N'45'partial\fR (kesilmeye uğramış bir aktarımda dosya silinmez) seçeneğini uygular, fakat \fB\N'45'\N'45'partial\N'45'dir\fR  ve \fB\N'45'\N'45'delay\N'45'updates\fR seçenekleriyle çelişir.  \fBrsync\fR 2.6.4 öncesinde  \fB\N'45'\N'45'inplace\fR ayrıca \fB\N'45'\N'45'compare\N'45'dest\fR ve \fB\N'45'\N'45'link\N'45'dest\fR seçenekleriyle de çelişiyordu.     

.RS 

.br
.ns
.TP 
\fBUyarı:\fR
Dosya verisi aktarım sırasında kararsız bir durumda olacaktır (ve büyük ihtimalle aktarım kesintiye uğradıktan sonra da), dolayısıyla, kullanılmakta olan dosyaları bu seçeneği kullanarak güncellememelisiniz. Ayrıca, alıcı kullanıcının yazma izni olmayan dosyaların \fBrsync\fR tarafından yerinde güncellenemeyeceğini de unutmayın.     

.PP
.RE
.IP


.TP 
\fB\N'45'd\fR, \fB\N'45'\N'45'dirs\fR
Gönderen tarafın saptanan her dizini içereceğini söyler. \fB\N'45'\N'45'recursive\fR seçeneğinin tersine, bir dizinin içeriği, dizin komut satırında "\fB.\fR" ya da bir bölü çüzgisi ile biten bir isim ("foo/" gibi) ile belrtilmedikçe kopyalanmaz. Bu seçenek ya da \fB\N'45'\N'45'recursive\fR seçeneği olmaksızın, \fBrsync\fR saptadığı tüm dizinleri atlayacaktır (ve herbiri için bir ileti çıktılayacaktır).       

.TP 
\fB\N'45'l\fR, \fB\N'45'\N'45'links\fR
Saptanan her sembolik bağ hedefte oluşturulur.       

.TP 
\fB\N'45'L\fR, \fB\N'45'\N'45'copy\N'45'links\fR
Sembolik bağ saptandığında sembolik bağ değil, hedefindeki dosya kopyalanır. \fBrsync\fR\N'39'in eski sürümlerinde, bu seçenek ayrıca alıcı tarafa, dizin sembolik bağı gibi sembolik bağları izlemesini söylemek gibi bir yan etkiye sahipti. Günümüzde ise, \fBrsync\fR, böyle bir durumda, bu ek davranışı sağlamak için sizin \fB\N'45'\N'45'keep\N'45'dirlinks\fR (\fB\N'45'K\fR) seçeneğini belirtmenizi gerektirir. Buna tek istisna, \fB\N'45'K\fR seçeneğini anlayacak çok eski bir \fBrsync\fR ile dosyaların gönderilmesidir \N'45'\N'45' bu durumda \fB\N'45'L\fR seçeneği daha eski bir \fBrsync\fR ile hala \fB\N'45'K\fR seçeneğinin yan etkisine sahip olacaktır.       

.TP 
\fB\N'45'\N'45'copy\N'45'unsafe\N'45'links\fR
Bu seçenek \fBrsync\fR\N'39'e, kopyalanan ağacın dışındaki bir hedefi gösteren sembolik bağları kopyalamasını söyler. Mutlak sembolik bağlar ayrıca sıradan dosyalar olarak ele alınır, böylece bunlar \fB\N'45'\N'45'relative\fR kullanıldığında kaynak dosya yolunun kendindeki sembolik bağlar olurlar.       

.TP 
\fBsafe\N'45'links\fR
Bu seçenek \fBrsync\fR\N'39'e, kopyalanan ağacın dışındaki bir hedefi gösteren sembolik bağları yoksaymasını söyler. Bu seçeneğin \fB\N'45'\N'45'relative\fR seçeneğiyle birlikte kullanılması beklenmedik sonuçlara yol açabilir.       

.TP 
\fB\N'45'H\fR, \fB\N'45'\N'45'hard\N'45'links\fR
Bu seçenek \fBrsync\fR\N'39'e, sabit bağları aynı kaynak sistemdeki gibi yeniden oluşturmasını söyler. Bu seçenek olmaksızın sabit bağlar sıradan dosyalar olarak ele alınırlar.     

\fBrsync\fR\N'39'in, eğer bağın her iki parçası da dosya listesi ile gönderilmişse, sabit bağları saptayabileceğini unutmayın.     

Bu seçenek işlemi yavaşlatabilir, gerçekten bu işlevselliğe ihtiyacınız varsa kullanın.       

.TP 
\fB\N'45'K\fR, \fB\N'45'\N'45'keep\N'45'dirlinks\fR
Alıcı tarafta, bir sembolik bağ bir dizini gösteriyorsa, bunun gönderici tarafta bir dizinle eşleştiği varsayılacaktır.       

.TP 
\fB\N'45'W\fR, \fB\N'45'\N'45'whole\N'45'file\fR
Bu seçenekle arttırımlı \fBrsync\fR algortiması kullanılmaz ve bunun yerine dosya olduğu gibi gönderilir. Eğer kaynak ile hedef arasındaki band genişliği diskin band genişliğinden (özellikle disk, ağ dosya sisteminin bir parçası ise) daha yüksekse bu seçenek daha hızlı olabilir. Kaynak ve hedef,  yerel dosya yolları olarak belirtilmişse bu seçenek öntanımlıdır.       

.TP 
\fB\N'45'\N'45'no\N'45'whole\N'45'file\fR
\fB\N'45'\N'45'whole\N'45'file\fR öntanımlı olduğunda bu seçenek onu kapatır.       

.TP 
\fB\N'45'p\fR, \fB\N'45'\N'45'perms\fR
Bu seçenek \fBrsync\fR\N'39'e, izinleri hedefte aynı kaynak sistemdeki gibi belirlemesini söyler.     

Bu seçenek olmaksızın, her yeni dosya izinlerini kaynak dosyanın izinlerine ve alıcı taraftaki \fBumask\fR\N'39'a göre belirlenir, diğer tüm dosyalar (güncellenenler dahil)  kendi mevcut izinleriyle kalır (bu, \fBcp\fR gibi diğer dosya kopyalama araçlarında da böyledir).       

.TP 
\fB\N'45'o\fR, \fB\N'45'\N'45'owner\fR
Bu seçenek \fBrsync\fR\N'39'e, hedef dosyanın sahibini aynı kaynak dosyadaki gibi belirlemesini söyler. Çoğu sistemde sadece ayrıcalıklı kullanıcı dosya aidiyetini belirleyebilir. Öntanımlı olarak, koruma isim tarafında yapılır, fakat bazı durumlarda son çare olarak kullanıcı kimliği kullanılır. Bu konu \fB\N'45'\N'45'numeric\N'45'ids\fR seçeneğinin açıklamasında daha ayrıntılı incelenmiştir.       

.TP 
\fB\N'45'g\fR, \fB\N'45'\N'45'group\fR
Bu seçenek \fBrsync\fR\N'39'e, hedef dosyanın grubunu aynı kaynak dosyadaki gibi belirlemesini söyler. Alıcı tarafta \fBrsync\fR\N'39'i ayrıcalıklı kullanıcı çalıştırmıyorsa, sadece alıcının üyesi olduğu gruplar için bu yapılabilir. Öntanımlı olarak işlem grup ismine göre yapılır, ancak bazı durumlarda son çare olarak grup kimliği de kullanıabilir. Bu konu \fB\N'45'\N'45'numeric\N'45'ids\fR seçeneğinin açıklamasında daha ayrıntılı incelenmiştir.       

.TP 
\fB\N'45'D\fR, \fB\N'45'\N'45'devices\fR
Aktarılan karakter ve blok aygıtları hedefte yeniden oluşturulur. Bu seçeneği sadece ayrıcalıklı kullanıcı kullanabilir.       

.TP 
\fB\N'45't\fR, \fB\N'45'\N'45'times\fR
Bu seçenek \fBrsync\fR\N'39'e, dosyaları değişiklik zamanlarına göre aktarmasını ve bunları uzak sistemde güncellemesini söyler. Bu seçenek kullanılmazsa, eniyileme yüzünden değiştirilmemiş dosyaların dışlanması verimli olamaz; başka bir deyişle, \fB\N'45't\fR veya \fB\N'45'a\fR seçeneğinin yokluğu sonraki aktarımda \fB\N'45'I\fR kullanılmış gibi tüm dosyaların güncellenmesine yol açar (\fBrsync\fR algoritması güncellemeyi oldukça verimli yapacağından, eğer dosyalar gereçekten değişmemişse, \fB\N'45't\fR kullanmanız çok daha iyi olacaktır).       

.TP 
\fB\N'45'O\fR, \fB\N'45'\N'45'omit\N'45'dir\N'45'times\fR
Eğer \fBrsnc\fR değişiklik zamanlarını güncelliyorsa (\fB\N'45'\N'45'times\fR ile), bu seçenek belirtildiğinde dizinleri bunun dışında tutar. Eğer alıcı tarafta NFS dizinleri paylaştırıyorsa, \fB\N'45'O\fR seçeneğini kullanmak daha iyidir. Bu seçenek \fB\N'45'\N'45'backup\fR seçeneği \fB\N'45'\N'45'backup\N'45'dir\fR olmaksızın kullanılmış gibi sonuç verir.       

.TP 
\fB\N'45'n\fR, \fB\N'45'\N'45'dry\N'45'run\fR
Bu seçenek \fBrsync\fR\N'39'e, herhangi bir dosya aktarımı yapmamasını, sadece yapıyormuş gibi işlemleri raporlamasını söyler.       

.TP 
\fB\N'45'S\fR, \fB\N'45'\N'45'sparse\fR
Bu seçenekle  \fBrsync\fR, seyrek dosyaların hedefte daha az yer kaplayacak şekilde elde edilmesini sağlamaya çalışır.      

.RS 

.br
.ns
.TP 
\fBBilgi:\fR
Bu seçeneği hedefteki dosya sistemi Solaris "tmpfs" ise kullanmayın. Boş bölgelerin düzgünce atlanmasını sağlayamaz ve dosya sonunda bozulmalar oluşur.

.PP
.RE
.IP


.TP 
\fB\N'45'x\fR, \fB\N'45'\N'45'one\N'45'file\N'45'system\fR
Bu seçenek \fBrsync\fR\N'39'e, aktarım sırasında dosya sistemi sınırlarının dışına çıkmamasını söyler. Bu seçenek, tek bir dosya sisteminin içeriğini aktarmak için yararlıdır.       

.TP 
\fB\N'45'\N'45'existing\fR
Bu seçenek \fBrsync\fR\N'39'e, hedefte yeni dosya oluşturulmasını gerektirecek aktarımları yapmamasını sadece güncelleme yapmasını söyler.       

.TP 
\fB\N'45'\N'45'ignore\N'45'existing\fR
Bu seçenek \fBrsync\fR\N'39'e, hedefte mevcut olan dosyaları güncellememesini söyler.       

.TP 
\fB\N'45'\N'45'remove\N'45'sent\N'45'files\fR
Bu seçenek \fBrsync\fR\N'39'e, hedefte yeni oluşturulan dosyalarla içeriği güncellenenleri, gönderen taraftan silmesini söyler. Dizinler ve aygıtlar ile sadece öznitelikleri değiştirilmiş dosyalar silinmez.       

.TP 
\fB\N'45'\N'45'delete\fR
Bu seçenek \fBrsync\fR\N'39'e, hedefte olup kaynakta olmayan dosyaları hedeften silmesini söyler, fakat sadece dosyalar dizinleri ile belirtilmişse bu yapılır. Yani, \fBrsync\fR\N'39'den tüm dizini ("dir" veya "dir/" gibi) göndermesini istemeli, dizin içeriğini belirten dosya kalıpları ("dir/*" gibi) belirtmemelisiniz. Dosya kalıpları belirtildiğinde kalıp kabuk tarafından yorumlanır ve kabuk \fBrsync\fR\N'39'den dosyaları kapsayan dizini değil, tek tek dosyaları aktarmasını ister. Aktarımdan dışlanan dosyalardan biriyse, \fB\N'45'\N'45'delete\N'45'excluded\fR kullanılmamışsa ya da kurallar sadece gönderen tarafla eşleşenleri imliyorsa hedefte silinecek olanlar da dışlanır (\fBSÜZME KURALLARI\fR bölümündeki içerme/dışlama belirteçlerine bakınız).     

Alt dizinlere inilmiyorsa bu seçenek etkisizdir.     

Bu seçenek doğru şekilde kullanılmazsa tehlikeli olabilir. Önce \fB\N'45'\N'45'dry\N'45'run\fR (\fB\N'45'n\fR) seçeneğiyle silinecek dosyaları görüp, önemli dosyaların silinmeyeceğinden emin olduktan sonra asıl işlemi başlatmak çok daha iyidir.     

Gönderen tarafta bir G/Ç hatası saptandığında hedefteki dosya silme işlemi iptal edilir. Bu, gönderen tarafın alıcı taraftaki dosyaları tümden silmesi gibi geçici dosya sistemi hatalarına karşı (NFS hataları gibi) bir önlemdir. Bu davranışı \fB\N'45'\N'45'ignore\N'45'errors\fR seçeneğiyle iptal edebilirsiniz.     

\fB\N'45'\N'45'delete\fR seçeneği silme zamanını belirten \fB\N'45'\N'45'delete\N'45'*\fR seçenekleriyle, \fB\N'45'\N'45'delete\N'45'excluded\fR dahil, herhangi bir sorun olmaksızın birleştirilebilir. Ancak, silme zamanını belirten \fB\N'45'\N'45'delete\N'45'*\fR seçeneklerinden biri belirtilmemişse, \fBrsync\fR öntanımlı olarak \fB\N'45'\N'45'delete\N'45'before\fR algoritmasını seçer. İleri sürümlerde bu seçim \fB\N'45'\N'45'delete\N'45'during\fR algoritmasıyla değiştirilebilir. Ayrıca, \fB\N'45'\N'45'delete\N'45'after\fR seçeneğine de bakınız.       

.TP 
\fB\N'45'\N'45'delete\N'45'before\fR
Alıcı taraftaki dosya silme işlemlerinin aktarımın başlangıcında yapılmasını sağlar. Bu seçenek \fB\N'45'\N'45'delete\fR veya \fB\N'45'\N'45'delete\N'45'excluded\fR seçeneği ile birlikte silme zamanını belirten \fB\N'45'\N'45'delete\N'45'*\fR seçeneklerinden biri belirtilmemişse öntanımlıdır. Dosya silinmesi ile ilgili daha ayrıntılı bilgi için \fB\N'45'\N'45'delete\fR seçeneğinin açıklamasına bakınız.     

Aktarımın başında silme yapılması, eğer dosya sistemi doluluk bakımından sınırda ise ve ancak fazlalıkların kaldırılmasıyla dosya aktarımı mümkün olabilecekse yararlıdır. Ancak, bu seçenek aktarımın başlamasını geciktirdiğinden aktarımın zamanaşımına uğramasına (\fB\N'45'\N'45'timeout\fR belirtilmişse) sebep olabilir.       

.TP 
\fB\N'45'\N'45'delete\N'45'during\fR, \fB\N'45'\N'45'del\fR
Alıcı taraftaki dosya silme işlemlerinin aktarımı sırasında yapılmasını sağlar. Bu yöntem silme işleminin aktarımdan önce ve sonra yapıldığı algoritmalardan daha hızlıdır. Fakat ilk olarak \fBrsync\fR\N'39'in 2.6.4 sürümüyle kullanılabilir olmuştur. Dosya silinmesi ile ilgili daha ayrıntılı bilgi için \fB\N'45'\N'45'delete\fR seçeneğinin açıklamasına bakınız.       

.TP 
\fB\N'45'\N'45'delete\N'45'after\fR
Alıcı taraftaki dosya silme işlemlerinin aktarım tamamlandıktan sonra yapılmasını sağlar.  Eğer aktarımın bir parçası olarak dizin bazında yeni dosya birleşimleri yapıyorsanız ve bunların ihracının aktarımın silme fazında etkin olmasını istiyorsanız bu seçenek yararlı olacaktır. Dosya silinmesi ile ilgili daha ayrıntılı bilgi için \fB\N'45'\N'45'delete\fR seçeneğinin açıklamasına bakınız.       

.TP 
\fB\N'45'\N'45'delete\N'45'excluded\fR
Alıcı tarafta olup, gönderici tarafta olmayan dosyaların alıcı tarafta silinmesine ek olarak, alıcı tarafta dışlanan dosyalarında silinmesini sağlar (\fB\N'45'\N'45'exclude\fR seçeneğine bakınız). Alıcı tarafta tek tek dosyaların dışlanmasının bu yöntemle silinmesi ve silinmesi istenmeyen dosyaların bu seçenekten korunması ile ilgili bilgiler için \fBSÜZME KURALLARI\fR bölümüne bakınız. Dosya silinmesi ile ilgili daha ayrıntılı bilgi için ise \fB\N'45'\N'45'delete\fR seçeneğinin açıklamasına bakınız.       

.TP 
\fB\N'45'\N'45'ignore\N'45'errors\fR
G/Ç hataları olsa bile \fB\N'45'\N'45'delete\fR işleminin sürdürülmesini sağlar.       

.TP 
\fB\N'45'\N'45'force\fR
Gönderici tarafta olmayan ancak alıcı tarafta olan dizinlerin içleri dolu bile olsa silnmesini sağlar. Bu sadece \fB\N'45'\N'45'delete\fR seçeneği olmaksızın böyledir, çünkü silme işlemleri artık içiçe dizinler içeren bir tepe dizinin silinmesi şeklinde yapılmaktadır. Etkin olması için \fB\N'45'\N'45'recursive\fR seçeneği (\fB\N'45'a\fR tarafından uygulanır) gerekir.       

.TP 
\fB\N'45'\N'45'max\N'45'delete=\fR\fIsayı\fR
\fIsayı\fR\N'39'dan fazla dosya ya da dizin silinmez. Yansılama yapılırken çok büyük ağaçların yıkıma yol açmaması için yararlıdır.       

.TP 
\fB\N'45'\N'45'max\N'45'size=\fR\fIboyut\fR
\fIboyut\fR bayttan dha büyük dosyalar aktarılmaz. \fIboyut\fR belirtilirken, sonek olarak K, M, G gibi bayt çarpanları belirtilebileceği gibi kesirli değerler de belirtilebilir (\fB\N'45'\N'45'max\N'45'size=1.5m\fR gibi).       

.TP 
\fB\N'45'B\fR, \fB\N'45'\N'45'block\N'45'size=\fR\fIblokboyu\fR
\fBrsync\fR algoritmasında sabit bir blok boyunun kullanımına zorlar. Normalde, bu değer güncellenen her dosya için ayrı ayrı seçilir. Daha ayrıntılı bilgi için teknik rapora bakınız.       

.TP 
\fB\N'45'e\fR, \fB\N'45'\N'45'rsh=\fR\fIkomut\fR
Bu seçenek \fBrsync\fR\N'39'in yerel ve uzak kopyaların arasında iletişim için bir uzak kabuk uygulaması belirleyebilmeyi sağlar. Genelde, \fBrsync\fR öntanımlı olarak \fBssh\fR kullanacak şekilde yapılandırılır, fakat bir yerel ağda \fBrsh\fR kullanmayı da tercih edebilirsiniz.     

Bu seçenek [kullanıcı@]makine::modül/yol ile kullanılırsa, uzak makinedeki \fBrsync\fR sunucusunu çalıştırmak için belirtilen uzak kabuk \fIkomut\fR\N'39'u kullanılacak ve aktarım için uzak makinede çalışan \fBrsync\fR suncusunun soket bağlantısı değil, uzak kabuk bağlantısı kullanılacaktır. Ayrıca, yukarıdaki \fBBİR RSYNC SUNUCUSUNA BİR UZAK KABUKTAN BAĞLANMAK\fR bölümüne de bakınız.     

\fIkomut\fR içinde \fBrsync\fR sadece tek bir argümana izin verir. Örnek:     

.IP
.RS
.nf
\N'45'e "ssh \N'45'p 2234"
.fi
.RE
.IP


.RS 

.br
.ns
.TP 
\fBBilgi:\fR
\fBssh\fR kullanıcıları makineye özel bağlantı seçeneklerini kendi .ssh/config dosyası ile kişiselleştirebilirler.     

.PP
.RE
.IP


Uzak kabuk uygulamasını seçmek için RSYNC_RSH ortam değişkenini, \fB\N'45'e\fR seçeneğinde belirtilebilen bir değeri atayarak kullanabilirsiniz.     

Ayrıca, bu seçenekten etkilenen \fB\N'45'\N'45'blocking\N'45'io\fR seçeneğinin açıklamasına da bakınız.       

.TP 
\fB\N'45'\N'45'rsync\N'45'path=\fR\fIuygulama\fR
Uzak makinede başlangıçta hangi uygulamanın çalıştırılacağını belirtmek için kullanılır. Çoğunlukla, \fBrsync\fR\N'39'in uzak kabuğun öntanımlı yolları dışında bulunduğu durumda kullanılır (\fB\N'45'\N'45'rsync\N'45'path=/usr/local/bin/rsync\fR gibi). \fIuygulama\fR kabuk tarafından çalıştırılacağından herhengi bir uygulama, betik ya da bir dizi komut olabilir. Bir dizi komut belirtiyorsanız \fBrsync\fR\N'39'in iletişimde kullanacağı standart girdi ve standart çıktının devredışı kalmamasına dikkat etmelisiniz.     

Aşağıdaki örnekte uzak makinede \fB\N'45'\N'45'relative\fR seçeneği ile kullanmak için farklı bir öntanımlı yol belirtilmektedir:     

.IP
.RS
.RS 4
.nf
rsync \N'45'avR \N'45'\N'45'rsync\N'45'path="cd /a/b && rsync" makine:c/d /e/
.fi
.RE
.RE
.IP


.TP 
\fB\N'45'C\fR, \fB\N'45'\N'45'cvs\N'45'exclude\fR
Sistemler arasında aktarımı istenmeyen geniş bir dosya kümesinin dışlanması için bir kısayol olarak kullanışlıdır. CVS\N'39'nin yoksayılacak dosyaları saptamakta kullandığı algoritma kullanılır.     

Dışlanan dosyaların listesi şöyle ilklendirilmiş olsun:     

.IP
.RS
.RS 4
.nf
RCS   SCCS   CVS   CVS.adm   RCSLOG  cvslog.*  tags  TAGS
.make.state .nse_depinfo *~ #* .#* ,* _$* *$ *.old  *.bak
*.BAK  *.orig *.rej .del\N'45'* *.a *.olb *.o *.obj *.so *.exe
*.Z *.elc *.ln core .svn/
.fi
.RE
.RE
.IP


$HOME/.cvsignore içindeki dosyalarla CVSIGNORE ortam değişkeninde (tüm isimler bir boşlukla ayrılarak belirtilir) listelenen her dosya bu listeye eklenecektir.     

Son olarak, .cvsignore dosyası ile aynı dizindeki dosyalardan .cvsignore dosyasında listelenmiş kalıplarla eşleşen dosyalar yok sayılır. \fBrsync\fR\N'39'in süzme ve dışlama uyguladığı dosyaların aksine bu kalıplar boşluklarla ayrılır. Daha fazla bilgi için \fBcvs(1)\fR kılavuz sayfasına bakınız.     

Bu seçeneği kendi \fB\N'45'\N'45'filter\fR kurallarınızla birlikte belirtirseniz, \fB\N'45'C\fR seçeneğinin komut satırının neresinde olduğuna bakılmaksızın, CVS dışlananlarının sizin kurallarınızın sonuna ekleneceğini unutmayın. Bu, onlara sizin belirttiğiniz kurallara göre daha düşük öncelik verir.  CVS dışlananlarının süzme kurallarınız arasındaki yerini kendiniz belirlemek isterseniz, komut satırı seçeneği olarak \fB\N'45'C\fR belirtmek yerine \fB\N'45'\N'45'filter=:C\fR ve \fB\N'45'\N'45'filter=\N'45'C\fR seçeneklerini belirtmelisiniz (bu şekilde komut satırında belirtebileceğiniz gibi bir süzme dosyasına ":C"  ve  "\N'45'C" kurallarını yerleştirerek de belirtebilirsiniz). İlk kural her dizinde .cvsignore dosyalarına bakılmasını, ikinci kural ise yukarıda bahsedilen CVS dışlananlarını bir seferliğine dahil edilmesini sağlar.       

.TP 
\fB\N'45'f\fR, \fB\N'45'\N'45'filter=\fR\fIkural\fR
Bu seçenek aktarılacak dosyalar listesinden belli dosyaların seçilerek dışlanması için kurallar eklemenizi mümkün kılar. Bu seçenek alt dizinlerin ardışık aktarıldığı aktarımlarda kullanıldığında çok yararlıdır.     

Dışlanacak dosyaların listesini oluşturmak içim komut satırında çok sayıda \fB\N'45'\N'45'filter\fR seçeneği belirtebilirsiniz.     

Bu seçenek hakkında daha ayrıntılı bilgi için \fBSÜZME KURALLARI\fR bölümüne bakınız.       

.TP 
\fB\N'45'F\fR
Bu seçenek iki defa belirtildiğinde komuta iki \fB\N'45'\N'45'filter\fR kuralı eklemeye eşdeğerdir. İlk seçenek şu kuralı ekler:   

.IP
.RS
.nf
\N'45'\N'45'filter=\N'39': /.rsync\N'45'filter\N'39'
.fi
.RE
.IP


Bu kural, \fBrsync\fR\N'39'in dizin hiyerarşisi dahilinde serpiştirilmiş .rsync\N'45'filter dosyalarına bakmasını ve aktarımda bu dosyalardaki süzme kurallarını kullanmasını sağlar. \fB\N'45'F\fR seçeneği ikinci kez kullanılmışsa şu kuralı uygular:     

.IP
.RS
.nf
\N'45'\N'45'filter=\N'39'\N'45' .rsync\N'45'filter\N'39'
.fi
.RE
.IP


Bu kural .rsync\N'45'filter dosyalarının aktarılmamasını sağlar.     

Bu seçenek hakkında daha ayrıntılı bilgi için \fBSÜZME KURALLARI\fR bölümüne bakınız.       

.TP 
\fB\N'45'\N'45'exclude=\fR\fIkalıp\fR
Bu seçenek bir dışlama kuralı tanımlanmasını sağlayan \fB\N'45'\N'45'filter\fR seçeneğinin basitleştirilmiş bir biçimidir. Seçenek, normal süzme kurallarının kural çözümleme sözdizimine izin vermez.     

Bu seçenek hakkında daha ayrıntılı bilgi için \fBSÜZME KURALLARI\fR bölümüne bakınız.       

.TP 
\fB\N'45'\N'45'exclude\N'45'from=\fR\fIdosya\fR
Bu seçenek, dışlama kurallarının belirtilen dosyadan alınmasını sağlaması dışında \fB\N'45'\N'45'exclude\fR seçeneğinin benzeridir. \fIdosya\fR içindeki boş satırlar ile \N'39'\fB;\fR\N'39'  veya  \N'39'\fB#\fR\N'39' ile başlayan satırlar yoksayılır. \fIdosya\fR olarak \fB\N'45'\fR belirtilmişse girdiler standart girdiden okunur.       

.TP 
\fB\N'45'\N'45'include=\fR\fIkalıp\fR
Bu seçenek bir içerme kuralı tanımlanmasını sağlayan \fB\N'45'\N'45'filter\fR seçeneğinin basitleştirilmiş bir biçimidir. Seçenek, normal süzme kurallarının kural çözümleme sözdizimine izin vermez.     

Bu seçenek hakkında daha ayrıntılı bilgi için \fBSÜZME KURALLARI\fR bölümüne bakınız.       

.TP 
\fB\N'45'\N'45'include\N'45'from=\fR\fIdosya\fR
Bu seçenek, içerme kurallarının belirtilen dosyadan alınmasını sağlar. \fIdosya\fR olarak \fB\N'45'\fR belirtilmişse girdiler standart girdiden okunur.       

.TP 
\fB\N'45'\N'45'files\N'45'from=\fR\fIdosya\fR
Bu seçeneği kullanarak aktarılacak dosyaların tam listesini belirtebilirsiniz. Liste \fIdosya\fR\N'39'dan ya da "\N'45'" belirtilmişse standart girdiden okunur. Ayrıca, bu seçenekle birlikte öntanımlı uygulanan seçeneklere bağlı olarak \fBrsync\fR\N'39'in öntanımlı davranışını kolayca değiştirebilirsiniz:     

.RS 

.IP \fBo\fR 3
\fB\N'45'\N'45'relative\fR  (\fB\N'45'R\fR) seçeneği uygulanarak \fIdosya\fR içindeki her öğede belirtilen yol bilgisi korunmuştur (bu davranışı kapatmak için \fB\N'45'\N'45'no\N'45'relative\fR seçeneğini kullanın).   

.IP \fBo\fR 3
\fB\N'45'\N'45'dirs\fR (\fB\N'45'd\fR) seçeneği uygulanarak listede belirtilen dizinlerin atlanmayıp, hedefte oluşturulması sağlanmıştır.   

.IP \fBo\fR 3
\fB\N'45'\N'45'archive\fR (\fB\N'45'a\fR) seçeneği uygulanmasına rağmen bu seçeneğin uygulamalarından biri olan \fB\N'45'\N'45'recursive\fR  (\fB\N'45'r\fR) seçeneği uygulanmadığından, bu davranışın uygulanmasını istiyorsanız \fB\N'45'\N'45'recursive\fR (\fB\N'45'r\fR) seçeneğini ayrıca belirtmelisiniz.     

.PP
.RE
.IP


\fIdosya\fR\N'39'dan okunan dosya isimlerinin hepsi kaynak dizine göre değerlendirilir \N'45'\N'45' öğelerin başındaki "\fB/\fR"lar ile daha üst dizinlere çıkılmasını sağlayan "\fB../\fR"lar kaldırılır. Örnek:     

.IP
.RS
.nf
rsync \N'45'a \N'45'\N'45'files\N'45'from=/tmp/foo /usr uzak:/yedek
.fi
.RE
.IP


/tmp/foo içinde "bin" (hatta "/bin") diye bir girdi varsa, /usr/bin dizini hedefte /yedek/bin dizini olarak oluşturulur (ancak, \fIdosya\fR içinde dosyalar açıkça listelenmemişse ya da komut satırında \fB\N'45'r\fR seçeneği yoksa /usr/bin dizinindeki dosyalar aktarılmaz). Ayrıca, \fB\N'45'\N'45'relative\fR seçeneğinin etkisini (öntanımlı olarak etkindir) sadece dosyadan okunan yol bilgisini yinelemek için saklar ancak, kaynak için belirtilmiş yolun yinelenmesine zorlamaz (örnekte /usr).     

Ek olarak, eğer \fIdosya\fR\N'39'yı "uzak:" öneki ile belirtirseniz, bu dosya yerel makineden değil, uzak makineden okunur (uzak: ile belirtilen makine, aktarımın yapıldığı makine olmalıdır). Bir kısaltma olarak, "aktarımın yapıldığı uzak makine" anlamında sadece ":" önekini de kullanabilirsiniz. Örnek:     

.IP
.RS
.RS 2
.nf
rsync \N'45'a \N'45'\N'45'files\N'45'from=:/yol/dosya\N'45'listesi uzak:/ /tmp/kopya
.fi
.RE
.RE
.IP


Bu komut "uzak" makinesindeki /yol/dosya\N'45'listesi dosyasında listelenmiş dosyaları kopyalayacaktır.       

.TP 
\fB\N'45'0\fR, \fB\N'45'\N'45'from0\fR
Bu seçenek \fBrsync\fR\N'39'e, bir dosyadan okunan dosya isimlerinin sonlandırılmasının satırsonu karakteri (LF) veya satırbaşı karakteri (CR) ya da her bu ikisinin birlikte kullanılmasıyla (CR+LF) değil sadece boş karakterle (\N'39'\\0\N'39') yapıldığını belirtir.  Bu seçenek  \fB\N'45'\N'45'exclude\N'45'from\fR, \fB\N'45'\N'45'include\N'45'from\fR, \fB\N'45'\N'45'files\N'45'from\fR ve bir \fB\N'45'\N'45'filter\fR kuralı ile belirtilen dosyaları etkiler. Dosya isimlerinin boşluk ile ayrıldığı .cvsignore dosyalarını kullanan \fB\N'45'\N'45'cvs\N'45'exclude\fR seçeneğini etkilemez.       

.TP 
\fB\N'45'T\fR, \fB\N'45'\N'45'temp\N'45'dir=\fR\fIdizin\fR
Bu seçenekle, dosyalar aktarılırken alıcı tarafta geçici olarak oluşturulan dosyaların nereye konulacağını belirtmek için kullanılır. Öntanımlı davranış, geçici dosyaların alıcı dizinde oluşturulmasıdır.       

.TP 
\fB\N'45'y\fR, \fB\N'45'\N'45'fuzzy\fR
Bu seçenekle, hedefte bulunmayan bir dosya için benzer bir dosya aranacağını belirtilir. Şimdiki algoritma, hedef dosya için aynı dizinde, aynı boyda ve aynı değişiklik zamanlı ya da aynı isimli bir dosya arar. Böyle bir dosya varsa, bu dosya bulanık bir hedef dosya olarak aktarımın hızlandırılması amacıyla kullanılır.   

.RS 

.br
.ns
.TP 
\fBBilgi:\fR
\fB\N'45'\N'45'delete\fR seçeneği bu amaçla kullanılabilecek bir dosyanın işlem öncesinde silinmesine yol açabileceğinden, bunun yerine ya \fB\N'45'\N'45'delete\N'45'after\fR seçeneğini kullanın ya da dosyanın silme işlemine konu olmayacak şekilde olmasına dikkat edin.       

.PP
.RE
.IP


.TP 
\fB\N'45'\N'45'compare\N'45'dest=\fR\fIdizin\fR
Bu seçenekle, alıcı makinede hedef dizinde olmayan dosyalar için karşılaştırmanın \fIdizin\fR dizinine göre yapılacağı belirtilir. Eğer \fIdizin\fR içinde göndericinin dosyasının aynısı varsa bu dosya aktarılmaz. Bu, sadece bir önceki yedeklemeden beri değişmiş dosyaların yedeklenmesi için kullanışlıdır.   

2.6.4 sürümünden başlayarak, çok sayıda \fB\N'45'\N'45'compare\N'45'dest\fR dizini belirtilebilmektedir. Eğer hedefte bir eşleşme bulunamazsa, dosya bu dizinlerde aranır.   

Eğer \fIdizin\fR göreli bir dizin olarak belirtilmişse bu dizinin hedef dizinde olduğu kabul edilir. Ayrıca \fB\N'45'\N'45'link\N'45'dest\fR seçeneğine de bakınız.       

.TP 
\fB\N'45'\N'45'link\N'45'dest=\fR\fIdizin\fR
Bu seçenek, \fIdizin\fR içindeki değişmemiş dosyaların hedef dizine sabit bağlı yapılması dışında \fB\N'45'\N'45'compare\N'45'dest\fR seçeneği gibi davranır. Sabit bağlı yapılacak dosyalar öznitelikleri (izinler, sahipler, v.s) bakımından kaynaktakilerle tamamen aynı olmalıdır. Örnek:   

.IP
.RS
.nf
rsync \N'45'av \N'45'\N'45'link\N'45'dest=$PWD/öncü\N'45'dizin \\
\   makine:kaynak\N'45'dzn/ yeni\N'45'dzn/
.fi
.RE
.IP


2.6.4 sürümünden başlayarak, çok sayıda \fB\N'45'\N'45'link\N'45'dest\fR dizini belirtilebilmektedir. Eğer hedefte bir eşleşme bulunamazsa, dosya bu dizinlerde aranır.   

Eğer \fIdizin\fR göreli bir dizin olarak belirtilmişse bu dizinin hedef dizinde olduğu kabul edilir. Ayrıca \fB\N'45'\N'45'compare\N'45'dest\fR seçeneğine de bakınız.   

.RS 

.br
.ns
.TP 
\fBBilgi:\fR
2.6.1 sürümünden önceki sürümlerde, \fB\N'45'o\fR seçeneği (\fB\N'45'a\fR seçeneği de bu seçeneği uygular) belirtilmişse, \fB\N'45'\N'45'link\N'45'dest\fR seçeneği root olmayan bir kullanıcı için istendiği gibi çalışmayacaktır (yazılım hatası). Bu hatadan korunmak için böyle bir \fBrsync\fR ile \fB\N'45'o\fR seçeneğini kullanmamalısınız.       

.PP
.RE
.IP


.TP 
\fB\N'45'z\fR, \fB\N'45'\N'45'compress\fR
Bu seçenekle hedef makineye gönderilen dosyaların verilerini \fBrsync\fR, aktarım miktarını azaltmak için sıkıştıracaktır. Özellikle, yavaş bağlantılar için çok yararlıdır.   

.RS 

.br
.ns
.TP 
\fBBilgi:\fR
Hedef makinede sıkıştırma için aynı araçlar kullanılıyorsa, sıkıştırılmış veri sıkıştırma ile ilgili dolaylı bilgileri içermeyeceğinden aktarımda daha iyi sıkıştırma yapılabilmektedir.       

.PP
.RE
.IP


.TP 
\fB\N'45'\N'45'numeric\N'45'ids\fR
Bu seçenekle \fBrsync\fR, her iki uçta kullanıcı ve grup isimlerini değil, kullanıcı ve grup kimliklerini eşleştirmeye çalışacaktır.   

Öntanımlı olarak \fBrsync\fR, dosyaların sahibini belirlemekte kullanıcı ve grup isimlerini kullanır. Özel kullanıcı ve grup kimliği olan 0 kimliği, bu seçenek belirtilmemiş olsa bile, kullanıcı ve grup isimleriyle asla eşleştirilmez.   

Eğer kullanıcı ve grup isimleri her iki uçta eşleşmiyorsa, bunların yerine kaynak sistemdeki kullanıcı ve grup kimlikleri kullanılır. \fBchroot\fR ayarlarının \fBrsync\fR\N'39'in kullanıcı ve grup isimlerini arama yeteneklerini nasıl etkilediğini ve bunları nasıl değiştirebileceğinizi öğrenmek için \fBrsyncd.conf(5)\fR kılavuz sayfasındaki \fBuse  chroot\fR modül seçeneğinin açıklamasına bakınız.       

.TP 
\fB\N'45'\N'45'timeout=\fR\fIsüre\fR
Bu seçenekle G/Ç zamanaşımını saniye cinsinden belirtebilirsiniz. Belirtilen süre içinde bir aktarım gerçekleşmezse, \fBrsync\fR işlemi sonlandıracaktır. Öntanımlı değer, bir zamanaşımı olmadığını belirten 0 değeridir.       

.TP 
\fB\N'45'\N'45'port=\fR\fIport\fR
Öntanımlı 873. port yerine kullanılacak portu belirtmek için kullanılır. URL sözdizimi port belirtmek için zaten bir yöntem içerdiğinden, bu sadece bir \fBrsync\fR sunucusuna "::" kullanarak bağlanıyorsanız gerekir. Bu seçeneğin \fBSUNUCU SEÇENEKLERİ\fR bölümündeki açıklamasına da bakınız.       

.TP 
\fBblocking\N'45'io\fR
Uzak kabuk aktarımı başlatılırken engellenebilen G/Ç kullanılmasını belirtir. Uzak kabuk \fBrsh\fR veya \fBremsh\fR ise, \fBrsync\fR öntanımlı olarak engellenebilen G/Ç, aksi takdirde engellenemeyen G/Ç kullanır (\fBssh\fR ile engellenemeyen G/Ç tercih edilir).       

.TP 
\fBno\N'45'blocking\N'45'io\fR
Öntanımlı olarak engellenebilen G/Ç kullanılıyorsa, bunu kapatır.       

.TP 
\fB\N'45'i\fR, \fB\N'45'\N'45'itemize\N'45'changes\fR
Her dosyanın öznitelik değişikliklerini de içererek yapılmış değişikliklerin dosyalara göre tasnif edilmiş bir listesini ister. Bu, \fB\N'45'\N'45'log\N'45'format=\N'39'%i %n%L\N'39'\fR belirtmekle aynıdır.   

"\fB%i\fR"  belirtimi 9 karakter uzunlukta şifresel bir çıktıya sahiptir. Genel biçimi \fIUXcstpoga\fR dizgesine benzer. Burada \fBU\fR karakteri yapılan güncellemenin çeşidini, \fBX\fR karakteri dosya türünü diğer karakterler ise güncellenmişlerse öznitelikleri belirten bir karakterle değiştirilir.   

\fBU\fR karakterinin yerini alan güncelleme türleri şunlardır:   

.RS 

.IP \fBo\fR 3
\fB<\fR  karakteri yerel makineye aktarılan (alınan) bir dosyayı belirtir.   

.IP \fBo\fR 3
\fB>\fR karakteri yerel makineye aktarılan (gönderilen) bir dosyayı belirtir.   

.IP \fBo\fR 3
\fBc\fR karakteri yerel makinede değiştirilen/oluşturulan bir dosyayı belirtir (bir dizin ya da sembolik bağın oluşturulması gibi).   

.IP \fBo\fR 3
\fBh\fR karakteri başka bir öğeye sabit bağ olan bir öğeyi belirtir (\fB\N'45'\N'45'hard\N'45'links\fR gerektirir).   

.IP \fBo\fR 3
\ \fB.\fR (nokta) karakteri sadece öznitelikleri değişmiş bir dosya belirtir.   

.IP \fBo\fR 3
\fB=\fR karakteri öğenin iki uçta da aynı olduğunu belirtir (bu sadece ve sadece yüksek bir ayrıntı seviyesinde çıktılanır).   

.PP
.RE
.IP


\fBX\fR karakterinin yerini alan dosya türleri şunlardır: bir dosya için \fBf\fR, bir dizin için \fBd\fR, bir sembolik bağ için \fBL\fR ve bir aygıt için \fBD\fR.   

\fIUXcstpoga\fR dizgesinin diğer harfleri, gerçek karakterler olup, öğenin ilgili öznitelikleri güncellenmişse çıktılanırlar, aksi takdirde "." ile değiştirilirler. Bunun üç istisnası vardır:   

.RS 

.IP 1. 3
yeni oluşturulmuş bir öğe için her harf bir "\fB+\fR" ile değiştirilir.   

.IP 2. 3
İki uçtada aynı olan öğelerde her harf bir boşlukla değiştirilir.   

.IP 3. 3
Bilinmeyen her öznitelik bir "\fB?\fR" ile değiştirilir (bu, daha eski bir \fBrsync\fR ile konuşurken ortaya çıkar).   

.PP
.RE
.IP


Harflerin belirttiği öznitelikler şunlardır:   

.RS 

.IP \fBo\fR 3
\fBc\fR dosyanın sağlama toplamlarının farklı olduğunu ve dosyanın aktarımla güncelleneceğini belirtir (\fB\N'45'\N'45'checksum\fR gerektirir).   

.IP \fBo\fR 3
\fBs\fR dosyanın boyutlarının farklı olduğunu ve dosyanın aktarımla güncelleneceğini belirtir   

.IP \fBo\fR 3
\fBt\fR değişklik zamanlarının farklı olduğunu ve sunucudaki değer ile güncelleneceğini belirtir (\fB\N'45'\N'45'times\fR gerektirir). Bazan bu karakterin yerine  \fBT\fR kullanılır ve zamanın aktarım zamanına ayarlanacağını belirtir. \fBT\fR harfi, bir bir dosya ya da dizin \fB\N'45'\N'45'times\fR seçeneği belirtilmeksizin aktarılırken ya da bir sembolik bağ aktarılırken çıktılanır.   

.IP \fBo\fR 3
\fBp\fR  izinlerin farklı olduğunu ve sunucudaki değer ile güncelleneceğini belirtir (\fB\N'45'\N'45'perms\fR gerektirir).   

.IP \fBo\fR 3
\fBo\fR sahiplerin farklı olduğunu ve sunucudaki değer ile güncelleneceğini belirtir (\fB\N'45'\N'45'owner\fR  ve root yetkileri gerektirir).   

.IP \fBo\fR 3
\fBg\fR grupların farklı olduğunu ve sunucudaki değer ile güncelleneceğini belirtir (\fB\N'45'\N'45'group\fR ve grup yetkileri gerektirir).   

.IP \fBo\fR 3
\fBa\fR harfi gelecekte ACL\N'39'ler gibi genişletilmiş dosya özniteliklerini desteklemek üzere yedek olarak ayrılmıştır.   

.PP
.RE
.IP


Olası diğer bir çıktı daha vardır: dosyalar silinirken silinecek her öğe için "\fB%i\fR"  belirtimi "deleting" dizgesini çıktılar (yeterince son sürüm bir \fBrsync\fR ile konuşulduğu ve bunun silme işlemlerini bir ayrıntı olarak çıktılamayıp günlük kaydı tuttuğu varsayımıyla).       

.TP 
\fB\N'45'\N'45'log\N'45'format=\fR\fIbiçim\fR
İşlenen her dosya için kullanıcıya \fBrsync\fR istemcisinin nasıl bir çıktı göstereceğini belirlemenizi sağlar. \fIbiçim\fR her biri \fB%\fR karakteri ile öncelenmiş tek karakterli belirtimlerden oluşan bir dizgedir. Olası belirtimlerin listesi için \fBrsyncd.conf(5)\fR kılavuz sayfasındaki \fBlog format\fR seçeneğinin açıklamasına bakınız. (\fB\N'45'\N'45'log\N'45'format\fR seçeneği bir sunucunun günlük kaydında ne çıktılayacağını belirlemez.)   

\fIbiçim\fR dizgesinde \fB\N'45'\N'45'itemized\N'45'changes\fR belirtimi (%i) kullanılmamışsa, belli bir yolla (bir dosyanın aktarılması, bir sembolik bağ veya aygıtın yeniden oluşturulması, bir dizine dokunulması) güncellenen her dosya için çıktı üretilecektir, aksi takdirde, çıktılama herhangi bir yolla güncellenen her öğeye genişletilir (alıcı tarafın sürümü en azından 2.6.4 ise). "%i" belirtiminin çıktısı ile ilgili ayrıntılar için \fB\N'45'\N'45'itemized\N'45'changes\fR seçeneğinin açıklamasına bakınız.   

\fB\N'45'\N'45'verbose\fR seçeneği "%n%L" biçiminin uygulanmasını sağlar. \fB\N'45'\N'45'log\N'45'format\fR seçeneğini isterseniz, \fB\N'45'v\fR (\fB\N'45'\N'45'verbose\fR) seçeneğini belirtmeksizin kullanabileceğiniz gibi bu seçeneği de kullanarak her dosya için bu biçimdeki bir çıktının üretimesini de sağlayabilirsiniz.   

Günlüklemenin aktarımın sonunda yapılmasını sağlayan aktarım istatistiği belirtimlerinden biri belirtilmedikçe \fBrsync\fR, günlük biçimi dizgesini bir dosyanın aktarımından önce çıktılayacaktır. Bu geç günlükleme etkin olduğunda ve ayrıca \fB\N'45'\N'45'progress\fR belirtilmişse \fBrsync\fR ayrıca aktarılan dosyanın ismini işlem bilgisinden önce (şüphesiz, \fB\N'45'\N'45'log\N'45'format\fR çıktısından sonra) çıktılayacaktır.       

.TP 
\fB\N'45'\N'45'stats\fR
Bu seçenek \fBrsync\fR\N'39'e, \fBrsync\fR algoritmasının verileriniz için ne kadar verimli olduğunu görmenizi sağlayacak dosya aktarım istatitiklerini ayrıntılı olarak basmasını söyler.       

.TP 
\fB\N'45'\N'45'partial\fR
Aktarım kesintiye uğramışsa, öntanımlı olarak \fBrsync\fR, aktarımı yarım kalmış dosyayı silecektir. Bazı durumlarda kısmen aktarılmış dosyaları silinmemesi istenebilir. Aktarımın bir sonraki bağlantıda tamamlanmasını hızlandırmak üzere kısmen aktarılmış dosyaların silinmemesi için bu seçeneği kullanabilirsiniz.       

.TP 
\fB\N'45'\N'45'partial\N'45'dir=\fR\fIdizin\fR
Aktarımı yarım kalmış dosyaların silinmesini önlemenin daha iyi bir yolu bu tür dosyalar için ayrı bir \fIdizin\fR belirtmektir. Sonraki aktarımda, \fBrsync\fR bu dosyanın aktarımını tamamlamak için belirtilen \fIdizin\fR içindeki dosyayı kullanacak ve dosyanın aktarımı tamamlandıktan sonra bu dosyayı silecektir. Yalnız, eğer \fB\N'45'\N'45'whole\N'45'file\fR belirtilmişse (ya da dolaylı uygulanıyorsa), \fBrsync\fR arttırımlı algoritmayı kullanmaksızın dosyaları göndereceğinden, \fIdizin\fR içinde tamamlanmayı bekleyen bir dosya bulunursa basitçe silinecektir.   

Eğer \fIdizin\fR mevcut değilse, \fBrsync\fR \fIdizin\fR\N'39'i oluşturacaktır (sadece son dizin, yolun tamamı değil). Bu davranışın sonucu olarak, hedef dosyanın bir dizin oluşturmayı gerektirdiği durumlarda göreli yol belirtmek (\fB\N'45'\N'45'partial\N'45'dir=.rsync\N'45'partial\fR gibi) daha iyidir, bu takdirde eksik dosya işlem sonunda silindiğinde bu dizin de silinir.   

Eğer \fIdizin\fR ile mutlak bir yol belirtilmemişse, mevcut dışlamalarınızın sonunda \fBrsync\fR ayrıca \fB\N'45'\N'45'exclude\fR değeri olarak bir dizin ekleyecektir. Böylece \fIdizin\fR içindeki dosyaların aktarımı ve ayrıca alıcı tarafta bu dosyaların zamanından önce silinmesi engellenecektir. Bir örnek: yukarıdaki \fB\N'45'\N'45'partial\N'45'dir\fR seçeneği diğer süzme kurallarının sonuna bir "\fB\N'45'\N'45'exclude=.rsync\N'45'partial/\fR" kuralı ekleyecektir. Eğer kendiniz bir takım süzme kuralları kullanıyorsanız, bu kuralın daha yüksek öncelik alması için kendi kurallarınız içinde uygun bir yerde belirtebilirsiniz (kurallarınızın sonunda bir \fB\N'45'\N'45'exclude=\N'39'*\N'39'\fR kuralı varsa, özdevimli eklenen bir kural hiçbir zaman erişilebilir olmayacaktır).   

.RS 

.br
.ns
.TP 
\fBÖnemli:\fR
\fB\N'45'\N'45'partial\N'45'dir\fR ile belirtilen dizine diğer kullanıcılar yazamamalıdır, aksi takdirde bu bir güvenlik açığı oluşturur. Yani "/tmp" gibi bir dizin belirtmekten KAÇININ.

.PP
.RE
.IP


Ayrıca \fIdizin\fR değerini RSYNC_PARTIAL_DIR ortam değişkeninde belirtebilirsiniz. Bu değişkene bir değerin atanmış olması \fB\N'45'\N'45'partial\fR seçeneğinin etkin olmasını sağlamaz ama komut satırında \fB\N'45'\N'45'partial\fR seçeneğini belirtmekle \fB\N'45'\N'45'partial\N'45'dir\fR seçeneğine dizin belirtilmiş gibi işlem yapılması sağlanır. Örneğin, \fB\N'45'\N'45'partial\N'45'dir=.rsync\N'45'tmp\fR ile \fB\N'45'\N'45'progress\fR seçeneğini birlikte kullanmak yerine, kabukta RSYNC_PARTIAL_DIR=.rsync\N'45'tmp şeklinde bir atama yaptığınızı ve .rsync\N'45'tmp dizinini eksik kalan aktarımı tamamlamak için komut satırında sadece \fB\N'45'P\fR seçeneğini belirterek kullandığınızı varsayalım. \fB\N'45'\N'45'partial\fR seçeneğinin bu ortam değişkenine bakmadığı durumlar, (1) \fB\N'45'\N'45'inplace\fR seçeneğinin belirtilmiş olması (\fB\N'45'\N'45'inplace\fR seçeneği \fB\N'45'\N'45'partial\N'45'dir\fR ile çeliştiğinden), (2) \fB\N'45'\N'45'delay\N'45'updates\fR seçeneğinin belirtilmiş olmasıdır (aşağıya bakınız).   

Sunucu yapılandırmasının \fBrefuse  options\fR ayarı, amacı gereği \fB\N'45'\N'45'partial\N'45'dir\fR seçeneğinin \fB\N'45'\N'45'partial\fR seçeneğini uygulamamasına sebep olur. Bu, yani, \fB\N'45'\N'45'partial\fR seçeneğinin reddedilmesi, \fB\N'45'\N'45'partial\N'45'dir\fR tarafından sağlanan daha güvenilir üsluba hala izin veriyor olmakla, aktarımı yarım kalmış hedef dosyaların tekrar yazılmasına izin vermemekte kullanılabilir.       

.TP 
\fB\N'45'\N'45'delay\N'45'updates\fR
Bu seçenek, güncellenen her dosyayı aktarımın sonunda isimleri değiştirilmek suretiyle yerine taşınmak üzere bir dizin içinde geçici bir dosyaya koyar. Bu dosyaların güncellenmesini daha atomik yapmayı amaçlar. Öntanımlı olarak bu dosyalar her dosyanın hedef dizini içindeki ".~tmp~" isimli bir dizine konur, fakat bu davranışı \fB\N'45'\N'45'partial\N'45'dir\fR seçeneğini belirterek değiştirebilirsiniz. Bu seçenek \fB\N'45'\N'45'inplace\fR seçeneği ile çelişir.       

.RS 

.br
.ns
.TP 
\fBBilgi:\fR
Bu seçeneğe özel olarak, \fB\N'45'\N'45'partial\N'45'dir\fR yerine RSYNC_PARTIAL_DIR ile \fB\N'45'\N'45'partial\fR belirtmek RSYNC_PARTIAL_DIR değerinin kullanılmasını sağlamaz. Ayrıca, sunucu yapılandırmasının \fBrefuse  options\fR ayarı, amacı gereği \fB\N'45'\N'45'partial\N'45'dir\fR seçeneğine özel uygulamalar da yapılmaz.   

.PP
.RE
.IP


Bu seçenek alıcı tarafta biraz daha fazla bellek kullanımına (aktarılan dosya başına bir bit) ve güncellenen tüm dosyaları tutacak kadar boş disk alanına gereksinim duyar. Ayrıca, yol mutlak olduğunda güncellenen dosyaların hepsi tek bir dizine konulacağından, aktarımda dosyaların herhangi birinin aynı isimde olma olasılığının olmaması durumu dışında, \fB\N'45'\N'45'partial\N'45'dir\fR ile mutlak dosya yolu belirtmemelisiniz.   

Ayrıca, çok daha atomik bir güncelleme algortiması içeren, \fBrsync\fR paketinin "support" alt dizinindeki "atomic\N'45'rsync" perl betiğine de bakın (\fB\N'45'\N'45'link\N'45'dest\fR seçeneğini ve dosyalar için paralel bir hiyerarşi kullanır).       

.TP 
\fB\N'45'\N'45'progress\fR
Aktarımın gelişimini gösteren çıktı üretilmesini sağlar. Bu, bezgin kullanıcıya bazı şeyleri kollayabilme imkanı verir. Açıkça belirtilmemişse, \fB\N'45'\N'45'verbose\fR seçeneğini de uygulanır.   

Bir dosya aktarılırken, üretilen çıktı şöyle görünür:   

.IP
.RS
.nf
782448  63%  110.64kB/s    0:00:04
.fi
.RE
.IP


Bu çıktı kullanıcıya o anki dosya boyunu, aktarılmış verinin yüzdesini (hattaki veri ile aktarılmış verinin toplamı olarak), aktarım hızını ve aktarımın tamamlanması için gerekli kalan süreyi gösterir.   

Bir dosya aktarıldıktan sonra, üretilen çıktı şöyle görünür:   

.IP
.RS
.nf
1238099 100%  146.38kB/s    0:00:08  (5, 57.1% of 396)
.fi
.RE
.IP


Bu çıktı kullanıcıya aktarımı biten dosyanın son boyutunu, aktarımın %100 tamamlandığını, dosyanın son aktarım hızını, dosyanın aktarımı için kullanılan süreyi ve ek olarak toplam aktarımın boyut ve adet olarak ne kadarının tamamlandığını parantez içinde gösterir.       

.TP 
\fB\N'45'P\fR
\fB\N'45'\N'45'partial \N'45'\N'45'progress\fR seçenkleri için kısayoldur. Amacı, kesintiye uğraması muhtemel uzun bir aktarım için bu iki seçeneğin birlikte belirtilmesini kolaylaştırmaktır.       

.TP 
\fB\N'45'\N'45'password\N'45'file=\fR\fIdosya\fR
Uzak \fBrsync\fR sunucusuna erişim için parola içeren bir dosya belirtebilmeyi sağlar. Bu seçenek, aktarım için bir uzak kabuk kullanıldığında değil, sadece yerleşik aktarım kullanarak bir \fBrsync\fR sunucusuna erişirken yararlıdır. Dosya herkesçe okunabilir olmamalı ve  içinde parolayı içerek tek bir satır bulunmalıdır.       

.TP 
\fB\N'45'\N'45'list\N'45'only\fR
Bu seçenek dosyaların aktarılmasına değil, kaynak dosyaların listelenmesine sebep olur. Bu seçenek, eğer bir hedef belirtilmezse çalışır, dolayısıyla doğrudan kullanmaya ihtiyaç duymazsınız. Ancak, alt dizinlere inilmeyen bir liste üretmek için tecrübeli bir kullanıcının \fB\N'45'r \N'45'\N'45'exclude=\N'39'/*/*\N'39'\fR seçeneklerini kullanmaktan kaçınabilmesi için bir kolaylık sağlar.       

.TP 
\fB\N'45'\N'45'bwlimit=\fR\fIkbps\fR
Azami aktarım hızının kB/s cinsinden belirtilebilmesini sağlar. \fBrsync\fR\N'39'i çok büyük dosyaları (MB\N'39'larca) aktarmak için kullanırken oldukça verimlidir. \fBrsync\fR aktarımlarının doğası gereği, önce veri blokları gönderilir, eğer \fBrsync\fR aktarımın oldukça hızlı olduğunu saptarsa, sonraki bloku göndermeden önce bekler. Sonuçta, aktarım hızının ortalaması belirtilen hıza eşit olur. Sıfır değeri bir sınırlama olmadığı anlamına gelir.       

.TP 
\fB\N'45'\N'45'write\N'45'batch=\fR\fIdosya\fR
Aynı hedefe yapılacak eşdeğer bir çağrı için \fB\N'45'\N'45'read\N'45'batch\fR seçeneği ile kullanılmak üzere bir dosya oluşturur. Ayrıntılar için \fBBETİK KİPİ\fR bölümüne bakınız.       

.TP 
\fB\N'45'\N'45'read\N'45'batch=\fR\fIdosya\fR
Eveelce \fB\N'45'\N'45'write\N'45'batch\fR ile oluşturulan \fIdosya\fR içindekileri uygular. Eğer \fIdosya\fR olarak "\N'45'" belirtilirse betik verisi standart girdiden okunur. Ayrıntılar için \fBBETİK KİPİ\fR bölümüne bakınız.       

.TP 
\fB\N'45'4\fR, \fB\N'45'\N'45'ipv4\fR, \fB\N'45'\N'45'6\fR, \fB\N'45'\N'45'ipv6\fR
rsync\N'39'e soketleri oluştururken IPv4/IPv6 tercih etmesini söyler. Bu sadece \fBrsync\fR\N'39'in doğrudan kendi denetimi altındaki soketleri etkiler. Ayrıca, bu seçeneklerin \fBSUNUCU SEÇENEKLERİ\fR bölümündeki açıklamasına da bakınız.       

.TP 
\fB\N'45'\N'45'checksum\N'45'seed=\fR\fItamsayı\fR
MD4 sağlama toplamı tohumunun \fItamsayı\fR olarak belirtilebilmesini sağlar. Bu 4 baytlık tohum her blok ve dosyanın MD4 sağlama hesaplamasında kullanılır. Öntanımlı olarak bu tohum o anki zaman değeri olarak sunucu tarafından üretilir. Bu seçenek, yinelenebilir blok ve dosya sağlamaları isteyen uygulamalar için ya da kullanıcının daha bir rasgele tohum kullanmak istediği yerlerde kullanışlıdır. \fItamsayı\fR olarak sıfır değeri verilirse öntanımlı tohum kullanılacaktır.   

.PP 

.SH SUNUCU SEÇENEKLERİ
Bir \fBrsync\fR sunucu başlatılırken kullanılan seçenekler:   

.br
.ns
.TP 
\fB\N'45'\N'45'daemon\fR
Bu seçenek \fBrsync\fR\N'39'in artalanda çalışacağını belirtir. Başlattığınız sunucuya bir \fBrsync\fR istemcisi makine::modül veya rsync://makine/modül/ sözdizimini kullanarak erişebilir.   

Eğer standart girdi bir soket ise, \fBrsync\fR, \fBinetd\fR üzerinden çalıştığını varsayacaktır, aksi takdirde, uçbirimini bırakıp bir artalan süreci haline gelecektir. \fBrsync\fR istemcileri tarafından yapılan her bağlantı isteğinde süreç, yapılandırma dosyasını (rsyncd.conf) okuduktan sonra isteğe yanıt verecektir. Daha fazla bilgi için \fBrsyncd.conf(5)\fR kılavuz sayfasına bakınız.       

.TP 
\fB\N'45'\N'45'address=\fR\fIadres\fR
Öntanımlı olarak \fBrsync\fR, \fB\N'45'\N'45'daemon\fR seçeneği ile başlatıldığında ya da bir \fBrsync\fR sunucuya bağlanırken bir şablon adres kullanır. Bu seçenekle kullanılacak adres olarak belli bir IP adresi (veya konakismi) belirtebilirsiniz. Bu \fB\N'45'\N'45'config\fR seçeneği ile birlikte kullanılarak sanal adresleme yapabilmeyi mümkün kılar. Ayrıca, \fBrsyncd.conf(5)\fR kılavuz sayfasındaki \fBaddress\fR seçeneğinin açıklamasına da bakınız.       

.TP 
\fB\N'45'\N'45'bwlimit=\fR\fIkbps\fR
Sunucu sürecinin gönderdiği veri için kB/s cinsinden azami aktarım hızını belirtmek için kullanılır. İstemci de bir \fB\N'45'\N'45'bwlimit\fR değeri belirtebilir, bu durumda hangisinin hızı yüksekse, diğerinin hızına uyum sağlayacaktır. Bazı ek ayrıntılar için bu seçeneğin \fBistemci seçeneklerindeki\fR [rsync\N'45'client(1)] açıklamasına bakınız.       

.TP 
\fB\N'45'\N'45'config=\fR\fIdosya\fR
Öntanımlı yapılandırma dosyasında farklı bir yapılandırma dosyası belirtmek için kullanılır. Sunucu süreci root dışında bir uzak kullanıcı tarafından, bir uzak kabuk uygulaması üzerinden çalıştırılıyorsa öntanımlı yapılandırma dosyası çalışma dizinindeki (genellikle $HOME) rsyncd.conf dosyası, aksi takdirde /etc/rsyncd.conf\N'39'dur.       

.TP 
\fB\N'45'\N'45'no\N'45'detach\fR
Bir sunucu olarak çalışmada \fBrsync\fR\N'39'in uçbirimini bırakıp bir artalan süreci haline gelmesini engeller. Bu seçenek, \fBrsync\fR, Cygwin üzerinde bir hizmet olarak çalıştırılırken gereklidir. Ayrıca, daemontools ya da AIX\N'39'in Sistem Özkaynak Denetçisi gibi bir uygulama tarafından yönetildiğinde yararlıdır. Seçeneğin ayrıca, \fBrsync\fR bir hata ayıklayıcı altında çalıştırılırken de kullanılması tavsiye edilir. Bu seçenek, \fBrsync\fR, \fBinetd\fR veya \fBsshd\fR üzerinden çalışıyorsa etkisizdir.       

.TP 
\fB\N'45'\N'45'port=\fR\fIport\fR
Sunucu tarafından öntanımlı olarak kullanılan 873. port yerine başka bir port belirtmek için kullanılır. Ayrıca \fBrsyncd.conf(5)\fR kılavuz sayfasındaki \fBport\fR seçeneğinin açıklamasına da bakınız.       

.TP 
\fB\N'45'v\fR, \fB\N'45'\N'45'verbose\fR
Sunucu sürecinin başlatılması sırasında günlük bilgilerinin miktarını arttırmak için kullanılır. Sunucunun, istemci bağlandıktan sonraki ayrıntı seviyesi istemci tarafından kullanılan seçeneklerle ve modülün yapılandırma bölümündeki \fBmax verbosity\fR değeriyle denetlenir.       

.TP 
\fB\N'45'4\fR, \fB\N'45'\N'45'ipv4\fR, \fB\N'45'\N'45'6\fR, \fB\N'45'\N'45'ipv6\fR
\fBrsync\fR sunucusunun bağlantıları dinleyeceği soketleri oluştururken IPv4/IPv6 tercih etmesini sağlarlar. Çekirdekteki bir yazılım hatası nedeniyle Linux\N'39'un eski sürümlerinde bu seçeneklerden biri gerekli olabilir (port kullanılacağı zaman bir "adres zaten kullanımda" hatası alıyorsanız, \fBrsync\fR sunucusunu başlatırken \fB\N'45'\N'45'ipv6\fR veya \fB\N'45'\N'45'ipv4\fR belirtmeyi deneyin).       

.TP 
\fB\N'45'h\fR, \fB\N'45'\N'45'help\fR
\fB\N'45'\N'45'daemon\fR seçeneğinden sonra belirtilirse, \fBrsync\fR sunucusu başlatılırken kullanılabilecek seçenekleri kısaca açıklayan bir yardım sayfası basar.   

.PP 

.SH SÜZME KURALLARI
Süzme kuralları hangi dosyaların aktarılacağını (içerileceğini \N'45' include), hangi dosyaların atlanacağını (dışlanacağını \N'45' exclude) seçmek için esnek bir yöntem sağlar. Kurallar ya doğrudan include/exclude seçenekleri ile ya da daha hassas içerme/dışlama kalıpları ile (bir dosyadan okuyarak) belirtilebilir.   

\fBrsync\fR, aktarılacak dosya/dizinlerin listesindeki her isim için ayrı ayrı içerme/dışlama kurallarını tarar ve ilk eşleşen kalıbı uygular: bir dışlama kalıbıyla eşleşen dosya atlanır; bir içerme kalıbı ile  eşleşen dosya atlanmaz; eşleşen bir kalıp yoksa dosya atlanmaz.   

\fBrsync\fR, komut satırında belirtilen include/exclude seçeneklerinden sıralı bir süzme kuralları listesi oluşturur. Süzme kurallarının sözdizimi şöyledir:   


.nf
\fIkural\fR [\fIkalıp_veya_dosyaismi\fR]
\       \fIkural\fR,\fIbelirteç\fR [\fIkalıp_veya_dosyaismi\fR]
.fi   

\fIkural\fR ismi olarak, aşağıda açıklanan kısa ya da uzun kural isimlerinden birini kullanabilirsiniz. Eğer kısa isimli bir kural kullanırsanız, isteğe bağlı olan \fIbelirteç\fR\N'39'ten \fIkural\fRı bir \N'39',\N'39' ile ayırın. \fIkalıp\fR veya \fIdosyaismi\fR\N'39'ni (varsa) bir boşluk veya altçizgiden sonra yazmalısınız. Kullanılabilecek kural önekleri:   


.RS 2
.nf
uzun     kısa  açıklama
\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'\N'45'
exclude    \N'45'   dışlama kalıbı belirtir
include    +   içerme kalıbı belirtir.
merge      .   ek kuralları okumak için katıştırılacak dosya,
dir\N'45'merge  :   bir dizin içi katıştırma dosyası belirtir.
hide       H   aktarımdan gizlenecek dosyalar için kalıp.
show       S   aktarımdan gizlenmeyecek dosyalar için kalıp.
protect    P   silinmekten koruncak dosyalar için kalıp.
risk       R   silinmekten korunmayacacak dosyalar için kalıp.
clear      !   o anki include/exclude listesini temizler (argümansız)
.fi
.RE   

Kurallar bir dosyadan okunduğunda, "#" ile başlayan açıklama satırları ile boş satırlar yoksayılır.   

\fB\N'45'\N'45'include\fR ve \fB\N'45'\N'45'exclude\fR komut satırı seçenekleri yukarıdaki kural sözdizimini değil, sadece kalıplarla ek olarak listeyi temizleyen ünlem (\fB!\fR) imini (ve kalıplar bir dosyadan okunuyorsa boş ve açıklama satırlarını) kabul ederler. Bir include seçeneği için, bir kalıp "\fB\N'45' \fR" (tire ve boşluk) veya "\fB+ \fR" (artı ve boşluk) ile başlamıyorsa, kural bir "\fB+ \fR" olarak değerlendirilir. Bir \fB\N'45'\N'45'exclude\fR seçeneği için bir kalıp bir "\fB\N'45' \fR" ile başlamalıdır.   

Bir \fB\N'45'\N'45'filter\fR seçeneği ise kuralın başlangıcında daima bir uzun ya da kısa kural ismi içermelidir.   

Ayrıca, \fB\N'45'\N'45'filter\fR, \fB\N'45'\N'45'include\fR ve \fB\N'45'\N'45'exclude\fR seçenekleri tek bir kalıp/kural alabilir. Çok sayıda kalıp/kural eklemek için komut satırında bu seçenekleri tekrarlayabilir veya \fB\N'45'\N'45'filter\fR, \fB\N'45'\N'45'include\N'45'from\fR ve \fB\N'45'\N'45'exclude\N'45'from\fR seçeneklerinin dosya katıştırma sözdizimini kullanabilirsiniz. 

.SS İçerme/Dışlama Kalıpları
Yukarıda \fBSÜZME KURALLARI\fR bölümünde bahsedildiği gibi dosyaları "\fB+\fR", "\fB\N'45'\fR" gibi kalıpları kullanarak aktarabilir ya da atlayabilirsiniz. İçerme ve dışlama kurallarının herbirinde aktarılacak dosyaların isimleriyle eşleşen kalıplar belirtilir. Bu kalıplar çeşitli biçimler alabilir:   

.IP \fBo\fR 3
Eğer kalıp bir \fB/\fR ile başlıyorsa, dosya hiyerarşisi içinde belli bir noktaya demirlenir, aksi takdirde yol isminin sonuna eşlenir. Bu düzenli ifadelerde kalıbı \fB^\fR ile başlatmaya benzer. Örneğin, "\fB/foo\fR" kalıbı ya "aktarımın kökü"ndeki (genel bir kural için) ya da katıştırılan dosyanın dizinindeki (\fBdir\N'45'merge\fR kuralı için) "foo" isimli bir dosya ile eşleşirdi. Nitelenmemiş bir "\fBfoo\fR" ise, ağacın herhangi bir yerindeki "foo" isimli bir dosya veya dizin ismi ile eşleşirdi, çünkü algoritma kökten uca doğru alt dizinlere inilerek uygulanır; yani, her yol elemanı sonunda dosya ismi olacak bir sırada ele alınır. "\fBsub/foo\fR" ise hiyerarşinin herhangi bir noktasındaki "sub" isimli bir dizin içindeki bir "foo" ile eşleşirdi. Aktarımın kökü ile eşleşen bir kalıbın nasıl belirtileceğinin ayrıntılı açıklaması için \fBİçerme/Dışlama Kalıplarının Kök Dizinle İlişklendirilmesi\fR bölümüne bakınız..   

.IP \fBo\fR 3
Eğer kalıp bir \fB/\fR ile bitiyorsa, sadece bir dizinle eşleşecektir, bir dosya, bağ ya da aygıtla değil.   

.IP \fBo\fR 3
Eğer kalıp \fB*?[\fR dosyaismi kalıp karakterlerinden birini içeriyorsa, ifade kabuğun dosyaismi eşleştirme kuralları kullanılarak eşleştirilir. Aksi takdirde basit bir dizge eşleme kullanılır.   

.IP \fBo\fR 3
Tek yıldızlı bir kalıp ("\fB*\fR") bölü çizgilerinde duracakken, çift yıldızlı kalıp ("\fB**\fR") çok sayıda bölü çizgisi ile eşleşecektir.   

.IP \fBo\fR 3
Eğer bir kalıp bir \fB/\fR (sonda değil) ya da bir "\fB*\fR" içeriyorsa baştan sona tüm dizinleri dahil tam dosya yolu ile eşleştirilir. Eğer kalıp bir \fB/\fR ya da "\fB**\fR" içermiyorsa, sadece dosyaisminin son bileşeni ile eşleştirilir (algoritmanın altdizinlere inilerek uygulandığını hatırlayın, yani "tam dosyaismi" başlangıç dizininden başlayarak son dizine kadar yolun herhangi bir parçası ile eşleşebilir).   

.PP

Şuna dikkat edin, \fB\N'45'\N'45'recursive\fR (\fB\N'45'r\fR) seçeneğini (\fB\N'45'a\fR ile uygulanan) kullandığınızda, her yolun her alt bileşeni yukarıdan aşağıya ziyaret edilir, yani içerme/dışlama kalıpları altdizinlere inilerek her alt bileşenin tam ismine uygulanır (örn, "/foo/bar/baz" içerilirken "/foo" ve "/foo/bar" dışlanamaz). \fBrsync\fR göndereceği dosyaları ararken, dışlama kalıpları aslında dizin basamaklama aşamasını kısadevre eder. Eğer bir kalıp belli bir üst dizini dışlıyorsa, bir daha derin içerme kalıbını sonuçsuz bırakabilir, çünkü \fBrsync\fR, hiyerarşinin dışlanan bir bölümünden daha derine inmez. Bu özellikle "\fB*\fR" ile biten bir kural kullanırken önem kazanır. Örneğin, bu çalışmayacaktır:   


.nf
+ /bir/yol/bu\N'45'dosya\N'45'bulunmaz
+ /bu\N'45'dosya\N'45'bulunur
\N'45' *
.fi   

Bu kural listesi, "bir" üst dizini \N'39'\fB*\fR\N'39' kuralından dolayı dışlayacağından başarısız olur, yani \fBrsync\fR, "bir" ve "bir/yol" dizinleri içindeki hiçbir dosyayı ziyaret etmez. Hiyerarşideki tüm dizinleri ziyaret ettirmenin bir yolu tek bir kuralın listeye dahil edilmesidir: "\fB+ */\fR" ("\fB\N'45' *\fR" kuralından önce herhangi bir yere yerleştirebilirsiniz). Diğer bir çözüm ise ziyaret edilmesi gereken üst dizinlerin hepsi için belirli bir içerme kuralı eklemektir. Örneğin, bu kural kümesi doğru çalışır:   


.nf
+ /bir/
+ /bir/yol/
+ /bir/yol/bu\N'45'dosya\N'45'bulunur
+ /bu\N'45'dosya\N'45'da\N'45'bulunur
\N'45' *
.fi   

Dışlama/içerme eşleştirme örnekleri:   

.IP \fBo\fR 3
"\fB\N'45' *.o\fR" kalıbı *.o ile eşleşen tüm dosya isimlerini dışlar.   

.IP \fBo\fR 3
"\fB\N'45' /foo\fR" kalıbı aktarımın kök dizinindeki "foo" isimli bir dosyayı dışlar.   

.IP \fBo\fR 3
"\fB\N'45' foo/\fR" kalıbı "foo" isimli hehangi bir dizini dışlar.    

.IP \fBo\fR 3
"\fB\N'45' /foo/*/bar\fR" kalıbı aktarımın kök dizinindeki "foo" dizininden iki seviye aşağıdaki "bar" isimli dosyayı dışlar.   

.IP \fBo\fR 3
"\fB\N'45' /foo/**/bar\fR" kalıbı aktarımın kök dizinindeki "foo" dizininden iki veya daha alt seviyedeki "bar" isimli dosyayı dışlar.   

.IP \fBo\fR 3
"\fB+ */\fR", "\fB+ *.c\fR" ve "\fB\N'45' *\fR" kalıplarının birleşimi tüm dizinler ve C kaynak dosyaları dışında herşeyi dışlar.   

.IP \fBo\fR 3
"\fB+ foo/\fR",  "\fB+ foo/bar.c\fR" ve "\fB\N'45' *\fR" kalıplarının birleşimi sadece "foo" dizinini ve "foo/bar.c" dosyasını içerecektir ("foo" dizini açıkça içerilmelidir yoksa "\fB*\fR" tarafından dışlanırdı).   

.PP 

.SS Katıştırma Dosyası Süzme Kuralları
Yukarıda \fBSÜZME KURALLARI\fR bölümünde bahsedildiği gibi dosyaları bir \fBmerge\fR (\fB.\fR) ya da bir  \fBdir\N'45'merge\fR (\fB:\fR) süzme kuralı belirterek süzme kurallarınıza tüm dosyaları katıştırablirsiniz.   

İki çeşit katıştırma dosyası vardır: tek dosyalık (\N'39'.\N'39') ve diziniçi dosyalar (\N'39':\N'39'). Tek dosyalık bir katıştırma dosyası bir defa okunur ve "." kuralındaki süzme listesi ile birlikte işleme sokulur. Diziniçi katıştırma dosyası türünde ise, \fBrsync\fR adım adım bütün altdizinleri tarayarak ismi belirtilen dosyayı buldukça dosya içeriğini o anki kural listesine ekler. Bu diziniçi kural dosyaları aktarım alt dizinlerinde aranması gerektinden gönderen tarafta oluşturulmalıdır. Ayrıca, bu kural dosyalarının silinmeyecek dosyaları etkilemesi isteniyorsa, alıcı tarafa aktarılmaları gerekecektir (aşağıda, \fBDiziniçi Katıştırma Kuralları ve Silme\fR bölümüne bakınız).   

Bazı örnekler:


.nf
merge /etc/rsync/default.rules
. /etc/rsync/default.rules
dir\N'45'merge .per\N'45'dir\N'45'filter
dir\N'45'merge,n\N'45' .non\N'45'inherited\N'45'per\N'45'dir\N'45'excludes
:n\N'45' .non\N'45'inherited\N'45'per\N'45'dir\N'45'excludes
.fi   

Bir \fBmerge\fR veya \fBdir\N'45'merge\fR kuralı şu belirteçleri kabul eder:   

.IP \fBo\fR 3
Bir \fB\N'45'\fR belirteci, dosyaiçi açıklamalar hariç başka bir kural çözümleme olmaksızın, sadece dışlama kalıplarından oluşan bir dosya belirtir.   

.IP \fBo\fR 3
Bir \fB+\fR belirteci, dosyaiçi açıklamalar hariç başka bir kural çözümleme olmaksızın, sadece içerme kalıplarından oluşan bir dosya belirtir.   

.IP \fBo\fR 3
Bir \fBC\fR belirteci, bir dosyanın CVS uyumluluğu anlamında okunması gerektiğini belirtir. Bu \N'39'\fBn\fR\N'39', \N'39'\fBw\fR\N'39', ve  \N'39'\fB\N'45'\fR\N'39' belirteçlerini etkin kılar, fakat ayrıca, belirtilecek liste temizleme imine de (\fB!\fR) izin verir. Bir dosyaismi belirtilmemişse dosya isminin ".cvsignore" olduğu varsayılır.   

.IP \fBo\fR 3
Bir \fBe\fR belirteci, katıştırma dosyasını aktarımdan dışlayacaktır; örneğin, "\fBdir\N'45'merge,e  .rules\fR" kuralı "\fBdir\N'45'merge .rules\fR" ve "\fB\N'45' .rules\fR" kuralları gibidir.   

.IP \fBo\fR 3
Bir \fBn\fR belirteci, kuralların altdizinlerde miras alınmayacağını belirtir.   

.IP \fBo\fR 3
Bir \fBw\fR belirteci, kurallar için satırlara göre değil boşluklara göre sözcük ayırma uygulanacağını belirtir. Bu ayrıca açıklamalara da izin vermeyecektir.    

.RS 

.br
.ns
.TP 
\fBBilgi:\fR
Bir kuralın öneki olan boşluklar özel olarak ele alınır, yani "\fB\N'45' foo + bar\fR" dizgesi iki kurala ayrılacaktır (ek olarak önek çözümlemesinin iptal edilmediği varsayımıyla).   

.PP
.RE
.IP


.IP \fBo\fR 3
Ayrıca, "\fB+\fR" veya "\fB\N'45'\fR" kuralı için aşağıdaki belirteçlerden herhangi birini belirtebilirsiniz. Örneğin, "\fBdir\N'45'merge,s .filt\fR" ve "\fB:sC\fR" kurallarının herbiri sadece sunucu tarafında uygulanacak diziniçi katıştırma kurallarını oluştururken, "\fBmerge,\N'45'/ .excl\fR" kuralıyla .excl dosyasının içeriği mutlakyol dışlamaları olarak ele alınır.   

.PP

Bir "\fB+\fR" veya "\fB\N'45'\fR" kuralından sonra kullanılabilecek belirteçler:   

.IP \fBo\fR 3
Bir "\fB/\fR" belirteci kuralın dosya sisteminin köküne göre bir mutlak yol olarak ele alınacağını belirtir. Örneğin, "\fB\N'45'/ /etc/passwd\fR" kuralı aktarım sırasında "/etc" dizininden gönderilen dosyalardan passwd dosyasının dışlanacağını belirtir.   

.IP \fBo\fR 3
Bir "\fB!\fR" belirteci kuralın, kalıbın eşleşmediğinde etkili olacağını belirtir. Örneğin, "\fB\N'45'! */\fR" kuralı dizin olmayan herşeyi dışlayacaktır.   

.IP \fBo\fR 3
Bir "\fBC\fR" belirteci, tüm genel CVS dışlama kurallarının yerinde "\fB\N'45'C\fR" dışlamaları olarak yerleştirileceğini belirtmek için kullanılır. Bir argüman almaz.   

.IP \fBo\fR 3
Bir "\fBs\fR" belirteci, kuralın sadece gönderen tarafta uygulanacağını belirtir. Bir kural gönderen tarafta etkin olduğunda, dosyaların aktarılmasını engeller. \fB\N'45'\N'45'delete\N'45'excluded\fR belirtilmedikçe, bir kuralın her iki tarafı da etkilemesi öntanımlıdır, aksi takdirde kuralın sadece gönderen tarafı etkilemesi öntanımlıdır. Sunucu tarafında etkili içerme/dışlama kuralları belirtmenin diğer yolları için \fBhide\fR (\fBH\fR) ve  \fBshow\fR  (\fBS\fR) kurallarına da bakınız.   

.IP \fBo\fR 3
Bir "\fBC\fR" belirteci, kuralın alıcı tarafa uygulanacağını belirtir. Bir kural alıcı tarafta etkili olduğunda, dosyaların silinmesini engeller. Daha fazla bilgi için üstteki "\fBs\fR" belirtecine bakınız. Ayrıca, alıcı tarafta etkili içerme/dışlama kuralları belirtmenin diğer yolları için \fBprotect\fR (\fBP\fR) ve \fBrisk\fR (\fBR\fR) kurallarına da bakınız.   

.PP

\fBdir\N'45'merge\fR kuralları \fBn\fR belirteci kullanılmadıkça katıştırma dosyasının bulunduğu her alt dizinde miras alınır. Her alt dizinin kuralları, miras alınan kurallara göre daha yüksek öncelik almak üzere üst dizindeki \fBdir\N'45'merge\fR kurallarının başına eklenir. Birleşik kural kümesi katıştırma dosyasının bulunduğu noktalara göre gruplanır, böylece genel kurallar listesinde evvelce belirtilmiş bir kuralın \fBdir\N'45'merge\fR kuralları ile değiştirilmesi mümkün olur. Bir diziniçi katıştırma dosyasında bir liste temizleme kuralına rastlandığında, sadece o katıştırma dosyasının bulunduğu noktaya kadar miras alınan kurallar temizlenir.   

Bir tek dosyalık kuralın bir \fBdir\N'45'merge\fR dosyasından miras alınmasını engellemenin diğer bir yolu, dosyanın başına bir \fB/\fR getirmektir. Bir diziniçi katıştırma dosyasındaki bu tür  kurallar katıştırma dosyasının bulunduğu dizine göre ele alınır, böylece bir "\fB/foo\fR" kalıbı \fBdir\N'45'merge\fR süzme kuralı dosyasının bulunduğu dizindeki "foo" dosyasıyla eşleşir.   

\fB\N'45'\N'45'filter=". dosya"\fR üzerinden belirteceğiniz örnek süzme dosyası:   


.nf
merge /home/user/.global\N'45'filter
\N'45' *.gz
dir\N'45'merge .rules
+ *.[ch]
\N'45' *.o
.fi   

Bu, bu listenin başına /home/user/.global\N'45'filter dosyasının içeriğini ve ayrıca, bunu da alt dizinde ".rules" dosyasının sonuna ekleyecektir. Her dizinin başında önce tüm kurallar okunup üst dizinden alınan genel kurallar buna eklenir.   

Eğer bir diziniçi katıştırma dosyası, ilk aktarım dizininin üst dizini olan bir dosya yolu ile belirtilmişse, \fBrsync\fR belirtilen dosya için, aktarım dizininin başlangıcından itibaren tüm üst dizinleri tarayacaktır. Örneğin, böyle bir süzgeç (\fB\N'45'F\fR seçeneğine bakınız),   


.nf
\N'45'\N'45'filter=\N'39': /.rsync\N'45'filter\N'39'
.fi   

\fBrsync\fR\N'39'e .rsync\N'45'filter dosyasını kökten aşağı doğru,  aktarımın bir parçası olarak gönderilen dizinlerde dosyaı normal taramaya başlamadan önce aktarımın üst dizininden itibaren tüm dizinlerde aramasını söyler (Bilgi: bir \fBrsync\fR sunucusu için kök dizin daima modülün dizinidir).   

Diziniçi katıştırma dosyaları için bu tür öntarama örnekleri:   


.RS 2
.nf
rsync \N'45'avF /src/path/ /dest/dir
rsync \N'45'av \N'45'\N'45'filter=\N'39': ../../.rsync\N'45'filter\N'39' /src/path/ /dest/dir
rsync \N'45'av \N'45'\N'45'filter=\N'39': .rsync\N'45'filter\N'39' /src/path/ /dest/dir
.fi
.RE   

İlk iki komut ".rsync\N'45'filter" dosyasını "/src/path" içinde aramaya başlamadan önce "/"  ve "/src" dizinlerinde arar. Son komut ise, üst dizin taramasından kaçınır ve ".rsync\N'45'filter" dosyasını sadece aktarımın parçası olan dizinlerde arar.   

Bir ".cvsignore" dosyasının içeriğini kalıplarınıza dahil etmek isterseniz, "\fB:C\fR" kuralını kullanmalısınız. Bu kural, .cvsignore dosyalarını diziniçi katıştırma dosyaları haline getirir, fakat dosya CVS uyumluluğu bağlamında ayrıştırılır. \fB\N'45'\N'45'cvs\N'45'exclude\fR (\fB\N'45'C\fR) seçeneğinin bulunduğu yerde etkili olmasını istiyorsanız kurallarınızın arasına bu noktada "\fB:C\fR" kuralını yerleştirebilirsiniz. Bu olmaksızın, \fBrsync\fR  .cvsignore dosyası için \fBdir\N'45'merge\fR kuralını diğer kurallarınızın sonuna ekleyecektir (komut satırı seçeneklerinizden daha düşük bir öncelik vererek). Örnek:   


.nf
cat <<EOT | rsync \N'45'avC \N'45'\N'45'filter=\N'39'. \N'45'\N'39' a/ b
+ foo.o
:C
\N'45' *.old
EOT
rsync \N'45'avC \N'45'\N'45'include=foo.o \N'45'f :C \N'45'\N'45'exclude=\N'39'*.old\N'39' a/ b
.fi   

Yukarıdaki \fBrsync\fR komutlarının ikisi de aynı işi yapar. Her ikisi de diziniçi .cvsignore kurallarını listenin sonuna değil, ortasına katıştıracaktır. Bu, onların dizine özel kurallarının sizin kurallarınızın tümünden daha düşük önemde olması yerine \fB:C\fR\N'39'ye kadar olan kuralların yerine geçmesini mümkün kılar. Diğer CVS dışlama kurallarını etkilemek için (örn, öntanımlı dışlananlar listesi, $HOME/.cvsignore dosyasının içeriği ve $CVSIGNORE değişkeninin değeri), \fB\N'45'C\fR komut satırı seçeneğini belirtmemeli, onun yerine kurallarınıza bir "\fB\N'45'C\fR" kuralı yerleştirmelisiniz; örn, "\fB\N'45'\N'45'filter=\N'45'C\fR". 

.SS Liste Temizleyen Süzme Kuralı
Yukarıda \fBSÜZME KURALLARI\fR bölümünde bahsedildiği gibi mevcut içerme/dışlama listesini "\fB!\fR" süzme kuralını kullanarak temizleyebilirsiniz.  "Mevcut" liste ya genel kural listesi (kural, süzme seçenekleri çözümlenirken saptanmışsa) ya da diziniçi katıştırma dosyası kurallarından (bunlar kendi alt listelerinde miras alınırlar, dolayısıyla üst dizinin kurallarını bu kuralla temizleyebilirsiniz) oluşur. 

.SS İçerme/Dışlama Kalıplarının Kök Dizinle İlişklendirilmesi
Evvelce de bahsedildiği gibi, genel içerme/dışlama kalıpları aktarımın kök dizini ile ilişkilendirilebilir (katıştırma dosyasının dizini ile ilişklendirilen diziniçi kalıplarının tersine). Aktarımı, göndericiden alıcıya bir isim altağacının gönderilmesi olarak düşünürseniz, aktarımın kök dizini hedef dizinde yinelenecek olan ağaç başlangıcıdır. Bu kök, bir / ile başlayan kalıplarla ilişkilendirilir.   

Eşleşme aktarımın köküne göre yapıldığından, kaynak yolun sonundaki bölü çizgisini değiştirmek ya da \fB\N'45'\N'45'relative\fR seçeneğinin kullanımında değişiklik yapmak eşleştirmenizde kullanılması gereken yolu etkiler. Aşağıdaki örneklerde bu davranış modellenmiştir.   

Biri "/home/ben/foo/bar", diğeri "/home/sen/bar/baz" olan iki dosyamız olsun. Aşağıda bu iki dosyanın çeşitli komut kullanımlarında nasıl farklı aktarıldıkları gösterilmiştir.   


.RS 4
.nf
Örnek komut: rsync \N'45'a /home/ben /home/sen /hedef
+/\N'45' kalıbı: /ben/foo/bar
+/\N'45' kalıbı: /sen/bar/baz
Hedef dosya: /hedef/ben/foo/bar
Hedef dosya: /hedef/sen/bar/baz

Örnek komut: rsync \N'45'a /home/ben/ /home/sen/ /hedef
+/\N'45' kalıbı: /foo/bar               (dikkat: "ben" yok)
+/\N'45' kalıbı: /bar/baz               (dikkat: "sen" yok)
Hedef dosya: /hedef/foo/bar
Hedef dosya: /hedef/bar/baz

Örnek komut: rsync \N'45'a \N'45'\N'45'relative /home/ben/ /home/sen /hedef
+/\N'45' kalıbı: /home/ben/foo/bar       (dikkat: tam dosyayolu)
+/\N'45' kalıbı: /home/sen/bar/baz       (keza bu da)
Hedef dosya: /hedef/home/ben/foo/bar
Hedef dosya: /hedef/home/sen/bar/baz

Örnek komut: cd /home; rsync \N'45'a \N'45'\N'45'relative ben/foo sen/ /hedef
+/\N'45' kalıbı: /ben/foo/bar      (belirtilen yolla başlar)
+/\N'45' kalıbı: /sen/bar/baz      (keza bu da)
Hedef dosya: /hedef/ben/foo/bar
Hedef dosya: /hedef/sen/bar/baz
.fi
.RE   

Hangi ismi süzdüğünüzü görmenin en kolay yolu, \fB\N'45'\N'45'verbose\fR kullanarak çıktıya bakmak ve ismin önüne bir / koymaktır (herhangi bir dosya kopyalamaya hazır değilseniz, \fB\N'45'\N'45'dry\N'45'run\fR seçeneğini kullanın). 

.SS Diziniçi Katıştırma Kuralları ve Silme
Bir silme seçeneği olmaksızın, diziniçi katıştırma dosyası kuralları sadece gönderen tarafta konuyla ilgilidir, dolayısıyla aktarımı etkilemeksizin rahatça katıştırma dosyalarını dışlayabilirsiniz. Bunu kolayca yapmanın yolu, örnekte görüldüğü gibi bu dışlamaya \N'39'\fBe\fR\N'39' belirtecini eklemektir:   


.RS 1
.nf
rsync \N'45'av \N'45'\N'45'filter=\N'39': .haric\N'39' \N'45'\N'45'exclude=.haric mkn:kaynak/dizin /hedef
rsync \N'45'av \N'45'\N'45'filter=\N'39':e .haric\N'39' mkn:kaynak/dizin /hedef
.fi
.RE   

Buna rağmen, alıcı tarafta bir silme yapmak VE bazı dosyaların da silinerek dışlanmasını isterseniz, alıcı tarafın dışlanacak dosyaları bilmesini sağlamanız gerekecektir. En kolayı, aktarıma diziniçi katıştırma dosyalarını dahil etmek ve \fB\N'45'\N'45'delete\N'45'after\fR kullanmaktır. Bu yolla, birşeyleri silmeden önce alıcı tarafta gönderen taraftaki dışlama kuralları alınmış olacaktır:   


.nf
rsync \N'45'avF \N'45'\N'45'delete\N'45'after mkn:kaynak/dizin /hedef
.fi   

Yine de, katıştırma dosyaları aktarımın bir parçası değilse, ya bazı genel dışlama kuralları belirtmeli (komut satırında belirtilebilir) ya da alıcı tarafta diziniçi katıştırma dosyalarının bulunmasını kendiniz sağlamalısınız. İlkine bir örnek (uzak .kural dosyalarının kendilerini dışladıkları varsayılıyor):   


.nf
rsync \N'45'av \N'45'\N'45'filter=\N'39': .kural\N'39' \N'45'\N'45'filter=\N'39'. /benim/ek.kuralım\N'39'
\   \N'45'\N'45'delete mkn:kaynak/dizin /hedef
.fi   

Bu örnekte ek.kuralım dosyası aktarımın her iki tarafını da etkileyebilir, fakat (gönderen tarafta) kurallar diziniçi katıştırma kuralından sonra belirtildiğinden .kural dosyasından katıştırılan kurallardan daha düşük öncelikli olurlar   

Son örnekte, uzak taraf .rsync\N'45'filter dosyalarını aktarımdan dışlamaktadır, ancak biz alıcı tarafta neyin silineceğini denetim altına almak için kendi .rsync\N'45'filter dosyalarımızı kullanmak istiyoruz. Bunu yapmak için diziniçi katıştırma dosyalarını özellikle dışlamalı (böylece silinmezler) ve neyin silinip silinmeyeceğini denetim altına almak için kuralları yerel dosyalara  koymalıyız. Bu komutlardan biri gibi:   


.nf
rsync \N'45'av \N'45'\N'45'filter=\N'39':e /.rsync\N'45'filter\N'39' \N'45'\N'45'delete \\
\    mkn:kaynak/dizin /hedef
rsync \N'45'avFF \N'45'\N'45'delete mkn:kaynak/dizin /hedef
.fi 
 
.SH BETİK KİPİ
Betik kipi bir çok sistem için aynı olan güncellemeleri uygularken kullanılabilir. Bir dizin ağacının çok sayıda makine üzerinde kopyalarının bulunduğunu varsayalım. Şimdi, kaynak ağacında bazı değişiklikler olduğunu ve bunların diğer makinelere de aktarılması gerektiğini varsayalım. Bu işlemi betik kipini kullarak yapmak için, \fBrsync\fR, kaynak ağacındaki değişiklikleri hedef ağaçlardan birinde uygulayan  \fB\N'45'\N'45'write\N'45'batch\fR seçeneği ile çalıştırılır. \fB\N'45'\N'45'write\N'45'batch\fR seçeneği, yapılan işlemlerin aynı dizin ağacını içeren hedeflerde uygulanmak üzere bir "betik dosyası" içinde saklanmasını sağlar.   

Kaydedilen değişiklikleri diğer hedef ağaçlara uygulamak için \fBrsync\fR, bu dosyanın ismi seçeneğe argüman olarak belirtilerek \fB\N'45'\N'45'read\N'45'batch\fR seçeneği ile çalıştırılır. \fBrsync\fR, betik dosyasında saklanmış bilgileri kullanarak hedef ağacı günceller.   

Rahat olsun diye, \fB\N'45'\N'45'write\N'45'batch\fR seçeneği kullanılırken ek bir dosya daha oluşturulur. Bu dosyanın ismi, betik dosyasının isminin sonuna ".sh" eklenerek oluşturulur. Bu .sh dosyası betik dosyasını kullanarak hedefi güncelleyecek komut satırını içerir.  Bir Bourne(\N'45'benzeri) kabuk kullanılarak çalıştırılabilir. İsteğe bağlı olarak özgün yol yerine hedef ağacın dosya yolu aktarılabilir. Bu, hedef ağacın kaynak ağacının yolundan farklı olduğu durumlarda yararlıdır.   

Dosya durumu, sağlama toplamı sınanması ve veri bloklarının üretimi işlemleri betik dosyasına bir kere kaydedildi mi, hedef ağaçlarda defalarca kullanılabilir. Aynı verileri her konağa ayrı ayrı göndermek yerine çok sayıda konağı aynı anda güncelleyecek çok görevli aktarım protolleri de kullanılabilir.   

Örnekler:   


.nf
$ rsync \N'45'\N'45'write\N'45'batch=foo \N'45'a mkn:/kaynak/dzn/ /hedef1/dzn/
$ scp foo* uzak:
$ ssh uzak ./foo.sh /hedef2/dzn/

$ rsync \N'45'\N'45'write\N'45'batch=foo \N'45'a /kaynak/dzn/ /hedef1/dzn/
$ ssh remote rsync \N'45'\N'45'read\N'45'batch=\N'45' \N'45'a /hedef2/dzn/ <foo
.fi

Bu örneklerde, \fBrsync\fR /kaynak/dzn/\N'39'den /hedef1/dzn/\N'39'i güncellemekte kullanılmış ve bu işlemi yinelemek için işlemler "foo" ve "foo.sh" dosyalarına kaydedilmiştir. "uzak" konağı betiğe kayıtlı veri /hedef2/dzn/ dizinine gönderilerek güncellenir. Bu iki örnek arasındaki farklar betik dosyalarının hangi esneklikte kullanılabileceğini göstermek içindir:   

.IP \fBo\fR 3
İlk örnek ilk kopyanın yerel olmayacağını gösterir \N'45'\N'45' her iki yönde de aktarım için ister uzak kabuk sözdizimini, ister \fBrsync\fR sunucu sözdizimini kullanabilirsiniz.   

.IP \fBo\fR 3
İlk örnek uzak makine üzerinde \fB\N'45'\N'45'read\N'45'batch\fR seçenekli komutu çalıştırırken doğru \fBrsync\fR seçeneklerini oluşturulan "foo.sh" dosyasından alır.   

.IP \fBo\fR 3
İkinci örnek betik verisini standart girdiden okur, böylece betik dosyasının önce uzak makineye kopyalanması gerekmez. Bu örnekte değiştirilmiş bir \fB\N'45'\N'45'read\N'45'batch\fR seçeneği kullanılmasını gerektirdiğinden  "foo.sh" betiği kullanılmamıştır, fakat betiği kullanmak için dosyayı kendiniz düzenleyebilirsiniz. (Ancak, başka bir seçeneğin (\fB\N'45'\N'45'exclude\N'45'from=\N'45'\fR gibi) standart girdiyi kullanmadığından emin olmalısınız.)   

.PP 

.SS Yetersizlikler
Betik okuma seçeneği, hedef ağacın, betiğin oluşturulduğu hedefteki ağaçla aynı olacağı kabulüne dayanır. Hedef ağaçta bir fark saptandığında işlem ya bir hata verilmeksizin iptal edilir (dosya güncel görünüyorsa) ya da dosya güncellemesi yapılmaya çalışılır ve bundan sonra eğer dosyanın doğrulanması başarısız olursa işlem bir hata üretilerek iptal edilir. Bu, eğer işlem kesintiye uğratılırsa bir betik okuma işleminin yeniden başlatılmasının güvenli olması gerektiği anlamına gelir. Eğer betikli güncellemenin dosyanın boyutuna ve tarihine bakılmaksızın daima yapılabilmesini isterseniz, \fB\N'45'I\fR seçeneğini kullanın (betik okunurken). Eğer bir hata oluşursa, hedef ağaç bir ihtimal, kısmen güncellenmiş durumda olacaktır. Bu durumda, \fBrsync\fR betikli güncelleme ile değil, normal işlemle kullanılarak hedef ağaç düzeltilebilir.   

Tüm hedeflerde kullanılan \fBrsync\fR sürümü, betik dosyasını üretmekte kullanılandan en azından biraz daha yeni olmalıdır.  Eğer, betik dosyasının protokol sürümü onu okuyan \fBrsync\fR\N'39'in sürümünden daha yeni ise \fBrsync\fR bir hata vererek sonlanacaktır.   

\fB\N'45'\N'45'dry\N'45'run\fR (\fB\N'45'n\fR) seçeneği betik kipinde çalışmaz ve bir çalışma anı hatası ile sonlanır.   

Bir betik dosyası okunurken, siz belirtmemiş olsanız bile, betik dosyası üretilirken kullanılan ve betik dosyasındaki veriler için gerekli olan bazı seçenekler zorunlu olarak kullanılacaktır.  Diğer seçenekler değiştirilebilir, hatta değiştirilmelidir de. Örneğin,  \fB\N'45'\N'45'write\N'45'batch\fR seçeneği \fB\N'45'\N'45'read\N'45'batch\fR seçeneği olarak değişmeli, \fB\N'45'\N'45'files\N'45'from\fR kullanılmamalıdır, bunun yanında \fB\N'45'\N'45'filter\fR/\fB\N'45'\N'45'include\fR/\fB\N'45'\N'45'exclude\fR seçenekleri ise  \fB\N'45'\N'45'delete\fR seçeneklerinden biri belirtilmedikçe gerekli olmaz.   

\fIbetik\fR.sh dosyasını oluşturan kod, kabuk betiğinin sonuna tek bir listeye dönüştürerek \fB\N'45'\N'45'filter\fR/\fB\N'45'\N'45'include\fR/\fB\N'45'\N'45'exclude\fR seçeneklerini bir belge niteliğinde ekler. Tecrübeli bir kullanıcı bu bilgiyi \fB\N'45'\N'45'delete\fR tarafından silinmesi istenenlerde bir değişiklik varsa, dışlama listesini değiştirmekte kullanabilir. Normal bir kullanıcı ise, bu ayrıntıları yoksayabilir ve betikli veriyi uygun \fB\N'45'\N'45'read\N'45'batch\fR komutuyla çalıştıran kabuk betiğini kullanabilir.   

\fBrsync\fR\N'39'deki özgün betik kipi "rsync+" üzerine inşa edilmiş olsa da en son sürümde yeni bir gerçeklenim kullanılmaktadır. 

.SH SEMBOLİK BAĞLAR
\fBrsync\fR kaynak dizini içinde bir sembolik bağ saptadığında üç temel davranış sözkonusudur:   

.IP \fB·\fR 3
Öntanımlı olarak, sembolik bağlar oldukları gibi aktarılmazlar. Bir sembolik bağ varsa, "skipping non\N'45'regular file" (normal dosya olmadığından atlanıyor) iletisini alırsınız ve dosya atlanır.   
.IP \fB·\fR 3
Eğer \fB\N'45'\N'45'links\fR seçeneği belirtilmişse, sembolik bağlar alıcı tarafta aynı hedefle yeniden oluşturulurlar. BİLGİ: \fB\N'45'\N'45'archive\fR seçeneği dolaylı olarak \fB\N'45'\N'45'links\fR seçeneğini uygular.   
.IP \fB·\fR 3
Eğer \fB\N'45'\N'45'copy\N'45'links\fR seçeneği belirtilmişse, alıcı tarafa sembolik bağın ismiyle hedefindeki dosya aktarılır.   
.PP

\fBrsync\fR ayrıca, "güvenilir" ve güvensiz" sembolik bağları ayrımsayabilir. Bunun kullanıldığı yere bir örnek olarak, bir sanalyöre yansılaması yapılırken, yörenin genel bölümündeki /etc/passwd sembolik bağının aktarımda içerilmediğinden emin olunmak istenmesi gösterilebilir. \fB\N'45'\N'45'copy\N'45'unsafe\N'45'links\fR seçeneğinin kullanımı sembolik bağların hedefindeki dosyaların kopyalanmasına sebep olacaktır. \fB\N'45'\N'45'safe\N'45'links\fR seçeneğinin kullanımı ise güvensiz bağların atlanmasına sebep olacaktır.   

Mutlak yol içeren (/ ile başlayan) sembolik bağlarla, bulunulan dizinden daha yukarıdaki dizinleri gösteren ".." bileşenlerini içeren sembolik bağlar güvensiz olarak kabul edilir. 

.SH TANI KOYMA
\fBrsync\fR ara sıra biraz şifreli gibi görünen hata iletileri üretir. Bunlardan biri en kafa karıştıcı olan "protocol  version mismatch \N'45'\N'45' is your shell clean?" (protokol sürümü yanlış \N'45'\N'45' kabuğunuz temiz mi?) iletisidir.   

Bu ileti genellikle, \fBrsync\fR\N'39'in aktarım için kullandığı akım üzerinde istenmeyen veriler üreten uzak kabul oluşumları ya da başlatma betiklerinizden kaynaklanır. Bu soruna tanı koymanın yolu, uzak kabuğu şöyle çalıştırmaktır:   


.nf
ssh uzakmakine /bin/true > out.dat
.fi   

Bundan sonra oluşturulan out.dat dosyasına bakın. Herşey yolunda gitmişse dosya sıfır uzunlukta olacaktır. Eğer yukarıdaki hatayı alıyorsanız, dosya bazı veriler içerecektir. Dosyanın içeriğine bakarak bunları nelerin üretebileceğini bulmaya çalışın. Çok yapılan bir hata, etkileşimsiz oturum açmak için komutlar içeren yanlış yapılandırılmış kabuk betikleridir (.cshrc  veya .profile gibi).   

Süzme kalıplarında hata ayıklamak istiyorsanız, \fB\N'45'vv\fR seçeneğini belirtmeyi deneyin. \fBrsync\fR, bu ayrıntı seviyesinde dosyaların tek tek neden içerildiğini veya dışlandığını gösterecektir. 

.SH ÇIKIŞ DEĞERLERİ

.br
.ns
.TP 
\fB0\fR
Başarılı   

.TP 
\fB1\fR
Sözdizimi ya da kullanım hatası   

.TP 
\fB2\fR
Protokol uyumsuzluğu   

.TP 
\fB3\fR
girdi/çıktı dosyalarını, dizinlerini seçerken oluşan hatalar   

.TP 
\fB4\fR
İstenen eylem desteklenmiyor; 64 bitlik dosyaları desteklemeyen bir platformda bu tür dosyalarla çalışılmak isteniyor; istemci tarafından desteklendiği halde sunucu tarafından desteklenmeyen bir seçenek kullanılmış.   

.TP 
\fB5\fR
Sunucu/istmeci protokolü başlatılırken hata.   

.TP 
\fB10\fR
Soket G/Ç hatası   

.TP 
\fB11\fR
Dosya G/Ç hatası   

.TP 
\fB12\fR
\fBrsync\fR protokolü veri akımında hata   

.TP 
\fB13\fR
Uygulama tanılarında hata   

.TP 
\fB14\fR
Süreçlerarası iletişim (IPC) kodunda hata   

.TP 
\fB20\fR
Bir SIGUSR1 veya SIGINT alındı   

.TP 
\fB21\fR
waitpid() bazı hatalar döndürdü   

.TP 
\fB22\fR
nüve bellek tamponları ayrılırken hata   

.TP 
\fB23\fR
Hatadan dolayı kısmî aktarım   

.TP 
\fB24\fR
Gözden kaçan kaynak dosyalarından dolayı kısmî aktarım   

.TP 
\fB30\fR
Veri aktarımında zamanaşımı   

.PP 

.SH ORTAM DEĞİŞKENLERİ

.br
.ns
.TP 
CVSIGNORE
.cvsignore dosyalarındaki gibi yoksayılacak kalıpları belirtmek için kullanılır. Daha fazla bilgi için \fB\N'45'\N'45'cvs\N'45'exclude\fR seçeneğinin açıklamasına bakınız.   

.TP 
RSYNC_RSH
\fBrsync\fR tarafından kullanılan öntanımlı kabuğun yerine kullanılacak kabuğu belirtmek için kullanılır. Komut isminden sonra komut satırı seçeneği olarak sadece \fB\N'45'e\fR seçeneği kullanılabilir.   

.TP 
RSYNC_PROXY
\fBrsync\fR sunucusuna bağlanırken \fBrsync\fR istemcisi tarafından kullanılacak vekil sunucuyu belirtmek için kullanılır. Değeri bir konakadı:port çifti olarak belirtmelisiniz.   

.TP 
RSYNC_PASSWORD
Kimlik kanıtlaması gerektiren bir \fBrsync\fR sunucusuna bağlanırken komut satırında parola belirtmek zorunda kalmamak için parola bu değişkene atanabilir. Aktarım \fBssh\fR gibi bir kabuk üzerinden gerçekleştiriliyorsa bu değişkene bakılmayacaktır.   

.TP 
USER veya LOGNAME
USER veya LOGNAME değişkenleri bir \fBrsync\fR sunucusuna gönderilecek kullanıcı ismini saptamak için kullanılır. Böyle bir tanım yapılmamışsa, öntanımlı kullanıcı ismi olarak "nobody" kullanılır.   

.TP 
HOME
Kullanıcının öntanımlı .cvsignore dosyasını bulmakta kullanılır.   

.PP 

.SH İLGİLİ DOSYALAR
/etc/rsyncd.conf veya rsyncd.conf 

.SH İLGİLİ BELGELER
\fBrsyncd.conf(5)\fR 

.SH HATALAR
Zamanlar unix time_t türünden değerler olarak aktarılır. 

Dosyalar FAT dosya sistemine aktarılırken, \fBrsync\fR dosyalarda değişiklik yapmayabilir. \fB\N'45'\N'45'modify\N'45'window\fR seçeneğinin açıklamasına bakınız. 

Dosya izinleri, aygıtlar, vs. temel sayısal değerleriyle aktarılır. 

Ayrıca, \fB\N'45'\N'45'delete\fR seçeneğinin açıklamasına da bakınız. 

Lütfen hataları raporlayınız! Hataları raporlamak için http://rsync.samba.org/ adresine bakınız. 

.SH RSYNC HAKKINDA
\fBrsync\fR GNU kamu lisansı altında dağıtılmaktadır. Ayrıntılar için COPYING dosyasına bakınız. 

Sanalyöremize http://rsync.samba.org/ adresinden erişebilirsiniz.  Bu kılavuz sayfasında yanıtlarını bulamadığınız sorular için sanalyöremizde bir FAQ\N'45'O\N'45'Matic bulunmaktadır. 

\fBrsync\fR\N'39'in ana ftp\N'39'si: ftp://rsync.samba.org/pub/rsync. 

Bu uygulamayı istiyorsanız, sizden bunu duymak bizi mennun edecektir. 

Bu uygulamada, Jean\N'45'loup Gailly ve Mark Adler tarafından yazılmış zlib sıkıştırma kütüphanesi kullanılmaktadır. 

.SH TEŞEKKÜR
\fBrsync\fR\N'39'in yamanması, sınanması ve önerileri için Richard Brent, Brendan Mackay, Bill Waite,  Stephen  Rothwell ve  David  Bell\N'39'e teşekkür ederiz. Burada bahsetmeyi unuttuğum kişiler kalmışsa, affola. 

Ayrıca, David Dykstra, Jos Backus, Sebastian  Krahmer, Martin Pool, Wayne Davison ve J.W. Schultz\N'39'a özellikle teşekkür ederiz. 

.SH YAZANLAR
\fBrsync\fR ilk olarak Andrew Tridgell ve Paul Mackerras tarafından yazıldı. Daha sonra bir çok kişi tarafından geliştirildi. 

Destek ve geliştirme için http://lists.samba.org adresindeki eposta listelerine bakınız. 

.SH ÇEVİREN
Nilgün Belma Bugüner <nilgun (at) belgeler·gen·tr>, Mart 2005 
 
  
