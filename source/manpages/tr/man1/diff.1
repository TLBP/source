.\" http://belgeler.org \N'45' 2006\N'45'11\N'45'26T10:18:26+02:00   
.TH "diff" 1 "22 Eylül 1993" "GNU Araçları" "Kullanıcı Komutları"
.nh    
.SH İSİM
diff \N'45' iki dosya arasındaki farklılıkları bulur    
.SH KULLANIM 
.nf
\fBdiff\fR [ \fIseçenekler\fR ] \fI1.dosya\fR \fI2.dosya\fR
.fi
       
.SH AÇIKLAMA     
\fBdiff\fR, en basit tabiri ile, iki farklı dosyanın içeriğini karşılaştırır.  Dosya ismi olarak \N'45' verilmişse, \fBdiff\fR standart girdiyi okur. Özel bir durum olarak, \fBdiff \N'45' \N'45'\fR şeklinde komut kullanımı, standart girdi ile bir kopyasını karşılaştırır.     

Şayet \fI1.dosya\fR bir dizin ve \fI2.dosya\fR değilse, \fBdiff\fR komutu, \fI1.dosya\fR ile verilen dizin içindeki \fI2.dosya\fR ile aynı isimli dosyayı karşılaştırır; bu durum tersi için de geçerlidir. Dizin olmayan dosya mutlaka \N'45' olmalıdır.     

Şayet her iki girdi de dizin ise, \fBdiff\fR, alfabetik sıra ile, eşleşen bütün dosyaları karşılaştırır. Bu karşılaştırma alt dizinlerde yapılmaz. Şayet alt dizinlerdeki dosyalarında karşılaştırılmasını \fB\N'45'r\fR veya \fB\N'45'recursive\fR seçeneğini belirtmeniz gerekir. \fBdiff\fR, asla bir dizinin asıl içeriğini bir dosyaymış gibi karşılaştırmaz. Standart girdi isimsiz olduğundan, tamamen tanımlanmış bir dosyaya standart girdi muamelesi yapılmaz ve  "aynı isimli dosya" fikri buraya uygulanamaz.     

\fBdiff\fR seçenekleri \fB\N'45'\fR  ile başlar. Bu nedenle \fI1.dosya\fR ve \fI2.dosya\fR isimleri \fB\N'45'\fR ile başlayamaz. Bunun yanında, \fB\N'45'\N'45'\fR şeklinde kullanım ile bu sorunu aşabilirsiniz. \fB\N'45'\N'45'\fR işaretinden sonra gelen argümanlar \fB\N'45'\fR ile başlasa bile dosya ismi olarak değerlendirilir.     

.SS Seçenekler     
Aşağıda, GNU \fBdiff\fR\N'39'in kabul ettiği bütün komutların bir özetini bulacaksınız. Pek çok seçenek iki eşdeğer isme sahiptir. Birincisi \fB\N'45'\fR ile başlayan tek bir harften oluşur, diğeri ise \fB\N'45'\N'45'\fR ile başlayan uzun bir isimden meydana gelmektedir. Çok sayıda tek harfli seçenek (bir argüman almadıkça), \fB\N'45'ac\fR gibi yanyana yazılabilir: \fB\N'45'ac\fR, \fB\N'45'a\fR ve \fB\N'45'c\fR anlamına gelir. Uzun isimli seçenekler de başlangıçtan itibaren kendilerinden başka bir seçenekle karışmayacak şekilde kısaltılarak kullanılabilirler. Köşeli parantezler içindeki argümanlar, gerekli değilse verilmeyebileceği anlamına gelir.     


.br
.ns
.TP 
\fI\N'45'satır_sayısı\fR
Dosya içeriğin tamsayı cinsinden satır sayısı (\N'45'5 gibi belirtilir). Bu seçenek kendi başına bir çıktı biçimi tanımlamaz. \fB\N'45'c\fR veya \fB\N'45'u\fR ile birlikte kullanılmadığı sürece bir etkisi yoktur. Bu seçenek eskidir. \fBpatch\fR komutunun düzgün çalışması için içerikte en az iki satır olması gerekir.         

.TP 
\fB\N'45'a\fR
.br
.ns
.TP 
\fB\N'45'\N'45'text\fR
Metin dosyası olmasalar bile, bütün dosyaları metin dosyaları olarak kabul eder ve onları satır satır karşılaştırır.         

.TP 
\fB\N'45'b\fR
.br
.ns
.TP 
\fB\N'45'\N'45'ignore\N'45'space\N'45'change\fR
Karşılaştırmada ara boşluklarındaki farklar dikkate alınmaz.         

.TP 
\fB\N'45'B\fR
Karşılaştımada boş satırlardaki farklar dikkate alınmaz.         

.TP 
\fB\N'45'c\fR
Bağlamsal çıktı biçimi kullanılır.         

.TP 
\fB\N'45'C \fR\fIsatır_sayısı\fR
.br
.ns
.TP 
\fB\N'45'\N'45'context\fR[=\fIsatır_sayısı\fR]
Bağlamın \fIsatır_sayısı\fR satırı gösterilerek bağlamsal çıktı biçimi kullanılır.  \fIsatır_sayısı\fR belirtilmezse üç satır gösterilir. \fBpatch\fR komutunun düzgün çalışması için içerikte en az iki satır olması gerekir.         

.TP 
\fB\N'45'\N'45'changed\N'45'group\N'45'format\fR=\fIbiçim \fR
Her iki dosyadaki if\N'45'then\N'45'else biçimindeki farklı satırları içeren  satır gruplarını çıktılarken \fIbiçim\fR kullanılır.         

.TP 
\fB\N'45'd\fR
.br
.ns
.TP 
\fB\N'45'\N'45'minimal\fR
En küçük değişikliği bile bulmak için algoritma değiştirilir. Bu seçenek \fBdiff\fR\N'39'in yavaş çalışmasına (bazan oldukça yavaş) sebep olur.         

.TP 
\fB\N'45'D \fR\fIisim\fR
\fIisim\fR önişlemci makrosunun koşullarına uygun olarak katıştırılmış if\N'45'then\N'45'else biçimli çıktı üretir.         

.TP 
\fB\N'45'e\fR
.br
.ns
.TP 
\fB\N'45'ed\fR
Çıktıyı bir \fBed\fR betiği olarak üretir.         

.TP 
\fB\N'45'f\fR
.br
.ns
.TP 
\fB\N'45'\N'45'forward\N'45'ed\fR
Çıktı bir \fBed\fR betiği gibi karışık olur ancak farklar dosyadaki sırasına uygun çıktılanır.         

.TP 
\fB\N'45'F \fR\fIdüzifd\fR
.br
.ns
.TP 
\fB\N'45'\N'45'show\N'45'function\N'45'line\fR=\fIdüzifd \fR
Bağlamsal veya tekilleştirilmiş biçimde, her bir değişiklik parçası için, önceki satırdan \fIdüzifd\fR ile eşleşen kısmı gösterir.         

.TP 
\fB\N'45'h\fR
Bu seçenek herhangi bir etkiye sahip değildir, Unix uyumluluğu için vardır.         

.TP 
\fB\N'45'H\fR
.br
.ns
.TP 
\fB\N'45'\N'45'speed\N'45'large\N'45'files\fR
Pek çok küçük değişikliğe sahip büyük dosyaların karşılaştırılmasında işlemini hızlandırmak için buluşsal yöntemler (heuristics) kullanılır.         

.TP 
\fB\N'45'\N'45'horizon\N'45'lines\fR=\fIsatır_sayısı \fR
Farklılıklardan önceki ortak satırların son \fIsatır_sayısı\fR satırını ve farklılıklardan sonraki ortak satırların ilk \fIsatır_sayısı\fR satırını iptal etmez.         

.TP 
\fB\N'45'i\fR
.br
.ns
.TP 
\fB\N'45'\N'45'ignore\N'45'case\fR
Büyük ve küçük harf kullanımından kaynaklanan farklar gözönüne alınmaz, aynı kabul edilir.         

.TP 
\fB\N'45'\N'45'ifdef\fR=\fIisim \fR
\fIisim\fR önişlemci makrosunun koşullarına uygun olarak katıştırılmış if\N'45'then\N'45'else biçimli çıktı üretir.         

.TP 
\fB\N'45'I \fR\fIdüzifd\fR
.br
.ns
.TP 
\fB\N'45'\N'45'ignore\N'45'matching\N'45'lines\fR=\fIdüzifd \fR
\fIdüzifd\fR ile eşleşen satırlar diğer dosyada olsa da olmasada yok sayılır.         

.TP 
\fB\N'45'\N'45'ignore\N'45'blank\N'45'lines\fR
Satırları karşılaştırırken boş satırları yoksayar.         

.TP 
\fB\N'45'l\fR
.br
.ns
.TP 
\fB\N'45'\N'45'paginate\fR
Çıktıyı sayfalamak için \fBpr\fR komutundan geçirir.         

.TP 
\fB\N'45'L \fR\fIetiket\fR
.br
.ns
.TP 
\fB\N'45'\N'45'label\fR=\fIetiket \fR
Bağlamsal ya da tekilleştirilmiş biçimli başlıklarda dosya ismi yerine \fIetiket\fR kullanılır.         

.TP 
\fB\N'45'\N'45'left\N'45'column\fR
Yanyana çıktılama biçiminde iki ortak satırdan sadece soldakini basar.         

.TP 
\fB\N'45'\N'45'line\N'45'format\fR=\fIbiçim \fR
if\N'45'then\N'45'else biçimli tüm girdi satırlarını çıktılarken biçim kullanılır.         

.TP 
\fB\N'45'n\fR
.br
.ns
.TP 
\fB\N'45'rcs\fR
RCS biçimli çıktı verir; her komutun etkilenen satır sayısını belirtmesi dışında \fB\N'45'f\fR ile aynıdır.         

.TP 
\fB\N'45'N\fR
.br
.ns
.TP 
\fB\N'45'\N'45'new\N'45'file\fR
Dizinleri karşılaştırırken, bir dosyanın sadece tek bir dizin içinde bulunduğu durumlarda; bu dosyayı diğer dizin içinde de, içi boş olarak, varmış gibi kabul eder.         

.TP 
\fB\N'45'\N'45'new\N'45'group\N'45'format\fR=\fIbiçim \fR
İkinci dosyadaki if\N'45'then\N'45'else biçimli girdi satırı gruplarını çıktılarken biçim kullanılır.         

.TP 
\fB\N'45'\N'45'new\N'45'line\N'45'format\fR=\fIbiçim \fR
İkinci dosyadaki if\N'45'then\N'45'else biçimli bir girdi satırını çıktılarken biçim kullanılır.         

.TP 
\fB\N'45'\N'45'old\N'45'group\N'45'format\fR=\fIbiçim \fR
Birinci dosyadaki if\N'45'then\N'45'else biçimli girdi satırı gruplarını çıktılarken biçim kullanılır.         

.TP 
\fB\N'45'\N'45'old\N'45'line\N'45'format\fR=\fIbiçim \fR
Birinci dosyadaki if\N'45'then\N'45'else biçimli bir girdi satırını çıktılarken biçim kullanılır.         

.TP 
\fB\N'45'p\fR
.br
.ns
.TP 
\fB\N'45'\N'45'show\N'45'c\N'45'function\fR
Her bir değişikliğin hangi C işlevi içinde olduğunu gösterir.         

.TP 
\fB\N'45'P\fR
.br
.ns
.TP 
\fB\N'45'\N'45'unidirectional\N'45'new\N'45'file\fR
Dizinleri karşılaştırırken, bir dosyanın sadece ikinci dizin içinde bulunduğu durumlarda; bu dosyayı diğer dizin içinde de, içi boş olarak, varmış gibi kabul eder.         

.TP 
\fB\N'45'q\fR
.br
.ns
.TP 
\fB\N'45'\N'45'brief\fR
Dosyalar farklıysa sadece raporlar, farkları bulmaz.         

.TP 
\fB\N'45'r\fR
.br
.ns
.TP 
\fB\N'45'\N'45'recursive\fR
Dizinleri karşılaştırırken, bulunan bütün alt dizinlerin içindekileri de karşılaştır.         

.TP 
\fB\N'45's\fR
.br
.ns
.TP 
\fB\N'45'\N'45'report\N'45'identical\N'45'files\fR
Dosyalar aynıysa raporlar.         

.TP 
\fB\N'45'S \fR\fIdosya\fR
.br
.ns
.TP 
\fB\N'45'\N'45'starting\N'45'file\fR=\fIdosya \fR
Dizinleri karşılaştırırken, \fIdosya\fR ile belirtilen dosyadan başlar. Böylece yarıda kalmış bir kıyaslamayı devam ettirebilirsiniz.         

.TP 
\fB\N'45'\N'45'from\N'45'file\fR=\fIdosya \fR
Tüm terimleri \fIdosya\fR ile karşılaştırır. \fIdosya\fR bir dizin olabilir.         

.TP 
\fB\N'45'\N'45'to\N'45'file\fR=\fIdosya \fR
\fIdosya\fRyı tüm terimlerle karşılaştırır. \fIdosya\fR bir dizin olabilir.         

.TP 
\fB\N'45'\N'45'sdiff\N'45'merge\N'45'assist\fR
\fBsdiff\fR\N'39'e yardım için ek bilgiler basar. \fBsdiff\fR, bu bilgileri \fBdiff\fR\N'39'i çalıştırırken kullanır. Bu seçenek, kullanıcıların doğrudan kullanması için tasarlanmamıştır.         

.TP 
\fB\N'45'\N'45'suppress\N'45'common\N'45'lines\fR
Yan yana çıktı biçiminde ortak satırlar çıktılanmaz.         

.TP 
\fB\N'45't\fR
.br
.ns
.TP 
\fB\N'45'\N'45'expand\N'45'tabs\fR
Girdi dosyalarındaki sekmelerin eşitliğini sağlamak için; çıktılarken sekmeleri boşluklara çevirir.         

.TP 
\fB\N'45'T\fR
.br
.ns
.TP 
\fB\N'45'\N'45'initial\N'45'tab\fR
Normal ya da bağlamsal biçimdeki bir satırın metninden önceki boşlukları sekmelerle değiştirir. Böylece, satırların sekmelerle hizalanarak düzgün görünmesi sağlanır.         

.TP 
\fB\N'45'u\fR
Tekilleştirilmiş dosya biçimi kullanılır.         

.TP 
\fB\N'45'\N'45'unchanged\N'45'group\N'45'format\fR=\fIbiçim \fR
Her iki dosyadan da alınmış if\N'45'then\N'45'else biçimindeki bir ortak satır grubunu \fIbiçim\fR biçiminde çıktılar.         

.TP 
\fB\N'45'\N'45'unchanged\N'45'line\N'45'format\fR=\fIbiçim \fR
Her iki dosyadan da alınmış if\N'45'then\N'45'else biçimindeki bir ortak satırı \fIbiçim\fR biçiminde çıktılar.         

.TP 
\fB\N'45'U \fR\fIsatır_sayısı\fR
.br
.ns
.TP 
\fB\N'45'\N'45'unified\fR[=\fIsatır_sayısı\fR]
Bağlamın \fIsatır_sayısı\fR satırı gösterilerek tekilleştirilmiş çıktı biçimi kullanılır.  \fIsatır_sayısı\fR belirtilmezse üç satır gösterilir. \fBpatch\fR komutunun düzgün çalışması için içerikte en az iki satır olması gerekir.         

.TP 
\fB\N'45'v\fR
.br
.ns
.TP 
\fB\N'45'\N'45'version\fR
\fBdiff\fR\N'39'in sürüm numarasını basar.         

.TP 
\fB\N'45'w\fR
.br
.ns
.TP 
\fB\N'45'\N'45'ignore\N'45'all\N'45'space\fR
Satırları karşılaştırırken boşlukları atlar.         

.TP 
\fB\N'45'W \fR\fIkrk_sayısı\fR
.br
.ns
.TP 
\fB\N'45'\N'45'width\fR=\fIkrk_sayısı\fR
Yanyana çıktı biçiminde \fIkrk_sayısı\fR ile belirtilen genişlikte sütunlar kullanılır.         

.TP 
\fB\N'45'x \fR\fIşablon\fR
.br
.ns
.TP 
\fB\N'45'\N'45'exclude\fR=\fIşablon \fR
Dizinleri kıyaslarken, \fIşablon\fR ile eşleşen sahip alt dizinleri ve dosyaları yoksayar.         

.TP 
\fB\N'45'X \fR\fIdosya\fR
.br
.ns
.TP 
\fB\N'45'\N'45'exclude\N'45'from\fR=\fIdosya \fR
Dizinleri kıyaslarken, \fIdosya\fR içindeki şablonlar ile eşleşen sahip alt dizinleri ve dosyaları yoksayar.         

.TP 
\fB\N'45'y\fR
.br
.ns
.TP 
\fB\N'45'\N'45'side\N'45'by\N'45'side\fR
Yan yana çıktı biçimi kullanılır.         

.PP     
   
.SH İLGİLİ BELGELER     
\fBcmp(1)\fR, \fBcomm(1)\fR, \fBdiff3(1)\fR, \fBed(1)\fR, \fBpatch(1)\fR), \fBpr(1)\fR, \fBsdiff(1)\fR.     
   
.SH ÇIKIŞ DURUMU     
Çıkış durumu olarak \fB0\fR\N'39'ın anlamı, hiçbir farklılık bulunamadığıdır. Bazı farklılıkların olduğu durumlarda \fB1\fR ile çıkar. Şayet \fB2\fR ile çıkarsa, bir sorun var demektir.     
   
.SH ÇEVİREN     
Yalçın Kolukısa <yalcink01 (at) yahoo.com>, Aralık 2003
    
  
