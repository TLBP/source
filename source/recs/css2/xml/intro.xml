<?xml version='1.0' encoding='UTF-8'?>

<div1 id="intro">
  <head>BB2'ye Giriş</head>
  <div2 id="intro1">
    <head>HTML için kısa bir BB2 öğretici</head>

<p>Bu öğreticide, basit bir biçembendi kolayca nasıl tasarlayabileceğinizi göstereceğiz. Bu öğretici için, azcık İngilizce, biraz HTML <bibref ref="ref-HTML40"/> az buçuk da yayıncılık terminolojisi bilmeniz yetecek.</p>

<p>Küçük bir HTML belge ile başlayalım:</p>

<eg><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0//EN">
<html>
  <head>
  <title>Dede Efendi'nin Sayfası</title>
  </head>
  <body>
    <h1>Dede Efendi'nin Sayfası</h1>
    <p>Hamamizade İsmail Dede Efendi 500'den fazla bestesiyle
       oldukça üretken bir besteciydi.</p>
  </body>
</html>]]></eg>

<p><htmltag>h1</htmltag> elemanının içerdiği metnin rengini mavi yapmak için şu BB kuralını yazabilirsiniz:</p>

<eg>h1 { color: blue }</eg>

<p>Bir BB kuralı iki ana parçadan oluşur: <titleref ref="selector">seçici</titleref> ('<tt>h1</tt>') ve bildirim ('<tt>color: blue</tt>'). Bildirim de kendi içinde iki parçadan oluşur: nitelik (<literal>color</literal>) ve değeri (<literal>blue</literal>). Yukarıdaki örnekte bir HTML belgeyi oluşturmak için niteliklerden biri yeterliymiş gibi görünüyorsa da, gerçekte o, bir biçembent olarak sadece kendini nitelemektedir; ancak, diğer biçembentlerle birlikte sonuç için belirleyici olacaktır (BB'nin temel özelliklerinden biri biçembentlerin birleştirilerek uygulanmasıdır).</p>

<p>HTML 4.0 belirtimi biçembent kurallarının HTML belgelerde nasıl belirtilebileceğini tanımlamıştır: ya HTML belgenin içinde ya da harici bir biçembent üzerinden. Bir biçembendi belgeye yerleştirmek için <htmltag>style</htmltag> elemanı kullanılır:</p>

<eg><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0//EN">
<html>
  <head>
  <title>Dede Efendi'nin Sayfası</title>
  <STYLE type="text/css">
    h1 { color: blue }
  </STYLE>
  </head>
  <body>
    <h1>Dede Efendi'nin Sayfası</h1>
    <p>Hamamizade İsmail Dede Efendi 500'den fazla bestesiyle
       oldukça üretken bir besteciydi.</p>
  </body>
</html>]]></eg>

<p>Olası en fazla esneklik için belge yazarlarına harici biçembentler kullanmalarını öneriyoruz; HTML belgenin kaynak koduyla oynamaksızın üzerlerinde değişiklik yapılabilir ve birden fazla HTML belge için aynı biçembent kullanılabilir. Bir harici biçembendi HTML belge ile ilintilemek için <htmltag>link</htmltag> elemanı kullanılabilir:</p>

<eg><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<html>
  <head>
  <title>Dede Efendi'nin Sayfası</title>
  <LINK rel="stylesheet" href="bach.css" type="text/css">
  </head>
  <body>
    <h1>Dede Efendi'nin Sayfası</h1>
    <p>Hamamizade İsmail Dede Efendi 500'den fazla bestesiyle
       oldukça üretken bir besteciydi.</p>
  </body>
</html>]]></eg>

<p><htmltag>link</htmltag> elemanı şunları belirtir:</p>

<ulist>
<item><p>ilintileme türü: "<tt>stylesheet</tt>" (bir biçembent)</p></item>
<item><p>'<tt>href</tt>' özniteliği üzerinden biçembendin bulunacağı yer.</p></item>
<item><p>biçembendin ilintilediği tür: "<tt>text/css</tt>".</p></item>
</ulist>

<p>Bir biçembentle imlenim arasındaki yakın ilişkiyi gösterebilmek amacıyla, bu öğreticide <htmltag>style</htmltag> etiketini kullanmaya devam edeceğiz. Biraz daha renk ilave edelim:</p>

<eg><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<html>
  <head>
  <title>Dede Efendi'nin Sayfası</title>
  <style type="text/css">
    body { color: red }
    h1 { color: blue }
  </style>
  </head>
  <body>
    <h1>Dede Efendi'nin Sayfası</h1>
    <p>Hamamizade İsmail Dede Efendi 500'den fazla bestesiyle
       oldukça üretken bir besteciydi.</p>
  </body>
</html>]]></eg>

<p>Biçembent şimdi iki kural içeriyor: ilkinde <htmltag>body</htmltag> elemanının metin rengi kırmızı yapılırken ikincisinde <htmltag>h1</htmltag> elemanının içerdiği metnin rengi mavi yapılmaktadır. <htmltag>p</htmltag> elemanı için bir renk değeri belirtilmediğinden rengi ebeveyninden yani <htmltag>body</htmltag> elemanından miras almaktadır. <htmltag>h1</htmltag> elemanı da <htmltag>body</htmltag> elemanının çocuğu olduğu halde, ikinci kuralla miras aldığı değer geçersiz kılınmaktadır. BB'de farklı değerlerin birbiriyle çeliştiği durumlara rastlandığı olur ve bu belirtim bu gibi durumların nasıl çözümleneceğini de açıklar.</p>

<p>BB2, <property>color</property> niteliği dahil, 100'den fazla nitelik içerir. Biraz da başka niteliklere de bakalım:</p>

<eg><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0//EN">
<html>
  <head>
  <title>Dede Efendi'nin Sayfası</title>
  <style type="text/css">
    body {
      font-family: "Gill Sans", sans-serif;
      font-size: 12pt;
      margin: 3em;
    }
  </style>
  </head>
  <body>
    <h1>Dede Efendi'nin Sayfası</h1>
    <p>Hamamizade İsmail Dede Efendi 500'den fazla bestesiyle
       oldukça üretken bir besteciydi.</p>
  </body>
</html>]]></eg>

<p>Burada dikkat çeken ilk şey çok sayıda bildirimin kaşlı ayraçlar içine alınarak (<code>{...}</code>) gruplanmış oluşudur; ayrıca her kural diğerinden sonuna bir noktalı virgül eklenerek ayrılmıştır. Grubun son kuralının sonunda noktalı virgül bulunması zorunlu değildir.</p>

<p><htmltag>body</htmltag> elemanının ilk bildiriminde yazıtipi ailesi "Gill Sans" olarak ayarlanmaktadır. Eğer bu yazıtipi mevcut değilse, tarayıcı, bütün tarayıcıların bildiği beş soysal yazıtipi ailesinden biri olan <literal>sans-serif</literal> yazıtipi ailesini kullanacaktır. <htmltag>body</htmltag> elemanının çocukları <property>font-family</property> niteliğinin değerini miras alacaklardır.</p>

<p>İkinci bildirimde <htmltag>body</htmltag> elemanının yazıtipi yüksekliği 12 punto yapılmaktadır. "Punto" birimi genellikle matbaacılıkta uzunluk birimi olarak değil de yazıtipi yüksekliği belirtmek için kullanılır. Bu örnek, ortama göre ölçeklenmiş bir değer değil, mutlak ölçü belirtilen bir örnektir.</p>

<p>Üçüncü bildirimde çevredeki şeylerle ölçeklenen bir göreli birim kullanılmıştır. "em" birimi elemanın yazıtipi genişliğine atıf yapan bir birim olup, küçük "m" harfinin genişliğine eşit bir uzunluk belirtir. Bu durumda <htmltag>body</htmltag> elemanını kuşatan kenar girintileri bu elemanda geçerli yazıtipinin küçük "m" harfinin genişliğinin üç katı uzunlukta olacaktır.</p>
</div2>

<div2 id="bb2-xml"><head>XML için kısa bir BB2 öğretici</head>
<p>BB2 herhangi bir imlenim diliyle kullanılabilir, genişletilebilir imlenim dili <bibref ref="ref-XML10"/> bunlardan biridir. Aslında XML, biçembentlere HTML'den çok daha fazla bağımlıdır. Çünkü tarayıcılar, XML yazarlarının kullandıkları elemanları nasıl yorumlayacaklarını bilemezler.</p>

<p>Basit bir XML belge:</p>

<eg><![CDATA[<article>
  <headline>Kestirme nitelikler</headline>
  <translator>N. B. Bugüner</translator>
  <para>
    Belge yazarlarının çeşitli niteliklerin değerlerini bir tek
    nitelikte belirtebilmelerine imkan veren niteliklere
    <term>kestirme nitelikler</term> adı verilir.
  </para>
</article>]]></eg>

<p>Bu belgeciği bir belgeye yaraşır şekilde göstermek için önce hangi elemanların satıriçi (satır sonlandırmayan), hangilerinin bloklama (satır sonlandıran) elemanları olduklarını belirtmeliyiz.</p>

<eg>term { display: inline }
article, headline, translator, para { display: block }
article { background: #eee }</eg>

<p>İlk kural <htmltag>term</htmltag> elemanının satıriçi eleman olduğunu, ikincisi ise virgüllerle ayrılmış olarak diğer elemanların bloklama elemanı olduğunu belirtmektedir.</p>

<p>Bir XML belgeyi bir biçembentle ilintilendirmenin tek yolu bir işlem yönergesi kullanmaktır:</p>

<eg><![CDATA[<?xml-stylesheet type="text/css" href="bach.css"?>
<article>
  <headline>Kestirme nitelikler</headline>
  <translator>N. B. Bugüner</translator>
  <para>
    Belge yazarlarının çeşitli niteliklerin değerlerini bir tek
    nitelikte belirtebilmelerine imkan veren niteliklere
    <term>kestirme nitelikler</term> adı verilir.
  </para>
</article>]]></eg>

<p>Bir görsel tarayıcı bu örneği şöyle biçimleyecektir:</p>

<figure id="img-bach1">
<graphic source="images/kest1.png" alt="XML belge gösterim örneği"/>
[<loc href="images/longdesc/bach1-desc.html" title="İlk XML biçimleme örneğinin geniş açıklaması">Açıklama</loc>]
</figure>

<p>"kestirme nitelikler", satıriçi bir eleman olan <htmltag>term</htmltag>'in içeriği olduğundan paragrafın içinde kalacaktır.</p>

<p>Hala metin istediğimiz gibi biçimlenmiş değil. Örneğin, <htmltag>headline</htmltag> yazıtipini metnin kalanından daha büyük yapmamız ve çevirmenin ismini eğik yazıyla göstermemiz lazım:</p>

<eg>term { display: inline }
article, headline, translator, para { display: block }
article { background: #eee }
headline { font-size: 130% }
translator:before { content: "\c7 eviren: " }
translator { font-style: italic }
article, headline, translator, para { margin: 0.5em }
</eg>

<p>Bir görsel tarayıcı bu örneği şöyle biçimleyecektir:</p>

<figure id="img-bach2">
<graphic source="images/kest2.png" alt="XML belge gösterim örneği"/>
[<loc href="images/longdesc/bach2-desc.html" title="İkinci XML biçimleme örneğinin geniş açıklaması">Açıklama</loc>]
</figure>

<p>Biçembente başka kurallar da ekleyerek belgenin görünümünü iyileştirebilirsiniz.</p>
</div2>

<div2 id="processing-model">
<head>BB2 İşlem Modeli</head>
<p>Bu bölümde bir tarayıcının BB'yi nasıl desteklediği ile ilgili olası bir model sunulacaktır. Tamamen kavramsal bir model olup, asıl gerçeklenim biraz farklı olabilir.</p>

<p>Bu modelde, bir tarayıcı bir belge kaynağını işlerken şu aşamaları izler:</p>

<olist>
<item><p>Kaynak belgeyi çözümler ve bir <termref def="doctree">belge ağacı</termref> oluşturur.</p></item>

<item><p>Hedef <titleref ref="media">ortam türünü</titleref> belirler..</p></item>

<item><p>Hedef <titleref ref="media">ortam türü</titleref> için belirtilmiş bütün biçembentleri toplar.</p></item>

<item><p>Hedef <titleref ref="media">ortam türünde</titleref> uygulanabilen her <titleref ref="properties">nitelik</titleref> için tek bir değer atayarak belge ağacının her elemanını imler. Nitelikler <specref ref="cascade"/> bölümünde açıklanan mekanizmalarla ilgili olarak atanmış değerlerdir.</p>

<p>Değerin hesaplanan parçası hedef <titleref ref="media">ortam türüne</titleref> uygun biçimleme algoritmasına bağımlıdır. Örneğin, hedef ortam ekran ise, tarayıcılar <termref def="visuren">görsel biçimleme modelini</termref> uygulayacaklardır. Eğer hedef ortam türü bir yazıcı sayfası ise, tarayıcı <termref def="page-model">sayfalama modeli</termref>ni uygulayacaktır. Eğer hedef ortam örneğin bir konuşma bireştirici ise tarayıcı <titleref ref="aural">işitsel biçimleme modeli</titleref>ni uygulayacaktır.</p></item>

<item><p><indexterm><primary>biçimleme yapısı</primary></indexterm>
<termdef id="formatting-structure" term="Biçimleme yapısı">İmlenmiş bir belgeden bir <term>biçimleme yapısı</term> üretilir. Biçimleme yapısı belge ağacına çok benzemekle birlikte oldukça da farklıdır; bilhassa yazarlar sözde elemanları ve üretilen içeriği kullanmaya kalktıklarında bu ortaya çıkar. Öncelikle, biçimleme yapısının genelinde belge ağacı "şeklinde" olması gerekmektedir; ancak, eninde sonunda yapının doğası gerçeklenime bağlıdır. İkinci olarak, biçimleme yapısı  belge ağacındaki bilgiden daha azını veya daha çoğunu taşıyabilir. Örneğin, belge ağacındaki bir elemanın <property>display</property> niteliği <literal>none</literal> değerine sahip olsun; bu eleman biçimleme yapısında hiçbir şey üretmeyecektir. Diğer taraftan bir liste elemanı biçimleme yapısında belge ağacındakinden daha fazla bilgi üretebilir: liste elemanlarının içerikleri ve liste biçem bilgisi (madde imlerinin resimleri gibi)</termdef>.</p>

<p>BB destekli tarayıcıların bu aşamada belge ağacını değiştirmediğine dikkat ediniz. Özellikle, içerik üretimi biçembentlerden dolayı belge dili işlemcisine bir geri besleme sağlamaz (yeniden çözümleme gibi).</p></item>

<item><p>Biçimleme yapısı hedef ortama aktarılır (yani, yazıcı sayfayı basar, ekranda belge görüntülenir, konuşma bireştirici belgeyi seslendirir).</p></item>
</olist>

<p>1. adım bu belirtimin kapsamı dışında kalır (örn, <bibref ref="ref-DOM"/>'a bakabilirsiniz).</p>

<p>2.den 5.ye kadar olan adımlar bu belirtimin kapsamındadır.</p>

<p>6. adım da bu belirtimin kapsamı dışında kalır.</p>

<div3 id="intro31"><indexterm><primary>tuval</primary></indexterm>
  <head>Tuval</head>

<p><termdef id="canvas" term="Tuval">Bütün ortamlar için, <term>tuval</term> denilince, biçimleme yapısının gerçeklendiği uzayı anlayacağız. Tuval uzayda her boyutta sonsuz genişliktedir, fakat gerçekleme genelde  hedef ortamla ilişkili tarayıcı tarafından kurgulanan tuvalin belli bir bölümünde yer alır</termdef>. Örneğin, ekranı tuval olarak kullanan tarayıcılar için bir en küçük genişlik sözkonusudur ve <termref def="viewport">duyusal bölge</termref>nin boyutlarına dayalı bir başlangıç genişliği seçilir. Bir sayfayı tuval olarak kullanan tarayıcılar için genelde yükseklik ve genişlik kısıtlanır. İşitsel tarayıcılar ise ses uzayı ile sınırlıdırlar, fakat zaman boyutunda sınırlı değillerdir.</p>
</div3>

<div3 id="intro32"><head>BB2 adresleme modeli</head>
<p>BB2 <titleref ref="selector">seçicileri</titleref> ve nitelikleri biçembentlerin bir belgenin veya tarayıcının şu parçalarına başvurulmasını mümkün kılar:</p>

<ulist>
<item><p>Belge ağacındaki elemanlar ve bunlar arasındaki belli ilişkiler (<specref ref="selector"/> bölümüne bakınız).</p></item>

<item><p>Belge ağacındaki elemanların öznitelikleri ve bu özniteliklerin değerleri (<specref ref="attribute-selectors"/> bölümüne bakınız).</p></item>

<item><p>Eleman içeriğini bazı parçaları  (<selector>:first-line</selector> ve <selector>:first-letter</selector> sözde elemanlarının açıklamalarına bakınız).</p></item>

<item><p>Belli bir durumda olduklarında belge ağacındaki elemanlar (<specref ref="pseudo-classes"/> bölümüne bakınız).</p></item>

<item><p>Belge gerçekleneceği zaman <termref def="canvas">tuval</termref>in bazı özellikleri.</p></item>

<item><p>Bazı sistem bilgiler (<specref ref="ui"/> bölümüne bakınız).</p></item>
</ulist>
</div3>
</div2>

<div2 id="intro4">
<head>BB tasarım ilkeleri</head>

<p>BB2, ondan da önce BB1, belli tasarım ilkelerine dayandırılmışlardır:</p>

<ulist>
<item><p><kw>İleriye ve geriye yönelik uyumluluk</kw>. BB2 kullanıcı uygulamaları BB1 biçembentlerini anlayabilecektir. BB1 kullanıcı uygulamaları BB2 biçembentlerini okuyabilecek ve anlamadığı parçaları yoksayacaktır. Ayrıca, BB desteği olmayan tarayıcılar da biçemce zengin elemanları gösterebilecektir. Şüphesiz BB ile gerçeklenmeyecek biçemsel zenginleştirmeler yapmak mümkündür, fakat tüm içerik sunulacaktır.</p></item>

<item><p><kw>Yapısal belgeler için bütünleyicilik</kw>. Biçembentler imlenimin içerdiği metne biçemsel bilgi katarak yapısal belgeleri (HTML, XML gibi),  tamamlayan öğelerdir. İmlenime dokunmadan veya çok küçük bir değişiklikle biçembentte değişiklik yapmak kolay olmalıdır.</p></item>

<item><p><kw>Üretici, platform ve aygıtlara bağımlı olmamak</kw>. Biçembentler, belgelerin üretici, platform ve aygıtlara bağımlılığını ortadan kaldırır. Biçembentlerin kendileri zaten üretici ve platform bağımlısı değillerdir, fakat BB2 bir aygıtı (yazıcı gibi) hedef alan biçembenti seçmenize imkan verecektir.</p></item>

<item><p><kw>Sürdürülebilirlik</kw>. Belgelerden biçembentlere erişimi mümkün kılarak, site yöneticileri sitenin sürdürlebilirliğini kolaylaştırdıkları gibi sitenin tamamı için görsel ve anlamsal bütünlüğü sağlayabilirler. Örneğin, zemin renginde bir değişiklik olacaksa, sadece tek bir dosyanın değiştirilmesi yetecektir.</p></item>

<item><p><kw>Basitlik</kw>. BB2, BB1'den daha karmaşık olmasına rağmen, insanlar tarafından kolayca okunup yazılabilmesi nedeniyle daha basit kalır.  BB nitelikleri, olası en iyi genişlemeyi sağlamak adına birbirlerinden bağımsızdırlar ve genellikle belli bir etkiyi sağlamanın tek bir yolu vardır.</p></item>

<item><p><kw>Ağ başarımı</kw>. BB içerik sunumu için yoğun bir kodlama sağlar. Belli etkileri oluşturmak için yazarlar tarafından sıklakla kullanılan resim ve ses dosyalarına karşın biçembentler çoğunlukla içeriğin boyutlarını azaltırlar.  Ayrıca daha az ağ bağlantısı açılmasını ve ağın başarımının artmasını sağlarlar.</p></item>

<item><p><kw>Esneklik</kw>. BB içeriğe çeşitli yöntemlerle uygulanabilir. Anahtar özellik, belge gövdesini oluşturan elemanların özniteliklerinde, belge başlığında, ilintili biçembentlerde, kullanıcı biçembentlerinde ve öntanımlı (tarayıcınının kendi biçembendi) biçembentlerde bulunan biçem bilgilerinin bileşkesini oluşturma yeteneğidir.</p></item>

<item><p><kw>Zenginlik</kw>. Belge yazarlarının sağladığı zengin görsel ve duyumsal etkileşim bir ifade ortamı olarak Genel Ağ'a bir zenginlik katar. Tasarımcılar genellikle masaüstü yayıncılıkta ve diya gösterilerinde rastlanan işlevselliği arzular. Bazı etkilerin oluşturulma isteği aygıt bağımlılığı ile engellenir, fakat BB2'nin tasarımcıların isteklerini karşılamak için gidecek daha çok yolu vardır.</p></item>

<item><p><kw>Başka dillerle bağlantı kurabilme</kw>. Bu belirtimde açıklanan BB nitelikleri görsel ve işitsel sunumlar için kararlı bir biçimleme modeli oluşturur. Bu biçimleme modeline BB dili üzerinden ulaşılabilir, fakat diğer dillere de bağlantılar mümkündür. Örneğin, bir JavaScript kodu belli bir elemanın rengini (<property>color</property> niteliğini) özdevimli olarak değiştirebilir.</p></item>

<item><p><kw>Erişilebilirlik</kw>. Çeşitli BB özellikleri Genel Ağ'ı engelli kullanıcılara daha erişilebilir kılacaktır:</p>

<ulist>
<item><p>Yazıtipi görünümünü denetleyen nitelikler bit eşlemli metin resimlerinin sebep olduğu erişimsizliği ortadan kaldırmayı mümkün kılacaktır.</p></item>

<item><p>Konumlama nitelikleri imlenimde kurnazlıkla sağlanan (görünmeyen resimler gibi) yerleşim sorunlarını ortadan kaldıracaktır.</p></item>

<item><p>Belli sunum gereksinimleri olan kullanıcılar <code>!important</code> kuralları sayesinde yazarın biçembentlerini geçersiz kılabilecektir.</p></item>

<item><p>Yeni <literal>inherit</literal> değeri, bütün öznitelikler için bileşik genellemeyi arttıracak ve biçem ayarlamalarının daha kolay ve tutarlı olmasını sağlayacaktır.</p></item>

<item><p>Arttırılmış ortam desteği, ortam gruplarının ve üçnokta, kabartma ve tty ortam türlerinin dahil edilmesi kullanıcılara ve yazarlara belgeleri bu aygıtlara uyarlama imkanı sağlayacaktır.</p></item>

<item><p>İşitsel nitelikler sesli çıktı üzerinde daha fazla denetim verecektir.</p></item>

<item><p>Öznitelik seçiciler, <tt>attr()</tt> işlevi ve <property>content</property> niteliği başka içeriklere de erişmeyi mümkün kılacaktır.</p></item>

<item><p>Sayaçlar, bölüm ve paragraf numaralama belgede gezinebilirliği arttırabilir ve girintileme boşluklarından (körcül aygıtlar için önemlidir) kurtulmayı sağlayabilir. <property>word-spacing</property> ve <property>text-indent</property> nitelikleri de belgede fazladan boşluk ihtiyacını ortadan kaldırabilir.</p></item>
</ulist>

<note><p> Erişilebilir belgeleri BB ve HTML kullanarak tasarlamakla ilgili daha fazla bilgi için <bibref ref="ref-WAI-PAGEAUTH"/> belgesine bakınız.</p></note>
</item>
</ulist>
</div2>
</div1>

