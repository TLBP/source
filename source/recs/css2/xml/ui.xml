<?xml version='1.0' encoding='UTF-8'?>

<div1 id="ui">
  <head>Kullanıcı Arayüzü</head>
  <div2 id="cursor-props">
    <head>İmleçler: <property>cursor</property> niteliği</head>

<indexterm><primary><property>cursor</property></primary></indexterm>
<indexterm><primary>properties</primary> <secondary><property>cursor</property></secondary></indexterm>
<propinfo>
  <propname>cursor</propname>
  <value>[ [<valueref>uri</valueref> ,]* [ <literal>auto</literal> | <literal>crosshair</literal> | <literal>default</literal> | <literal>pointer</literal> | <literal>move</literal> | <literal>e-resize</literal> | <literal>ne-resize</literal> | <literal>nw-resize</literal> | <literal>n-resize</literal> | <literal>se-resize</literal> | <literal>sw-resize</literal> | <literal>s-resize</literal> | <literal>w-resize</literal> | <literal>text</literal> | <literal>wait</literal> | <literal>help</literal> ] ] | <literal>inherit</literal></value>
  <initial><literal>auto</literal></initial>
  <applies-to/>
  <inherited>yes</inherited>
  <percentages/>
  <media><termref def="visual-media-group">visual</termref>, <termref def="interactive-media-group">interactive</termref></media>
</propinfo>

<p>This property specifies the type of cursor to be displayed for
the pointing device. Values have the following meanings:</p>
<glist>
<gitem><label><literal>auto</literal></label>
<def><p>The UA determines the cursor to display based on the current
context.</p></def>
</gitem><gitem>
<label><literal>crosshair</literal></label>
<def><p>A simple crosshair (e.g., short line segments resembling a "+"
sign).</p></def>
</gitem><gitem>
<label><literal>default</literal></label>
<def><p>The platform-dependent default cursor. Often rendered as an
arrow.</p></def>
</gitem><gitem>
<label><literal>pointer</literal></label>
<def><p>The cursor is a pointer that indicates a link.</p></def>
</gitem><gitem>
<label><literal>move</literal></label>
<def><p>Indicates something is to be moved.</p></def>
</gitem><gitem>
<label><literal>e-resize, ne-resize, nw-resize, n-resize, se-resize,
sw-resize, s-resize, w-resize</literal></label>
<def><p>Indicate that some edge is to be moved. For example, the
'se-resize' cursor is used when the movement starts from the
south-east corner of the box.</p></def>
</gitem><gitem>
<label><literal>text</literal></label>
<def><p>Indicates text that may be selected. Often rendered as an
I-bar.</p></def>
</gitem><gitem>
<label><literal>wait</literal></label>
<def><p>Indicates that the program is busy and the user should wait.
Often rendered as a watch or hourglass.</p></def>
</gitem><gitem>
<label><literal>help</literal></label>
<def><p>Help is available for the object under the cursor. Often
rendered as a question mark or a balloon.</p></def>
</gitem><gitem>
<label><valueref>uri</valueref></label>
<def><p>The user agent retrieves the cursor from the resource
designated by the URI. If the user agent cannot handle the first
cursor of a list of cursors, it should attempt to handle the
second, etc. If the user agent cannot handle any user-defined
cursor, it must use the generic cursor at the end of the list.</p></def>
</gitem></glist>

<eg>p { cursor : url("mything.cur"), url("second.csr"), text; }</eg>
</div2>

<div2 id="system-colors">
  <head>User preferences for colors</head>

<p>In addition to being able to assign pre-defined <titleref ref="color-units">color values</titleref> to text, backgrounds,
etc., CSS2 allows authors to specify colors in a manner that
integrates them into the user's graphic environment. Style rules
that take into account user preferences thus offer the following
advantages:</p>

<olist>
<item><p>They produce pages that fit the user's defined look and
feel.</p></item>
<item><p>They produce pages that may be more accessible as the current
user settings may be related to a disability.</p></item>
</olist>

<p>The set of values defined for system colors is intended to be
exhaustive. For systems that do not have a corresponding value, the
specified value should be mapped to the nearest system attribute,
or to a default color.</p>

<p>The following lists additional values for color-related CSS
attributes and their general meaning. Any color property (e.g.,
<property>color</property> or <property>background-color</property>) can take
one of the following names. Although these are case-insensitive, it
is recommended that the mixed capitalization shown below be used,
to make the names more legible.</p>

<glist><gitem>
<label><literal>ActiveBorder</literal></label>
<def><p>Active window border.</p></def>
</gitem><gitem>
<label><literal>ActiveCaption</literal></label>
<def><p>Active window caption.</p></def>
</gitem><gitem>
<label><literal>AppWorkspace</literal></label>
<def><p>Background color of multiple document interface.</p></def>
</gitem><gitem>
<label><literal>Background</literal></label>
<def><p>Desktop background.</p></def>
</gitem><gitem>
<label><literal>ButtonFace</literal></label>
<def><p>Face color for three-dimensional display elements.</p></def>
</gitem><gitem>
<label><literal>ButtonHighlight</literal></label>
<def><p>Highlight color for three-dimensional display elements (for edges
facing away from the light source).</p></def>
</gitem><gitem>
<label><literal>ButtonShadow</literal></label>
<def><p>Shadow color for three-dimensional display elements.</p></def>
</gitem><gitem>
<label><literal>ButtonText</literal></label>
<def><p>Text on push buttons.</p></def>
</gitem><gitem>
<label><literal>CaptionText</literal></label>
<def><p>Text in caption, size box, and scrollbar arrow box.</p></def>
</gitem><gitem>
<label><literal>GrayText</literal></label>
<def><p>Grayed (disabled) text. This color is set to #000 if the
current display driver does not support a solid gray color.</p></def>
</gitem><gitem>
<label><literal>Highlight</literal></label>
<def><p>Item(s) selected in a control.</p></def>
</gitem><gitem>
<label><literal>HighlightText</literal></label>
<def><p>Text of item(s) selected in a control.</p></def>
</gitem><gitem>
<label><literal>InactiveBorder</literal></label>
<def><p>Inactive window border.</p></def>
</gitem><gitem>
<label><literal>InactiveCaption</literal></label>
<def><p>Inactive window caption.</p></def>
</gitem><gitem>
<label><literal>InactiveCaptionText</literal></label>
<def><p>Color of text in an inactive caption.</p></def>
</gitem><gitem>
<label><literal>InfoBackground</literal></label>
<def><p>Background color for tooltip controls.</p></def>
</gitem><gitem>
<label><literal>InfoText</literal></label>
<def><p>Text color for tooltip controls.</p></def>
</gitem><gitem>
<label><literal>Menu</literal></label>
<def><p>Menu background.</p></def>
</gitem><gitem>
<label><literal>MenuText</literal></label>
<def><p>Text in menus.</p></def>
</gitem><gitem>
<label><literal>Scrollbar</literal></label>
<def><p>Scroll bar gray area.</p></def>
</gitem><gitem>
<label><literal>ThreeDDarkShadow</literal></label>
<def><p>Dark shadow for three-dimensional display elements.</p></def>
</gitem><gitem>
<label><literal>ThreeDFace</literal></label>
<def><p>Face color for three-dimensional display elements.</p></def>
</gitem><gitem>
<label><literal>ThreeDHighlight</literal></label>
<def><p>Highlight color for three-dimensional display elements.</p></def>
</gitem><gitem>
<label><literal>ThreeDLightShadow</literal></label>
<def><p>Light color for three-dimensional display elements (for edges
facing the light source).</p></def>
</gitem><gitem>
<label><literal>ThreeDShadow</literal></label>
<def><p>Dark shadow for three-dimensional display elements.</p></def>
</gitem><gitem>
<label><literal>Window</literal></label>
<def><p>Window background.</p></def>
</gitem><gitem>
<label><literal>WindowFrame</literal></label>
<def><p>Window frame.</p></def>
</gitem><gitem>
<label><literal>WindowText</literal></label>
<def><p>Text in windows.</p></def>
</gitem></glist>

<example>
<p>For example, to set the foreground and background colors of a
paragraph to the same foreground and background colors of the
user's window, write the following:</p>

<eg>p { color: WindowText; background-color: Window }</eg>
</example>
</div2>

<div2 id="system-fonts">
<head>User preferences for fonts</head>

<p>As for colors, authors may specify fonts in a way that makes use
of a user's system resources. Please consult the <property>font</property> property for details.</p>
</div2>

<div2 id="dynamic-outlines">
<head>Dynamic outlines: the <code><kw>outline</kw></code> property</head>

<p>At times, style sheet authors may want to create outlines around
visual objects such as buttons, active form fields, image maps,
etc., to make them stand out. CSS2 outlines differ from <titleref ref="border-properties">borders</titleref> in the following ways:</p>

<olist>
<item><p>Outlines do not take up space.</p></item>
<item><p>Outlines may be non-rectangular.</p></item>
</olist>

<p>The outline properties control the style of these dynamic
outlines.</p>

<indexterm><primary>properties</primary> <secondary><property>outline</property></secondary></indexterm>
<indexterm><primary><property>outline</property></primary></indexterm>
<propinfo>
  <propname>outline</propname>
  <value>[ <valueref>outline-color</valueref> || <valueref>outline-style</valueref> || <valueref>outline-width</valueref> ] | <literal>inherit</literal></value>
  <initial>see individual properties</initial>
  <applies-to/>
  <inherited>no</inherited>
  <percentages/>
  <media><termref def="visual-media-group">visual</termref>, <termref def="interactive-media-group">interactive</termref></media>
</propinfo>

<indexterm><primary sortas="outline-width"><property>outline-width</property></primary></indexterm>
<indexterm><primary><valueref>outline-width</valueref></primary></indexterm>
<indexterm><primary>properties</primary> <secondary><property>outline-width</property></secondary></indexterm>
<propinfo role="asvalue">
  <propname>outline-width</propname>
  <value><valueref>kenar-çizgisi-genişliği</valueref> | <literal>inherit</literal></value>
  <initial><literal>medium</literal></initial>
  <applies-to/>
  <inherited>no</inherited>
  <percentages/>
  <media><termref def="visual-media-group">visual</termref>, <termref def="interactive-media-group">interactive</termref></media>
</propinfo>

<indexterm><primary sortas="outline-style"><property>outline-style</property></primary></indexterm>
<indexterm><primary><valueref>outline-style</valueref></primary></indexterm>
<indexterm><primary>properties</primary> <secondary><property>outline-style</property></secondary></indexterm>
<propinfo role="asvalue">
  <propname>outline-style</propname>
  <value><valueref>kenar-çizgisi-biçemi</valueref> | <literal>inherit</literal></value>
  <initial><literal>none</literal></initial>
  <applies-to/>
  <inherited>no</inherited>
  <percentages/>
  <media><termref def="visual-media-group">visual</termref>, <termref def="interactive-media-group">interactive</termref></media>
</propinfo>

<indexterm><primary sortas="outline-color"><property>outline-color</property></primary></indexterm>
<indexterm><primary><valueref>outline-color</valueref></primary></indexterm>
<indexterm><primary>properties</primary> <secondary><property>outline-color</property></secondary></indexterm>
<propinfo role="asvalue">
  <propname>outline-color</propname>
  <value><valueref>color</valueref> | <literal>invert</literal> | <literal>inherit</literal></value>
  <initial><literal>invert</literal></initial>
  <applies-to/>
  <inherited>no</inherited>
  <percentages/>
  <media><termref def="visual-media-group">visual</termref>, <termref def="interactive-media-group">interactive</termref></media>
</propinfo>

<p>The outline created with the outline properties is drawn "over"
a box, i.e., the outline is always on top, and doesn't influence
the position or size of the box, or of any other boxes. Therefore,
displaying or suppressing outlines does not cause reflow.</p>

<p>The outline is drawn starting just outside the <termref def="border-edge">border edge</termref>.</p>

<p>Outlines may be non-rectangular. For example, if the element is
broken across several lines, the outline is the minimum outline
that encloses all the element's boxes. In contrast to <titleref ref="border-properties">borders</titleref>, the outline is not open
at the line box's end or start, but is always fully connected.</p>

<p>The <property>outline-width</property> property
accepts the same values as<property>border-width</property>.</p>

<p>The <property>outline-style</property> property
accepts the same values as <property>border-style</property>, except that
'hidden' is not a legal outline style.</p>

<p><indexterm><primary><code>invert</code></primary></indexterm>
<termdef id="value-def-invert" term="invert keyword">The <property>outline-color</property> accepts all
colors, as well as the keyword <code>invert</code>. <code>invert</code> is expected to
perform a color inversion on the pixels on the screen. This is a
common trick to ensure the focus border is visible, regardless of
color background</termdef>.</p>

<p>The <property>outline</property>
property is a shorthand property, and sets all three of <property>outline-style</property>, <property>outline-width</property>, and <property>outline-color</property>.</p>

<note><p>Note that the outline is the same on all sides. In
contrast to borders, there is no 'outline-top' or 'outline-left'
property.</p></note>

<p>This specification does not define how multiple overlapping
outlines are drawn, or how outlines are drawn for boxes that are
partially obscured behind other elements.</p>

<note><p>Since the focus outline does not
affect formatting (i.e., no space is left for it in the box model),
it may well overlap other elements on the page.</p></note>

<example>
<p>Here's an example of drawing a thick outline around a BUTTON
element:</p>

<eg>BUTTON { outline-width : thick }</eg>

<p>Scripts may be used to dynamically change the width of the
outline, without provoking reflow.</p>
</example>

<div3 id="ui41"><head>Outlines and the focus</head>
<indexterm><primary>focus</primary></indexterm>
<p>Graphical user interfaces may use outlines around elements to
tell the user which element on the page has the <term>focus</term>. These outlines are in addition
to any borders, and switching outlines on and off should not cause
the document to reflow. The focus is the subject of user
interaction in a document (e.g., for entering text, selecting a
button, etc.). User agents supporting the <termref def="interactive-media-group">interactive media group</termref>
must keep track of where the focus lies and must also represent the
focus. This may be done by using dynamic outlines in conjunction
with the :focus pseudo-class.</p>

<example>
<p>For example, to draw a thick black line around an element when
it has the focus, and a thick red line when it is active, the
following rules can be used:</p>

<eg>:focus  { outline: thick solid black }
:active { outline: thick solid red }</eg>
</example>
</div3>
</div2>

<div2 id="ui5"><head>Magnification</head>

<p>The CSS working group considers that the magnification of a
document or portions of a document should not be specified through
style sheets. User agents may support such magnification in
different ways (e.g., larger images, louder sounds, etc.)</p>

<p>When magnifying a page, UAs should preserve the relationships
between positioned elements. For example, a comic strip may be
composed of images with overlaid text elements. When magnifying
this page, a user agent should keep the text within the comic strip
balloon.</p>

</div2>
</div1>

