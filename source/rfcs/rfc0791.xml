<?xml version="1.0" encoding="UTF-8"?>
<!-- ********************************************************************
     $Id: rfc0791.xml,v 1.8 2002/12/20 22:46:09 nilgun Exp $
     ********************************************************************-->
<article id="rfc791">
  <articleinfo>
    <title>Genel Ağ Protokolü (IP)</title>
    <subtitle>RFC 791</subtitle>
    <titleabbrev>RFC 791</titleabbrev>
    <authorgroup>
      <author role="editor">
        <firstname>Jon Postel</firstname>
      </author><author role="translator">
        <firstname>Tuğrul Bodur</firstname>
        <affiliation>
          <address><email>tugrulb@gmail.com</email></address>
        </affiliation>
      </author>
    </authorgroup>
    <pubdate>Mayıs 2006</pubdate>
    <revhistory>
      <revision>
        <revnumber>1.0</revnumber>
        <date>Mayıs 2006</date>
        <authorinitials>TB</authorinitials>
        <revremark>İlk çeviri</revremark>
      </revision><revision>
        <revnumber>Standart</revnumber>
        <date>Eylül 1981</date>
        <authorinitials>JP</authorinitials>
        <revremark>Özgün sürüm</revremark>
      </revision>
    </revhistory>
    <releaseinfo>
Information Sciences Institute<sbr/>
University of Southern California<sbr/>
4676 Admiralty Way<sbr/>
Marina del Rey, California  90291<sbr/>
<emphasis>tarafından</emphasis><sbr/>
Defense Advanced Research Projects Agency<sbr/>
Information Processing Techniques Office<sbr/>
1400 Wilson Boulevard<sbr/>
Arlington, Virginia  22209<sbr/>
<emphasis>için hazırlanmıştır.</emphasis><sbr/>
<sbr/>
Açıklama İsteği: 791<sbr/>
Geçersiz kıldıkları: RFC 760, IEN'ler: 128, 123, 111, 80, 54, 44, 41, 28, 26<sbr/>
Güncelleyen RFC: 1349<sbr/>
Durumu: Standart (STD0005)
    </releaseinfo>
    <legalnotice><title>Yasal Uyarı</title><para>
RFC'lerin yazarlarının hakları <ulink url="ftp://ftp.rfc-editor.org/in-notes/bcp/bcp78.txt">BCP 78</ulink> ile düzenlenmiştir. Dolayısıyla RFC çevirilerinin çevirmenlerinin haklarını da <link linkend="&bcp078;">BCP 78</link>'in düzenlediği kabul edilmiştir.
        </para><para>
Bu belge <ulink url="http://www.ietf.org/">IETF</ulink> tarafından yayınlanan resmi RFC791'in <emphasis role="bold">gayrıresmi</emphasis> çevirisidir ve aslının yerine kullanılamaz. Bu çevirinin hiçbir bağlamda ya da koşulda hükmü yoktur. Bu çeviri, anadili Türkçe olan Genel Ağ kullanıcılarının bu RFC hakkında fikir edinebilmelerini sağlamak amacıyla hazırlanmıştır.
  </para>
  <para>
BU BELGE "ÜCRETSİZ" OLARAK RUHSATLANDIĞI İÇİN, İÇERDİĞİ BİLGİLER İÇİN İLGİLİ KANUNLARIN İZİN VERDİĞİ ÖLÇÜDE HERHANGİ BİR GARANTİ VERİLMEMEKTEDİR. AKSİ YAZILI OLARAK BELİRTİLMEDİĞİ MÜDDETÇE TELİF HAKKI SAHİPLERİ VE/VEYA BAŞKA ŞAHISLAR BELGEYİ "OLDUĞU GİBİ", AŞİKAR VEYA ZIMNEN, SATILABİLİRLİĞİ VEYA HERHANGİ BİR AMACA UYGUNLUĞU DA DAHİL OLMAK ÜZERE HİÇBİR GARANTİ VERMEKSİZİN DAĞITMAKTADIRLAR. BİLGİNİN KALİTESİ İLE İLGİLİ TÜM SORUNLAR SİZE AİTTİR. HERHANGİ BİR HATALI BİLGİDEN DOLAYI DOĞABİLECEK OLAN BÜTÜN SERVİS, TAMİR VEYA DÜZELTME MASRAFLARI SİZE AİTTİR.
  </para>
  <para>
İLGİLİ KANUNUN İCBAR ETTİĞİ DURUMLAR VEYA YAZILI ANLAŞMA HARİCİNDE HERHANGİ BİR ŞEKİLDE TELİF HAKKI SAHİBİ VEYA YUKARIDA İZİN VERİLDİĞİ ŞEKİLDE BELGEYİ DEĞİŞTİREN VEYA YENİDEN DAĞITAN HERHANGİ BİR KİŞİ, BİLGİNİN KULLANIMI VEYA KULLANILAMAMASI (VEYA VERİ KAYBI OLUŞMASI, VERİNİN YANLIŞ HALE GELMESİ, SİZİN VEYA ÜÇÜNCÜ ŞAHISLARIN ZARARA UĞRAMASI VEYA BİLGİLERİN BAŞKA BİLGİLERLE UYUMSUZ OLMASI) YÜZÜNDEN OLUŞAN GENEL, ÖZEL, DOĞRUDAN YA DA DOLAYLI HERHANGİ BİR ZARARDAN, BÖYLE BİR TAZMİNAT TALEBİ TELİF HAKKI SAHİBİ VEYA İLGİLİ KİŞİYE BİLDİRİLMİŞ OLSA DAHİ, SORUMLU DEĞİLDİR.
  </para>
  <para>
Tüm telif hakları aksi özellikle belirtilmediği sürece sahibine aittir. Belge içinde geçen herhangi bir terim, bir ticari isim ya da kuruma itibar kazandırma olarak algılanmamalıdır. Bir ürün ya da markanın kullanılmış olması ona onay verildiği anlamında görülmemelidir.
  </para>
    </legalnotice>
    <abstract><para>
Bu belge Genel Ağ Protokolünün belirtimidir. Genel Ağ Protokolü paket anahtarlamalı bilgisayar iletişim ağlarını birbirine bağlayan sistemlerde kullanmak için tasarlanmıştır.  Genel Ağ Protokolü kaynakların ve hedeflerin sabit uzunluktaki adreslerle tanınan konaklar olduğu ağlarda verikatarı denilen veri bloklarının kaynaktan hedefe aktarımı için tüm gereksinimleri sağlar. Genel Ağ Protokolü ayrıca, gerektiğinde, "küçük paketli" ağlarda aktarım için uzun verikatarların bölünmesi ve yeniden birleştirilmesi için de tüm gereksinimleri sağlar.
    </para></abstract>
  <atomEntry>
    <link rel="alternate" href="http://belgeler.org/rfc/rfc791.html" hreflang="tr_TR" type="text/html" title="RFC 791"/>
    <link rel="related" href="http://adsl.belgeler.org/source/rfcs/rfc0791.xml" hreflang="tr_TR" type="application/xml" title="RFC 791"/>
    <title type="text/html">RFC 791 - Genel Ağ Protokolü (IP)</title>
    <id>belgeler.org:rfc:rfc791</id>
    <author role="editor"><name>John Postel</name></author>
    <author role="translator"><name>Tuğrul Bodur</name></author>
    <created>2006-06</created>
    <modified>2006-09-18</modified>
    <rights type="application/xhtml+xml">
      <div xmlns="http://www.w3.org/1999/xhtml"><p>RFC'lerin yazarlarının hakları <a href="ftp://ftp.rfc-editor.org/in-notes/bcp/bcp78.txt">BCP 78</a> ile düzenlenmiştir. Dolayısıyla RFC çevirilerinin çevirmenlerinin haklarını da BCP 78'in düzenlediği kabul edilmiştir.</p></div>
    </rights>
  </atomEntry>
</articleinfo>

<dedication><title>Önsöz</title>
<blockquote><para>
Bu belge ABD Savunma Bakanlığı (DoD) Standart Genel Ağ Protokolünün belirtimidir. Bu standardın üzerine inşa edildiği daha önceki altı ARPA Genel Ağ Protokolü belirtimi vardır ve belirtimin metni ağırlıkla bunların metinlerinden oluşmuştur. Gerek metin gerekse kavramsal olarak bu çalışmaya pek çok kişi destek oldu. Bu sürümde adresleme teknikleri, hata yakalama, seçenek kodları ve güvenlik, üstünlük, bölümler ve Genel Ağ Prokolünün kısıtlayıcı özellikleri tekrar gözden geçirilip düzeltilmiştir.
</para><attribution>Jon Postel<sbr/>Editor</attribution>
</blockquote>
</dedication>

<sect1 id="rfc791-s1"><title>Giriş</title>
<sect2><title>Motivation</title>
<para>
Genel Ağ Protokolü paket anahtarlamalı haberleşme ağlarının arabağlantılı sistemlerinde kullanılmak için tasarlanmıştır. Böyle sistemlere "catenet" [<xref linkend="rfc791-bib1"/>] adı verilir (Türkçeye "ağ zinciri" olarak çevrilebilir). Genel Ağ protokolü hedef ve kaynağın sabit uzunluklu adreslerle tanımlanan konaklar olduğu bir sistemde, kaynaktan hedefe verikatarı adı verilen veri bloklarının aktarımı içindir. Genel Ağ protokolü ayrıca uzun verikatarlarının küçük paketli ağlarda aktarılması için gerekli ise dilimlenmesini ve yeniden birleştirilmesini de sağlar.
</para>
</sect2>

<sect2><title>Etki Alanı</title>
<para>
Genel Ağ protokolü özellikle arabağlantılı ağ sistemlerinde bit paketlerinin (bir Genel Ağ verikatarı) kaynaktan hedefe teslimini gerektiren işlevleri sağlayacak kapsamda sınırlanmıştır. Uçtan uca veri güvenliğini artıran, akış denetimini, ardışıllığı ya da konaktan konağa protokollerde genelde bulunan diğer hizmetleri sağlayan bir baska mekanizma yoktur. Genel Ağ protokolü desteklendiği ağlarda çeşitli kalite ve türdeki hizmetlerden yararlanabilir.
</para>
</sect2>

<sect2><title>Arayüzler</title>
<para>
Bu protokol Genel Ağ ortamında konaktan konağa protokoller tarafından çağrılır. Bu protokol Genel Ağ verikatarlarını bir sonraki ağgeçidine veya hedef konağa taşıyacak yerel ağ protokollerini çağırır.
</para><para>
Örneğin, bir TCP modülü bir Genel Ağ verikatarının veri taşıyan kısmı olarak bir TCP veribölütünü (TCP başlığı ve kullanıcı verisi içerir) alacak Genel Ağ modülünü çağırır. TCP modulü adresleri ve diğer parametreleri Genel Ağ modülüne çağrı argümanı olarak Genel Ağ başlığında sağlar. Genel Ağ modülü de bir Genel Ağ verikatarı oluşturur ve bunu aktarmak için yerel ağ arayüzüne çağrı yapar.
</para><para>
ARPANET durumunda, örneğin, arayüz denetim işlemcisine (IMP) aktarılacak bir ARPANET iletisi oluşturmak için Genel Ağ verikatarına 1822 denetim bilgisini [<xref linkend="rfc791-bib2"/>] ekleyen bir yerel ağ modülünü çağırır. ARPANET adresi yerel ağ arayüzü tarafından Genel Ağ adresinden türetilir ve ARPANET'te diğer ağlar için bir ağgeçidi olabilen bir konağın adresi olur.
</para>
</sect2>

<sect2><title>İşlemler</title>
<para>
Genel Ağ protokolü iki temel işlevi gerçekleştirir: adresleme ve dilimleme.
</para><para>
Genel Ağ modülleri Genel Ağ verikatarlarını hedefe doğru taşırken Genel Ağ başlığında bulunan adresleri kullanır. Aktarım için yol seçimi yönlendirme olarak adlandırılır.
</para><para>
Genel Ağ modülleri gerektiğinde Genel Ağ verikatarlarını "küçük paket" ağlarında taşıyabilmek için dilimleme ve tekrar birleştirme işlemleri için Genel Ağ başlığındaki alanları kullanır.
</para><para>
İşlem modeli Genel Ağ iletişimine adanmış konaklarda ve arabağlantılı ağlardaki ağgeçitlerinde yer alan bir Genel Ağ modülüdür. Bu modüller Genel Ağ verikatarlarındaki adres alanlarını yorumlamak için ve verikatarlarını dilimleyip tekrar birleştirmek için ortak kuralları paylaşırlar. Ek olarak, bu modüller yönlendirme kararları ve diğer işlevler için (özellikle ağgeçitlerinde) bazı yöntemlere sahiptir.
</para><para>
Genel Ağ protokolü her Genel Ağ verikatarına diğer verikatarlarıyla ilgisi olmayan bağımsız birer varlık gibi davranır. Başka bir bağlantı ya da mantıksal devre yoktur (sanal olsun olmasın).
</para><para>
Genel Ağ protokolü hizmetlerini sunmak için dört anahtar mekanizma kullanır: Hizmet Türü, Yaşam Süresi, Seçenekler ve Başlık Sağlama Özeti.
</para><para>
Hizmet Türü istenen hizmet kalitesini belirtmek için kullanılır. Hizmet türü Genel Ağı oluşturan ağlarda sunulan hizmet seçimlerini tanımlamak için genellenmiş veya soyutlanmış bir parametreler kümesidir. Bu hizmet türü belli bir ağ için asıl aktarım parametrelerini seçecek ağgeçitleri tarafından kullanılmak içindir; belli bir ağ: Genel Ağ verikatarını yönlendirirken sonraki sıçrama noktası veya sonraki ağgeçidine ulaşmak için kullanılan ağ.
</para><para>
Yaşam Süresi bir Genel Ağ verikatarının ömrünün üst sınırı gösterir. O verikatarının göndericisi tarafından ayarlanır ve yönlendirme boyunca işlendiği her noktada azaltılır. Yaşam Süresi hedefe ulaşmadan sıfır olursa Genel Ağ verikatarı yok edilir. Yaşam Süresi kendi kendini yoketme zamanının sınırı olarak düşünülebilir.
</para><para>
Seçenekler en bilinen iletişimlerde gerekli olmamasına rağmen bazı durumlarda kullanışlı hatta gerekli olan denetim işlevleri sunar. Bu seçenekler zaman damgaları, güvenlik ve özel yönlendirme  için gereken önlemleri içerir.
</para><para>
Başlık Sağlama Özeti Genel Ağ verikatarının hatasız aktarılması işleminde kullanılan bilginin bir doğrulamasını sağlar. Veri hatalar içerebilir. Eğer başlık sağlaması başarısız olursa, hatayı anlayan öğe tarafından anında yok edilir.
</para><para>
Genel Ağ protokolü güvenli bir iletişim imkanı sunmaz. Gerek uçtan uca gerekse sıçrama noktasından sıçrama noktasına hiçbir alındılama işlemi yoktur. Veri için başlık sağlama özeti dışında hiçbir hata denetimi yoktur. Yeniden aktarım ya da akış denetimi mekanizmaları yoktur.
</para><para>
Saptanan hatalar Genel Ağ protokol modülünde gerçeklenen Genel Ağ Denetim İletisi Protokolü (Genel Ağ Control Message Protocol - ICMP) [<xref linkend="rfc791-bib3"/>] aracılığıyla raporlanabilir.
</para>
</sect2>
</sect1>

<sect1 id="rfc791-s2"><title>Tanıtım</title>
<sect2 id="rfc791-s21" chunkthis="1"><title>Diğer Protokollerle İlişkisi</title>
<para>
Aşağıdaki şekil Genel Ağ Prokolünün protokol hiyerarşisindeki yerini gösteriyor:
</para><para><figure><title>Protokol İlişkileri</title>
<literallayout indent="0">
    +------+ +-----+ +-----+     +-----+
    |Telnet| | FTP | | TFTP| ... | ... |  Uygulama Seviyesi
    +------+ +-----+ +-----+     +-----+
          |   |         |           |
        +-----+     +-----+     +-----+
        | TCP |     | UDP | ... | ... |  Konak Seviyesi
        +-----+     +-----+     +-----+
            |           |           |
        +--------------------------+----+
        |  Genel Ağ Protokolü ve ICMP   |  Ağgeçidi Seviyesi
        +--------------------------+----+
                        |
          +---------------------------+
          |     Yerel Ağ Protokolü    |    Ağ Seviyesi
          +---------------------------+

       Protokollerin Birbirleriyle İlişkileri
</literallayout>
</figure></para><para>
Genel Ağ prokotokolü bir tarafta daha yüksek seviyeli konaktan konağa protokollerle diğer taraftaki yerel ağ protokollerine bir arayüzdür. Buradaki yerel ağ bir bina ya da ARPANET gibi daha büyük bir ağ içindeki küçük bir ağ olabilir.
</para>
</sect2>

<sect2 id="rfc791-s22" chunkthis="1"><title>İşleme Modeli</title>
<para>
Bir verikatarını bir uygulama programından diğerine aktarımı için kullanılan işlem modeli aşağıdaki senaryoda şekillendirilmiştir:
</para><itemizedlist><listitem><para>
Bu aktarımın bir aracı ağgeçidi gerektireceğini varsayıyoruz.
</para></listitem><listitem><para>
Gönderen uygulama programı verisini hazırlar ve bu veriyi bir verikatarı olarak yollayacak yerel Genel Ağ modülünü, hedef adresini ve diğer parametreleri çağrı argümanları olarak belirterek çağırır.
</para></listitem><listitem><para>
Genel Ağ modülü bir verikatarı başlığı hazırlar ve veriyi ona iliştirir. Genel Ağ modülü bu Genel Ağ adresi için bir yerel ağ adresi saptar; bu durumda bu adres bir ağgeçidi adresi olacaktır.
</para></listitem><listitem><para>
Bu verikatarını ve yerel ağ adresini yerel ağ arayüzüne gönderir.
</para></listitem><listitem><para>
Yerel ağ arayüzü bir yerel ağ başlığı oluşturup bunu verikatarına iliştirir ve sonucu yerel ağ üzerinden gönderir.
</para></listitem><listitem><para>
Verikatarı yerel ağ başlığında paketlenmiş bir şekilde bir ağgeçidi konağına ulaşır, yerel ağ arayüzü bu başlığı ayırır ve verikatarını Genel Ağ modülüne yöneltir. Genel Ağ modülü Genel Ağ adresinden bu verikatarının ikinci ağdaki diğer bir konağa ilerletileceğini saptar. Genel Ağ modülü hedef konak için bir yerel ağ adresi saptar. Verikatarının gönderileceği ağın yerel ağ arayüzüne çağrı yapar.
</para></listitem><listitem><para>
Bu yerel ağ arayüzü yerel bir ağ başlığı oluşturur ve hedef konağa gönderilmek üzere verikatarına ekler.
</para></listitem><listitem><para>
Bu hedef konakta verikatarı yerel ağ arayüzü tarafından yerel ağ başlığından ayrılır ve Genel Ağ modülüne verilir.
</para></listitem><listitem><para>
Genel Ağ modülü bu verikatarının konaktaki hangi uygulama programı için olduğunu saptar. Genel Ağ modülü kaynak adresi ve diğer parametreleri çağrı sonucu olarak aktararak bir sistem çağrısının yanıtında uygulama programına veriyi aktarır.
</para></listitem></itemizedlist>
<figure><title>Aktarım Yolu</title>
<literallayout indent="0">
   Uygulama                                            Uygulama
   Programı                                            Programı
         \                                             /
       Genel Ağ Modülü   Genel Ağ Modülü   Genel Ağ Modülü
             \              /       \             /
             YAA-1       YAA-1      YAA-2      YAA-2
                \        /             \       /
                Yerel Ağ 1             Yerel Ağ 2

                          Aktarım Yolu
</literallayout>
</figure>
</sect2>

<sect2 id="rfc791-s23" chunkthis="1"><title>İşlev Açıklaması</title>
<para>
Genel Ağ Protokolünün amacı ya da işlevi verikatarlarını bir arabağlantılı ağ kümesi boyunca taşımaktır. Bu, hedefe ulaşıncaya kadar verikatarını bir Genel Ağ modülünden diğerine aktararak yapılır. Genel Ağ modülleri Genel Ağ sistemindeki ağgeçitlerinde ve konaklarda bulunur. Verikatarlarının bir Genel Ağ modülünden diğerine tek tek ağlar boyunca yönlendirilmesi bir adresin yorumlanmasına oturtulmuştur. Bu durumda, Genel Ağ protokolünün önemli bir mekanizması Genel Ağ adresi olmaktadır.
</para><para>
İletilerin bir Genel Ağ modülünden diğerine yönlendirilmesinde, verikatarlarının, azami paket boyutu verikatarınınkinden küçük olan ağlar boyunca hareket etmesi gerekli olabilir. Bu zorluğun üstesinden gelmek için, Genel Ağ protokolünde bir dilimleme mekanizması bulunur.
</para><para>
<variablelist><varlistentry>
  <term>Adresleme</term><listitem><para>
Ayrım isimler, adresler ve rotalar arasında yapılır [<xref linkend="rfc791-bib4"/>]. Bir isim bizim ne aradığımızı gösterir. Bir adres onun nerede olduğunu gösterir. Rota ise oraya nasıl ulaşılacağını gösterir. Genel Ağ protokolü öncelikli olarak adreslerle uğraşır. Yüksek seviyeli protokollerin (örn, konak veya uygulama seviyesi) görevi isimleri adreslere eşlemektir. Genel Ağ modülü ise Genel Ağ adreslerini yerel ağ adresleriyle eşler. Yerel ağ adreslerini rotalara eşlemek ise daha düşük seviyeli (yerel ağ veya ağgeçidi gibi) yordamların görevidir.
</para><para>
Adresler dört sekizliden oluşan sabit uzunluktadırlar. Bir adres ağ numarası ile başlar, yerel adres ile devam eder. Genel Ağ adreslerinin üç biçimi ya da sınıfı vardır: a sınıfında, yüksek bit sıfır, sonraki yedi bit ağ için ve son 24 bit ise yerel adres içindir; b sınıfında, yüksek iki bit bir ve sıfır, sonraki 14 bit ağ için ve son 16 bit yerel adres içindir; c sınıfında ise yüksek üç bit bir-bir-sıfır, sonraki 21 bit ağ için ve son 8 bit ise yerel adres içindir.
</para><para>
Genel Ağ adreslerini yerel ağ adreslerine eşlerken dikkatli olunmalıdır; bir tek yerel konak birçok farklı Genel Ağ adresini kullanarak bir çok farklı konakmış gibi davranabilir. Bazı konaklar ayrıca birkaç fiziksel arayüze sahiptir (çok evlilik).
</para><para>
Yani, herbirinin çeşitli Genel Ağ adresleri olan çok sayıda fiziksel ağ arayüzüne sahip bir konak için önlem alınmış olmalıdır.
</para><para>
Adres eşleme örnekleri [<xref linkend="rfc791-bib5"/>]'teki "Adres Eşleme" bölümünde bulunabilir.
</para></listitem></varlistentry><varlistentry>
  <term>Dilimleme</term><listitem><para>
Bir Genel Ağ verikatarının dilimlenmesi, büyük paket boyutuna sahip bir ağdan kaynaklanan bir verikatarının hedefe ulaşabilmek için daha küçük paket boyutlarına sahip bir yerel ağdan geçmesi icabediyorsa gerekir.
</para><para>
Bir Genel Ağ verikatarı "dilimlenmeyecek" diye işaretlenebilir. Böyle işaretlenmiş bir Genel Ağ verikatarı hiçbir durumda dilimlenmez. Eğer Genel Ağ verikatarı dilimlenmeyecek diye imlenmişse ve hedefe ulaşması için mutlaka dilimlenmesi gerekiyorsa dilimlemek yerine yokedilir.
</para><para>
Dilimleme, aktarım ve birleştirme, Genel Ağ protokol modülüne görünmez olan bir yerel ağ içinden geçerken ağiçi dilimlenme adını alır ve belki [<xref linkend="rfc791-bib6"/>] kullanılabilir.
</para><para>
Genel Ağ dilimleme ve birleştirme yöntemleri bir verikatarını daha sonra birleştirilebilecek sayıda dilinmesine gerek duyar. Veridiliminin alıcısı veridilimini farklı verikatarlarının veridilimleri ile karıştırmamak için betimleme alanını kullanır. Veridilimi başlangıç alanı alıcıya veridiliminin özgün verikatarındaki yerini gösterir. Veridilimi başlangıcı ve uzunluğu bu veridilimi tarafından kapsanan orijinal verikatarı bölümünü belirler. Kalan Veridilimleri bayrağı son veridilimini belirtir. Bu alanlar verikatarını tekrar oluşturmak için yeterli bilgiyi sağlar.
</para><para>
Betimleme alanı verikatarının bir dilimini diğerinden ayırmak için kullanılır. Bir Genel Ağ verikatarının kaynaklandığı protokol modülü, Genel Ağ sisteminde verikatarının etkin olacağı süre içinde protokol ve bu kaynak-hedef çifti için eşsiz olacak bir değeri Betimleme alanına atar. Verikatarının tamamının kaynaklandığı protokol modülü Kalan Veridilimleri bayrağını sıfırlar ve Veridilimi Başlangıcı alanına sıfır değerini atar.
</para><para>
Uzun bir Genel Ağ verikatarını dilmek için, bir Genel Ağ protokol modülü (örn, ağgeçidinde), iki  Genel Ağ veridilimi oluşturur ve Genel Ağ başlık alanlarının içeriğini verikatarından bu iki veridiliminin Genel Ağ başlığına kopyalar. Verikatarının verisi 8 sekizli (64 bit) cinsinden ölçülen bloklar halinde iki veridilimine bölünür (İkinci veridilimi 8 sekizlinin katlarından oluşmayabilir ama birincisi oluşmak zorundadır). Çağrı 8 sekizlilik blok sayısı içinde ilk veridiliminin DBS (Dilim Bloklarının Sayısı) için yapılır. Verinin ilk kısmı ilk Genel Ağ veridiliminde yer alır ve Toplam Uzunluk alanına ilk veridiliminin uzunluğu atanır. Kalan Veridilimleri bayrağına bir atanır. Verinin ikinci kısmı ikinci Genel Ağ veridilimine yerleştirilir, Toplam Uzunluk alanına ikinci veridiliminin uzunluğu atanır. Kalan Veridilimleri bayrağı verikatarınınki ile aynı değeri taşır. İkinci Genel Ağ veridiliminin Veridilimi Başlangıcı alanına uzun verikatarındaki alanın değeri artı DBS atanır.
</para><para>
Bu yöntem açıklanan ikili ayırmaya göre daha çok kullanılan bir n-li ayırma için genelleştirilebilir.
</para><para>
Bir Genel Ağ verikatarının dilimlerinin montajı için, bir Genel Ağ protokol modülü şu dört alan için aynı değere sahip Genel Ağ veridilimlerini birleştirir: Betimleme, Kaynak, Hedef ve Protokol. Birleştirme, her veridiliminin veri bölümlerinin veridiliminin Genel Ağ başlığındaki Veridilimi Başlangıcı tarafından belirtilen göreli konuma yerleştirilmesi suretiyle yapılır. İlk veridiliminin Veridilimi Başlangıcı ve son veridiliminin Kalan Veridilimleri bayrağı sıfır olacaktır.
</para></listitem></varlistentry></variablelist>
</para>
</sect2>

<sect2 id="rfc791-s24" chunkthis="1"><title>Ağgeçitleri</title>
<para>
Ağgeçitleri ağlar arasında verikatarlarını taşıyacak Genel Ağ protokolünü gerçekler. Ağgeçitleri ayrıca yönlendirmeyi  ve diğer Genel Ağ denetim bilgilerini yönetmek için ağgeçitleri arası protokolü (Gateway to Gateway Protocol - GGP) [<xref linkend="rfc791-bib7"/>] gerçekler.
</para><para>
Ağgeçitlerinde daha yüksek seviyeli protokollerin gerçeklenmemesi ve GGP işlevlerinin IP modülüne eklenmesi gerekir.
</para><figure><title>Ağgeçidi Protololleri</title>
<literallayout indent="0">
    +---------------------------------+
    | Genel Ağ Protokolü, ICMP ve GGP |
    +---------------------------------+
            |                 |
    +--------------+   +--------------+
    |   Yerel Ağ   |   |   Yerel Ağ   |
    +--------------+   +--------------+

          Ağgeçidi Protokolleri
</literallayout>
</figure>
</sect2>
</sect1>

<sect1 id="rfc791-s3"><title>Belirtim</title>
<sect2 id="rfc791-s31" chunkthis="1"><title>Genel Ağ Başlığı Biçimi</title>
<para>
Genel Ağ başlığının içeriği özet olarak şöyledir:
</para><figure><title>Genel Ağ Verikatarı Başlığı Örneği</title>
<literallayout indent="0">
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1  &lt;= Bitler
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Sürüm |  IBU  |  Hizmet Türü  |        Toplam uzunluk         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|          Betimleme            |Brklr|  Veridilimi Başlangıcı  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  Yaşam Süresi |    Protokol   |      Başlık Sağlama Özeti     |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                       Kaynak adres                            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                       Hedef adres                             |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                    Seçenekler                 |     Dolgu     |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

              Genel Ağ Verikatarı Başlığı Örneği
</literallayout>
</figure>
<variablelist><varlistentry>
  <term>Sürüm:  4 bit</term><listitem><para>
Sürüm alanı Genel Ağ başlığının biçimini belirler. Bu belgede 4. sürüm açıklanmıştır.
</para></listitem></varlistentry><varlistentry>
  <term>IBU:  4 bit</term><listitem><para>
Genel Ağ Başlık Uzunluğu 32 bitlik sözcükler cinsinden Genel Ağ başlığının uzunluğudur. Doğru başlık için asgari değerin 5 olacağına dikkat ediniz.
</para></listitem></varlistentry><varlistentry>
  <term>Hizmet Türü:  8 bit</term><listitem><para>
Hizmet Türü istenilen hizmet kalitesinin soyutlanmış parametlerine bir gösterim sağlar. Bu parametreler verikatarı belli bir ağ boyunca aktarılırken asıl hizmet parametrelerin seçiminde kullanılır. Bazı ağlar yüksek öncelikli trafiğin diğer trafikten daha önemli olarak ele alındığı bir üstünlük hizmeti sunarlar (genellikle aşırı yüklü durumlarda sadece belli bir üstünlük seviyesinin üstündeki trafiği kabul ederek). Ana seçim, düşük gecikme, yüksek güvenirlik ve yüksek işlem gücü arasındaki bir üçlü ödünleşimdir.
</para><para>
<literallayout indent="0">
      Bits 0-2:  Üstünlük.
      Bit    3:  0 = Normal Gecikme (G),          1 = Düşük Gecikme.
      Bits   4:  0 = Normal İşlem Gücü (İ),       1 = Yüksek İşlem Gücü.
      Bits   5:  0 = Normal Güvenilirlik (Ü),     1 = Yüksek Güvenilirlik.
      Bit  6-7:  Gelecekte kullanım için ayrılmış.

         0     1     2     3     4     5     6     7
      +-----+-----+-----+-----+-----+-----+-----+-----+
      |                 |     |     |     |     |     |
      |     ÜSTÜNLÜK    |  G  |  İ  |  Ü  |  0  |  0  |
      |                 |     |     |     |     |     |
      +-----+-----+-----+-----+-----+-----+-----+-----+

        Öncelik

          111 - Ağ Denetimi
          110 - Ağlararası Denetim
          101 - Yaşamsal/velvele
          100 - Yıldırımüstü
          011 - Yıldırım
          010 - Acil
          001 - Öncelikli
          000 - Sıradan
</literallayout>
</para><para>
Gecikme, İşlem Gücü ve Güvenirlik imlerinin kullanımı hizmet maliyetini arttırabilir. Çoğu ağda bu parametrelerden biri için daha iyi olan başarım diğeri üstündeki daha kötü başarımla birleştirilir. Çok elverişsiz durumlar dışında bu üç imden en fazla ikisi etkinleştirilmelidir.
</para><para>
Hizmet türü Genel Ağ sistemindeki aktarımı boyunca verikatarının ele alınışını belirtmede kullanılır. Genel Ağ hizmet türünün AUTODIN II, ARPANET, SATNET ve PRNET gibi ağlar üzerindeki asıl hizmetlerle örnek eşlemleri [<xref linkend="rfc791-bib8"/>]'deki "Hizmet Eşleme" bölümünde verilmiştir.
</para><para>
Ağ Denetim üstünlüğü tasarımı sadece bir ağ içinde kullanmak için düşünülmüştür. Bu tasarımın asıl kullanım ve denetimi her ağ için'e genişletilmiştir. Ağlararası Denetim tasarımı sadece ağgeçidi denetim tasarımcıları tarafından kullanılması için düşünülmüştür. Bu üstünlük tasarımlarının asıl kullanımı belli bir ağ ile ilgili olmasıysa, kullanımları ve erişim denetimleri bu ağın sorumluluğundadır.
</para></listitem></varlistentry><varlistentry>
  <term>Toplam Uzunluk:  16 bit</term><listitem><para>
Toplam uzunluk verikatarının sekizli cinsinden Genel Ağ başlığı ve veri dahil uzunluğudur. Bu alan 65535 sekizliye kadar verikatarı uzunluğunu mümkün kılar. Böyle uzun verikatarları çoğu konak ve ağ için uygulanamaz. Bütün konaklar 576 sekizliye kadar verikatarlarını (tamamen veya veridilimleri olarak) kabul etmek için hazırlanmıştır. Tasarımlarının daha büyük verikatarlarını kabul edecek şekilde hazırlandığının güvencesi veriliyorsa sadece bu konaklara 576 sekizliden büyük verikatarlarının gönderilmesi önerilir.
</para><para>
576 sayısı  makul boyutlu bir veri bloğunun gerekli başlık bilgileri eklenerek aktarımını mümkün kılacak şekilde seçilmiştir. Örneğin bu boyut 512 sekizliden oluşan veri bloğuna ek olarak 64 sekizliden oluşan bir  başlık taşımaya uygundur. Azami Genel Ağ başlığı 60 sekizliden ve sıradan bir Genel Ağ başlığı ise daha yüksek seviyeli protokollerin başlıkları için bir girintiye izin veren 20 sekizliden oluşur.
</para></listitem></varlistentry><varlistentry>
  <term>Betimleme:  16 bit</term><listitem><para>
Bir verikatarının veridilimlerinin montajına yardımcı olmak için gönderici tarafından atanan bir betimleme değeri.
</para></listitem></varlistentry><varlistentry>
  <term>Bayraklar:  3 bit</term><listitem><para>
Çeşitli Denetim Bayrakları.
</para><para>
<literallayout indent="0">
    Bit 0: yedektir, sıfır olmalı
    Bit 1: (DY) 0 = Dilimlenebilir,  1 = Dilimlenmeyecek.
    Bit 2: (KD) 0 = Son Veridilimi,  1 = Kalan Veridilimleri.

        0   1   2
      +---+---+---+
      |   | D | K |
      | 0 | Y | D |
      +---+---+---+
</literallayout>
</para></listitem></varlistentry><varlistentry>
  <term>Veridilimi Başlangıcı:  13 bit</term><listitem><para>
Bu alan veridiliminin verikatarındaki yerini belirtir.
</para><para>
Veridilimi başlangıcı 8 sekizliden (64 bitlik) oluşan birimlerle ölçülür. İlk veridiliminin başlangıcı sıfırdır.
</para></listitem></varlistentry><varlistentry>
  <term>Yaşam Süresi:  8 bit</term><listitem><para>
Bu alan verikatarının Genel Ağ sisteminde en çok ne kadar süre kalabileceğini belirtir. Eğer bu alanın değeri sıfırsa verikatarı yokedilmelidir. Bu alan Genel Ağ başlığı işlenirken değiştirilir. Zaman birimi saniye cinsinden ölçülür ama verikatarını işleme sokan her modül işlem bir saniyeden kısa sürse bile bu yaşam süresini 1 saniye eksilteceğinden bu süre verikatarının Genel Ağ'da kalabileceği sürenin üst sınırı olarak düşünülmelidir. Maksat, azami verikatarı ömrünü doldurduğu halde teslim edilemeyen verikatarlarının yokedilmesine sebep olmaktır.
</para></listitem></varlistentry><varlistentry>
  <term>Protokol:  8 bit</term><listitem><para>
Bu alan bir sonraki seviyedeki protokolü göstermek için kullanılır. Çeşitli protokollerin değerleri [<xref linkend="rfc791-bib9"/>]'daki "Atanmış Numaralar" bölümünde belirtilmiştir.
</para></listitem></varlistentry><varlistentry>
  <term>Başlık Sağlama Özeti:  16 bit</term><listitem><para>
Sadece başlığın sağlama özeti. Bazı başlık alanları değiştiğinden (örn, yaşam süresi) Genel Ağ başlığının işleme girdiği her noktada bu alan yeniden hesaplanır ve doğrulanır.
</para><para>
Sağlama Özeti algoritması:
</para><para><blockquote><para>
Sağlama özeti başlıktaki bütün 16 bitlik sözcüklerin birin tümleyenine göre toplamının 16 bitlik bire tümleyenidir. Sağlama özetini hesaplamak için Başlık Sağlama Özeti alanındaki değer sıfır yapılır.
</para></blockquote></para><para>
Bu sağlama özetinin basit hesabıdır ve deneysel kanıtlar yeterli olduğunu belirtmektedir, fakat bu geçicidir ve deneyime bağlı olarak bir CRC yordamı tarafından değiştirilebilir.
</para></listitem></varlistentry><varlistentry>
  <term>Kaynak Adresi:  32 bit</term><listitem><para>
Kaynak adresi.  Bkz. <xref linkend="rfc791-s32"/>.
</para></listitem></varlistentry><varlistentry>
  <term>Hedef Adresi:  32 bit</term><listitem><para>
Hedef adresi. Bkz. <xref linkend="rfc791-s32"/>.
</para></listitem></varlistentry><varlistentry>
  <term>Seçenekler:  değişken</term><listitem><para>
Seçenekler verikatarlarında bulunabilir de bulunmayabilir de. Bütün IP modülleri (konak ve ağgeçidi) tarafından gerçeklenmelidirler. Verikatarında aktarımı isteğe bağlı olanların gerçeklenimi isteğe bağlı değildir.
</para><para>
Bazı ortamlarda güvenlik seçeneği tüm verikatarlarında gerekli olabilir.
</para><para>
Seçenek alanı değişken uzunluktadır. Sıfır olabileceği gibi fazlasıyla seçenek bulunabilir. Bir seçeneğin biçimi için iki durum sözkonusudur:
</para><para><orderedlist><listitem>Seçenek-türü için tek bir sekizli.
</listitem><listitem>
Seçenek-türü için bir sekizli, seçenek-uzunluğu için bir sekizli ve asıl seçenek-verisi sekizlileri.
</listitem></orderedlist></para><para>
Seçenek-uzunluğu sekizlisinde seçenek-türü ve seçenek-uzunluğu sekizlileriyle seçenek-verisi sekizlileri sayılır.
</para><para>
Seçenek-türü sekizlisinin 3 alana sahip olduğu görülür:
</para><para>
<literallayout indent="0">
  1 bit   kopyalanmış bayrağı,
  2 bit   seçenek sınıfı,
  5 bit   seçenek sayısı.
</literallayout>
</para><para>
Kopyalanmış bayrağı bu seçeneğin bütün veridilimlerine kopyalandığını gösterir.
</para><para>
<literallayout indent="0">
  0 = kopyalanmamış
  1 = kopyalanmış
</literallayout>
</para><para>
Seçenek sınıfları şunlardır:
</para><para>
<literallayout indent="0">
  0 = denetim
  1 = gelecekte kullanım için ayrılmış
  2 = hata ayıklama ve ölçüm
  3 = gelecekte kullanım için ayrılmış
</literallayout>
</para><para>
Şu Genel Ağ seçenekleri tanımlıdır:
</para><para>
<literallayout indent="0">
SINIF SAYI   UZUNLUK  AÇIKLAMA
----- ----   -------  -----------
  0     0       -     Seçenek Listesi Sonu. Bu seçenek sadece bir sekizli
                      işgal eder; uzunluk sekizlisine sahip değildir.
  0     1       -     İşlem Yok.  Bu seçenek sadece bir sekizli
                      işgal eder; uzunluk sekizlisine sahip değildir.
  0     2      11     Güvenlik. Güvenlik, Bölümleme, Kullanıcı Grubu (ADK)
                      ve Savunma Bakanlığının gereksinimleriyle uyumlu
                      Kısıtlama Kodlarını taşımakta kullanılır.
  0     3     dğş.    Gevşek Kaynak Yönlendirme.  Kaynak karafından sağlanmış
                      bilgiyi temel alan Genel Ağ verikatarını yönlendirmekte
                      kullanılır.
  0     9     dğş.    Sıkı Kaynak Yönlendirme.    Kaynak karafından sağlanmış
                      bilgiyi temel alan Genel Ağ verikatarını yönlendirmekte
                      kullanılır.
  0     7     dğş.    Rota Kaydı.  Bir Genel Ağ verikatarının aldığı yolu
                      izlemekte kullanılır.
  0     8       4     Akım Kimliği.  Akım kimliğini taşımakta kullanılır.
  2     4     dğş.    Genel Ağ Zaman Damgası.
</literallayout>
</para><variablelist><title>Başlıca Seçenek Tanımları</title>
<varlistentry><term>Seçenek Listesi Sonu</term><listitem><para>
<literallayout indent="0">
    +--------+
    |00000000|
    +--------+
      Türü=0
</literallayout>
</para><para>
Bu seçenek seçenek listesinin sonunu gösterir.  Bu Genel Ağ başlık uzunluğuna göre Genel Ağ başlığının sonu ile çakışmaz. Bu bütün seçeneklerin sonunda kullanılır ve sadece Genel Ağ başlığının sonu ile seçeneklerin sonu çakışmıyorsa kullanımınına gerek duyulur.
</para><para>
Kopyalanabilir, başa alınabilir, veridiliminden silinebilir ya da başka sebeplerle kullanılabilir.
</para></listitem></varlistentry><varlistentry>
  <term>İşlem Yok</term><listitem><para>
<literallayout indent="0">
    +--------+
    |00000001|
    +--------+
      Türü=1
</literallayout>
</para><para>
Bu seçenek, seçenekler arasında kullanılabilir; örneğin, bir sonraki seçeneğin başlangıcını 32 bitlik sınıra hizalamakta kullanılabilir.
</para><para>
Kopyalanabilir, başa alınabilir, veridiliminden silinebilir ya da başka sebeplerle kullanılabilir.
</para></listitem></varlistentry><varlistentry>
  <term>Güvenlik</term><listitem><para>
Bu seçenek konaklar için güvenlik, bölümleme, kısıtlama kodları ve ADK (aktarım denetim kodu) parametrelerini göndermenin bir yolunu sunar. Bu seçeneğin kodlama biçimi aşağıdaki gibidir:
</para><para>
<literallayout indent="0">
    +--------+--------+---//---+---//---+---//---+---//---+
    |10000010|00001011|GGG  GGG|BBB  BBB|KKK  KKK|  ADK   |
    +--------+--------+---//---+---//---+---//---+---//---+
      Türü=130 Uzunluğu=11
</literallayout>
</para><variablelist><varlistentry>
  <term>Güvenlik (G alanı):  16 bit</term><listitem><para>
16 güvenlik seviyesinden birini belirler (sekizi gelecekte kullanım için ayrılmıştır).
  </para><para>
<literallayout indent="0">
    00000000 00000000 - Sınıflandırılmamış
    11110001 00110101 - Az Gizli
    01111000 10011010 - EFTO
    10111100 01001101 - MMMM
    01011110 00100110 - PROG
    10101111 00010011 - Hizmete Özel
    11010111 10001000 - Gizli
    01101011 11000101 - Çok Gizli
    00110101 11100010 - (Gelecekte kullanım için ayrılmış)
    10011010 11110001 - (Gelecekte kullanım için ayrılmış)
    01001101 01111000 - (Gelecekte kullanım için ayrılmış)
    00100100 10111101 - (Gelecekte kullanım için ayrılmış)
    00010011 01011110 - (Gelecekte kullanım için ayrılmış)
    10001001 10101111 - (Gelecekte kullanım için ayrılmış)
    11000100 11010110 - (Gelecekte kullanım için ayrılmış)
    11100010 01101011 - (Gelecekte kullanım için ayrılmış)
</literallayout>
</para></listitem></varlistentry><varlistentry>
  <term>Bölümler (B alanı):  16 bit</term><listitem><para>
Bütün sıfır değerler aktarılan bilgiler bölümlendirilmediği zaman kullanılır. Alanın diğer değerleri (ABD'nin) Savunma Haberalma Dairesinden temin edilebilir.
</para></listitem></varlistentry><varlistentry>
  <term>Kısıtlama Kodları (K alanı):  16 bits</term><listitem><para>
Denetim ve dağıtım imlerinin değerleri alfasayısal iki karakterliler olup (ABD'nin) Savunma Haberalma Dairesi Kılavuzu DIAM 65-19'un "Standart Güvenlik İmleri" bölümünde tanımlanmışlardır.
</para></listitem></varlistentry><varlistentry>
  <term>Aktarım Denetim Kodu (ADK alanı):  24 bits</term><listitem><para>
Trafiği ayırma ve üyeler arasında denetimli ilgi toplulukları tanımlama anlamında kodlar sağlar. ADK değerleri üç karakterli kodlardan oluşur ve HQ DCA Code 530'dan elde edilebilir.
</para></listitem></varlistentry></variablelist><para>
Veridilimlerine kopyalanmalıdırlar. Bu seçenek bir verikatarında en fazla bir kere görünebilir.
</para></listitem></varlistentry><varlistentry>
  <term>Gevşek Kaynak ve Rota Kaydı</term><listitem><para>
<literallayout indent="0">
    +--------+--------+--------+---------//--------+
    |10000011|uzunluk | gstrici|     rota verisi   |
    +--------+--------+--------+---------//--------+
      Türü=131
</literallayout>
</para><para>
Gevşek Kaynak ve Rota Kaydı (GKRK) seçeneği, ağgeçitleri tarafından verikatarının ilerletilmesinde kullanılmak üzere yönlendirme bilgisini sağlayacak Genel Ağ verikatarı kaynağı için bir imkan sağlar.
</para><para>
Seçenek, seçenek türü kodu ile başlar. İkinci sekizli, seçenek türü, uzunluk sekizlisi, gösterici sekizlisi ve 3 sekizliden oluşan rota verisinin toplam uzunluğunu içeren secenek uzunluğudur. Üçüncü sekizli, işlenecek sonraki kaynak adresle başlayan sekizliyi belirten yönlendirme verisine göstericidir. Gösterici bu seçeneğe görelidir ve olası en küçük geçerli değeri 4'tür.
</para><para>
Bir rota verisi bir seri Genel Ağ adresinden oluşur. Her Genel Ağ adresi dört sekizli ya da 32 bit uzunluktadır. Gösterici bu uzunluktan daha büyük olursa kaynak rota boştur (ve kayıtlı rota doludur) ve yönlendirme sadece hedef adres alanına göredir.
</para><para>
Hedef adres alanındaki adrese ulaşılırsa ve gösterici bu uzunluktan büyük değilse, kaynak rotadaki bir sonraki adres hedef adres alanındaki adres ile değiştirilir ve kayıtlı rota adresi kullanılmakta olan kaynak adresle yer değiştirir ve gösterici dört arttırılır.
</para><para>
Kayıtlı rota adresi, Genel Ağ modülünün bu verikatarının ilerletileceği ortamda bilinen kendi Genel Ağ adresidir.
</para><para>
Kaynak rotanın kayıtlı rota ile  yerdeğiştirilmesi işlemi (ters sırada olsa da, bir kaynak rota olarak kullanılmakta olması gerekir), verikatarının Genel Ağ boyunca işlenmesine rağmen seçeneğin (ve bir bütün olarak IP başlığının) sabit uzunlukta kaldığı anlamına gelir.
</para><para>
Ağgeçidi veya konak IP, rotadaki sonraki adrese erişmek için bol ağgeçidi ve rota kullanımına izin verdiğinden dolayı bu seçenek gevşek bir kaynak rotası belirtir.
</para><para>
Veridilimlerine kopyalanmalıdır. Bir verikatarında en fazla bir kere görünebilir.
</para></listitem></varlistentry><varlistentry>
  <term>Sıkı Kaynak ve Rota Kaydı</term><listitem><para>
<literallayout indent="0">
    +--------+--------+--------+---------//--------+
    |10001001|uzunluk | gstrici|     rota verisi   |
    +--------+--------+--------+---------//--------+
      Türü=137
</literallayout>
</para><para>
Sıkı Kaynak ve Rota Kaydı (SKRK) seçeneği, ağgeçitleri tarafından verikatarının ilerletilmesinde kullanılmak üzere yönlendirme bilgisini sağlayacak ve rota bilgisini kaydedecek Genel Ağ verikatarı kaynağı için bir imkan sağlar.
</para><para>
Seçenek, seçenek türü kodu ile başlar. İkinci sekizli, seçenek türü, uzunluk sekizlisi, gösterici sekizlisi ve 3 sekizliden oluşan rota verisinin toplam uzunluğunu içeren secenek uzunluğudur. Üçüncü sekizli, işlenecek sonraki kaynak adresle başlayan sekizliyi belirten yönlendirme verisine göstericidir. Gösterici bu seçeneğe görelidir ve olası en küçük geçerli değeri 4'tür.
</para><para>
Bir rota verisi bir seri Genel Ağ adresinden oluşur. Her Genel Ağ adresi dört sekizli ya da 32 bit uzunluktadır. Gösterici bu uzunluktan daha büyük olursa kaynak rota boştur (ve kayıtlı rota doludur) ve yönlendirme sadece hedef adres alanına göredir.
</para><para>
Hedef adres alanındaki adrese ulaşılırsa ve gösterici bu uzunluktan büyük değilse, kaynak rotadaki bir sonraki adres hedef adres alanındaki adres ile değiştirilir ve kayıtlı rota adresi kullanılmakta olan kaynak adresle yer değiştirir ve gösterici dört arttırılır.
</para><para>
Kayıtlı rota adresi, Genel Ağ modülünün bu verikatarının ilerletileceği ortamda bilinen kendi Genel Ağ adresidir.
</para><para>
Kaynak rotanın kayıtlı rota ile  yerdeğiştirilmesi işlemi (ters sırada olsa da, bir kaynak rota olarak kullanılmakta olması gerekir), verikatarının Genel Ağ boyunca işlenmesine rağmen seçeneğin (ve bir bütün olarak IP başlığının) sabit uzunlukta kaldığı anlamına gelir.
</para><para>
Ağgeçidi veya konak IP verikatarını rotada belirtilmiş ağgeçidi veya konağa erişmek için sadece sonraki adresin belirttiği doğrudan bağlantılı ağ üzerinden doğrudan kaynak rotadaki sonraki adrese göndermesi gerektiğinden bu seçenek sıkı bir kaynak rotası belirtir.
</para><para>
Veridilimlerine kopyalanmalıdır. Bir verikatarında en fazla bir kere görünebilir.
</para></listitem></varlistentry><varlistentry>
  <term>Rota Kaydı</term><listitem><para>
<literallayout indent="0">
    +--------+--------+--------+---------//--------+
    |00000111|uzunluk | gstrici|     rota verisi   |
    +--------+--------+--------+---------//--------+
      Type=7
</literallayout>
</para><para>
Rota kaydı seçeneği bir Genel Ağ verikatarının rotasını kaydetmek için bir imkan sunar.
</para><para>
Seçenek, seçenek türü kodu ile başlar. İkinci sekizli, seçenek türü, uzunluk sekizlisi, gösterici sekizlisi ve 3 sekizliden oluşan rota verisinin toplam uzunluğunu içeren seçenek uzunluğudur. Üçüncü sekizli, bir rota adresini saklayacak sonraki alanla başlayan sekizliyi belirten yönlendirme verisine göstericidir. Gösterici bu seçeneğe görelidir ve olası en küçük geçerli değeri 4'tür.
</para><para>
Bir rota verisi bir seri Genel Ağ adresinden oluşur. Her Genel Ağ adresi dört sekizli ya da 32 bit uzunluktadır. Gösterici bu uzunluktan daha büyük olursa kayıtlı rota veri alanı doludur. Seçeneğin boyu adreslerin eklenmesinden dolayı değişmez. Rota verisi alanının başlangıçtaki içeriği sıfır olmalıdır.
</para><para>
Bir Genel Ağ modülü bir verikatarını yönlendirirken, rota kaydı seçeneği var mı diye bakar. Varsa, oraya, bu verikatarının ilerletildiği, gösterici tarafından belirtilen sekizliden başlayan kayıtlı rota ortamında bilinen kendi Genel Ağ adresini yerleştirir ve göstericiyi dört arttırır.
</para><para>
Eğer rota alanı zaten doluysa (gösterici, uzunluğu aşarsa), verikatarı, adres kayıtlı rotaya yerleştirilmeden ilerletilir. Biraz yer varsa ama tam adresi yerleştirmek için yeterli değilse, özgün verikatarının hatalı olduğuna hükmedilip verikatarı yokedilir. Her durumda, kaynak konağa bir ICMP parametre sorunu iletisi gönderilebilir [<xref linkend="rfc791-bib3"/>].
</para><para>
Bütün veridilimlerine kopyalanmaz, sadece ilk veridiliminde gider. Bir verikatarında en fazla bir kere görünür.
</para></listitem></varlistentry><varlistentry>
  <term>Akım Betimleyici</term><listitem><para>
<literallayout indent="0">
    +--------+--------+--------+--------+
    |10001000|00000010|  Akım Kimliği   |
    +--------+--------+--------+--------+
      Türü=136 Uzunluğu=4
</literallayout>
</para><para>
Bu seçenek akım fikrini desteklemeyen ağlar boyunca taşınmak için 16 bitlik SATNEM akım betimleyici için bir yol sunar.
</para><para>
Veridilimlerine kopyalanmalıdır. Bir verikatarında en fazla bir kere görünür.
</para></listitem></varlistentry><varlistentry>
  <term>Genel Ağ Zaman Damgası</term><listitem><para>
<literallayout indent="0">
    +--------+--------+--------+--------+
    |01000100|uzunluk | gstrici|taşm|byr|
    +--------+--------+--------+--------+
    |         Genel Ağ adresi           |
    +--------+--------+--------+--------+
    |          zaman damgası            |
    +--------+--------+--------+--------+
    |                 .                 |
                      .
                      .
    Türü = 68
</literallayout>
</para><para>
Seçenek uzunluğu, tür, uzunluk, gösterici ve taşma/bayrak sekizlilerinin sayısıdır (azami uzunluk: 40).
</para><para>
Gösterici, bu seçeneğin başlangıcından zaman damgalarının sonuna kadar sekizlilerin sayısının bir fazlasını içerir (yani, sonraki zaman damgasını içerecek boşluğun başındaki sekizliyi gösterir). Geçerli en küçük değer 5'tir. Gösterici bu uzunluktan büyük olduğunda zaman damgası alanı dolu demektir.
</para><para>
Taşma (taşm) [4 bit] boş alan yokluğundan dolayı zaman damgasının kaydedemediği IP modüllerinin sayısıdır.
</para><para>
Bayrak (byr) [4 bit] değerleri:
</para><para>
<literallayout indent="0">
0 - sadece, ardışık olarak 32 bitlik sözcüklerde saklanan zaman damgası

1 - her zaman damgasının öncesinde kaydedilen öğenin Genel Ağ adresi vardır

3 - Genel Ağ adres alanları önceden belirtilmiştir.  Kendi adresi ile
    sonradan belirtilen Genel Ağ adresi eşleşiyorsa, böyle bir IP modülü
    sadece kendi zaman damgasını kaydeder.
</literallayout>
</para><para>
Zaman damgası sağa yanaşık, evrensel zamanda geceyarısından itibaren milisaniye cinsinden 32 bitlik bir zaman damgasıdır. Eğer zaman milisaniye cinsinden alınamıyorsa veya elde edilen zaman hiç gerektiği gibi değilse, gerektiği gibi zaman damgasının mümkün olduğu ilk zamanda kayıt girilir, ancak zaman damgası alanının yüksek biti standartdışı bir değer kullanıldığını belirtmek üzere bir yapılır.
</para><para>
Verikatarının oluşturulduğu konakta bu seçenek beklenen zaman damgası bilgisinin tümünü tutacak büyüklükte bir zaman damgası alanı ile oluşturulmalıdır. Zaman damgası eklemeleriyle seçeneğin boyu değişmez. Zaman damgası alanının başlangıç değeri ya sıfırlardan ya da Genel Ağ adresi/sıfır çiftlerinden oluşmalıdır.
</para><para>
Zaman damgası veri alanı önceden dolmuş ise (gösterici uzunluğu aşmışsa) verikatarı zaman damgası eklenmeden ilerletilir. Ama taşma sayacı bir artırılır.
</para><para>
Biraz yer varsa ama tam zaman damgasını yerleştirmek için yeterli değilse veya taşma sayacının kendisi taşmışsa, özgün verikatarının hatalı olduğuna hükmedilip verikatarı yokedilir. Her durumda, kaynak konağa bir ICMP parametre sorunu iletisi gönderilebilir [<xref linkend="rfc791-bib3"/>].
</para><para>
Zaman damgası seçeneği bütün veridilimlerine kopyalanmaz; ilk veridiliminde taşınır. Bir verikatarında en fazla bir kere görünür.
</para></listitem></varlistentry></variablelist>
</listitem></varlistentry><varlistentry>
  <term>Dolgu:  değişken</term><listitem><para>
Genel Ağ başlık dolgusu Genel Ağ başlığının 32 biti tam doldurmasını sağlamak için kullanılır. Dolgu karakteri sıfırdır.
</para></listitem></varlistentry></variablelist>
</sect2>

<sect2 id="rfc791-s32" chunkthis="1"><title>İnceleme</title>
<para>
Bir Protokolün gerçeklenimi dayanıklı olmalıdır. Her gerçeklenim başkaları tarafından oluşturulanlarla birarada iş görebilmelidir. Bu belirtim protokol hakkında açıklanmamış bir şey kalmamasını hedeflerken farklı yorumlar da mümkündür. Genel olarak, bir gerçenim verirken tutucu, alırken özgürlükçü olmalıdır. Yani, verikatarlarını iyi biçimlenmiş olarak yollamak hususunda dikkatli olmalı ama yorumlayabileceği her verikatarını da kabul etmelidir (temiz kalmaya çalışırken teknik hatalara konu olmamak gibi).
</para><para>
Temel Genel Ağ hizmeti verikatarları üzerine kuruludur ve verikatarlarının hedef konaktaki hedef Genel Ağ protokolü modülünde birleştirilmek üzere ağgeçitlerinde veridilimlerine bölünmesine imkan verir. Elbette verikatarlarının bir ağın içinde veya bir ağın ağgeçitleri arasında özel kabullere göre veridilimlerine bölünmesi ve yeniden birleştirilmesine, bu işlemin Genel Ağ protokollerine ve diğer yüksek seviyeli protokollere şeffaf oluşundan dolayı, ayrıca izin verilir. Veridilimlerine bölme ve yeniden birleştirme işleminin bu şeffaf türüne "ağa bağımlı" dilimleme denir ve burada daha fazla bahsedilmeyecektir.
</para><para>
Genel Ağ adresleri kaynakların ve hedeflerin konak seviyesinde ayrımsanmasını sağlarken bir protokol alanına da imkan verir. Her protokolün bir konakta her gerekli oluşunda çoğullamaya imkan vereceği kabul edilir.
</para><variablelist><varlistentry>
  <term>Adresleme</term><listitem><para>
Ağlara adres atamada esneklik sağlayabilmek ve küçükten orta ölçekliye kadar çok fazla sayıda ağa izin vermek için, adres alanı yorumu çok konaklı az sayıda ağ, makul sayıda konaklı makul sayıda ağ ve az konaklı çok sayıda ağ belirtilebilecek şekilde kodlanmıştır. Ek olarak, "ek adresleme kipi" için bir çıkış kodu da vardır.
</para><variablelist><varlistentry>
  <term>Adres Biçimleri:</term><listitem><para>
<literallayout indent="0">
  Yüksek Bitler   Biçim                          Sınıfı
  -------------   -----------------------------  ------
       0          ağ için  7, konak için 24 bit     a
       10         ağ için 14, konak için 16 bit     b
       110        ağ için 21, konak için  8 bit     c
       111        ek adresleme kipi için önlem
</literallayout>
</para><para>
Ağ alanındaki sıfır değeri bu ağ anlamındadır. Bu sadece belirli ICMP iletilerinde kullanılır. Ek adresleme kipi tanımlanmamıştır. Bu özelliklerin ikisi de gelecekte kullanım için ayrılmıştır.
</para></listitem></varlistentry></variablelist><para>
Ağ adresleri için atanmış gerçek değerler "Atanmış Numaralar"da [<xref linkend="rfc791-bib9"/>] verilmiştir.
</para><para>
Yerel ağa göre atanmış yerel adres, fiziksel tek bir konağın sanki bir kaç Genel Ağ konağıymış gibi davranmasını mümkün kılmalıdır.  Yani, çeşitli Genel Ağ adreslerinin tek bir arayüze karşılık gelmesini mümkün kılan ağ/konak arayüzleri ile Genel Ağ konak adresleri arasında bir eşlem olması gerekir. Ayrıca tek bir konağın birden fazla fiziksel arayüze sahip olabilmesi ve bunlardaki verikatarlarının tümünün tek bir konağı adresliyormuşçasına ele alınabilmesi mümkün olmalıdır.
</para><para>
ARPANET, SATNET, PRNET ve diğer ağların adresleri ile Genel Ağ adresleri arasındaki eşleşmeler "Adres Eşlemleri"nde [<xref linkend="rfc791-bib5"/>] açıklanmıştır.
</para></listitem></varlistentry><varlistentry>
  <term>Dilimleme ve Yeniden Birleştirme</term><listitem><para>
Genel Ağ betimleme alanı (ID), yeniden birleştirmek amacıyla veridilimlerini betimlemek için protokol alanları ile kaynak ve hedef adresini birlikte kullanır.
</para><para>
Kalan Veridilimleri bayrağı biti (KD), verikatarı son veridilimi değilse etkin olur. Veridilimi Başlangıcı alanı veridiliminin özgün verikatarındaki göreli başlangıç yerini belirtir. Veridilimleri 8 sekizlilik birimlerle sayılır. Dilimleme stratejisinin tasarımı, özgün verikatarının dilimleme ile ilgili alanlarının sıfır oluşuna (KD = 0, Veridilimi Başlangıcı = 0) dayandırılmıştır. Eğer bir Genel Ağ verikatarı dilimlemeye maruz kalmışsa, veri alanı 8 sekizlilik dilimlere ayrılmış demektir.
</para><para>
Bu biçimleme, 65.536 sekizlinin her biri 8 sekizliden oluşan 8192 (2^13) dilime ayrılmasını mümkün kılar. Bu hesabın verikatarının toplam uzunluk alanı ile tutarlılığına dikkat edilmelidir (elbette, başlık, veridilimlerinde değil toplam uzunluğun içinde hesaba katılır).
</para><para>
Dilimleme yapılırken, bazı seçenekler her veridilimine kopyalanırken bazıları sadece ilk veridiliminde kalır.
</para><para>
Her Genel Ağ modülü dilimleme yapılmaksızın 68 sekizlilik bir verikatarını ilerletebilmelidir. Bunun sebebi en küçük dilimin 8 sekizli ve Genel Ağ başlığının da en fazla 60 sekizli uzunlukta olabilmesidir.
</para><para>
Her Genel Ağ hedefi 576 sekizli uzunluktaki bir verikatarını, ister tek bir 576 sekizlilik verikatarı olarak, ister yeniden birleştirilmek üzere 576 sekizlilik bir veridilimi olarak, alabilmelidir.
</para><para>
Dilimleme işleminden etkilenebilen alanlar şunlardır:
</para><orderedlist>
<listitem>Seçenekler alanı</listitem>
<listitem>Kalan Veridilimleri bayrağı</listitem>
<listitem>Veridilimi Başlangıcı</listitem>
<listitem>Genel Ağ başlığı Uzunluk alanı</listitem>
<listitem>Toplam Uzunluk alanı</listitem>
<listitem>Başlık Sağlama Özeti</listitem>
</orderedlist><para>
Dilimlenmeyecek (DY) bayrağı etkinse, bu verikatarının veridilimlerine bölünmesine izin VERİLMEZ, ama yokedilebilir. Bu, alan konağın Genel Ağ veridilimlerini yeniden birleştirecek kadar özkaynağa sahip olmadığı durumlarda dilimlemeyi yasaklamak için kullanılabilir.
</para><para>
Dilimlenmeyecek kullanımına örnek olarak küçük bir konağın hat yükünü düşürmek için kullanımı verilebilir. Küçük konak bir verikatarını kabul eden onu belleğinde saklayıp daha sonra çalıştıran bir önyükleme programı içeriyor olabilirdi.
</para><para>
Dilimleme ve yeniden birleştirme işlemleri en kolay örneklerle açıklanır. Aşağıdaki yöntemler gerçeklenim örnekleridir.
</para><para>
Aşağıdaki sözde programlarda kullanılan sembollerin anlamları: "=&lt;" küçük ya da eşittir anlamında, "#" farklı anlamında, "=" eşit anlamında, "&lt;-" atanır anlamındadır. "x..y" x dahil, y hariç, x'ten y'ye kadar olanlar anlamındadır. Örneğin, "4..7" gösteriminde aralığa 4, 5, 6 dahildir, 7 dahil değildir.
</para></listitem></varlistentry><varlistentry>
  <term>Bir Dilimleme İşlemi Örneği</term><listitem><para>
Sonraki ağ boyunca aktarılabilen en büyük verikatarının uzunluğu azami aktarım birimi (Maximum Transmission Unit - MTU) olarak bilinir.
</para><para>
Verikatarının toplam uzunluğu azami aktarım biriminden küçük veya eşitse bu verikatarı yola devam edilmek üzere sonraki adıma teslim edilir; aksi takdirde, veri katarı iki veribölütüne bölünür, ilk veribölütü azami uzunlukta olurken ikinci veribölütü kalanı içerir. İlk veribölütü işlemin sonraki adımına teslim edilirken, ikincisi hala çok büyükse tekrar ikiye bölme işlemine tabi tutulur.
</para><para>
<literallayout indent="0">
Gösterim:

  VB  -  Veridilimi Başlangıcı
  İBU -  Genel Ağ Başlık Uzunluğu
  DY  -  Dilimlenmeyecek bayrağı
  KD  -  Kalan Veridilimleri bayrağı
  TU  -  Toplam Uzunluk
  EVB -  Eski Veridilimi Başlangıcı
  EİBU - Eski Genel Ağ Başlık Uzunluğu
  EKD -  Eski Kalan Veridilimleri bayrağı
  ETU -  Eski Toplam Uzunluk
  DBS -  Dilim Bloklarının Sayısı
  MTU -  Azami Aktarım Birimi

Algoritma:

  TU =&lt; MTU ise,
    bu verikatarı yola devam etmek üzere sonraki adıma teslim edilir
  değilse ve DY = 1 ise,
    verikatarı yokedilir
  değilse,
    ilk veridilimini üretmek için:
      (1)  Özgün Genel Ağ başlığı kopyalanır;
      (2)  EİBU &lt;- İBU; ETU &lt;- TU; EVB &lt;- VB; EKD &lt;- KD;
      (3)  DBS &lt;- (MTU-İBU*4)/8;
      (4)  İlk İBU*8 veri sekizlisi iliştirilir;
      (5)  Doğru Başlık:
            KD &lt;- 1;  TU &lt;- (İBU*4)+(DBS*8);
            Sağlama Özeti yeniden hesaplanır;
      (6)  bu veridilimi yola devam etmek üzere sonraki adıma teslim edilir;

    ikinci veridilimini üretmek için:
      (7)  Genel Ağ başlığı seçmece kopyalanır (bazı alanlar kopyalanmaz,
            Seçenek tanımlarına bakınız);
      (8)  Verinin kalanı eklenir;
      (9)  Doğru Başlık:
            İBU &lt;- (((EİBU*4)-(seçenek uzunluğu kopyalanmaz))+3)/4;
            TU &lt;- ETU - DBS*8 - (EİBU-İBU)*4);
            VB &lt;- EVB + DBS;  KD &lt;- EKD;
            Sağlama Özeti yeniden hesaplanır;
      (10) Bu veridilimi dilimleme sınamasına teslim edilir;
  sınama sonu.
</literallayout>
</para><para>
Yukarıdaki algoritmada her veridilimi (sonuncu hariç) izin verilen azami boyutta üretilmektedir. Bunun yerine azami boyuttan daha küçük veridilimleri üretmek de bir seçenek olabilir. Örneğin, sonuç azami aktarım biriminden küçük olana kadar büyük verikatarlarını peşpeşe ikiye bölen bir yordam gerçeklenebilirdi.
</para></listitem></varlistentry><varlistentry>
  <term>Bir Yeniden Birleştirme Örneği</term><listitem><para>
Her verikatarı için tampon betimleyici, kaynak, hedef, protokol ve betimleme alanlarının toplamı olarak hesaplanır. Eğer bu dilimlenmemiş verikatarı ise (Veridilimi Başlangıcı ve Kalan Veridilimleri alanlarının ikisi de sıfırsa), bu tampon betimleyici ile ilişkili yeniden birleştirme özkaynakları serbest bırakılır ve verikatarı yola devam etmek üzere sonraki adıma teslim edilir.
</para><para>
Bu tampon betimleyici ile ilişkili elde başka veridilimi yoksa, yeniden birleştirme özkaynakları ayrılır. Bu özkaynaklar, bir veri tamponu, bir başlık tamponu, bir veridilimi bloğu bit tablosu, bir toplam veri uzunluğu alanı ve zamanlayıcıdan oluşur. Veridilimindeki veri, Veridilimi Başlangıcı ve Uzunluk değerlerine göre veri tamponuna yerleştirilir ve veridilimi bloğu bit tablosundaki alınan veridilimi bloklarının karşılığı olan bitler etkin yapılır.
</para><para>
Eğer bu ilk veridilimi ise (yani, Veridilimi Başlangıcı sıfır ise), bu başlık başlık tamponuna yerleştirilir. Eğer bu son veridilimi ise (yani, Kalan Veridilimi alanı sıfırsa), toplam veri uzunluğu hesaplanır. Eğer bu veridilimi verikatarını tamamlıyorsa (veridilimi blokları tablosundaki bitlere bakarak saptanır), verikatarı yola devam etmek üzere sonraki adıma teslim edilir; aksi takdirde, zamanlayıcı bu veridiliminin yaşam süresi alanındaki değere ve mevcut zamanlayıcı değerinin azamisine ayarlanır; ve yeniden birleştirme yordamı, denetimi kendini çağıran sürece bırakır.
</para><para>
Eğer zamanlayıcılar zamanaşımına uğrarsa, bu tampon betimleyici ile ilgili yeniden birleştirme özkaynaklarının tamamı serbest bırakılır. Zamanlayıcının ilk ayar değeri yeniden birleştirme bekleme süresinin alt sınırıdır. Eğer gelen veridilimindeki Yaşam Süresi, mevcut zamanlayıcı değerinden büyükse bekleme zamanı arttırılacağından ama küçükse azaltılmayacağından bu değer bir alt sınırdır. Üst sınır ise azami yaşam süresidir (yaklaşık 4,25 dakika). Zamanlayıcının ilk ayar değeri olarak şu an önerilen 15 saniyedir. Bu, bu protokolden elde edilen deneyimle değişebilir. Bu parametre değerinin seçiminin tampon sığasına bağlı oluşuna ve tampon sığasınında aktarım ortamının hızı ile orantılı oluşuna dikkat ediniz. Yani, veri hızı ile zamanlayıcı değerinin çarpımı tampon boyutunu verecektir (örn, 10Kb/s X 15s = 150Kb).
</para><para>
<literallayout indent="0">
  Gösterim:

    VB    -  Veridilimi Başlangıcı
    İBU   -  Genel Ağ Başlık Uzunluğu
    KD    -  Kalan Veridilimleri bayrağı
    TTL   -  Yaşam Süresi
    TU    -  Toplam Uzunluk
    TVU   -  Toplam Veri Uzunluğu
    BUFID -  Tampon betimleyici
    ALBT  -  Alınan Veridilimi Bit Tablosu
    ZAS   -  Zamanlayıcı Alt Sınırı

  Algoritma:

    (1)  BUFID &lt;- kaynak|hedef|protokol|betimleme;
    (2)  VB = 0 ve KD = 0 ise,
    (3)     ve BUFID tamponu ayrılmışsa,
    (4)        bu BUFID için tampon boşaltılır;
    (5)          Verikatarı sonraki adıma teslim edilir;
                 İşlem bitirilir.
    (6)   değilse (BUFID tamponu ayrılmamışsa),
    (7)      BUFID ile yeniden birleştirme özkaynakları ayrılır;
             TIMER &lt;- ZAS; TVU &lt;- 0;
    (8)      Veridilimindeki veri BUFID tamponuna
             VB*8 .. (TU-(İBU*4))+VB*8 sekizlileri olarak yerleştirilir
    (9)      VB .. VB+((TU-(İBU*4)+7)/8) ALBT bitleri bir yapılır;
    (10)     MF = 0 ise, TVU &lt;- TU-(İBU*4)+(VB*8)
    (11)     VB = 0 ise, başlığı başlık tamponuna koy
    (12)     TVU # 0 ise,
    (13)        ve 0 .. (TVU+7)/8 ALBT bitleri bir ise,
    (14)           TU &lt;- TVU+(İBU*4)
    (15)           Verikatarını sonraki adıma teslim et;
    (16)           Bu BUFID için yeniden birleştirme özkaynaklarını
                   serbest bırak;
                İşlem bitirilir.
    (17)     TIMER &lt;- MAX(TIMER,TTL);
    (18)     sonraki veridilimineveya zamanaşımına kadar işlemden vazgeç;
    (19)  Zaman dolar: Bu BUFID için yeniden birleştirme özkaynaklarını boşalt;
          Yordam sonu.
</literallayout>
</para><para>
İki veya daha fazla veridiliminin aynı veriyi içermesi durumunda, ya tamamen ya da bir kısmi örtüşme boyunca, bu yordam veri tamponundaki en son veriyi kullanır ve verikatarı teslim alınır.
</para></listitem></varlistentry><varlistentry>
  <term>Betimleme</term><listitem><para>
Bir verikatarı için Betimleyici seçimi, veridilimlerini eşsiz olarak kimliklendirmenin bir yolunu sağlamak ihtiyacına dayanır. Veridilimlerini birleştiren protokol modülü veridilimlerinin aynı verikatarına ait olup olmadığına kaynak, hedef, protokol ve betimleyicinin hepsinin aynı olup olmadığına bakarak karar verir. Bu durumda, gönderici Betimleyiciyi verikatarının (veya onun veridilimlerinin) Genel Ağ'da canlı olduğu süre için bu kaynak, hedef çifti ve protokol için eşsiz olarak seçmelidir.
</para><para>
Gönderen protokolün, Genel Ağ'daki son azami paket ömrü süresince haberleştiği her hedef için bir girdi tuttuğu bir betimleyici tablosuna gerek duyduğunu anlaşılıyor.
</para><para>
Betimleyici alanı 65536 farklı değere izin verdiğinden, bazı konaklar basitçe hedeften bağımsız olarak eşsiz betimleyiciler kullanabilirler.
</para><para>
Bazı yüksek seviyeli protokoller betimleyici seçimini kendilerine uydurur. Örneğin, TCP protokolü modülleri birbirinin aynı TCP veribölütleri aktarabilir (yeniden aktarım olayı). Eğer yeniden aktarım özgün aktarımla aynı betimleyiciyi taşıyorsa, her verikatarının veridilimleri doğru TCP veribölütünü oluşturmakta kullanıldığından, doğru alım olasılığı artar.
</para></listitem></varlistentry><varlistentry>
  <term>Hizmet Türü</term><listitem><para>
Hizmet Türü (HT) Genel Ağ hizmet kalitesinin seçimidir. Hizmet Türü, üstünlük, gecikme, işlem gücü ve güvenilirlik soyut parametreleri üzerinden belirlenir. Bu soyut parametreler, içinden verikatarı geçen ağların asıl hizmet parametreleriyle eşlenmek içindir.
</para><para>
Üstünlük. Bir verikatarının öneminin bağımsız ölçüsü.
</para><para>
Gecikme.  Hemen teslim bu belirteci taşıyan verikatarları için önemlidir.
</para><para>
İşlem Gücü. Yüksek veri hızı  bu belirteci taşıyan verikatarları için önemlidir.
</para><para>
Güvenirlik. Tesliminden emin olmak için daha fazla çaba gösterilmesi bu belirteci taşıyan verikatarları için önemlidir.
</para><para>
Örneğin, ARPANET bir öncelik bitine ve "standart" iletilerle (0. tür) "denetimsiz" iletiler (3. tür) arasında bir seçim imkanına sahiptir (tek paketlik ve çok paketli iletiler arasındaki seçim de ayrı bir hizmet parametresi olarak düşünülebilir). Denetimsiz iletilerin teslimatları daha az güvenilir olmaya ve daha az gecikmeye uğramaya meyleder. Bir Genel Ağ verikatarının ARPANET boyunca gönderileceğini varsayalım. Genel Ağ hizmet türü şöyle verilmiş olsun:
</para><para>
<literallayout indent="0">
  Üstünlük:   5
  Gecikme:    0
  İşlem Gücü: 1
  Güvenirlik: 1
</literallayout>
</para><para>
Bu örnekte, bu parametrelerin bu değerlere eşlenmesi ARPANET için ARPANET öncelik bitinin etkin ayarlanması demek olurdu, çünkü Genel Ağ üstünlüğü kendi aralığının üst yarısındadır; standart iletiler seçilmiş olurdu, çünkü işlem gücü ve güvenirlik gereksinimleri belirtilmiş ama gecikme istenmemiştir. Hizmet eşleme ile ilgili daha ayrıntılı bilgi "Hizmet Eşlemleri"nde [<xref linkend="rfc791-bib8"/>] bulunmaktadır.
</para></listitem></varlistentry><varlistentry>
  <term>Yaşam Süresi</term><listitem><para>
Yaşam süresi gönderici tarafından verikatarının Genel Ağ sisteminde kalabileceği azami süreye ayarlanır. Eğer verikatarı Genel Ağ sisteminde yaşam süresinden daha uzun süre kalırsa verikatarı yokedilir.
</para><para>
Bu alanın değeri Genel Ağ başlığının işleme sokulduğu her noktada verikatarını işlemeye harcanan zamanı yansıtacak şekilde düşürülmelidir. Asıl harcanan zamana ilişkin yerel bir bilginin olmaması halinde bile alanın değeri 1 düşürülmelidir. Süre saniye cinsinden ölçülür (yani 1, bir saniye demektir). Bu durumda azami yaşam süresi 255 saniye, yani 4,25 dakika olur. Verikatarını işleyen her modül işlem zamanı bir saniyeden az bile sürse, yaşam süresini bir azaltması gerekir. Bu bakımdan Yaşam Süresi bir verikatarının mevcut olabileceği asıl süreyi değil sürenin üst sınırını belirler. Yaşam Süresi belirlemenin amacı, teslim edilemeyen verikatarlarının yokedilmesini sağlamak için verikatarlarının ömrünü sınırlamaktır.
</para><para>
Bazı daha yüksek seviyeli güvenilir protokoller eski yinelenmiş verikatarlarının belli bir süre geçtikten sonra artık gelmeyeceği kabulüne dayanırlar. Yaşam süresi böyle protokoller için önkabullerinin güvencesini sağlamanın bir yoludur.
</para></listitem></varlistentry><varlistentry>
  <term>Seçenekler</term><listitem><para>
Seçenekler verikatarları için isteğe bağlıdır, fakat gerçeklenimlerde hepsi gereklidir. Yani, bir seçeneğin varlığı ya da yokluğu gönderici açısından sadece bir seçim olduğu halde her Genel Ağ modülünün her seçeneği değerlendirecek yeteneği olmalıdır. Seçenek alanında çok sayıda seçenek bulunabilir.
</para><para>
Seçenekler 32 bitlik sınırda bitmeyebilirler. Genel Ağ başlığında seçenek sekizlilerinin boş olanları sıfır sekizlileri olmalıdır. Bunlardan ilki "Seçenek Sonu" seçeneği olarak yorumlanır ve Genel Ağ başlığının kalanı dolgu kabul edilir.
</para><para>
Her Genel Ağ modülü her seçeneğin gerektirdiği gibi davranabilmelidir. Güvenlik Seçeneği, eğer sınıflandırılmış, sınırlanmış veya bölmelenmiş trafik geçirilecekse gereklidir.
</para></listitem></varlistentry><varlistentry>
  <term>Sağlama Özeti</term><listitem><para>
Genel Ağ başlığı sağlama özeti Genel Ağ başlığı değişmişse tekrar hesaplanır. Örneğin yaşama süresinin azalması, Genel Ağ seçeneklerinde artış veya değişiklik, dilimleme dolayısıyla başlık değişebilir. Bu Genel Ağ seviyesinde sağlama özeti, Genel Ağ başlığının aktarım hatalarından korunması için düşünülmüştür.
</para><para>
Yeniden aktarım gecikmeleri olmaması için bir kaç bit hatasını kabul edebilen bazı uygulamalar vardır. Eğer Genel Ağ protokolü veri doğruluğu için zorlanacaksa böyle uygulamalar desteklenmemelidir.
</para></listitem></varlistentry><varlistentry>
  <term>Hatalar</term><listitem><para>
Genel Ağ protokol hataları ICMP iletileri [<xref linkend="rfc791-bib3"/>] olarak raporlanabilir.
</para></listitem></varlistentry></variablelist>
</sect2>

<sect2 id="rfc791-s33" chunkthis="1"><title>Arayüzler</title>
<para>
Her işletim sistemi farklı imkanlar sunduğu için kullanıcı/IP arayüzünün işlevsel açıklaması kurgusaldır. Neticede, okuyucuyu farklı gerçeklenimlerin farklı kullanıcı arayüzleri olacağı konusunda uyarmamız gerekir. Yine de, tüm IP gerçeklenimlerinin en azından belli bir hizmet kümesini garanti edebilmek için aynı protokol hiyerarşisini destekleyebilmeleri gerekir. Bu bölüm tüm IP gerçeklenimleri için gerekli olan işlevsel arayüzlerin belirtimidir.
</para><para>
Genel Ağ protokolü bir tarafı yerel ağa, diğer tarafı ise ya bir yüksek seviyeli protokole ya da bir uygulama programına bakan bir arayüzdür. Aşağıda yer alan, daha yüksek seviyeli protokol veya uygulama programını (hatta bir ağgeçidi programını) Genel Ağ modülünü kullanması sebebiyle "kullanıcı" olarak isimlendireceğiz. Genel Ağ protokolü bir verikatarı protokolü olduğundan küçük de olsa bir bellek veya verikatarı aktarımları arasında sürdürülen bir kat vardır ve kullanıcı tarafından Genel Ağ protokolü modülüne yapılan her çağrıda IP'nin istenen hizmeti uygulayabilmesi için gereken tüm bilgi sağlanır.
</para><variablelist><varlistentry>
  <term>Bir Üst Düzey Arayüz Örneği</term><listitem><para>
Aşağıda, kullanıcıdan Genel Ağ protokolü modülüne iletilmesi gerekenleri sağlayan iki çağrı örneği yer almaktadır ("=>" işareti "döndürülür" anlamında kullanılmıştır):
</para><para>
<literallayout indent="0">
  GÖNDER (kyn, hdf, prot, HT, TTL, TmpGST, uzn, Id, DF, sçn => sonuç)

    burada:

      kyn = kaynak adresi
      hdf = hedef adresi
      prot = protokol
      HT = hizmet türü
      TTL = yaşam süresi
      TmpGST = tampon göstericisi
      uzn = tampon uzunluğu
      Id  = Betimleyici
      DY = Dilimlenmeyecek bayrağı
      sçn = seçenek verisi
      sonuç = yanıt
        TAMAM = verikatarı sorunsuz gönderildi
        Hata = argüman veya yerel ağ hatası
</literallayout>
</para><para>
Üstünlük, HT içindedir ve güvenlik/bölüm bir seçenek olarak aktarılır.
</para><para>
<literallayout indent="0">
  AL (TmpGST, prot, => result, kyn, hdf, HT, uzn, sçn)

    where:

      TmpGST = tampon göstericisi
      prot = protocol
      sonuç = yanıt
        TAMAM = verikatarı sorunsuz alındı
        Hata = argümanlarda hata
      uzn = tampon uzunluğu
      kyn = kaynak adresi
      hdf = hedef adresi
      HT = hizmet türü
      sçn = seçenek verisi
</literallayout>
</para><para>
Kullanıcı bir verikatarını gönderirken,  tüm argümanlarını sağlayarak GÖNDER çağrısı yapar. Bu çağrıyı alan Genel Ağ protokolü modülü, argümanlara bakarak iletiyi hazırlayıp gönderir. Eğer argümanlarda sorun yoksa ve verikatarı yerel ağ tarafından kabul edilmişse, çağrı başarılı olarak döner. Eğer argümanlarda sorun varsa veya verikatarı yerel ağ tarafından kabul edilmemişse, çağrı başarısız olarak döner. Başarısızlık durumunda, sorunun sebebi olarak makul bir raporlama yapılmalıdır, fakat böyle raporların ayrıntıları gerçeklenime göre farklıdır.
</para><para>
Yerel ağdan Genel Ağ modülüne bir verikatarı geldiğinde, ya adresli kullanıcıdan kaynaklanan bekleyen bir AL çağrısı vardır ya da yoktur. Birinci durumda, bilgi verikatarından kullanıcıya aktarılarak bekleyen çağrı yerine getirilir. İkinci durumda, adresli kullanıcı bekleyen bir verikatarı varlığı konusunda uyarılır. Eğer adresli kullanıcı yoksa, gönderene bir ICMP hata iletisi döndürülür ve veri yokedilir.
</para><para>
Kullanıcı bilgilendirmesi, gerçeklenim ortamının işletim sistemine uygun olarak bir sözde kesme veya benzeri bir mekanizma üzerinden yapılabilir.
</para><para>
Bir kullanıcının AL çağrısı bir bekleyen verikatarı tarafından hemen yerine getirilebileceği gibi çağrı bir verikatarı gelene kadar askıya da alınabilir.
</para><para>
Kaynak adresi, gönderen konağın çeşitli adreslere sahip olması (çok sayıda fiziksel bağlantı veya mantıksal adres varlığı) halinde GÖNDER çağrısında belirtilir. Genel Ağ modülü kaynak adresinin bu konağın geçerli adreslerinden biri olup olmadığına bakmalıdır.
</para><para>
Bir gerçeklenim, ayrıca, bir verikatarı sınıfının kullanımına ilgi gösterilmesini veya tersine ayrıcalıklı kullanımını gerektirebilir ya da mümkün kılabilir (örn, bunların hepsi protokol alanında belli bir değer olabilir).
</para><para>
Bu bölüm işlevsel olarak bir KULLANICI/IP arayüzünü niteler. Kullanılan gösterim çoğunlukla yüksek seviyeli dillerdeki  yordam veya işlev çağrılarına benzemekle birlikte, bu kullanım  tuzak türü hizmet çağrılarının (SVCler, UUOlar, EMTler gibi) veya başka süreçlerarası iletişim şekillerinin hariç tutulduğu anlamına gelmez.
</para></listitem></varlistentry></variablelist>
</sect2>
</sect1>

<appendix id="rfc791-appa"><title>Örnekler ve Senaryolar</title>
<example><para>Olası en küçük veriyi taşıyan Genel Ağ verikatarı örneği:</para>
<figure><title>Genel Ağ Verikatarı Örneği</title>
<literallayout indent="0">
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1  &lt;= Bitler
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|Srm= 4 |İBU= 5 |  Hizmet Türü  |    Toplam Uzunluk = 21        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Betimleme = 111       |Byr=0|Veridilimi Başlangıcı = 0|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   Süre = 123  |  Protokol = 1 |     Başlık Sağlama Özeti      |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                         kaynak adresi                         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                         hedef adresi                          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     veri      |
+-+-+-+-+-+-+-+-+

                    Genel Ağ Verikatarı Örneği
</literallayout>
</figure><para>
Bu Genel Ağ protokolünün 4. sürümü için bir Genel Ağ verikatarıdır; Genel Ağ başlığı 5 tane 32 bitlik sözcükten oluşmakta olup verikatarının toplam uzunluğu 21 sekizlidir. Bu verikatarı dilimlenmemiş tek bir verikatarıdır (veridilimi değildir).
</para></example>
<example><para>
Bu örnekte ilk olarak yönetilebilir boyutta bir Genel Ağ verikatarı gösterdikten (452 veri sekizlisi) sonra, azami aktarım boyu olarak 280 sekizliye izin verildiğinden bu verikatarının dilimlenmesinden olaşabilecek iki Genel Ağ veridilimine yer verdik.
</para><figure><title>Dilimlenebilir Verikatarı Örneği</title>
<literallayout indent="0">
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |Srm= 4 |İBU= 5 |  Hizmet Türü  |    Toplam Uzunluk = 472       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |         Betimleme = 111       |Byr=0|Veridilimi Başlangıcı = 0|
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |   Süre = 123  | Protokol = 6  |     Başlık Sağlama Özeti      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                         kaynak adresi                         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                         hedef adresi                          |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                             veri                              |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                             veri                              |
   \                                                               \
   \                                                               \
   |                             veri                              |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |             veri              |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                       Örnek Genel Ağ Verikatarı
</literallayout>
</figure><para>
Şimdi, ilk veridilimi verikatarından 256 veri sekizlisi  ayrılarak oluşturuluyor.
</para><figure><title>Genel Ağ Veridilimi Örneği</title>
<literallayout indent="0">
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |Srm= 4 |İBU= 5 |  Hizmet Türü  |     Toplam Uzunluk = 276      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |          Betimleme = 111      |Byr=1|Veridilimi Başlangıcı = 0|
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |   Süre = 119  | Protokol = 6  |     Başlık Sağlama Özeti      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                         kaynak adresi                         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                         hedef adresi                          |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                             veri                              |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                             veri                              |
   \                                                               \
   \                                                               \
   |                             veri                              |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                             veri                              |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                         Örnek Genel Ağ Veridilimi
</literallayout>
</figure><para>Ve ikinci veridilimi.</para>
<figure>
<literallayout indent="0">
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |Srm= 4 |İBU= 5 |  Hizmet Türü  |     Toplam Uzunluk = 216      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |         Betimleme = 111       |Byr=0|Veridilimi Başlangıcı=32 |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |   Süre = 119  | Protokol = 6  |     Başlık Sağlama Özeti      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                         kaynak adresi                         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                         hedef adresi                          |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                             veri                              |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                             veri                              |
   \                               .                               \
   \                               .                               \
   |                             veri                              |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |            veri               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                         Örnek Genel Ağ Veridilimi
</literallayout>
</figure></example>
<example><para>
Burada, seçenekleri içeren bir verikatarı örneği görüyoruz:
</para><figure><title>Seçenekli Verikatarı Örneği</title>
<literallayout indent="0">
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |Srm= 4 |İBU= 8 |  Hizmet Türü  |     Toplam Uzunluk = 576      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |         Betimleme = 111       |Byr=0|Veridilimi Başlangıcı = 0|
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |   Süre = 123  |  Protokol = 6 |     Başlık Sağlama Özeti      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                        kaynak adresi                          |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                         hedef adresi                          |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Sçn. Kodu = x | Sçn. Uzn. = 3 |seçenek değeri | Sçn. Kodu = x |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Sçn. Uzn. = 4 |         seçenek değeri        | Sçn. Kodu = 1 |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Sçn. Kodu = y | Sçn. Uzn. = 3 |seçenek değeri | Sçn. Kodu = 0 |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                             veri                              |
   \                               .                               \
   \                               .                               \
   |                             veri                              |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                             veri                              |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                       Örnek Genel Ağ Verikatarı
</literallayout>
</figure></example>
</appendix>

<appendix id="rfc791-appb"><title>Veri Aktarım Sırası</title>
<para>
Bu belgede açıklanan başlığın ve verinin aktarım sırası sekizli seviyesinde çözümlenmiştir. Bir sekizli grubunu bir şema olarak gösterdiğimizde, bu sekizlilerin aktarım sırası Türkçe'de okundukları normal sıraya göredir. Örneğin, aşağıdaki şemadaki sekizliler numaralandıkları sırayla aktarılırlar.
</para><figure><title>Sekizlilerin Aktarım Sırası</title>
<literallayout indent="0">
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |       1       |       2       |       3       |       4       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |       5       |       6       |       7       |       8       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |       9       |      10       |      11       |      12       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                      Sekizlilerin Aktarım Sırası
</literallayout>
</figure><para>
Bir sekizli bir sayısal büyüklüğü gösterdiğinde şekilde en soldaki bit, yüksek bit veya en önemli bittir. Yani, 0 etiketli bit en önemli bittir. Örneğin, aşağıdaki şekilde (onluk tabanda) 170 değeri gösterilmiştir.
</para><figure><title>Bitlerin Önemleri</title>
<literallayout indent="0">
    0 1 2 3 4 5 6 7
    +-+-+-+-+-+-+-+-+
    |1 0 1 0 1 0 1 0|
    +-+-+-+-+-+-+-+-+

    Bitlerin Önemleri
</literallayout>
</figure><para>
Benzer şekilde, bir çok sekizli alan bir sayısal büyüklüğü ifade ettiğinde, tüm alanların en solundaki bit en önemli bittir. Birden fazla sekizliden oluşan bir büyüklük aktarılırken en önemli bit önce gönderilir.
</para>
</appendix>

<bibliography id="rfc791-glos"><title>Dağarcık</title>
<variablelist><varlistentry>
    <term>1822</term><listitem><para>
BBN Report 1822, "The Specification of the Interconnection of a Host and an IMP".  ARPANET ile bir konak arasındaki arayüzün belirtimi.
</para></listitem></varlistentry><varlistentry>
    <term>ARPANET iletisi</term><listitem><para>
ARPANET'te bir konak ile IMP arasındaki aktarım birimi. Azami boyutu yaklaşık 1012 sekizlidir (8096 bit).
</para></listitem></varlistentry><varlistentry>
    <term>ARPANET lideri</term><listitem><para>
Konak/IMP arayüzünde bir ARPANET iletisi üzerindeki denetim bilgisi.
</para></listitem></varlistentry><varlistentry>
    <term>ARPANET paketi</term><listitem><para>
ARPANET'te IMP'ler arasında dahili olarak kullanılan bir aktarım birimi. Azami boyutu yaklaşık 126 sekizlidir (1008 bit).
</para></listitem></varlistentry><varlistentry>
    <term>başlık</term><listitem><para>
Bir iletinin, veridiliminin, verikatarının, paketin veya veri blokunun başlangıcındaki denetim bilgisi.
</para></listitem></varlistentry><varlistentry>
    <term>Bayraklar</term><listitem><para>
Çeşitli denetim bayraklarını taşıyan bir Genel Ağ başlığı alanı.
</para></listitem></varlistentry><varlistentry>
    <term>Betimleme</term><listitem><para>
Bir verikatarının veridilimlerini birleştirmeye yardımcı olmak için gönderici tarafından atanan betimleyici değeri taşıyan bir Genel Ağ başlığı alanı.
</para></listitem></varlistentry><varlistentry>
    <term>DBS</term><listitem><para>
Bir Genel Ağ veridiliminin veri kısmındaki Dilim Bloklarının Sayısı. Yani, veri kısmının 8 sekizli cinsinden ölçülen uzunluğu.
</para></listitem></varlistentry><varlistentry>
    <term>Dolgu</term><listitem><para>
Genel Ağ başlığında verinin 32 bitlik sözcük sınırında başlamasını temin için kullanılan Dolgu alanı. Dolgu sıfırlardan oluşur.
</para></listitem></varlistentry><varlistentry>
    <term>DY</term><listitem><para>
Seçenekler alanında taşınan Dilimlenmeyecek biti.
</para></listitem></varlistentry><varlistentry>
    <term>GGP</term><listitem><para>
Gateway to Gateway Protocol. Ağgeçitleri arası protokol, birincil olarak ağgeçitleri arasında rotayı ve diğer ağgeçidi işlevlerini denetlemekte kullanılan protokol.
</para></listitem></varlistentry><varlistentry>
    <term>Hedef</term><listitem><para>
Bir Genel Ağ başlığı alanı: hedef adresi
The destination address, an Genel Ağ header field.
</para></listitem></varlistentry><varlistentry>
    <term>Hizmet Türü</term><listitem><para>
Genel Ağ verikatarı için hizmet kalitesini belirten bir Genel Ağ başlığı alanı.
</para></listitem></varlistentry><varlistentry>
    <term>HT</term><listitem><para>
Hizmet Türü
</para></listitem></varlistentry><varlistentry>
    <term>ICMP</term><listitem><para>
Internet Control Message Protocol. Genel Ağ denetim iletisi protokolü; Genel Ağ modülünde gerçeklenir; ICMP ağgeçitlerinden konaklara ve konaklar arasında hataları raporlamakta ve yönlendirme önerileri yapmakta kullanılır.
</para></listitem></varlistentry><varlistentry>
    <term>IMP</term><listitem><para>
Interface Message Processor. Arayüz ileti işlemci, ARPANET'in paket anahtarlaması.
</para></listitem></varlistentry><varlistentry>
    <term>İBU</term><listitem><para>
Genel Ağ Başlığı Uzunluğu, Genel Ağ başlığının 32 bitlik sözcükler cinsinden ölçülen uzunluğunu taşıyan bir Genel Ağ başlığı alanıdır.
</para></listitem></varlistentry><varlistentry>
    <term>Genel Ağ Adresi</term><listitem><para>
Bir Ağ alanı ve bir Yerel Adres alanından ve dört sekizliden (32 bit) oluşan kaynak ve hedef adresi.
</para></listitem></varlistentry><varlistentry>
    <term>Genel Ağ veridilimi</term><listitem><para>
Bir Genel Ağ başlığı ile bir Genel Ağ verikatarının verisinin bir kısmını içeren bir veri değiştokuş birimi.
</para></listitem></varlistentry><varlistentry>
    <term>Genel Ağ verikatarı</term><listitem><para>
Bir Genel Ağ modül çifti arasındaki bir veri değiştokuş birimi (Genel Ağ başlığını içerir).
</para></listitem></varlistentry><varlistentry>
    <term>Kalan</term><listitem><para>
Bir Genel Ağ Adresinin yerel adres kısmı.
</para></listitem></varlistentry><varlistentry>
    <term>Kalan Veridilimleri bayrağı</term><listitem><para>
Bulunduğu veridiliminin bir Genel Ağ verikatarının sonunu içerip içermediğini belirten ve Genel Ağ başlığının Bayraklar alanında taşınan bir bayrak.
</para></listitem></varlistentry><varlistentry>
    <term>Kaynak</term><listitem><para>
Kalnak adresi. Bir Genel Ağ başlığı alanı.
</para></listitem></varlistentry><varlistentry>
    <term>KD</term><listitem><para>
Genel Ağ başlığının bayraklar alanında taşınan Kalan Veridilimleri bayrağı.
</para></listitem></varlistentry><varlistentry>
    <term>Kullanıcı</term><listitem><para>
Genel Ağ protokolünün kullanıcısı. Bu daha yüksek seviyeden bir protokol modülü, bir uygulama programı veya bir ağgeçidi programı olabilir.
</para></listitem></varlistentry><varlistentry>
    <term>modül</term><listitem><para>
Bir gerçeklenim, genellikle yazılım olarak; bir protokolün veya başka bir yordamın gerçeklenimi.
</para></listitem></varlistentry><varlistentry>
    <term>Protokol</term><listitem><para>
Bu belgede, Genel Ağ başlığında bir alanın ismi olup sonraki daha yüksek seviyeli protokolün betimleyicisini içerir.
</para></listitem></varlistentry><varlistentry>
    <term>Seçenekler</term><listitem><para>
Çeşitli seçenekler içeren Genel Ağ başlığının Seçenekler alanı. Her seçenek bir veya birkaç sekizli uzunlukta olabilir.
</para></listitem></varlistentry><varlistentry>
    <term>sekizli</term><listitem><para>
Bir sekiz bitlik bayt.
</para></listitem></varlistentry><varlistentry>
    <term>Sürüm</term><listitem><para>
Genel Ağ başlığının biçimini belirten Sürüm alanı.
</para></listitem></varlistentry><varlistentry>
    <term>TCP</term><listitem><para>
Transmission Control Protocol. Aktarım denetim protokolü: Genel Ağ ortamlarında güvenilir iletişim için konaklar arası protokol.
</para></listitem></varlistentry><varlistentry>
    <term>TCP Veribölütü</term><listitem><para>
TCP modülleri arasında veri değiştokuş birimi (TCP başlığını içerir).
</para></listitem></varlistentry><varlistentry>
    <term>TFTP</term><listitem><para>
Trivial File Transfer Protocol: UDP üzerine inşa edilmiş basit bir dosya aktarım protokolü.
</para></listitem></varlistentry><varlistentry>
    <term>Toplam Uzunluk</term><listitem><para>
Genel Ağ başlığı alanı olarak Toplam Uzunluk, Genel Ağ başlığı ve veri dahil sekizli cinsinden verikatarının uzunluğudur.
</para></listitem></varlistentry><varlistentry>
    <term>TTL</term><listitem><para>
Time to Live. Yaşam Süresi.
</para></listitem></varlistentry><varlistentry>
    <term>UDP</term><listitem><para>
User Datagram Protocol. Kullanıcı Verikatarı Protokolü:  Aktarım amaçlı uygulamalar için kullanıcı seviyesinde bir protokol.
</para></listitem></varlistentry><varlistentry>
    <term>Veridilimi Başlangıcı</term><listitem><para>
Bir veridiliminin bir Genel Ağ verikatarındaki yerini gösteren bir Genel Ağ başlığı alanı.
</para></listitem></varlistentry><varlistentry>
    <term>Yaşam Süresi</term><listitem><para>
Genel Ağ verikatarının Genel Ağ'da ne kadar süre kalabileceğinin bir üst sınırını içeren bir Genel Ağ başlık alanı.
</para></listitem></varlistentry><varlistentry>
    <term>Yerel Adres</term><listitem><para>
Bir ağdaki bir konağın adresi. Bir ağdaki konak adresleri üzerine bir Genel Ağ yerel adresinin asıl eşlemi çoktan bire eşleşmeyi mümkün kılmasıyla oldukça geneldir.
</para></listitem></varlistentry></variablelist>
</bibliography>

<bibliography id="rfc791-refs"><title>Kaynakça</title>
<orderedlist><listitem><para>
<biblioentry xreflabel="1" id="rfc791-bib1">
<abbrev>IEN48</abbrev>
<author><surname>Cerf</surname><firstname>V.</firstname></author>
<title>The Catenet Model for Internetworking</title>
<edition>Ağlar Arası Sistemler için Zincirleme Ağ Modeli</edition>
<publisher><publishername>Information Processing Techniques Office, Defense Advanced Research Projects Agency</publishername></publisher>
<pubdate>Temmuz 1978</pubdate>
</biblioentry>
</para></listitem><listitem><para>
<biblioentry xreflabel="2" id="rfc791-bib2">
<abbrev>BBN-TR1822</abbrev>
<author><firstname>Bolt Beranek and Newman</firstname></author>
<title>Specification for the Interconnection of a Host and an IMP</title>
<edition>Bir Konak ile bir IMP'nin Arabağlantısı için Belirtim</edition>
<publisher><publishername>BBN Technical Report 1822</publishername></publisher>
<pubdate>Mayıs 1978'de değişiklik yapıldı</pubdate>
</biblioentry>
</para></listitem><listitem><para>
<biblioentry xreflabel="3" id="rfc791-bib3">
<abbrev><link linkend="rfc792">RFC792</link></abbrev>
<author><firstname>J. Postel</firstname></author>
<title>Internet Control Message Protocol - DARPA Internet Program Protocol Specification</title>
<edition>ICMP - Genel Ağ Denetim İletisi Prokotolü - DARPA Internet Programı Protokol Belirtimi</edition>
<publisher><publishername>USC/Information Sciences Institute</publishername></publisher>
<pubdate>Eylül 1981</pubdate>
</biblioentry>
</para></listitem><listitem><para>
<biblioentry xreflabel="4" id="rfc791-bib4">
<abbrev>F1978</abbrev>
<author><firstname>J. Shoch</firstname></author>
<title>Inter-Network Naming, Addressing, and Routing</title>
<edition>Ara-Ağlarda İsimleme, Adresleme ve Yönlendirme</edition>
<publisher><publishername>COMPCON, IEEE Computer Society</publishername></publisher>
<pubdate>1978 Baharı</pubdate>
</biblioentry>
</para></listitem><listitem><para>
<biblioentry xreflabel="5" id="rfc791-bib5">
<abbrev><link linkend="rfc796">RFC796</link></abbrev>
<author><firstname>J. Postel</firstname></author>
<title>Address Mappings</title>
<edition>Adres Eşlemleri</edition>
<publisher><publishername>USC/Information Sciences Institute</publishername></publisher>
<pubdate>Eylül 1981</pubdate>
</biblioentry>
</para></listitem><listitem><para>
<biblioentry xreflabel="6" id="rfc791-bib6">
<abbrev>CN-v3n1</abbrev>
<author><firstname>J. Shoch</firstname></author>
<title>Packet Fragmentation in Inter-Network Protocols</title>
<edition>Ara-Ağ Protokollerinde Paketin Dilimlenmesi</edition>
<publisher><publishername>Computer Networks, v. 3, n. 1</publishername></publisher>
<pubdate>Şubat 1979</pubdate>
</biblioentry>
</para></listitem><listitem><para>
<biblioentry xreflabel="7" id="rfc791-bib7">
<abbrev>IEN109</abbrev>
<author><firstname>V. Strazisar</firstname></author>
<title>How to Build a Gateway</title>
<edition>Bir Ağgeçidi Nasıl Kurulur</edition>
<publisher><publishername>Bolt Beranek and Newman</publishername></publisher>
<pubdate>Ağustos 1979</pubdate>
</biblioentry>
</para></listitem><listitem><para>
<biblioentry xreflabel="8" id="rfc791-bib8">
<abbrev><link linkend="rfc795">RFC795</link></abbrev>
<author><firstname>J. Postel</firstname></author>
<title>Service Mappings</title>
<edition>Hizmet Eşlemleri</edition>
<publisher><publishername>USC/Information Sciences Institute</publishername></publisher>
<pubdate>Eylül 1981</pubdate>
</biblioentry>
</para></listitem><listitem><para>
<biblioentry xreflabel="9" id="rfc791-bib9">
<abbrev><link linkend="rfc790">RFC790</link></abbrev>
<author><firstname>J. Postel</firstname></author>
<title>Assigned Numbers</title>
<edition>Atanmış Numaralar</edition>
<publisher><publishername>USC/Information Sciences Institute</publishername></publisher>
<pubdate>Eylül 1981</pubdate>
</biblioentry>
</para></listitem></orderedlist>
</bibliography>
</article>
