<?xml version="1.0" encoding="UTF-8"?>
<!--DOCTYPE book SYSTEM "docbook/dtd/docbookx.dtd"-->
<!-- ********************************************************************
     $Id: html-php-mysql-giris.xml,v 1.2 2002/12/20 22:29:48 nilgun Exp $
     ******************************************************************** -->
<book xml:id="html-php-mysql-giris">
<?dbhtml dir="../hpm"?>
<?dbpdf pdf="no"?>
  <bookinfo>
    <title>
      HTML ile Web Tasarımına ve PHP-MySQL ile Web Programcılığına Giriş
    </title>
    <author>
      <firstname>Fehmi Noyan İSİ, Nilgün Belma Bugüner</firstname>
    </author>
    <revhistory>
      <revision>
         <revnumber>3.1</revnumber>
         <date>Nisan 2006</date>
         <authorinitials>NBB</authorinitials>
         <revremark>Lisans GPL olarak değiştirildi.</revremark>
      </revision><revision>
         <revnumber>3.0</revnumber>
         <date>Kasım 2002</date>
         <authorinitials>FNI, NBB</authorinitials>
         <revremark>
            2.0 sürümü önce docbook-xml'e dönüştürüldü ve kitap haline getirildi.
            2.0 sürümünde olmayan HTML etiketleri eklendi, HTML-4.0'da
            bulunmayan etiketler çıkarıldı. HTML kod örnekleri elden geçirildi
            ve sonuçları sayfa içinde gösterildi.
         </revremark>
      </revision>
      <revision>
         <revnumber>2.0</revnumber>
         <date>Haziran 2002</date>
         <authorinitials>FNI</authorinitials>
         <revremark>
            Doc biçemli sürüm.
          </revremark>
      </revision>
    </revhistory>

    <abstract>
      <para>
        Elinizdeki bu kitapçık ile profesyonel bir web
        sitesi hazırlamanız ne yazık ki mümkün değildir. Profesyonel bir site
        teknik olarak yeterli olmasının yanı sıra görünüm ve grafik açısında
        da belli bir seviyeye ulaşmış olmalıdır. Bu kitapçıkta değinilen konular
        daha çok bir web sitesinin teknik tasarımı üzerinedir.
      </para><para>
        Hazırladığımız bu kitapçığın sizler için bir başlangıç olacağını umuyoruz.
      </para><para>
        Fehmi Noyan İSİ'nin kişisel web sitesine
        <link xlink:href="http://www2.gantep.edu.tr/~fni18444"/>
        adresinden erişebilirsiniz.
      </para>
    </abstract>
  </bookinfo>

  <part xml:id="html-php-mysql-giris_giris">
    <title>Giriş</title>
    <chapter xml:id="html-php-mysql-giris_giris1" label="1"><title>HTML Nedir?</title>
      <para>
        HTML (<command>H</command>yper <command>T</command>ext <command>M</command>arkup <command>L</command>anguage)
        internet üzerinde web sayfası oluşturmak için kullanılan bir betik dilidir.
        HTML dosyalarının aktarımı için HTTP (<command>H</command>yper
        <command>T</command>ext <command>T</command>ransfer <command>P</command>rotocol)
        kullanılır. HTML dosyaları sunucu bilgisayarın sabit diskinde
        <literal>.html</literal> ya da <literal>.htm</literal> uzantısı ile
        saklanır. Yazdığımız html dosyaları düz yazı dosyalarından başka bir şey
        değildir. Yani yazdığımız html dosyalarını bir C ya da Pascal programında
        olduğu gibi bir derleyici ile derlememize gerek yoktur. Bir siteye
        girdiğimiz zaman bize görüntülenen ilk sayfa <literal>index.html, index.htm,
        index.asp, index.php</literal> ya da <literal>default.htm</literal>
        dosyalarından birisidir. <literal>index.*</literal> dosyaları UNIX ve türevi
        sunucu sistemler, <literal>default.htm</literal> dosyasıda WinNT ya da
        türevi sistemler için giriş sayfası olur. Yukarıda saydıklarımın dışında
        uzantısı değişik birçok biçemdeki sayfalar da sunucu sistemin ayarları
        değiştirilerek giriş sayfası yapılabilir.
      </para><para>
        Web istemcimizin adres satırına <literal>http://www.belgeler.org</literal>
        gibi bir ifade yazarsak sunucu sistem bize, o adresin www kök
        dizinindeki <literal>index.html</literal> (ya da hangi giriş sayfası tanımlı
        ise) dosyasını görüntüleyecektir.
      </para>
    </chapter>
    <chapter xml:id="html-php-mysql-giris_giris2" label="2"><title>HTML’nin Yapısı</title>
      <para>
        Daha öncede söylediğim gibi html dosyaları sadece düz yazı dosyalarıdır.
        HTML öğrenmesi oldukça basit ve yaratıcılığa fazla açık olmayan bir dildir.
        Basittir çünkü, internette gezinirken görüntülediğiniz sayfaların
        hazırlanırken kullanılan  teknikleri öğrenmemiz mümkündür (Sayfanın
        üzerinde farenizin sağ tuşuna bastıktan sonra Kaynağı Görüntüle seçeneği
        ile). Beğendiğiniz tasarımları kendi sayfanızda kullanabilir, bu
        tasarımların hangi html kodları kullanılarak yapıldığını öğrenebilirsiniz.
        Yaratıcılığa fazla açık değil dedim çünkü html ile yazdığınız sayfalar
        PHP, ASP, ColdFusion, CGI... gibi web programlama dilleri kullanılmadan
        statik html dışına çıkamaz.
      </para><para>
        HTML kodlarını yazmak için özel bir düzenleyiciye ihtiyacınız yoktur.
        Bu iş için Windows altında NotePad ya da DOS-Edit, Linux altında pico,
        joe ya da vi gibi metin düzenleyicileri yeterlidir. HTML sayfalarınızı
        kod yazmaksızın FrontPage, Netscape Composer gibi programlarla da
        hazırlayabilirsiniz. Yalnız bu programlar kullanılarak hazırlanan sayfalar
        genellikle belli bir çerçeve içinde olduğu için zaten dar olan HTML’nin
        üreticilik alanını daha da daraltmaktadır. Bunun yanı sıra HTML’yi kod
        düzeyinde bilmenin kullanıcıya her zaman  fayda getireceği de
        unutulmamalıdır (İleriki bölümlerde değineceğim Dinamik Web Tasarımı için
        HTML’nin kod düzeyinde bilinmesi gereklidir!).
      </para>
    </chapter>
  </part>
  <part xml:id="html-php-mysql-giris_html">
    <title>HTML'ye Giriş</title>
    <para>
      Etiket, HTML dosyasında kullanılan komutlara verilen addır. HTML içinde
      kullanılan tüm etiketler “&lt;” işareti ile başlar ve “>”ile biter.
      Ayrıca etiketin yorum aralığı da “&lt;/etiket ismi>” kalıbı ile bitirilir.
      Aşağıda etiket kullanımına kısa bir örnek verdim.
</para><para><screen>
&lt;etiket1>...Burası etiket1’in yorum aralığı...&lt;/etiket>
&lt;etiket2>
  ....Burası etiket2’nin yorum aralığı...
  ....
  &lt;etiket3>...Burada etiket3 tanımlı...&lt;/etiket3>
  ...Etiket2 hala tanımlı...
  ...
&lt;/etiket2>
</screen></para><para>
      Görüldüğü gibi en son, etiket2 &lt;/etiket2>etiketi ile kapatılıyor. Dikkat
      ederseniz değişik etiketler birbirlerinin içinde kullanılabiliyor. Yani açık
      etiketin içinde başka bir etiket açıp istediğiniz işlemi gerçekleştirebiliyorsunuz.
      Etiketin bitiş işaretini (&lt;/etiket ismi>) vermediğiniz sürece o etiket
      tanımlı olarak işlem görür.
    </para><para>
      Tüm HTML dosyaları &lt;html> etiketi ile başlayıp &lt;/html> etiketi ile
      son bulur. Bunun yanında &lt;html> etiketi ile &lt;HTML> etiketi arasında
      hiçbir fark yoktur. Ancak etiketleri küçük harflerle yazmaya alışmanızı
      öneririm. İleride XHTML kodları yazmak zorunda kalabilirsiniz ve XHTML
      dilinde etiketlerin küçük harflerle yazılması zorunludur.
    </para><para>
      HTML dosyaları temel olarak iki bölümden oluşur. Bunlar HEAD (Başlık) ve
      BODY (Gövde) kısımlarıdır.  Başlık kısmında ziyaretçiye görünmeyen, sayfa
      hakkında tanımlayıcı bilgiler bulunur. Gövde kısmı ise web sayfamızın
      ziyaretçiye görünen kısmını yani asıl kısmını oluşturur.
    </para>
    <chapter xml:id="html-php-mysql-giris_html-tags"  label="1">
      <title>HTML Etiketleri</title>
      <sect1 xml:id="html-php-mysql-giris_html-html">
        <title>&lt;html> &lt;/html></title>
        <para>
          Daha öncede belirttiğim gibi html kodlarının yorum aralığını başlatmak için
          bu etiketi kullanırız. Sayfamızın <literal>head</literal> ve <literal>body</literal>
          bölümleri bu etiketin yorum aralığında tanımlıdır.
</para><para><screen>
1 &lt;html>
2 &lt;head>... head etiketinin içeriği ....&lt;/head>
3 &lt;body>
4   ....
5   body etiketinin içeriği
6   ....
7 &lt;/body>
8 &lt;/html>
</screen></para><para>
          Birinci satırda &lt;html> etiketi ile HTML sayfamıza başlıyoruz. Daha
          sonra &lt;head> ve &lt;body> etiketleri &lt;html> etiketi içerisinde
          tanımlanıp içerikleri yazılıyor. En son olarak da &lt;/html> etiketi
          ile HTML sayfamızı bitiriyoruz.
        </para><para>
          Yazdığımız html dosyasının başında bu etiketin tanımlanmaması şu an
          kullanılan web istemciler açısından bir sorun oluşturmayacaktır. Fakat
          sitenizi ziyaret eden ziyaretçi eski bir istemci kullanıyorsa bu etiketi
          kullanmamanız bir takım sorunlar oluşturabilir (sonsuz uzunlukta sayfa gibi).
          En iyisi siz her html dosyasına başlarken ve bitirirken bu etiketi
          kullanın.
        </para><para>
          Yorum alanında kullanılabilecek etiketler:
          <link linkend="html-php-mysql-giris_html-head">HEAD</link>,
          <link linkend="html-php-mysql-giris_html-body">BODY</link>
        </para>
      </sect1>
      <sect1 xml:id="html-php-mysql-giris_html-head">
        <title>&lt;head> &lt;/head></title>
        <para>
          Yorum alanında sayfamız hakkında bilgilerin bulunduğu bir etikettir.
          Örneğin sayfamızın başlık bilgisinin bulunduğu TITLE etiketi ya da
          arama motorlarına bilgi sağlamak için oluşturulan META etiketi bu
          etiketin yorum alanında tanımlanır.
</para><para><screen>
&lt;html>
  &lt;head>
    &lt;title>.....&lt;/title>
  &lt;/head>
  &lt;body>
    ....
    body etiketinin içeriği
    ....
  &lt;/body>
&lt;/html>
</screen>
        </para>
        <para>
          Yorum alanında kullanılabilecek etiketler:
          SCRIPT, STYLE,
          <link linkend="html-php-mysql-giris_html-meta">META</link>,
          LINK, OBJECT,
          <link linkend="html-php-mysql-giris_html-title">TITLE</link>,
          BASE
        </para>
      </sect1>
      <sect1 xml:id="html-php-mysql-giris_html-body">
        <title>&lt;body> &lt;/body></title>
        <para>
          HTML dosyamız içindeki en geniş içerikli etiket budur. Ziyaretçiye
          görünen herşey bu etiketin yorum alanında tanımlanır.
          Ayrıca bu etiket içinde kullanılan bileşenlerle de sayfamızın
          bazı temel özelliklerini belirtebiliriz.
        </para><para>
        <table frame="none" style="background:#999999;">
          <title>Body etiketinin bileşenleri</title>
          <tgroup cols='2'>
          <tbody>
            <row style="background:#eeeedd;">
              <entry align="center" valign="top">Girilecek Kod</entry>
              <entry align="center" valign="top">Görevi</entry>
            </row><row style="background:#ffffee;">
              <entry valign="top">text = “renk”</entry>
              <entry valign="top">
                Sayfanızdaki yazıların rengine <literal>renk</literal> ile belirtilen değeri verir.
              </entry>
            </row><row style="background:#ffffee;">
              <entry valign="top">link = “renk”</entry>
              <entry valign="top">
                Sayfanızdaki bağların rengine <literal>renk</literal> ile belirtilen değeri verir.
              </entry>
            </row><row style="background:#ffffee;">
              <entry valign="top">vlink = “renk”</entry>
              <entry valign="top">
                Sayfanızdaki ziyaret edilmiş bağların rengine <literal>renk</literal> ile
                belirtilen değeri verir.
              </entry>
            </row><row style="background:#ffffee;">
              <entry valign="top">alink = “renk”</entry>
              <entry valign="top">
                Sayfanızdaki aktif bağların rengine <literal>renk</literal> ile belirtilen
                değeri verir.
              </entry>
            </row><row style="background:#ffffee;">
              <entry valign="top">bgcolor = “renk”</entry>
              <entry valign="top">
                Sayfanızın arka plan rengine <literal>renk</literal> ile tanımlı değeri verir.
              </entry>
            </row><row style="background:#ffffee;">
              <entry valign="top">background = “resim_dosyası”</entry>
              <entry valign="top">
                Eğer arka planda sade bir renk değil de bir resim kullanmak istiyorsanız,
                <literal>resim_dosyası</literal> kullanacağınız resmin adını temsil eder.
              </entry>
            </row><row style="background:#ffffee;">
              <entry valign="top">topmargin = “değer”</entry>
              <entry valign="top">
                Sayfamızda kullanacağımız bileşenlerin istemci penceresinin üst
                kenarına olan uzaklığını belirler.
              </entry>
            </row><row style="background:#ffffee;">
              <entry valign="top">leftmargin = “değer”</entry>
              <entry valign="top">
                Sayfamızda kullanacağımız bileşenlerin istemci penceresinin sol
                kenarına olan  uzaklığını belirler.
              </entry>
            </row><row style="background:#ffffee;">
              <entry valign="top">rightmargin = “değer”</entry>
              <entry valign="top">
                Sayfamızda kullanacağımız bileşenlerin istemci penceresinin sağ
                kenarına olan uzaklığını belirler.
              </entry>
            </row><row style="background:#ffffee;">
              <entry valign="top">onload = “betik”</entry>
              <entry valign="top">
                Sayfa yüklenirken çalıştırılacak javascript betiğini belirler.
              </entry>
            </row><row style="background:#ffffee;">
              <entry valign="top">onunload = “betik”</entry>
              <entry valign="top">
                Başka bir sayfaya geçerken çalıştırılacak javascript betiğini
                belirler.
              </entry>
            </row>
          </tbody></tgroup>
        </table></para>
        <para>
          Yukarıdaki tabloda kullandığım <literal>renk</literal> değeri HTML
          içinde kullanılan renk kodlarını temsil etmektedir. Altı basamaktan
          oluşan bu renk kodları ana renkler olan mavi, sarı ve kırmızının
          kullanılan renkteki tonuna göre onaltılık tabanda sayılarla istediğimiz
          rengi elde edebiliriz.
        </para><para>
          Renk kodları hakkında kısa bir bilgi vermek gerekirse kodlar ikişer
          basamaklı üç bölümden oluşur. Aşağıdaki tablo bu konu hakkında kafanızda
          oluşan soru işaretlerinin silinmesinde size yardımcı olacaktır.
        </para><para>
        <table frame="none" style="background:#999999;">
          <title>Renk Kodlarının Yapısı</title>
          <tgroup cols='3'>
          <tbody>
            <row style="background:#eeeedd;">
              <entry align="center" valign="top">Kırmızı</entry>
              <entry align="center" valign="top">Yeşil</entry>
              <entry align="center" valign="top">Mavi</entry>
            </row><row style="background:#ffffee;">
              <entry align="center" valign="top">00...FF</entry>
              <entry align="center" valign="top">00...FF</entry>
              <entry align="center" valign="top">00...FF</entry>
            </row>
          </tbody></tgroup>
        </table></para>
        <para>
          2. Satırda ifade ettiğim aralıklara değişik değerler
          (0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F) vererek rengi oluşturmamız mümkündür.
          Kod kullanmanın yanı sıra renkleri doğrudan İngilizce adlarını
          yazarak da kullanabiliriz. Örneğin beyazın kodu olan
          <literal>#FFFFFF</literal> yerine <literal>white</literal> yazmamızda
          sonucu değiştirmeyecektir.
        </para><para>
        <table frame="none">
          <title>Bazı Renkler ve Kodları</title>
          <tgroup cols='2'>
          <tbody>
            <row style="background:#eeeedd;">
              <entry align="center">
                <informaltable frame="none" style="background:#999999;">
                  <tgroup cols='2'>
                  <tbody>
                    <row style="background:#eeeedd;">
                      <entry align="center">Renk Adı</entry>
                      <entry align="center">Kodu</entry>
                    </row><row style="background:#0; color:white;">
                      <entry>black (siyah)</entry><entry>#000000</entry>
                    </row><row style="background:#800000; color:white;">
                      <entry>maroon (k.kırmızı)</entry><entry>#800000</entry>
                    </row><row style="background:#008000; color:white;">
                      <entry>green (k.yeşil)</entry><entry>#008000</entry>
                    </row><row style="background:#000080; color:white;">
                      <entry>navy (lâcivert)</entry><entry>#000080</entry>
                    </row><row style="background:#800080; color:white;">
                      <entry>purple (k.mor)</entry><entry>#800080</entry>
                    </row><row style="background:#008080; color:white;">
                      <entry>teal (k.türkuaz)</entry><entry>#008080</entry>
                    </row><row style="background:#808000; color:white;">
                      <entry>oliver (hâki)</entry><entry>#808000</entry>
                    </row><row style="background:#808080; color:white;">
                      <entry>gray (gri)</entry><entry>#808080</entry>
                    </row>
                  </tbody></tgroup>
                </informaltable>
              </entry>
              <entry align="center">
                <informaltable frame="none" style="background:#999999;">
                  <tgroup cols='2'>
                  <tbody>
                    <row style="background:#eeeedd;">
                      <entry align="center">Renk Adı</entry>
                      <entry align="center">Kodu</entry>
                    </row><row style="background:#C0C0C0;">
                      <entry>silver (gümüş)</entry><entry>#C0C0C0</entry>
                    </row><row style="background:#FF0000;">
                      <entry>red (kırmızı)</entry><entry>#FF0000</entry>
                    </row><row style="background:#00FF00;">
                      <entry>lime (yeşil)</entry><entry>#00FF00</entry>
                    </row><row style="background:#0000FF; color:white;">
                      <entry>blue (mavi)</entry><entry>#0000FF</entry>
                    </row><row style="background:#FF00FF;">
                      <entry>magenta (mor)</entry><entry>#FF00FF</entry>
                    </row><row style="background:#00FFFF;">
                      <entry>aqua (türkuaz)</entry><entry>#00FFFF</entry>
                    </row><row style="background:#FFFF00;">
                      <entry>yellow (sarı)</entry><entry>#FFFF00</entry>
                    </row><row style="background:#FFFFFF;">
                      <entry>white (beyaz)</entry><entry>#FFFFFF</entry>
                    </row>
                  </tbody></tgroup>
                </informaltable>
              </entry>
            </row>
          </tbody></tgroup>
        </table></para>
        <para>
          Dikkat ederseniz her renk kodu bir diyez (#) işareti ile başlıyor ve
          daha sonra altı basamaktan oluşan bir bölüm geliyor. Bu altı basamak
          içinde <literal>F</literal> yada <literal>f</literal> bulunduğu basamaktaki rengin tam olarak
          kullanılmasını ve sıfır (<literal>0</literal>) ise o basamaktaki rengin hiç kullanılmamasını
          sağlamak için kullanılır. Yine html kodlarında olduğu gibi renk kodlarında
          da büyük-küçük harf ayrımı yoktur. Yani <literal>#FFFFFF</literal> ve
          <literal>#ffffff</literal> aynı rengi yani <literal>beyaz</literal>ı temsil eder.
        </para><para>
<screen>
&lt;body text="#000000" bgcolor="#FFFFFF" link="#808080" vlink="#eaeaea" alink="#000000">

&lt;body text="#000000" background="../resimler/arkafon.gif">

&lt;body bgcolor="#334455" text=”#ffffff" topmargin="0">
</screen></para><para>
          Yukarıdaki birinci kod satırı sayfamızın arka plan rengini beyaz,
          yazıları siyah, bağları ve ziyaret edilmiş bağları gri ve etkin bağları
          da siyah yapmak için kullanılır.
        </para><para>
          İkinci satır ise yazı rengini siyah yapmak, bulunduğumuz dizinin bir
          üst dizinindeki “resimler” dizininde bulunan “arkafon.gif” resmini
          artalan yapmak için kullanılır.
        </para><para>
          Yazdığım son satır ile de sayfamın arka fon ve yazı rengini belirliyor,
          sayfamın bileşenlerinin istemci penceresinin üst kenarlığına olan
          uzaklığı sıfırlıyorum.
        </para>
      </sect1>
      <sect1 xml:id="html-php-mysql-giris_html-title">
        <title>&lt;title> &lt;/title></title>
        <para>
          Sayfamızın başlık bilgisi bu etiket altında yer alır. Bu etiket head
          etiketi içinde kullanılmak zorundadır.
</para><para><screen>
&lt;head>
&lt;title>İlk HTML denemem&lt;/title>
&lt;/head>
</screen></para><para>
          Gibi bir kod parçası istemcimizin başlık çubuğunda aşağıdaki gibi bir
          görünüm oluşturacaktır. Bu etiket ile body etiketinde olduğu gibi renk
          seçenekleri kullanılamaz.</para><para>
          <mediaobject>
            <imageobject>
              <imagedata fileref="title.png" format="PNG"/>
            </imageobject>
            <caption>Resim 1. Title Etiketi Kullanımı</caption>
          </mediaobject>
        </para>
      </sect1>
      <sect1 xml:id="html-php-mysql-giris_html-center">
        <title>&lt;center> &lt;/center></title>
        <para>
          Kendi yorum aralığında bulunan tüm etiketlerin ekran çıktılarını browser
          penceresine ekranı ortalayacak şekilde basar.
</para><para><screen>
&lt;center>
....
Burası etiketin yorum aralığı
.....
&lt;/center>
...
Burası center etiketinin yorum aralığının dışında
</screen></para><para>
          Normal şartlarda HTML sola dayalı olarak çıktı verecektir. Ama
          yukarıdaki gibi bir kod örneğinin çıktısı aşağıdaki gibi olacaktır.
        </para><para>
          <informaltable frame="none" style="background:#e0e0e0; width:95%">
            <tgroup cols='1'>
            <tbody>
              <row>
                <entry align="center">Burası etiketin yorum aralığı</entry>
              </row><row>
                <entry>Burası center etiketinin yorum aralığının dışında</entry>
              </row>
            </tbody></tgroup>
          </informaltable>
        </para>
      </sect1>
      <sect1 xml:id="html-php-mysql-giris_html-hx">
        <title>&lt;hx> &lt;/hx> Başlık Etiketleri</title>
        <para>
          Bu  etiketler basit olarak bir başlık kullanmak istediğimiz zaman,
          başlığı yazmak için kullanılan etikettir. Etiketin kullanımında “Hx”
          ifadesindeki “x” 1 ile 6 arasında değerler alabilen bir tamsayıdır.
          Bu etiket ile ekrana basılabilecek en büyük boyutlu yazı &lt;H1>
          etiketi ile, en küçük boyutlu yazı &lt;H6> etiketi ile basılır.
        </para><para>
          Bu etiket ile birlikte bir önceki etiket olan &lt;p> etiketindeki gibi
          dört yer belirleme kodu kullanılabilir. Etiketin kullanımı
          <literal>&lt;h1 align="center">Bu benim en büyük başlığım!&lt;/h1></literal>
          şeklindedir. Etiketin yorum aralığındaki metin başlık olarak
          ekrana basılır.
</para><para><screen>
&lt;h1 align="center" style="color:black;">Bu başlıklar gittikçe küçülecek!!!&lt;/h1>
&lt;h2 align="center" style="color:blue;">Bu başlıklar gittikçe küçülecek!!!&lt;/h2>
&lt;h3 align="center" style="color:navy;">Bu başlıklar gittikçe küçülecek!!!&lt;/h3>
&lt;h4 align="center" style="color:green;">Bu başlıklar gittikçe küçülecek!!!&lt;/h4>
&lt;h5 align="center" style="color:maroon;">Bu başlıklar gittikçe küçülecek!!!&lt;/h5>
&lt;h6 align="center" style="color:purple;">Bu başlıklar gittikçe küçülecek!!!&lt;/h6>
</screen></para><para>
          Yukarıdaki örneğin istemci çıktısı aşağıdakine benzer olacaktır.
        </para><para>
          <informaltable frame="none" style="background:#e0e0e0; width:95%">
            <tgroup cols='1'>
            <tbody>
              <row>
                <entry>
                  <div>
                    <h1 class="caption" style="background:#e0e0e0; color:black;">Bu başlıklar gittikçe küçülecek!!!</h1>
                    <h2 class="caption" style="background:#e0e0e0; color:blue;">Bu başlıklar gittikçe küçülecek!!!</h2>
                    <h3 class="caption" style="background:#e0e0e0; color:navy;">Bu başlıklar gittikçe küçülecek!!!</h3>
                    <h4 class="caption" style="background:#e0e0e0; color:green;">Bu başlıklar gittikçe küçülecek!!!</h4>
                    <h5 class="caption" style="background:#e0e0e0; color:maroon;">Bu başlıklar gittikçe küçülecek!!!</h5>
                    <h6 class="caption" style="background:#e0e0e0; color:purple;">Bu başlıklar gittikçe küçülecek!!!</h6>
                  </div>
                </entry>
              </row>
            </tbody></tgroup>
          </informaltable>
        </para>
      </sect1>
      <sect1 xml:id="html-php-mysql-giris_html-bisu">
        <title>&lt;b> &lt;/b>, &lt;i> &lt;/i>, &lt;s> &lt;/s>, &lt;u> &lt;/u>, &lt;big> &lt;/big>, &lt;small> &lt;/small>, &lt;tt> &lt;/tt></title>
        <para>
          Bunlar yazı tiplerinin nasıl yorumlanacağını belirten etiketlerdir.
</para><para><screen>
&lt;b>kalın&lt;/b>, &lt;i>eğik&lt;/i>, &lt;s>üzeri çizili&lt;/s>, &lt;u>altı çizili&lt;/u>,
&lt;small>küçük&lt;/small>, &lt;big>büyük&lt;/big>, &lt;tt>daktilo yazısı&lt;/tt>
</screen></para><para>
          <informaltable frame="none" style="background:#e0e0e0; width:95%">
            <tgroup cols='1'>
            <tbody>
              <row>
                <entry>
                  <div>
                    <b>kalın</b>, <i>eğik</i>, <s>üstü çizili</s>, <u>altı çizili</u>,
                    <small>küçük</small>, <big>büyük</big>, <tt>daktilo yazısı</tt>
                  </div>
                </entry>
              </row>
            </tbody></tgroup>
          </informaltable>
        </para>
      </sect1>
      <sect1 xml:id="html-php-mysql-giris_html-sub">
        <title>&lt;sub> &lt;/sub>, &lt;sup> &lt;/sup></title>
        <para>
          Formül ve benzeri metinleri yazarken kullanılır.
</para><para><screen>
H&lt;sub>2&lt;/sub>SO&lt;sub>4&lt;/sub> &lt;br>
E = mc&lt;sup>2&lt;/sup>
</screen></para><para>
          <informaltable frame="none" style="background:#e0e0e0; width:95%">
            <tgroup cols='1'>
            <tbody>
              <row>
                <entry>
                  <div>
                    H<sub>2</sub>SO<sub>4</sub><br/>E = mc<sup>2</sup>
                  </div>
                </entry>
              </row>
            </tbody></tgroup>
          </informaltable>
        </para>
      </sect1>
      <sect1 xml:id="html-php-mysql-giris_html-hr">
        <title>&lt;hr></title>
        <para>
          Ekrana yatay çizgi çizmek için kullanılır. Bu etiketinde &lt;br> etiketi
          gibi sonlandırıcısı yoktur. Yani bu etiket bir yorum aralığı belirtmez.
          Bu etiket ile tanımlanabilecek üç değişik özellik vardır.
        </para><para>
          <table frame="none" style="background:#999999;">
            <title>hr etiketi içinde kullanılan kodlar</title>
            <tgroup cols='2'>
            <tbody>
              <row style="background:#eeeedd;">
                <entry align="center" valign="top">Girilecek Kod</entry>
                <entry align="center" valign="top">Görevi</entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">width = "genişlik"</entry>
                <entry valign="top">Çizilecek çizginin yatay uzunluğunu belirlemek için kullanılır.</entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">size = "kalınlık"</entry>
                <entry valign="top">Çizilecek çizginin kalınlığını belirtir.</entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">color = "renk"</entry>
                <entry valign="top">Çizilecek çizginin rengini belirtir.</entry>
              </row>
            </tbody></tgroup>
          </table></para><para>
<screen>
Bu kod, sayfa genişliğinde kalın ve mavi bir çizgi
&lt;hr width="100%" color="#0000F8" size="4">
çizer.
</screen></para><para>
          <informaltable frame="none" style="background:#e0e0e0; width:95%">
            <tgroup cols='1'>
            <tbody>
              <row>
                <entry>
                  <div>
                    Bu kod, sayfa genişliğinde kalın ve mavi bir çizgi
                    <hr width="100%" color="#0000F8" size="4"/>çizer.
                  </div>
                </entry>
              </row>
            </tbody></tgroup>
          </informaltable>
        </para>
      </sect1>
      <sect1 xml:id="html-php-mysql-giris_html-br">
        <title>&lt;p> &lt;/p> ve &lt;br></title>
        <para>
          BR etiketinin sonlandırıcısı (&lt;/br>) yoktur, yani bir yorum
          aralığından söz edilemez. BR etiketi bulunduğumuz satırdan bir
          satır aşağı geçmek için kullanılır.
</para><para><screen>
Burada bir metin var
Bir alt satıra geçtiğimi sanıyorum!
</screen></para><para>
          Yukarıdaki metin ekran yan yana basılacaktır. Her ne kadar kodu
          yazarken satır atlayarak yazmış olsak bile browser bu kodu yorumlarken
          arada &lt;br> etiketi olmadığı için bu iki cümleyi yan yana basacaktır.
          Kodun doğru kullanımı
</para><para><screen>
Burada bir metin var &lt;br>
Bir alt satıra geçtim!
</screen></para><para>
          şeklinde olmalıdır.
        </para><para>
          &lt;p> ve &lt;/p> etiketleri ise paragraf oluşturmak için kullanılır.
          P etiketi içinde yine body etiketinde olduğu gibi birtakım tanımlamalar
          yapılabilir.</para><para>
          <table frame="none" style="background:#999999;">
            <title>&lt;p> etiketinin bileşenleri</title>
            <tgroup cols='2'>
            <tbody>
              <row style="background:#eeeedd;">
                <entry align="center" valign="top">Girilecek Kod</entry>
                <entry align="center" valign="top">Görevi</entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">align = "left"</entry>
                <entry valign="top">Paragrafı sola dayalı olarak yazar.</entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">align = "right"</entry>
                <entry valign="top">Paragrafı sağa dayalı olarak yazar.</entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">align = "center"</entry>
                <entry valign="top">Paragrafı ortalar.</entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">align = "justify"</entry>
                <entry valign="top">
                  Paragrafı sola ve sağa dayalı olarak yazabilmek için sözcüklerin
                  ara boşluklarını değiştirir.
                </entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">class = "css_etiketi"</entry>
                <entry valign="top">
                  Önceden tanımlı bir CSS dosyasındaki font-size, color... gibi
                  özellikleri paragrafa uygular.
                </entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">style = "css:tanımı1;css:tanımı2;..."</entry>
                <entry valign="top">
                  font-size, color... gibi css tanımlarını paragrafa uygular.
                </entry>
              </row>
            </tbody></tgroup>
          </table></para><para>
<screen>
&lt;p align="justify">
Burada bir metin var.&lt;br>
Bir alt satıra geçtiğimi sanıyorum!   Daha önceki örneğe ek olarak
yazımı bir paragraf içinde yazıyorum.
&lt;/p>
</screen></para><para>
          <informaltable frame="none" style="background:#e0e0e0; width:95%">
            <tgroup cols='1'>
            <tbody>
              <row>
                <entry align="justify">
                  Burada bir metin var. Bir alt satıra geçtiğimi sanıyorum!
                  Daha önceki örneğe ek olarak yazımı bir paragraf içinde
                  yazıyorum.
                </entry>
              </row>
            </tbody></tgroup>
          </informaltable>
        </para>
      </sect1>
      <sect1 xml:id="html-php-mysql-giris_html-pre">
        <title>&lt;pre> &lt;/pre></title>
        <para>
          Bir kod parçası, bir konsol ekranı alıntısı ya da bir ascii-art gibi
          içindeki boşlukların korunmasını gerektiren metinleri görüntülemek
          için kullanılır. Web istemciniz, tüm diğer etiketler için yorum aralığındaki
          fazladan boşluklarını gözardı ederek metni sarmaladığı halde
          &lt;PRE> etiketinin yorum aralığındaki metnin boşluklarını olduğu
          gibi görüntüler.
</para><para><screen>
&lt;pre>
switch($i){
  case "2":
     echo "Değeri 2";
     break;
  case "3":
     echo "Değeri 3";
     break;
  default:
     echo "Değeri bilinmiyor";
     break;
}
&lt;/pre>
</screen></para><para>Yukarıdaki kodun istemcinizdeki görüntüsü aşağıdakine
          benzer olacaktır.</para><para>
          <informaltable frame="none" style="background:#e0e0e0; width:95%">
            <tgroup cols='1'>
            <tbody>
              <row>
                <entry>
<literallayout>
switch($i){
  case "2":
     echo "Değeri 2";
     break;
  case "3":
     echo "Değeri 3";
     break;
  default:
     echo "Değeri bilinmiyor";
     break;
}
</literallayout>
                </entry>
              </row>
            </tbody></tgroup>
          </informaltable>
        </para>
      </sect1>
      <sect1 xml:id="html-php-mysql-giris_html-dl">
        <title>Tanımlama Listeleri &lt;dl> &lt;/dl>, &lt;dt> &lt;/dt>, &lt;dd> &lt;/dd></title>
        <para>
          Terimler ve açıklamalarını içeren listeler oluşturmakta kullanılırlar.
          Bir uygulamanın komut satırı seçeneklerini listelemek ve altlarında
          açıklamalarını vermek için kullanışlıdır.
        </para><para>
          &lt;dt> ve &lt;dd> etiketleri &lt;dl> etiketinin yorum aralığı içinde
          kullanılır. &lt;dt> etiketi terim, &lt;dd> etiketi ise açıklaması için
          kullanılır. Bir örnekle kullanımı daha kolay anlaşılacaktır.
</para><screen>
&lt;dl>
  &lt;dt>align = "left"&lt;/dt>
  &lt;dd>Paragrafı sola dayalı olarak yazar.&lt;/dd>

  &lt;dt>align = "right"&lt;/dt>
  &lt;dd>Paragrafı sağa dayalı olarak yazar.&lt;/dd>
&lt;/dl>
</screen><para>Yukarıdaki kodun istemcinizdeki görüntüsü aşağıdakine
          benzer olacaktır.</para>
          <informaltable frame="none" style="background:#e0e0e0; width:95%">
            <tgroup cols='1'>
            <tbody>
              <row>
                <entry><div>
                  <dl>
                    <dt>align = "left"</dt>
                    <dd>Paragrafı sola dayalı olarak yazar.</dd>

                    <dt>align = "right"</dt>
                    <dd>Paragrafı sağa dayalı olarak yazar.</dd>
                  </dl>
                </div></entry>
              </row>
            </tbody></tgroup>
          </informaltable>
      </sect1>
      <sect1 xml:id="html-php-mysql-giris_html-ul">
        <title>Diğer Listeler &lt;ul> &lt;/ul>, &lt;ol> &lt;/ol>, &lt;li> &lt;/li></title>
        <para>
          Yukarıdaki bölümde anlatılan tanımlama listesinden başka iki tür liste
          daha vardır. &lt;ol> etiketi kullanılarak oluşturulan listeler sıralı
          listelerdir. Sıralama sayısal, alfabetik ya da romen rakamları ile
          yapılabilir. &lt;ul> etiketi ile oluşturulan listelerde ise sıralama
          elemanı bir grafik semboldür. &lt;li> etiketi bu etiketlerin yorum
          aralığında kullanılarak liste öğeleri verilir.
        </para><para>
          Bu etiketlerle kullanılabilecek yardımcı kodları aşağıdaki tabloda
          belirttim.
        </para><para>
          <table frame="none" style="background:#999999;">
            <title>Liste kullanımı için yardımcı kodlar</title>
            <tgroup cols='2'>
            <tbody>
              <row style="background:#eeeedd;">
                <entry align="center" valign="top">Girilecek Kod</entry>
                <entry align="center" valign="top">Görevi</entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">type = "listeleme türü"</entry>
                <entry valign="top">
                  Bu alanda belirtilebilecek değerleri <link linkend="html-php-mysql-giris_html-ul-tbl"
                  >aşağıda bir tablo</link> halinde verdim.
                </entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">start = "değer"</entry>
                <entry valign="top">
                  Sadece &lt;ol> etiketi içindir. Sıralama elemanının
                  başlangıç değerini belirtmekte kullanılır.
                </entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">value = "değer"</entry>
                <entry valign="top">
                  Sadece &lt;li> etiketi içindir. Yorum aralığındaki liste öğesinin
                  numarasını belirtmek amacıyla kullanılır. <literal>start = "değer"</literal>
                  parametresi ile belirtilen değer, sayısal olmasa bile burada sayısal
                  bir <literal>"değer"</literal> belirtilebilir.
                </entry>
              </row>
            </tbody></tgroup>
          </table>
          </para><para>Sıralamasız liste (&lt;ul>) türü değerleri:</para>
          <para>
            Sıralamasız listlerde liste öğelerini belirtmek için 3 sembol ismi
            kullanılır:
            <orderedlist>
              <listitem><command>disc</command> - İçi dolu bir daire görüntüler</listitem>
              <listitem><command>circle</command> - İçi boş bir daire görüntüler</listitem>
              <listitem><command>square</command> - İçi dolu ya da boş bir kare görüntüler</listitem>
            </orderedlist>
          </para><para>
          <table frame="none" style="background:#999999;" xml:id="html-php-mysql-giris_html-ul-tbl">
            <title>Sıralı liste (&lt;ol>) türü değerleri</title>
            <tgroup cols='2'>
            <tbody>
              <row style="background:#eeeedd;">
                <entry align="center" valign="top">Türü</entry>
                <entry align="center" valign="top">Sıralama</entry>
              </row><row style="background:#ffffee;">
                <entry align="center" valign="top">1</entry>
                <entry valign="top">
                  Onluk tabanda numaralama (1,2,3,4,...)
                </entry>
              </row><row style="background:#ffffee;">
                <entry align="center" valign="top">i</entry>
                <entry valign="top">
                  Küçük rakamlarla romen sayıları (i,ii,iii,iv,...)
                </entry>
              </row><row style="background:#ffffee;">
                <entry align="center" valign="top">I</entry>
                <entry valign="top">
                  Büyük rakamlarla romen sayıları (I,II,III,IV,...)
                </entry>
              </row><row style="background:#ffffee;">
                <entry align="center" valign="top">a</entry>
                <entry valign="top">
                  Küçük harflerle alfabetik (a,b,c,...)
                </entry>
              </row><row style="background:#ffffee;">
                <entry align="center" valign="top">A</entry>
                <entry valign="top">
                  Büyük harflerle alfabetik (A,B,C,...)
                </entry>
              </row>
            </tbody></tgroup>
          </table></para><para>
          Örnek:
</para><para><screen>
&lt;ol type="i">
  &lt;li> Birinci öğe...&lt;/li>
  &lt;li> İkinci öğe ...
     &lt;ul type="square">
       &lt;li>İkinci öğenin bir öğesi...
       &lt;li>İkinci öğenin başka bir öğesi...
     &lt;/ul>
  &lt;/li>
  &lt;li> Üçüncü öğe...&lt;/li>
&lt;/ol>
</screen></para><para>
           Yukarıdaki kodun istemcinizdeki görüntüsü aşağıdakine benzer olacaktır.
         </para><para>
          <informaltable frame="none" style="background:#e0e0e0; width:95%">
            <tgroup cols='1'>
            <tbody>
              <row>
                <entry><div>
                  <ol type="i" compact="">
                    <li> Birinci öğe...</li>
                    <li> İkinci öğe ...
                       <ul type="square">
                         <li>İkinci öğenin bir öğesi...</li>
                         <li>İkinci öğenin başka bir öğesi...</li>
                       </ul>
                    </li>
                    <li> Üçüncü öğe...</li>
                  </ol>
                </div></entry>
              </row>
            </tbody></tgroup>
          </informaltable>
        </para>
      </sect1>
      <sect1 xml:id="html-php-mysql-giris_html-img">
        <title>&lt;img></title>
        <para>
          Sayfamıza resim yerleştirmek için kullanılan etikettir. Etiketin
          kullanımına geçmeden önce Internet üzerinde kullanılan resim
          dosyası biçemleri üzerinde durmak istiyorum. Internet üzerinde en
          çok kullanılan resim dosyası biçemleri GIF, JPG ve PNG’dir. Bu
          biçemlerin seçilmesindeki amaç sayfanın yüklenmesini kolaylaştırmaktır.
          Windows ortamında en çok kullanılan resim formatı olan BMP'lerin web
          üzerinde kullanılmamasının en büyük sebebi, iyi resim kalitelerine
          karşın bunun bir bedeli olarak boyutlarının çok büyük olmasıdır.
          Kullanılan üç biçemin kendine has bazı özellikleri vardır.
        </para><para>
          GIF biçemi 256 renk kullanarak ve JPG biçemi de  resmin kalitesinden
          biraz kısarak boyut sorununu halleder.
        </para><para>
          Bunun yanı sıra sayfamızda, mecbur kalmadıkça, büyük boyutlarda
          (hem ebat hem de kb olarak) resimler kullanmaktan kaçınmak
          sayfamızın yüklenmesini kolaylaştıracaktır. Yine bu etikette de
          sonlandırıcı yoktur. Yani bir yorum aralığı belirtmez.
        </para><para>
          Bu etiket altında  kullanacağımız resmin bazı özelliklerini belirtmek
          için tanımlayıcı bazı kodlar kullanırız. Bu kodları aşağıdaki tabloda
          belirttim.
        </para><para>
          <table frame="none" style="background:#999999;">
            <title>Resim kullanımı için yardımcı kodlar</title>
            <tgroup cols='2'>
            <tbody>
              <row style="background:#eeeedd;">
                <entry align="center" valign="top">Girilecek Kod</entry>
                <entry align="center" valign="top">Görevi</entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">src = "resim_dosyası"</entry>
                <entry valign="top">
                  Kullanacağımız resim dosyasının tam yolunu yazarak, hangi resmin
                  kullanılacağını belirtiriz.
                </entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">width = "genişlik"</entry>
                <entry valign="top">
                  Resmin genişliği burada tanımlanır. Büyük bir resminiz varsa
                  <literal>genişlik</literal> değerini "100%" vererek resmin
                  web istemci genişliğine <link linkend="html-php-mysql-giris_prg-html_frameset"
                  >dinamik uydurulmasını</link> sağlayabilirsiniz.
                </entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">height = "yükseklik"</entry>
                <entry valign="top">Resmin yüksekliği burada tanımlanır.</entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">vspace = "düşey_aralık"</entry>
                <entry valign="top">Resmimizi eğer metin içinde kullanıyorsak metne olan dikey uzaklığı.</entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">hspace = "yatay_aralık"</entry>
                <entry valign="top">Resmimizi eğer metin içinde kullanıyorsak metne olan yatay uzaklığı.</entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">alt = "metin"</entry>
                <entry valign="top">
                  Resmin üzerinde fare ile bir süre beklendiğinde çıkan açıklayıcı
                  bilgi burada tanımlanır.
                </entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">border = "değer"</entry>
                <entry valign="top">Resmin dışında çerçeve çizgisi olacaksa "1", olmayacaksa "0" değeri kullanılır..</entry>
              </row>
            </tbody></tgroup>
          </table></para><para>
<screen>
&lt;img src=”./resimler/banner.jpg” width=”250” height=”85” alt=”Bilgisayar Topluluğu”>
</screen></para><para>
          Yukarıdaki satır bulunduğumuz dizinin bir üstünde bulunan “resimler”
          dizinindeki “banner.jpg” dosyasını belirtilen ölçüler doğrultusunda
          ekrana basar. (Resmin boyutlarını belirtmek zorunlu değildir!). “Alt”
          kodu ile tanımlı kısım da resmin üzerinde belli bir süre beklendiğinde
          “Bilgisayar Topluluğu” yazısının belirmesini sağlar.
        </para>
      </sect1>
      <sect1 xml:id="html-php-mysql-giris_html-a">
        <title>&lt;a> &lt;/a></title>
        <para>
          Bu etiketi bir adres belirterek başka sitelere, sayfalara ya da aynı
          sayfanın farklı bölümlerine bağ vermek veya eposta adreslerini yazmak
          için kullanırız. Web istemciler genellikle öntanımlı olarak bağları
          altı çizili ve mavi olarak görüntüler. &lt;a> etiketinin bir yorum
          aralığı vardır ve çeşitli tanımlayıcı kodlar da etiket ile birlikte
          kullanılabilir.
        </para><para>
          <table frame="none" style="background:#999999;">
            <title>Bağ vermek için kullanılan kodlar</title>
            <tgroup cols='2'>
            <tbody>
              <row style="background:#eeeedd;">
                <entry align="center" valign="top">Girilecek Kod</entry>
                <entry align="center" valign="top">Görevi</entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">href = "URL"</entry>
                <entry valign="top">
                  Yorum alanındaki bileşene tıklandığında yorumlanacak adres.
                </entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">target = "hedef"</entry>
                <entry valign="top">Yorum alanındaki bileşene tıklandığında sayfanın açılacağı yer belirtilir.</entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">name = "isim"</entry>
                <entry valign="top">Sayfa içi bağlantılarda başka bir bağın hedefi olacak yeri belirtmek için kullanılır.</entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">type = "mime_türü"</entry>
                <entry valign="top">Hedefin içeriğini belirtmek için kullanılır.</entry>
              </row>
            </tbody></tgroup>
          </table></para><para>
<screen>
&lt;a href=”http://www.belgeler.org”>Linux Belgelendirme Çalışma Grubu&lt;/a>

&lt;a href="http://www.slackware.com" target="new">Slackware Linux&lt;/a>

&lt;a href="mailto:fni18444@gantep.edu.tr">Fehmi Noyan İSİ&lt;/a>
</screen></para><para>
          <informaltable frame="none" style="background:#e0e0e0; width:95%">
            <tgroup cols='1'>
            <tbody>
              <row>
                <entry>
                  <link xlink:href="http://www.belgeler.org">Linux Belgelendirme Çalışma Grubu</link>
                </entry>
              </row>
              <row>
                <entry>
                  <div><a href="http://www.slackware.com" target="new">Slackware Linux</a></div>
                </entry>
              </row>
              <row>
                <entry>
                  <link xlink:href="mailto:fni18444@gantep.edu.tr">Fehmi Noyan İSİ</link>
                </entry>
              </row>
            </tbody></tgroup>
          </informaltable>
        </para><para>
          İlkinden farklı olarak ikinci kodda “target” özelliğini kullandım. Target
          özelliğine “new” değerinin verilmesi ile açılacak yeni site yeni bir
          istemci penceresinde açılır.
        </para><para>
          Üçüncü satır belirtilen adrese eposta yollamak için kullanılır.
          Bağın üzerine tıklandığı zaman web istemcisinde öntanımlı olarak kayıtlı
          eposta istemcisi açılacaktır.
        </para><para>
          Bunların dışında resimleri de bağ olarak kullanabilme imkanımız var.
          Sayfamızda resimleri bağ olarak kullanabilmek için kullanmamız gereken
          kalıp aşağıdaki gibidir.
</para><para><screen>
&lt;a href=”http://www.belgeler.org”>&lt;img src="../images/belgeler-logo.png" border="0">&lt;/a>

&lt;a href=”http://www.belgeler.org”>&lt;img src="../images/belgeler-logo.png" border="1">&lt;/a>
</screen></para><para>
          Yukarıdaki iki satır da görev olarak aynı şeyleri yaparlar. Fakat
          ziyaretçiye görünen bölümler arasında küçük bir fark vardır.
        </para><para>
          <informaltable frame="none" style="background:white; width:95%">
            <tgroup cols='2'>
            <tbody>
              <row>
                <entry align="center">
                  <div><a href="http://www.belgeler.org">
                    <img src="../images/belgeler-logo.png" border="0" alt="Linux Belgelendirme Çalışma Grubu"/></a></div>
                </entry>
                <entry align="center">
                  <div><a href="http://www.belgeler.org">
                    <img src="../images/belgeler-logo.png" border="1"  alt="Linux Belgelendirme Çalışma Grubu"/></a></div>
                </entry>
              </row>
            </tbody></tgroup>
          </informaltable>
        </para><para>
          İlk kod satırı oluşacak bağın etrafında ikinci
          resimde olduğu gibi bir çerçeve oluşturmayacaktır. Kullandığımız resimli
          bağlarda çerçeve oluşmasını engellemek için
          <literal>border="0"</literal> kodunu kullanırız.
        </para>
      </sect1>
      <sect1 xml:id="html-php-mysql-giris_html-font">
        <title>&lt;font> &lt;/font></title>
        <para>
          HTML dosyası içinde yazdığımız yazıların ekrana nasıl bir çıktı vereceğini
          bu etiket ile belirleriz. Uyumlu yazı tipleri ve renkler ile sayfanıza güzel
          bir görünüm kazandırabilirsiniz. Bu etiketin kullanımına alternatif olarak
          sayfanızda CSS de kullanabilirsiniz. <link linkend="html-php-mysql-giris_ek3">CSS kullanımı</link> sayesinde fazla kod
          yazımından da kurtulmuş olursunuz. Etiket ile birlikte yazı tipi, renk ve
          boyut belirtmek üzere üç kod kullanılır.
        </para><para>
          <table frame="none" style="background:#999999;">
            <title>Font etiketi kodları</title>
            <tgroup cols='2'>
            <tbody>
              <row style="background:#eeeedd;">
                <entry align="center" valign="top">Girilecek Kod</entry>
                <entry align="center" valign="top">Görevi</entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">face = "yazıtipi"</entry>
                <entry valign="top">
                  Kullanılacak yazı tipi belirlenir.
                </entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">color = "renk"</entry>
                <entry valign="top">Yazacağımız yazının rengi belirlenir.</entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">size = "boyut"</entry>
                <entry valign="top">Yazımızın boyu belirlenir.</entry>
              </row>
            </tbody></tgroup>
          </table></para><para>
<screen>
&lt;p>&lt;font face="tahoma" size="3" color="maroon">
&lt;b>Burada bir yazı var.&lt;/b>&lt;/font>&lt;/p>

&lt;p>&lt;font face="tahoma" size="4" color="maroon">
&lt;b>Burada bir yazı var.&lt;/b>&lt;/font>&lt;/p>

&lt;p>&lt;font face="tahoma" size="5" color="maroon">
&lt;b>Burada bir yazı var.&lt;/b>&lt;/font>&lt;/p>

&lt;p style="color:maroon;font-family:tahoma;font-weight:bold;font-size:125%">
Burada bir yazı var.&lt;/p>

&lt;p class="author">Burada bir yazı var.&lt;/p>
</screen></para><para>
          <informaltable frame="none" style="background:white; width:95%">
            <tgroup cols='1'>
            <tbody>
              <row>
                <entry>
                  <div>
                    <p><font face="tahoma" size="3" color="maroon">
                    <b>Burada bir yazı var.</b></font></p>
                    <p><font face="tahoma" size="4" color="maroon">
                    <b>Burada bir yazı var.</b></font></p>
                    <p><font face="tahoma" size="5" color="maroon">
                    <b>Burada bir yazı var.</b></font></p>
                    <p style="color:maroon;font-family:tahoma;font-weight:bold;font-size:125%">
                    Burada bir yazı var.</p>
                    <p class="author">Burada bir yazı var.</p>
                  </div>
                </entry>
              </row>
            </tbody></tgroup>
          </informaltable>
        </para><para>
          Yukarıdaki kod parçası ile ilk 3 satırda boyut değeri 3,4,5 yazı tipi
          tahoma ve rengi koyu kırmızı olan bir yazı yazdım. İlk 3 satırda
          &lt;p>, &lt;font> ve &lt;b> etiketleri ile elde ettiğim sonucu sonraki 2 kodda sadece &lt;p> etiketi ile elde ettim.
          Son satırdaki <literal>class="author"</literal> ile tanımlı css kodu için
          <literal>belgeler.css</literal> dosyasında 2. satırdaki
          <literal>style="..."</literal> alanındaki tanımlar bulunmaktadır.
          Gördüğünüz gibi CSS kullandığında elimizde daha fazla seçenek
          bulunmakta ve kod basitleşmektedir.
        </para><para>
          Burada dikkat etmeniz gereken husus kullanılan yazı tipidir. Kendi
          bilgisayarınıza özgü yazı tipleri kullanmışsanız ve o yazı tipi
          ziyaretçinin bilgisayarında mevcut değilse yazdığınız yazılar
          ziyaretçinin web istemcisinin öntanımlı ayarları doğrultusunda
          ekrana basılır.
        </para>
      </sect1>
      <sect1 xml:id="html-php-mysql-giris_html-acro">
        <title>&lt;acronym> &lt;/acronym></title>
        <para>
          Kısaltmalar için kullanılır.
</para><para><screen>
&lt;acronym title="Linux Kullanıcıları Derneği">LKD&lt;/acronym>
</screen></para><para>
          <informaltable frame="none" style="background:#e0e0e0; width:95%">
            <tgroup cols='1'>
            <tbody>
              <row>
                <entry>
                  <div>
                    <acronym title="Linux Kullanıcıları Derneği">LKD</acronym>
                  </div>
                </entry>
              </row>
            </tbody></tgroup>
          </informaltable>
        </para><para>
          Fare, "LKD" üzerine getirildiğinde kısaltmanın açılımı
          balon içinde görüntülenecektir.
        </para>
      </sect1>

      <sect1 xml:id="html-php-mysql-giris_html-meta">
        <title>&lt;meta> &lt;/meta></title>
        <para>
          HTML dosyasındaki head etiketinin yorum aralığında tanımlanan bu etiket
          web istemcisine ve arama motorlarına sayfamız hakkında bilgi verir.
          Bu etiketi ile birlikte kullanılan yardımcı kodların açıklaması ilk
          bakışta size biraz karmaşık gelebilir. Her kodun kendisi ile birlikte
          tanımlanan yardımcı kodları da olduğu için bu etiket ile birlikte
          kullanılan kodların listesini öncekilerden daha farklı bir şekilde
          vermeyi uygun gördüm.
        </para><para>
          <table frame="none" style="background:#999999;">
            <title>Meta etiketi ana kodları</title>
            <tgroup cols='2'>
            <tbody>
              <row style="background:#eeeedd;">
                <entry align="center" valign="top">Girilecek Kod</entry>
                <entry align="center" valign="top">Görevi</entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">name = "veritürü"</entry>
                <entry valign="top">
                  Bu bölümde <literal>author</literal>, <literal>description</literal>
                  ve <literal>keywords</literal> özellikleri tanımlanır.
                </entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">http-equiv = "veritürü"</entry>
                <entry valign="top">
                  Bu bölümde <literal>refresh</literal>, <literal>expires</literal>,
                  <literal>content</literal> ve <literal>content-style-type</literal>
                  özellikleri tanımlanır.
                </entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">size = "boyut"</entry>
                <entry valign="top">Yazımızın boyu belirlenir.</entry>
              </row>
            </tbody></tgroup>
          </table></para><para>
            Yukarıdaki tabloda verdiğim kodlar ile birlikte tanımlanan yardımcı
            kodları tablo şeklinde vermek yerine örnek şeklinde vermenin daha
            faydalı olacağını düşündüm.
</para><para><screen>
&lt;meta name=”author” content=”Linux Belgelendirme Çalışma Grubu”>

&lt;meta name=”description” content=”Linux Belgelendirme Çalışma Grubu Web Sayfası”>

&lt;meta name=”keywords” content=”linux unix bsd openbsd freebsd programlama ozguryazılım özgüryazılım sunucu internet”>
</screen></para><para>
          Yukarıdaki birinci satır (<literal>author</literal>), sayfayı hazırlayanların
          kim olduğu hakkında kısa bilgiler verir.
        </para><para>
          İkinci satır (<literal>description</literal>), sitenin ne hakkında olduğuna
          dair kısa bir bilgi verir.
        </para><para>
          Sonuncu satır ise (<literal>keywords</literal>), arama motorlarına bilgi
          sağlamak için kullanılır. Yani siz bir arama motoruna girip arama kısmına
          linux, unix, bsd, openbsd, freebsd, programlama, özgüryazılım, sunucu,
          internet sözcüklerinden birisini yazarsanız bu site adresi de
          görüntülenecek adresler arasında olacaktır.
        </para><para>
<screen>
&lt;meta http-equiv=”refresh” content=”5; URL=http://www.belgeler.org/”>

&lt;meta http-equiv=”expires” content=”Wed, 25 Feb 2002 12:00:00 GMT”>

&lt;meta http-equiv=”content” content-type=”text/html; charset=iso-8859-9”>

&lt;meta http-equiv=”content-style-type” content=”text/css”>
</screen></para><para>
          Yukarıdaki birinci kod satırı (<literal>refresh</literal>) sayfamız
          açıldıktan 5 saniye sonra belirtilen adresi otomatik olarak açacaktır.
        </para><para>
          İkinci kod satırı (<literal>expires</literal>) GMT saat sistemine göre
          belirtilen saat ve tarihte sayfanın dosyası silinecektir.
        </para><para>
          Üçüncü kod satırı (<literal>content</literal>) tarayıcıya html
          dosyamızda kullandığımız karakter kodlamasının ISO-8859-9 olduğunu
          belirtir.
        </para><para>
          Dördüncü ve son satır (<literal>content-type-style</literal>) belgemizde
          kullanılan CSS dosyamızın bir metin dosyası olduğunu belirtir.
        </para><para>
          Daha öncede belirttiğim gibi <literal>meta</literal> etiketi ile
          tanımlanan bilgiler kullanıcıya görüntülenmez. Bu bilgiler genellikle
          tarayıcıya ve arama motorlarına bilgi sağlamak için kullanılır.
        </para>
      </sect1>
      <sect1 xml:id="html-php-mysql-giris_html-remark">
        <title>&lt;!-- --></title>
        <para>
          Bu etiket yorum aralığı olarak kullanılır. Bu kodun kullanım amacı
          HTML kodunun içine kullanıcıya görünmeyen açıklamalar yerleştirmektir.
          (İlk etapta işimize yaramasa bile tablo ve frame kullanarak hazırlanan
          karışık HTML dosyalarında çok yardımcı olacaktır.)
</para><para><screen>
&lt;!-- Burası bir yorum aralığı ve bu kısım sayfada görünmez!!!! -->
</screen>
        </para>
      </sect1>
    </chapter>
    <chapter xml:id="html-php-mysql-giris_html-ornek-1" label="2">
      <title>Basit Bir HTML Dosyası Örneği</title>
      <para>
        HTML’ye giriş için bu kodları yeterli olacağını düşünüyorum. Bu bölümde
        buraya kadar öğrendiğimiz HTML kodlarını kullanarak basit bir sayfa yaptım.
        Kullanılan kodların nerelerde ve nasıl kullanıldığına dikkat etmenizi
        öneririm. Sayfanın yapımında göze hitap etmesinden çok öğretici olmasına
        dikkat ettim.
</para><para><screen>
&lt;html>
  &lt;head>
    &lt;!-- Meta etiketleri ile ek bilgiler veriliyor -->
    &lt;meta name="author" content="Acemi tasarımcı">
    &lt;meta name="description" content="Acemi tasarımcı web okulu">
    &lt;meta name="keywords" content="web,html,css">
    &lt;meta http-equiv="content" content-type="text/html; charset=iso-8859-9">
    &lt;title>İlk HTML Denemem&lt;/title>
  &lt;/head>

  &lt;!-- Body etiketi ile sayfamızdaki renkleri ayarlıyoruz -->
  &lt;body text="#000000" bgcolor="#ffffff" link="#808080" vlink="#eaeaea" alink="#000000">
    &lt;h1> Bu büyük boyutlu ortalanmamı bir başlık&lt;/h1>
    &lt;br>&lt;center>
      &lt;h1> Bu da büyük boyutlu bir başlık fakat ortalanmış.&lt;/h1>
    &lt;/center>

    &lt;!--
      Center etiketi ile ortalama bittiği için buradan sonra sola dayalı
      yazılacaktır.
    -->
    &lt;br>&lt;br>
    &lt;font face="verdana" size="5" color="#800000">
      Buradan itibaren paragrafıma başlayacağım.
    &lt;/font>

    &lt;!-- p etiketi kendiliğinden bir satır boşluk verdiği için satır atlamadım -->
    &lt;p>
      Bu sayfayı yapmaktaki amacım etiketlerin ve bağlı kodların nasıl
      kullanıldığını göstermektir. Yukarıdaki kırmızı başlığı &amp;lt;font>
      etiketini kullanarak elde ettim. İnternette gezerken ziyaret ettiğiniz
      sayfaların kaynağını görüntüleyerek de değişik teknikler öğrenebilirsiniz.
    &lt;/p>

    &lt;!-- başka sayfalara link verelim -->
    &lt;a href="mailto:fni18444@gantep.edu.tr">Bana e-mail yollayın&lt;/a>&lt;br>&lt;br>
    &lt;br>&lt;br>

    &lt;!-- HTML dosyanızı yazdığınız dizine abc.png adli bir resim yerleştirin -->
    Aşağıdaki resmin görüntülenmesi için HTML dosyanızın olduğu dizine
    &lt;b>abc.png&lt;/b> resmini oluşturmalısınız.&lt;br>
    &lt;a href="http://www.belgeler.org">&lt;img src="abc.png" border="0">&lt;/a>
    &lt;br>&lt;center>
    &lt;hr width=80%>
    &lt;u>Bu altı çizili bir yazı&lt;/u>, &lt;i>bu yana yatık, italik, bir yazı&lt;/i>&lt;br>
    Bu sayfanın amacı &lt;acronym title="Hyper Text Markup Language">HTML&lt;/acronym>
    kodları hakkında bilgi vermektir.
    &lt;hr width=80%>

    &lt;!-- Sayfanın başında başlatmış olduğumuz body etiketini bitiriyoruz. -->
  &lt;/body>
&lt;/html>
</screen>
      </para>
    </chapter>
    <chapter xml:id="html-php-mysql-giris_html-ornek-2" label="3">
      <title>Meta Etiketi ile Yönlendirme Örneği</title>
      <para>
        Burada &lt;meta> etiketindeki <literal>refresh</literal> özelliğini
        kullanarak yönlendirmeye bir örnek verdim.
      </para>
      <para>
        Sayfada yazılı olan kodları herhangi bir metin düzenleyici içine
        yapıştırıp dosyaları belirtildiği gibi kaydedin. Daha
        sonra tek yapmanız gereken <literal>ornek_html2.html</literal> dosyasını
        üzerine çift tıklayarak açmak ;)
</para><para><screen>
&lt;!-- ornek_html2.html adı ile kaydedin -->
&lt;html>
  &lt;head>
    &lt;title>Geçici Sayfa&lt;/title>
    &lt;! -- meta etiketindeki refresh kodu ile başka bir sayfaya yönlendirme yapılıyor -- >
    &lt;meta http-equiv="refresh" content="10;URL=ornek_html2_ana.html">
  &lt;/head>
  &lt;body bgcolor=#334455 text=#eaeaea link=#eaeaea vlink=#eaeaea alink=#808080>
    &lt;br>&lt;br>
    &lt;center>
      &lt;h1>
        Bu sayfa açıldıktan 10 saniye sonra otomatik olarak aynı dizinde bulunan
        &lt;a href="./ornek_html2_ana.html"> ornek_html2_ana.html&lt;/a>
        dosyasını açacaktır.
      &lt;/h1>
    &lt;/center>
  &lt;/body>
&lt;/html>
</screen></para><para>
        Yukarıdaki dosya bizim birinci HTML dosyamız. Bu dosya açıldıktan 10
        saniye sonra otomatik olarak aşağıdaki dosyayı açması gerekli.
</para><para><screen>
&lt;!-- ornek_html2_ana.html adı ile kaydedin -->
&lt;html>
  &lt;head>
    &lt;title>Ana Sayfa&lt;/title>
  &lt;/head>

  &lt;body bgcolor="#334455" text="#eaeaea">
    &lt;center>
      &lt;h1>
        ornek_html2_ana.html dosyasındasınız.
        &lt;br>Yönlendirme başarılı!
      &lt;/h1>
    &lt;/center>
  &lt;/body>
&lt;/html>
</screen>
      </para>
    </chapter>
  </part>

  <part xml:id="html-php-mysql-giris_prg">
    <title>Web Programcılığına Giriş</title>
    <subtitle>Çerçeveler, tablolar, formlar. PHP ve MySQL ile Web Programlama</subtitle>
    <para>
      Internet'de gezerken üye kaydı yapan sitelere, ziyaretçi defterlerine ve
      sayaçlara dikkat etmişsinizdir. Buraya kadar öğrendiğiniz HTML kodları
      ile bir siteye sayaç, ziyaretçi defteri, forum veya şifreli giriş
      yapabilmeniz olası değil. Bu saydıklarımı yapabilmeniz için web
      programlama dilleri dediğimiz PHP,ASP, CGI ... gibi diller hakkında
      bilginizin olması gereklidir. Bu bölüm altında HTML ile frame, tablo ve
      form kullanımının yanı sıra PHP ile web programlama ve MySQL ile
      veritabanı gibi konulara giriş yaptım. Tabii önceki bölümde anlatılan
      HTML kodları gibi burada verebileceğim PHP ve MySQL bilgisi sadece size
      bir başlangıç olacaktır. PHP ve MySQL ‘in kendilerine ait, her biri için
      yaklaşık bin sayfalık belgeleri bulunmaktadır.
    </para>
    <chapter xml:id="html-php-mysql-giris_prg-html" label="1">
      <title>Çerçeveler, tablolar ve formlar</title>
      <sect1 xml:id="html-php-mysql-giris_prg-html_frameset">
        <title>&lt;frameset> &lt;/frameset></title>
        <para>
          Sayfamıza çerçeve desteği katmak için kullanılan etikettir. Etiketin
          kullanımına geçmeden önce yabancı olan okuyucular için çerçeve kavramını
          açıklamak istiyorum. Çerçeve desteği içeren bir sayfa oluşturmak için en
          az üç tane normal HTML dosyasına ihtiyacımız vardır. Bu üç dosyadan
          biri hangi HTML dosyalarının çerçeveleri oluşturacağını belirler. Diğer
          ikisi de çerçeveleri oluşturur. Çerçeve kullanımına en güzel örnek yahoo
          ve hotmail gibi eposta sunucularının kullanıcı arayüzüdür.
        </para><para>
          <mediaobject>
            <imageobject>
              <imagedata scale="100" fileref="frameusage.png" format="PNG"/>
            </imageobject>
          </mediaobject>
        </para><para>
          Yukarıda yahoo.com'un eposta servisinin arayüzü görülmektedir. Sol
          tarafta görünen mavi kısım ve sağdaki gelen maillerin listesinin olduğu
          kısım ayrı HTML dosyalarıdır. Bu iki HTML dosyasını bir HTML dosyası gibi
          göstermek için <literal>frame</literal>'ler kullanılır.
        </para><para>
          <literal>Frameset</literal> etiketinin kullanımını anlattıktan sonra birkaç
          örnekle daha iyi anlayacağınızı sanıyorum.
        </para><para>
          <table frame="none" style="background:#999999;">
            <title>Frameset yardımcı kodları</title>
            <tgroup cols='2'>
            <tbody>
              <row style="background:#eeeedd;">
                <entry align="center" valign="top">Girilecek Kod</entry>
                <entry align="center" valign="top">Görevi</entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">cols = "değer"</entry>
                <entry valign="top">Bir çerçevenin ekrandaki genişliğini verir.</entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">rows = "değer"</entry>
                <entry valign="top">Bir çerçevenin ekrandaki yüksekliğini verir.</entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">frameborder = "değer"</entry>
                <entry valign="top">Çerçeveler arasında çizgi olup olmayacağı belirlenir</entry>
              </row>
            </tbody></tgroup>
          </table></para><para>
<screen>
&lt;frameset cols=”125,*” frameborder=”0”>
  &lt;frame name=”menu” target=”ana” src=”menu.html” scrolling=”auto”>
  &lt;frame name=”ana” src=”ana.html” scrolling=”auto”>
  &lt;noframes>
   &lt;body>
    &lt;h1>Oppps...Web istemcinizin frame desteği yok!!!!&lt;/h1>
   &lt;/body>
 &lt;/noframes>
&lt;/frameset>
</screen></para><para>
          Yukarıdaki HTML kodlarını <literal>index.html</literal> adlı bir HTML
          dosyası içine yazıp dosyayı çalıştırmamız halinde hata ile karşılaşırız.
          İstemci HTML kodumuzda verilen bilgi doğrultusunda bulunduğumuz dizinde
          <literal>ana.html</literal> ve <literal>menu.html</literal> dosyalarını
          da arayacaktır. Bu dosyaları yazıp dizine kaydetmemiz halinde istemci
          penceresinin sol tarafından itibaren 125 piksellik alan &lt;frame>
          etiketi ile belirtilen <literal>menu.html</literal> dosyasına
          ayrılacaktır. Frameset etiketi ile birlikte kullanılan
          <literal>frameborder = "0"</literal>  kodu kullandığımız
          çerçeveler arasında çerçeve çizgisi oluşması engellenecektir.
        </para><para>
          &lt;frame> etiketi da frameset etiketi içerisinde yardımcı etiket olarak
          kullanılır. Kullanacağımız çerçeve sayfalarını ve özelliklerini belirlemek
          için kullanırız.
        </para><para>
          <literal>name = "ad"</literal> kodu ile kullandığımız çerçeveye bir isim
          veririz. Bu isim sayesinde <literal>target = "hedef"</literal> yardımcı
          kodu ile belirtilen sayfada bir bağa tıklandığı zaman açılacak yeni
          sayfanın yeri belirlenir.
        </para><para>
          <literal>scrolling = "auto"</literal> kodu kaydırma çubuğu için
          kullanılır.
        </para><para>
          &lt;noframes> etiketi, eğer ziyaretçinin istemcisinin frame desteği yoksa
          ziyaretçiye görüntülenecek sayfayı belirlemede kullanılır. Daha çok eski
          ve Linux altında kullanılan metin tabanlı istemcilerde frame desteği yoktur.
        </para><para>
          Son olarak da frame etiketi ile birlikte kullanılan
          <literal>src = "dosya adı"</literal> koduna gelmek istiyorum.
          Tahmin ettiğiniz gibi frame için kullanılacak sayfayı belirlemede
          kullanılır.
        </para><para>
<screen>
&lt;frameset rows=”125,*” frameborder=”0”>
&lt;frame name=”menu” target=”ana” src=”menu.html” scrolling=”auto”>
&lt;frame name=”ana” src=”ana.html” scrolling=”auto”>
  &lt;noframes>
   &lt;body>
    &lt;h1>Oppps...Web istemcinizin frame desteği yok&lt;/h1>
   &lt;/body>
 &lt;/noframes>
&lt;/frameset>
</screen></para><para>
          Yukarıdaki kod kümesi de ilkinden farklı olarak sayfaları yahoo.com'daki
          gibi değil de biri yukarıda diğeri de onun aşağısında olacak şekilde
          konumlandırılır. Sayfanın ilk 125 pikseli ilk dosyaya geri kalanlar da
          diğer dosyaya ayrılır.
        </para>
      </sect1>
      <sect1 xml:id="html-php-mysql-giris_prg-html_table">
        <title>&lt;table> &lt;/table></title>
        <para>
          Web sayfamıza tablo eklemek için kullandığımız etikettir. Tablolar profesyonel
          web sayfalarının ayrılmaz öğelerindendir. Web üzerinde kullanılan tüm tablolar
          satırlar ve bu satırların içerisindeki sütunlardan oluşur. Bu etiket ile
          birlikte kullanılan kodları aşağıda tanımladım.
        </para><para>
          <table frame="none" style="background:#999999;">
            <title>Table etiketi yardımcı kodları</title>
            <tgroup cols='2'>
            <tbody>
              <row style="background:#eeeedd;">
                <entry align="center" valign="top">Girilecek Kod</entry>
                <entry align="center" valign="top">Görevi</entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">border = "değer"</entry>
                <entry valign="top">Tablonun kenarlığının varlığını belirler.</entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">width = "değer"</entry>
                <entry valign="top">Tablonun genişliği belirlenir.</entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">height = "değer"</entry>
                <entry valign="top">Tablonun yüksekliği belirlenir.</entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">bgcolor = "renk"</entry>
                <entry valign="top">Tablonun zemin rengi belirlenir.</entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">cellpadding = "değer"</entry>
                <entry valign="top">
                  Tablo gözeleri içindeki öğelerin tablo kenarlıklarına uzaklığı
                  belirlenir.
                </entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">cellspacing = "değer"</entry>
                  Tablo gözelerinin birbirine olan uzaklığı belirlenir.
                <entry valign="top">
                </entry>
              </row>
            </tbody></tgroup>
          </table>
        </para><para>
          Bu kodları verdikten sonra basit bir tablo örneği vermek istiyorum.
          Verdiğim örnekte <literal>table</literal> etiketi dışında başka
          etiketlerde kullandığıma dikkat edin.
        </para><para>
<screen>
&lt;table border="1" bgcolor="#aabbcc">
  &lt;tr>
    &lt;td bgcolor="#f80000">Burada bir yazı var&lt;/td>
    &lt;td>Burası da başka bir göze.&lt;/td>
  &lt;/tr>
&lt;/table>
</screen></para><para>
          <div>
            <table border="1" bgcolor="#aabbcc">
              <tr>
                <td bgcolor="#F80000">Burada bir yazı var</td>
                <td>Burası da başka bir göze.</td>
              </tr>
            </table>
          </div>
      </para><para>
        Yazdığım kodları dikkatli bir şekilde incelemişseniz, &lt;tr> ile satır
        başlangıcı ve &lt;td> ile sütun başlangıcı yaptığımızı fark etmişsinizdir.
        Yani her &lt;tr> etiketi bize bir satır açar ve biz &lt;td> etiketi ile
        bu satıra sütunlar yerleştiririz. Daha sonra &lt;/tr> etiketi ile satır
        bitirilir. Yukarıdaki tabloya bir satır daha eklemek için aşağıdaki gibi
        bir kod kümesi kullanırız.
      </para><para>
<screen>
&lt;table border="1" bgcolor="#aabbcc">
  &lt;tr>
    &lt;td bgcolor="#f80000">Burada bir yazı var&lt;/td>
    &lt;td>Burası da başka bir göze.&lt;/td>
  &lt;/tr>
&lt;!-- Aşağıda ikinci satır başlıyor -->
  &lt;tr>
    &lt;td bgcolor="#00f800" width="50%">İkinci satırın ilk sütunu&lt;/td>
    &lt;td>İkinci satırın ikinci sütunu&lt;/td>
  &lt;/tr>
&lt;/table>
</screen></para><para>
          <div>
            <table border="1" bgcolor="#aabbcc">
              <tr>
                <td bgcolor="#F80000">Burada bir yazı var</td>
                <td>Burası da başka bir göze.</td>
              </tr>
              <tr>
                <td bgcolor="#00f800" width="50%">İkinci satırın ilk sütunu</td>
                <td>İkinci satırın ikinci sütunu</td>
              </tr>
            </table>
          </div>
        </para><para>
          Yukarıdaki kod kümesi bize iki satırlı bir tablo verecektir.
          &lt;td> etiketi ile birlikte <literal>width, bgcolor</literal> gibi
          özelliklerin kullanılabildiğine dikkat edin.
        </para><para>
          Peki ya iki sütunluk bir satır ya da iki satırlık bir sütun yapacaksak
          nasıl yapacağız? Aşağıdaki kodları incelerseniz sorunuza cevap bulabilirsiniz.
        </para><para>
<screen>
&lt;table border="1" bgcolor="aabbcc" width="80%">
  &lt;tr>
    &lt;td bgcolor="#f80000">Burada bir yazı var&lt;/td>
    &lt;td>Burası da başka bir göze.&lt;/td>
  &lt;/tr>
&lt;!-- Aşağıda ikinci satır başlıyor -->
  &lt;tr>
    &lt;td bgcolor="#00f800" width="50%">İkinci satırın ilk sütunu&lt;/td>
    &lt;td>İkinci satırın ikinci sütunu&lt;/td>
  &lt;/tr >
&lt;!--
    Bu yeni satır iki sütunluk. Bunu &lt;td> etiketini içinde
    colspan="sütun sayısı" ile belirledim
    Aynı şeklide iki satırlık bir sütun oluşturmak için
    rowspan="satır sayısı" kodu kullanılır
-->
  &lt;tr>
    &lt;td colspan="2">
      &lt;center>
        Tablomuz iki sütunluk olmasına rağmen, burada iki sütunluk bir satır var.
      &lt;/center>
    &lt;/td>
  &lt;/tr>
  &lt;tr>
    &lt;td rowspan="2">Burası iki satırlık bir sütun.&lt;/td>
    &lt;td>Burası ilk satır.&lt;/td>
  &lt;/tr>
  &lt;tr>
    &lt;td>Burası da ikinci satır.&lt;/td>
  &lt;/tr>
&lt;/table>
</screen></para><para>
          <div>
            <table border="1" bgcolor="#aabbcc">
              <tr>
                <td bgcolor="#F80000">Burada bir yazı var</td>
                <td>Burası da başka bir göze.</td>
              </tr>
              <tr>
                <td bgcolor="#00f800" width="50%">İkinci satırın ilk sütunu</td>
                <td>İkinci satırın ikinci sütunu</td>
              </tr>
              <tr>
                <td colspan="2">
                  <center>
                    Tablomuz iki sütunluk olmasına rağmen, burada iki sütunluk bir satır var.
                  </center>
                </td>
              </tr>
              <tr>
                <td rowspan="2">Burası iki satırlık bir sütun.</td>
                <td>Burası ilk satır.</td>
              </tr>
              <tr>
                <td>Burası da ikinci satır.</td>
              </tr>
            </table>
          </div>
        </para><para>
          Yukarıdaki örneklerde tabloda kenarlıkların görünüp öğretici olması
          için <literal>border=”1”</literal> kodunu kullandım. Sayfalarınızda
          gerekmedikçe kenarlık kullanmamanız sayfanızın görünümü açısından
          iyi olacaktır.
        </para>
      </sect1>
      <sect1 xml:id="html-php-mysql-giris_prg-html_form">
        <title>&lt;form> &lt;/form></title>
        <para>
          Artık formlarla birlikte dinamik web tasarımına ilk adımı atmış oluyoruz.
          Formlar yoluyla ziyaretçiden bilgi alabilir, aldığımız bilgi doğrultusunda
          birçok işlemi gerçekleştirebiliriz. Ziyaretçiye gönderilecek formu
          hazırlarken, göze hoş görünmesi açısından, tablolar en çok kullanacağımız
          bileşenler olacaktır.
        </para><para>
          Form etiketi ile birlikte en çok kullanılan iki kodu aşağıda belirttim.
          Bunların dışında bir iki kod daha olsa da pek kullanılmamaktadır.
        </para><para>
          <table frame="none" style="background:#999999;">
            <title>Form etiketi yardımcı elemanları</title>
            <tgroup cols='2'>
            <tbody>
              <row style="background:#eeeedd;">
                <entry align="center" valign="top">Girilecek Kod</entry>
                <entry align="center" valign="top">Görevi</entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">action = "dosya ismi"</entry>
                <entry valign="top">Formdan girilecek bilgilerin değerlendirileceği dosyanın tam yolu.</entry>
              </row><row style="background:#ffffee;">
                <entry valign="top">method = "yöntem"</entry>
                <entry valign="top">Formdan girilecek bilgilerin değerlendirici dosyaya gönderilme yöntemi</entry>
              </row>
            </tbody></tgroup>
          </table>
        </para><para>
          Formlar hazırlanırken çok değişik elemanlar kullanılır. Şimdi formumuza
          dahil edilebilecek elemanları kısaca tanıyalım. Tanımladığım
          elemanların etkin kullanımı için form etiketinin yorum aralığı içinde
          kullanılması gereklidir!. Bu elemanlar form etiketinin dışında da
          kullanılabilirlerse de istenen fayda sağlanamayacaktır. (Belgedeki
          etiket örnekleri böyledir, yani etkisizdir.)
        </para><para>
        <variablelist>
          <varlistentry>
            <term>Düğmeler</term>
            <listitem>
              <para>
                3 tür düğme vardır.</para><para>
                <variablelist>
                  <varlistentry>
                    <term>Gönderme düğmeleri</term>
                    <listitem>
                      <para>
                        Tıklandığında formu gönderir. Bir form üzerinde birden fazla
                        gönderme düğmesi bulunabilir.
                      </para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>Sıfırlama düğmeleri</term>
                    <listitem>
                      <para>
                        Tıklandığında formun içeriği başlangıç değerlerine
                        döndürür.
                      </para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>Genel amaçlı düğmeler</term>
                    <listitem>
                      <para>
                        Öntanımlı bir davranışa sahip olmayan düğmelerdir.
                        Tıklandığında <literal>event</literal> parametresinde
                        belirtilen betiği çalıştırarak bazı ek işlevlerin
                        gerçekleştirilmesinde kullanılırlar.
                      </para>
                    </listitem>
                  </varlistentry>
                </variablelist></para><para>
                Düğmeler ya doğrudan &lt;button> etiketi kullanılarak ya da
                &lt;input> etiketinde bir parametre olarak belirtilerek kullanılır.
                Daha fazla seçenek sağladığından doğrudan &lt;button> etiketi
                kullanımı tercih edilir. Belirtildikleri etiketin <literal>type</literal>
                parametresinde bu 3 tür düğme sırasıyla <literal>submit, reset, button</literal>
                değerleri verilerek kullanılır.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Onay kutuları</term>
            <listitem><para>
              Kare, içine tik bırakılan kutucukları oluşturmak için kullanılır.
              &lt;input> etiketinde bir parametre olarak belirtilerek kullanılır.
            </para></listitem>
          </varlistentry>
          <varlistentry>
            <term>Radyo düğmeleri</term>
            <listitem><para>
              Sayfamıza yuvarlak işaret kutucuğu bırakmak için kullanılır.
              Kullanılan kutucuğun onay kutusundan farkı, sadece bir seçenek
              işaretlenebilmesidir.
              &lt;input> etiketinde bir parametre olarak
              <literal>type="radio"</literal> belirtilerek ve ek olarak value ve
              name parametreleriyle birlikte kullanılır.
            </para></listitem>
          </varlistentry>
          <varlistentry>
            <term>Menüler</term>
            <listitem><para>
              Ziyaretçi bu menüden mevcut seçenekler arasından herhangi birini
              seçerek bilgi girişinde bulunur. Sayfamıza bu elemanı eklemek için
              &lt;select> etiketini kullanırız.
            </para></listitem>
          </varlistentry>
          <varlistentry>
            <term>Metin girişleri</term>
            <listitem><para>
              Metin girdilerini almak için iki tür eleman kullanılır. &lt;input>
              etiketinde bir parametre olarak <literal>type="text"</literal>
              kullanılarak tek satırlık ve &lt;textarea> etiketi ile oluşturulan
              çok satırlı metin girdi elemanlarıdır.
            </para></listitem>
          </varlistentry>
          <varlistentry>
            <term>Dosya seçim elemanları</term>
            <listitem><para>
              &lt;input> etiketinde bir parametre olarak <literal>type="file"</literal>
              kullanılarak oluşturulan elemanlardır.
            </para></listitem>
          </varlistentry>
          <varlistentry>
            <term>Gizli elemanlar</term>
            <listitem><para>
              &lt;input> etiketinde bir parametre olarak <literal>type="hidden"</literal>
              kullanılarak oluşturulan elemanlardır.
            </para></listitem>
          </varlistentry>
          <varlistentry>
            <term>Nesneler</term>
            <listitem><para>
              &lt;object> etiketi kullanılarak oluşturulan elemanlardır.
            </para></listitem>
          </varlistentry>
        </variablelist></para>
        <para>
          Şimdi tanımlanan elemanlarda belirtilen etiketlerin kullanımına
          bakalım.
        </para>
        <sect2>
          <title>&lt;input></title>
          <para>
            Genel amaçlı bir form etiketidir. Sonlandırıcı etiketi yoktur.
            Girdi türü <literal>type</literal> öğesinde
            belirtilerek farklı girdilerin alınmasını sağlar.
          </para><para>
            <table frame="none" style="background:#999999;">
              <title>Input etiketi yardımcı kodları</title>
              <tgroup cols='2'>
              <tbody>
                <row style="background:#eeeedd;">
                  <entry align="center" valign="top">Girilecek Kod</entry>
                  <entry align="center" valign="top">Görevi</entry>
                </row><row style="background:#ffffee;">
                  <entry valign="top">type = "eleman türü"</entry>
                  <entry valign="top">
                    Eleman türü belirtilir. text, password, checkbox, radio,
                    submit, reset, file, hidden, image, button değerlerinden
                    biri kullanılır. Etiketin bu değerlerle nasıl kullanıldığını
                    aşağıda örnekleriyle açıklamaya çalıştım.
                  </entry>
                </row><row style="background:#ffffee;">
                  <entry valign="top">name = "isim"</entry>
                  <entry valign="top">
                    Girilen verinin hangi değişken ismi altında değerlendirileceğini
                    belirtmek için kullanılır. Mutlaka belirtilmelidir.
                  </entry>
                </row><row style="background:#ffffee;">
                  <entry valign="top">value = "değer"</entry>
                  <entry valign="top">
                     "radio" ve "checkbox" dışında bu parametrenin kullanımı isteğe
                     bağlıdır. Belirtilecek "değer" eleman türüne göre değişir.
                  </entry>
                </row><row style="background:#ffffee;">
                  <entry valign="top">size = "değer"</entry>
                  <entry valign="top">
                    "text" ve "password" elemanlarında
                    karakter sayısını, diğerlerinde ise piksel cinsinden
                    genişliği belirtmek için kullanılır.
                  </entry>
                </row><row style="background:#ffffee;">
                  <entry valign="top">maxlength = "değer"</entry>
                  <entry valign="top">
                    "text" ve "password" elemanlarında girilebilecek en çok
                    karakter sayısını belirtmek için kullanılır. Öntanımlı değeri
                    sınırsızdır.
                  </entry>
                </row><row style="background:#ffffee;">
                  <entry valign="top">checked = "değer"</entry>
                  <entry valign="top">
                    Sadece  "radio" ve "checkbox" elemanlarında seçili elemanı
                    "on" olarak belirtmek için kullanılır. Diğerlerinde yoksayılır.
                  </entry>
                </row><row style="background:#ffffee;">
                  <entry valign="top">src = "dosya ismi"</entry>
                  <entry valign="top">
                    "image" elemanında resim dosyasını belirtmek için kullanılır.
                  </entry>
                </row><row style="background:#ffffee;">
                  <entry valign="top">alt = "metin"</entry>
                  <entry valign="top">
                    Fare eleman üzerindeyken balon içinde görünecek açıklama
                    metni için kullanılır.
                  </entry>
                </row><row style="background:#ffffee;">
                  <entry valign="top">align = "left|center|right"</entry>
                  <entry valign="top">
                    Elemanın form üzerinde nasıl konumlanacağını belirtmek için
                    kullanılır.
                  </entry>
                </row><row style="background:#ffffee;">
                  <entry valign="top">readonly</entry>
                  <entry valign="top">
                    Veri girme amacıyla kullanılmayacak elemanlar içindir.
                  </entry>
                </row><row style="background:#ffffee;">
                  <entry valign="top">disabled</entry>
                  <entry valign="top">
                    Veri girişi engellenecek elemanlar içindir.
                  </entry>
                </row>
              </tbody></tgroup>
            </table>
          </para><para>
            <literal>type</literal> parametresi ile belirtilebilecek eleman
            türleri:
          </para><para>
          <variablelist>
            <varlistentry>
              <term>text</term>
              <listitem>
                <para>
                  Formumuza tek satırlık yazı yazılabilecek alan eklemek için
                  kullanılır.
                </para><para>
<screen>
Adı: &lt;input type="text" name="firstname">&lt;br>
Soyadı: &lt;input type="text" name="lastname">
</screen></para><para>
                  <informaltable frame="none" style="background:#e0e0e0; width:95%">
                    <tgroup cols='1'>
                    <tbody>
                      <row>
                        <entry>
                          <div>
                            <form action="ornekler.php" method="post">
                            Adı: <input type="text" name="firstname"/><br/>
                            Soyadı: <input type="text" name="lastname"/>
                            </form>
                          </div>
                        </entry>
                      </row>
                    </tbody></tgroup>
                  </informaltable>
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>password</term>
              <listitem>
                <para>
                  Formumuza parola yazılabilecek alan eklemek için
                  kullanılır. "text" elemanından farklı olarak bu alana girilen
                  her karakter * ile gösterilir.
                </para><para>
<screen>
Kullanıcı: &lt;input type="text" name="username">&lt;br>
Parola: &lt;input type="password" name="password">
</screen></para><para>
                  <informaltable frame="none" style="background:#e0e0e0; width:95%">
                    <tgroup cols='1'>
                    <tbody>
                      <row>
                        <entry>
                          <div>
                            <form action="ornekler.php" method="post">
                            Kullanıcı: <input type="text" name="username"/><br/>
                            Parola: <input type="password" name="password"/>
                            </form>
                          </div>
                        </entry>
                      </row>
                    </tbody></tgroup>
                  </informaltable>
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>checkbox</term>
              <listitem>
                <para>
                  Formumuza onay kutuları eklemek için kullanılır.
                </para><para>
<screen>
&lt;input type="checkbox" name="kutu1" checked="on"> HTML&lt;br>
&lt;input type="checkbox" name="kutu2"> PHP&lt;br>
&lt;input type="checkbox" name="kutu3"> MySQL
</screen></para><para>
                  <informaltable frame="none" style="background:#e0e0e0; width:95%">
                    <tgroup cols='1'>
                    <tbody>
                      <row>
                        <entry>
                          <div>
                            <form action="ornekler.php" method="post">
                            <input type="checkbox" name="kutu1" checked="on"/> HTML<br/>
                            <input type="checkbox" name="kutu2"/> PHP<br/>
                            <input type="checkbox" name="kutu3"/> MySQL
                            </form>
                          </div>
                        </entry>
                      </row>
                    </tbody></tgroup>
                  </informaltable>
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>radio</term>
              <listitem>
                <para>
                  Formumuza radyo düğmeleri eklemek için kullanılır.
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>submit, reset, button, image</term>
              <listitem>
                <para>
                  Formumuzda belirtilen bilgileri ilgili dosyaya yollamak için
                  kullanılacak düğmeler yerleştirmek için kullanılır.
                  Submit formu kabul eder ve yollar, reset ise girilen bilgileri
                  sıfırlar. Button ve image herhangi bir amaçla kullanmak içindir.
                  Diğer ikisi gibi öntanımlı bir davranışı olmayan, gerçekleştireceği
                  eylem bir betikle tanımlanabilen düğmelerdir. Image ile oluşturulan
                  düğme <literal>src</literal> parametresinde belirtilen dosyadaki
                  düğme resmi kullanılarak oluşturulur.
                </para><para>
<screen>
 &lt;form action="http://herhangibirsite.dom/prog/adduser" method="post">
    &lt;p>
    Adınız: &lt;input type="text" name="firstname">&lt;br>
    Soyadınız: &lt;input type="text" name="lastname">&lt;br>
    Eposta adresiniz: &lt;input type="text" name="email">&lt;br>
    &lt;input type="radio" name="cinsiyet" value="erkek" checked="on"> Erkek&lt;br>
    &lt;input type="radio" name="cinsiyet" value="disi"> Dişi&lt;br>
    &lt;input type="submit" value="Send"> &lt;input type="reset" value="Sıfırla">
    &lt;/P>
 &lt;/form>
</screen></para><para>
                  <informaltable frame="none" style="background:#e0e0e0; width:95%">
                    <tgroup cols='1'>
                    <tbody>
                      <row>
                        <entry>
                          <div>
                            <form action="ornekler.php" method="get">
                            Adınız: <input type="text" name="firstname"/><br/>
                            Soyadınız: <input type="text" name="lastname"/><br/>
                            Eposta adresiniz: <input type="text" name="email"/><br/>
                            <input type="radio" name="cinsiyet" value="erkek" checked="on"/> Erkek<br/>
                            <input type="radio" name="cinsiyet" value="disi"/> Dişi<br/>
                            <input type="submit" name="submit" value="OK"/> <input type="reset" value="Sıfırla"/>
                            </form>
                          </div>
                        </entry>
                      </row>
                    </tbody></tgroup>
                  </informaltable>
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>file</term>
              <listitem>
                <para>
                  Formumuza dosya ismi giriş alanı eklemek için kullanılır.
                </para><para>
<screen>
&lt;input type="file">
</screen></para><para>
                  <informaltable frame="none" style="background:#e0e0e0; width:95%">
                    <tgroup cols='1'>
                    <tbody>
                      <row>
                        <entry>
                          <div>
                            <form action="ornekler.php" method="post">
                            <input type="file"/>
                            </form>
                          </div>
                        </entry>
                      </row>
                    </tbody></tgroup>
                  </informaltable>
                </para>
              </listitem>
            </varlistentry>
          </variablelist>
          </para>
        </sect2>
        <sect2>
          <title>&lt;button> &lt;/button></title>
          <para>
            Düğmelerin input etiketiyle kullanımına benzer şekilde kullanılır.
            Ancak sonlandırıcı etiket içerdiğinden yorum alanında başka etiketlerin
            yeralabilmesi nedeniyle daha geniş bir kullanım alanı vardır.
            Yukarıdaki örneği button etiketi ile yazarsak farkları görebilirsiniz.
          </para><para>
<screen>
 &lt;form action="http://herhangibirsite.dom/prog/adduser" method="post">
    &lt;p>
    Adınız: &lt;input type="text" name="firstname">&lt;br>
    Soyadınız: &lt;input type="text" name="lastname">&lt;br>
    Eposta adresiniz: &lt;input type="text" name="email">&lt;br>
    &lt;input type="radio" name="cinsiyet" value="erkek" checked="on"> Erkek&lt;br>
    &lt;input type="radio" name="cinsiyet" value="disi"> Dişi&lt;br>
    &lt;button name="submit" type="submit" value="submit">
      &lt;img width="20" height="21" src="../images/belgeler-logo.gif"/>Gönder
    &lt;/button>
    &lt;button name="reset" type="reset" value="reset">
      &lt;img width="20" height="21" src="../images/belgeler-logo.gif"/>Sıfırla
    &lt;/button>
    &lt;/P>
 &lt;/form>
</screen></para><para>
            <informaltable frame="none" style="background:#e0e0e0; width:95%">
              <tgroup cols='1'>
              <tbody>
                <row>
                  <entry>
                    <div>
                      <form action="ornekler.php" method="post">
                      Adınız: <input type="text" name="firstname"/><br/>
                      Soyadınız: <input type="text" name="lastname"/><br/>
                      Eposta adresiniz: <input type="text" name="email"/><br/>
                      <input type="radio" name="cinsiyet" value="erkek" checked="on"/> Erkek<br/>
                      <input type="radio" name="cinsiyet" value="disi"/> Dişi<br/>
                      <button style="width:100px;" name="submit" type="submit" value="submit"><img width="20" height="21" src="../images/belgeler-logo.gif"/>Gönder</button>
                      <button style="width:100px;" name="reset" type="reset" value="reset"><img width="20" height="21" src="../images/belgeler-logo.gif"/>Sıfırla</button>
                      </form>
                    </div>
                  </entry>
                </row>
              </tbody></tgroup>
            </informaltable>
            (Bu örneği hakkıyla, Mozilla görüntülemektedir.)
          </para>
        </sect2>
        <sect2>
          <title>&lt;select> &lt;/select>, &lt;optgroup> &lt;/optgroup>, &lt;option> &lt;/option></title>
          <para>
            &lt;select> etiketi seçim listesi oluşturmakta kullanılır. &lt;option>
            etiketi ile liste öğeleri belirtilir. &lt;optgroup> etiketi ise
            bu liste elemanlarını konularına göre gruplamakta kullanılır.
            Bir select etiketi en azından bir option etiketi içermeli ve
            optgroup etiketleri iç içe olmamalıdır.
          </para><para>
            Tek veya çok seimli (multiple parametresi ile), sabit (size parametresi
            ile) veya aşağıya açılan listeler oluşturulabilir.
          </para><para>
            Tek seçimli aşağıya açılan liste örneği:
          </para><para>
<screen>
&lt;select name="os_type">
&lt;option value="win">Windows 9x&lt;/option>
&lt;option value="winnt">Windows NT&lt;/option>
&lt;option value="linux">Linux&lt;/option>
&lt;option value="unix">UNIX&lt;/option>
&lt;option value="os2">OS/2&lt;/option>
&lt;option value="macos">MacOS&lt;/option>
&lt;/select>
</screen></para><para>
            <informaltable frame="none" style="background:#e0e0e0; width:95%">
              <tgroup cols='1'>
              <tbody>
                <row>
                  <entry>
                    <div>
                      <form action="ornekler.php" method="post">
                      <select name="os_type">
                        <option value="win">Windows 9x</option>
                        <option value="winnt">Windows NT</option>
                        <option selected="" value="linux">Linux</option>
                        <option value="unix">UNIX</option>
                        <option value="os2">OS/2</option>
                        <option value="macos">MacOS</option>
                      </select>
                      </form>
                    </div>
                  </entry>
                </row>
              </tbody></tgroup>
            </informaltable>
          </para><para>
            Çok seçimli (ctrl+farenin sol tuşu ile) liste örneği:
          </para><para>
<screen>
&lt;select name="menu" multiple>
  &lt;option selected="" value="none">Hiçbiri&lt;/option>
  &lt;optgroup label="Çorbalar">
    &lt;option value="c1">Tarhana&lt;/option>
    &lt;option value="c2">Ezogelin&lt;/option>
    &lt;option value="c3">İşkembe&lt;/option>
  &lt;/optgroup>
  &lt;optgroup label="Yemekler">
    &lt;option value="y1">İmambayıldı&lt;/option>
    &lt;option value="y2">Sultanbeğendi&lt;/option>
    &lt;option value="y3">Kadınbudu&lt;/option>
  &lt;/optgroup>
  &lt;optgroup label="Tatlılar">
    &lt;option value="t1">Kazandibi&lt;/option>
    &lt;option value="t2">Tavukgöğsü&lt;/option>
    &lt;option value="t3">Keşkül&lt;/option>
  &lt;/optgroup>
&lt;/select>
</screen></para><para>
            <informaltable frame="none" style="background:#e0e0e0; width:95%">
              <tgroup cols='1'>
              <tbody>
                <row>
                  <entry>
                    <div>
                      <form action="ornekler.php" method="post">
                      <select name="menu" multiple="">
                        <option selected="" value="none">Hiçbiri</option>
                        <optgroup label="Çorbalar">
                          <option value="c1">Tarhana</option>
                          <option value="c2">Ezogelin</option>
                          <option value="c3">İşkembe</option>
                        </optgroup>
                        <optgroup label="Yemekler">
                          <option value="y1">İmambayıldı</option>
                          <option value="y2">Sultanbeğendi</option>
                          <option value="y3">Kadınbudu</option>
                        </optgroup>
                        <optgroup label="Tatlılar">
                          <option value="t1">Kazandibi</option>
                          <option value="t2">Tavukgöğsü</option>
                          <option value="t3">Keşkül</option>
                        </optgroup>
                      </select>
                      </form>
                    </div>
                  </entry>
                </row>
              </tbody></tgroup>
            </informaltable>
          </para>
        </sect2>
        <sect2>
          <title>&lt;textarea> &lt;/textarea></title>
          <para>
            İngilizce “metin alanı” anlamına gelen bu kelime formumuza yazı
            yazılabilecek alan eklemek için kullanılır. Yardımcı öğeler olarak
            <literal>rows</literal> ve <literal>cols</literal> kullanılır.
            Örnek aşağıdaki bölümde verilmiştir.
          </para>
        </sect2>
        <sect2>
          <title>&lt;fieldset> &lt;/fieldset>, &lt;legend> &lt;/legend></title>
          <para>
            Form elemanlarını konularına göre gruplamak için kullanılan
            etiketlerdir. Formun alaşılırlığını arttırması ve kullanımını
            kolaylaştırması bakımından çok faydalıdır. &lt;legend> etiketi
            gruplanmış elemanlara bir başlık oluşturur. Aşağıda bir hasta
            kartı örnek olarak verilmiştir.
          </para><para>
<screen>
 &lt;fieldset>
  &lt;legend>Kişisel Bilgiler&lt;/legend>&lt;br/>
  Adı: &lt;input name="personal_fname" type="text" size="20" tabindex="1"/>&nbsp;&nbsp;&nbsp;&nbsp;
  Soyadı: &lt;input name="personal_lname" type="text" size="25" tabindex="2"/>&lt;br/>&lt;br/>
  Adresi: &lt;input name="personal_address" type="text" size="55" tabindex="3"/>&lt;br/>&lt;br/>
  &lt;!-- ...diğer kişisel bilgiler... -->
 &lt;/fieldset>
 &lt;fieldset>
  &lt;legend>Tıbbî Geçmişi&lt;/legend>&lt;br/>
  &lt;input name="gecirilen_hastalik"
         type="checkbox"
         value="bogmaca" tabindex="20"/> Boğmaca&nbsp;&nbsp;&nbsp;&nbsp;
  &lt;input name="gecirilen_hastalik"
         type="checkbox"
         value="kabakulak" tabindex="21"/> Kabakulak&nbsp;&nbsp;&nbsp;&nbsp;
  &lt;input name="gecirilen_hastalik"
         type="checkbox"
         value="kizamik" tabindex="22"/> Kızamık&nbsp;&nbsp;&nbsp;&nbsp;
 &lt;input name="gecirilen_hastalik"
         type="checkbox"
         value="sucicegi" tabindex="23"/> Suçiçeği&lt;br/>&lt;br/>

  &lt;!-- ...tıbbi geçmişi ile ilgili diğer... -->
 &lt;/fieldset>
 &lt;fieldset>
  &lt;legend>İlaç Tedavisi&lt;/legend>&lt;br/>
  Halen kullanmakta olduğunuz ilaçlar var mı?&lt;br/>
  &lt;input name="medication_now"
         type="radio"
         value="Evet" tabindex="35"/> Evet&nbsp;&nbsp;&nbsp;&nbsp;
  &lt;input name="medication_now"
         type="radio"
         value="Hayir" tabindex="35"/>Hayır&lt;br/>&lt;br/>

  Eğer ilaç kullanıyorsanız, aşağıya kullandığınız ilaçları ve
  günlük dozlarını belirtiniz:&lt;br/>
  &lt;textarea name="kullandigi_ilaclar"
            rows="10" cols="60"
            tabindex="40">
  &lt;/textarea>
 &lt;/fieldset>
</screen></para><para>
            <informaltable frame="none" style="background:#e0e0e0; width:95%">
              <tgroup cols='1'>
              <tbody>
                <row>
                  <entry>
                    <div>
<form action="ornekler.php" method="post">
 <fieldset>
  <legend>Kişisel Bilgiler</legend><br/>
  Adı: <input name="personal_fname" type="text" size="20" tabindex="1"/>&nbsp;&nbsp;&nbsp;&nbsp;
  Soyadı: <input name="personal_lname" type="text" size="25" tabindex="2"/><br/><br/>
  Adresi: <input name="personal_address" type="text" size="55" tabindex="3"/><br/><br/>
  <!-- ...diğer kişisel bilgiler... -->
 </fieldset>
 <fieldset>
  <legend>Tıbbî Geçmişi</legend><br/>
  <input name="gecirilen_hastalik"
         type="checkbox"
         value="bogmaca" tabindex="20"/> Boğmaca&nbsp;&nbsp;&nbsp;&nbsp;
  <input name="gecirilen_hastalik"
         type="checkbox"
         value="kabakulak" tabindex="21"/> Kabakulak&nbsp;&nbsp;&nbsp;&nbsp;
  <input name="gecirilen_hastalik"
         type="checkbox"
         value="kizamik" tabindex="22"/> Kızamık&nbsp;&nbsp;&nbsp;&nbsp;
 <input name="gecirilen_hastalik"
         type="checkbox"
         value="sucicegi" tabindex="23"/> Suçiçeği<br/><br/>

  <!-- ...tıbbi geçmişi ile ilgili diğer... -->
 </fieldset>
 <fieldset>
  <legend>İlaç Tedavisi</legend><br/>
  Halen kullanmakta olduğunuz ilaçlar var mı?<br/>
  <input name="medication_now"
         type="radio"
         value="Evet" tabindex="35"/> Evet&nbsp;&nbsp;&nbsp;&nbsp;
  <input name="medication_now"
         type="radio"
         value="Hayir" tabindex="35"/>Hayır<br/><br/>

  Eğer ilaç kullanıyorsanız, aşağıya kullandığınız ilaçları ve
  günlük dozlarını belirtiniz:<br/>
  <textarea name="kullandigi_ilaclar"
            rows="10" cols="60"
            tabindex="40">
  </textarea>
 </fieldset>
</form>
                    </div>
                  </entry>
                </row>
              </tbody></tgroup>
            </informaltable>
            (Bu örneği hakkıyla, Mozilla görüntülemektedir.)
          </para>
        </sect2>
      </sect1>
    </chapter>
    <chapter xml:id="html-php-mysql-giris_prg-php" label="2">
      <title>PHP ve MySQL ile Web Programlama</title>
      <para>
        PHP bir web programlama dili ve MySQL'de bir SQL veritabanı olduğu halde
        çoğunlukla isimleri birlikte anılır. Bunun sebebi, bu ikilinin diğer
        veritabanı-programlama dili ikililerine oranla büyük performans farkı
        göstermeleridir. PHP, MySQL dışında birçok veritabanı ile de gayet uyumlu
        bir şekilde çalışabilmektedir, fakat benim bilgim sadece MySQL dahilinde
        olduğu için bu dokümanda PHP ile birlikte MySQL veritabanını anlatacağım.
      </para><para>
        PHP dosyaları da HTML dosyaları gibi sade metin dosyalarından oluşmaktadır.
        Tek farkı dosyaları yerleştireceğiniz sunucu sisteminde bu dosyaların
        çalışabilir dosya olarak saklanmalarıdır. Burada bulunan PHP denemelerini
        normal bir bilgisayar üzerinde çalıştırmanız olanaksızdır. Yazdığınız PHP
        dosyalarını çalıştırabilmek için bir web sunucusu ve php desteğine ihtiyacınız
        vardır. Bu belgede bilgisayarınıza PHP+MySQL+Apache kurulumu anlatılmamaktadır,
        fakat bu konu ile ilgili soru ve sorunlarınıza Internet üzerinde cevap
        bulabilirsiniz. Ayrıca bu belgedeki PHP ve MySQL bilgileri sadece bir başlangıç
        niteliğindedir. Bu konular hakkında daha fazla bilgi için
        <link xlink:href="http://www.php.net"/>, <link xlink:href="http://www.php.org.tr"/> ve
        <link xlink:href="http://www.mysql.com"/> başlıca uğrayacağınız adresler olmalıdır.
      </para>
      <sect1 xml:id="html-php-mysql-giris_prg-php-giris">
        <title>PHP'ye Giriş</title>
        <para>
         PHP sunucu taraflı (server side), HTML ile uyumlu bir betik dilidir.
         Daha önce kullandığım “programlama dili” ifadesi PHP için yüzde yüz
         açıklayıcı değildir. PHP, HTML de olduğu gibi bir derleyici tarafından
         derlenmez, sadece sunucudaki php programı tarafından yorumlanır.
         C bilen birisi için PHP öğrenmesi çok basit olan bir dildir,
         öyle ki dosya işlemleri gibi karışık konularda PHP, C’den çok daha
         basittir.
        </para><para>
          Yazdığınız PHP kodları hiçbir zaman sitenizin ziyaretçisine
          görüntülenmez. Ziyaretçi sayfanın kaynağını görüntülese bile
          göreceği sizin PHP kodlarınızın sunucu sistemdeki php programı
          tarafından HTML’ye çevrilmiş halidir. Aşağıdaki kod kümesini
          incelerseniz daha iyi anlayacağınızı sanıyorum (PHP’ye henüz bir
          giriş yapmadığım için kodları anlamayabilirsiniz, fakat yine de
          C’ye az da olsa aşina olanlar bir anlam çıkartacaktır).
        </para><para>
<screen>
&lt;?php
  printf(“Bu bir PHP dosyasıdır.&lt;br>\n”);
  print(“Bu bir PHP dosyasıdır.&lt;br>\n”);
  echo (“Bu bir PHP dosyasıdır.&lt;br>\n”);
  echo “Bu bir PHP dosyasıdır.&lt;br>\n”;
?>
</screen></para><para>
          Yukarıdaki dört kod satırıda ekrana “Bu bir PHP dosyasıdır.”
          yazdıracaktır. Ve web istemcinizden sayfanın kaynağına baktığınız
          zaman sadece
        </para><para>
<screen>
Bu bir PHP dosyasıdır.&lt;br>
Bu bir PHP dosyasıdır.&lt;br>
Bu bir PHP dosyasıdır.&lt;br>
Bu bir PHP dosyasıdır.&lt;br>
</screen></para><para>
          gibi bir içerik görürsünüz. Yazdığınız kodlar sunucu sistemdeki php
          programı tarafından normal HTML kodlarına çevrilmiştir ve ziyaretçi
          bu kodlardan başka herhangi bir içerik göremez.
        </para><para>
          Dikkat ettiyseniz sayfamızın kaynağındaki kodlar dört satır halinde
          yazılmış, eğer PHP programımızda her metinden sonra gelen “\n”
          karakterini kaldırsaydık sayfamızın kaynağındaki komutlar tek satıra
          yerleşirdi.
        </para><para>
          Fakat bu sayfanın ziyaretçiye görünen kısmını değiştirmediği için üzerinde
          fazla durulması gereken bir konu değil.
        </para><para>
          Bir diğer husus da kodlarımızda kullandığımız &lt;br> etiketi. Evet PHP
          içinde doğrudan doğruya HTML etiketleri kullanabilmemiz bize çok büyük
          kolaylıklar sağlayacak. PHP dosyaları sunucu sistemde
          <literal>.php</literal> ya da <literal>.php3</literal> uzantısı ile
          saklanır (.php3, PHP’nin 3. Sürümü için kullanılmaktadır). Dosyamızda
          PHP kodlarını kullandığımız yeri göstermek için
          <literal>&lt;?php   ?></literal> ya da <literal>&lt;?    ?></literal>
          etiket aralıklarını kullanırız. Bu etiketlerin kullanıldığı yerden
          itibaren sunucu etiket aralığındaki komutları php yorumlayıcısına
          gönderir, php yorumlayıcısı da bu kodları düz HTML kodlarına çevirir.
        </para><para>
          Denemelerinizi bir UNIX ya da türevi işletim sistemi üzerinde yapmanızı
          tavsiye ederim, çünkü PHP ile birlikte kullanılan bir çok işlev Windows
          altında çalışmamakta ya da sorun yaratmaktadır.
        </para><para>
          Elinizin altında PHP+MySQL desteği bulunan bir sistem olduğunu varsayarak
          bölüme başlıyorum.
        </para><para>
          Öncelikle PHP’nin yazım kurallarından söz etmek istiyorum. Daha öncede
          belirttiğim gibi PHP kodları <literal>&lt;?php   ?></literal> ya da
          <literal>&lt;?    ?></literal> etiketleri arasında kullanılır.
          Yazdığımız her komuttan sonra <literal>;</literal> işareti kullanırız
          (C’ye benziyor demiştim ;)). Bir web sayfasında veya formdan gelen
          değişkenleri adlarının başına <literal>$</literal> işaret koyarak
          sembolize ederiz ve değişken adlarında Türkçe karakter kullanamayız.
        </para>
        <sect2>
          <title>PHP ile Ekrana Yazı Yazma</title>
          <para>
            PHP konu başlığında verdiğim örnekte olduğu gibi ekrana yazı yazmak
            için dört değişik yol kullanırız (en azından ben o kadar biliyorum!)
          </para><para>
<screen>
  printf(“Bu bir PHP dosyasıdır.&lt;br>”);
  print(“Bu bir PHP dosyasıdır.&lt;br>”);
  echo (“Bu bir PHP dosyasıdır.&lt;br>”);
  echo “Bu bir PHP dosyasıdır.&lt;br>”;
</screen></para><para>
            Yukarıdaki dört satırda ekrana “Bu bir PHP dosyasıdır.” yazacaktır.
            Dikkat ederseniz her komuttan sonra bir <literal>;</literal> işareti
            kullanılıyor. Bu işareti kullanmamamız halinde php programı hata
            verecektir. Şimdi içinizde “Bu yazıyı HTML ile daha kısa bir kod
            kümesi ile yazmak mümkün!” diye düşünenler olacaktır (bende ilk
            başta öyle düşünmüştüm :-), fakat ilerde ekrana değişken ile gelen
            bilginin yazdırılmasını gördükten sonra sizde bu yazım şeklinin
            gereksiz olmadığını anlayacaksınız.
          </para><para>
            Aşağıdaki örnekte <literal>$deger</literal> adlı değişkene değer
            atayıp ekrana yazdırıyorum.
          </para><para>
<screen>
&lt;?php

/* Buralar yorum satırı*/
# Burası da tek satırlık yorum aralığı

$değer = "Bu değişkenin değeri";
echo $değer;

?>
</screen></para><para>
            Bu dosyayı yazıp <literal>ilk.php</literal> diye kaydettikten sonra
            web istemcinizin adres satırına <literal>http://localhost/ilk.php</literal>
            yazarsanız ekranda “Bu değişkenin değeri” yazısını göreceksiniz
            (Kullandığınız sunucunun ismi <literal>localhost</literal> ve
            <literal>ilk.php</literal> dosyasının da ana <literal>www</literal>
            dizininde olduğunu varsaydım).
          </para><para>
            PHP ile sadece metinsel işlemler değil, matematiksel işlemler de
            gerçekleştirebilirsiniz. Bunun için C programlama dilinde olduğu gibi
            toplama için <literal>+</literal>, çıkarma için <literal>-</literal>,
            çarpma için <literal>*</literal>, bölme için <literal>/</literal> ve
            kalan bulma için <literal>%</literal> sembolleri kullanılır.
          </para><para>
            İsterseniz birkaç örnek ile matematiksel işlemlere giriş yapalım.
          </para><para>
<screen>
&lt;?php
###########################
#   Matematiksel İşlemler #
#         mat.php         #
###########################

# Değişkenler tanımlanıyor
$a = 10;
$b = 2;
$c = 3;

# Kullanılacak matematiksel işlevler tanımlanıyor
$toplam = ($a + $b + $c);
$carpim = ($a * $b * $c);
$bolum = ($a / $b);
$kalan = ($a % $c);

# Çıktılar ekrana yazdırılıyor
echo "Tanımlı değişkenlerin toplamı: &lt;b>$toplam&lt;/b>&lt;br>\n";
echo "Tanımlı değişkenlerin çarpımı: &lt;b>$carpim&lt;/b>&lt;br>\n";
echo "Birinci ve ikinci değişkenin bölmesi sonucu bölüm: &lt;b>$bolum&lt;/b>&lt;br>\n";
echo "Birinci ve üçüncü değişkenin bölmesi sonucu kalan: &lt;b>$kalan&lt;/b>";
?>
</screen></para><para>
            Yukarıdaki örnek, programlama ile daha önce uğraşmamış birisi için
            biraz karışık olabilir. Önce değişkenlere değer atanır ve belirli
            işlevler kullanılarak bu değerler istenilen işlemlerden geçirilerek
            farklı bir sonuç elde edilir. Tıpkı matematikte kullanılan işlevler
            gibi, belirli işlemler istenilen değişken değerine uygulanır.
          </para><para>
            Yani, <literal>y = f(x, w, z) = x + w + z</literal>  gibi, bizde
            <literal>y</literal> yerine <literal>$toplam</literal> diye bir değişken
            ve <literal>x, w</literal> ve <literal>z</literal> yerine
            <literal>$a, $b</literal> ve <literal>$c</literal> gibi değişkenler
            kullandık. Matematikte kullanılan işlevlerden tek farkı kullanılan
            değişken tiplerinin farklı olması ve matematiksel işlemler dışında
            da işlemlerin yapılabiliyor olmasıdır.
          </para><para>
            Bizim örneğimizde bazı matematiksel değerlerin toplamı, çarpımı ve
            bölümü alındı. Bu matematiksel işlemleri istenilen amaç doğrultusunda
            uzatıp karmaşıklaştırmak mümkün.
          </para><para>
            Yazdığımız PHP dosyasının HTML kaynak kodu
          </para><para>
<screen>
Tanımlı değişkenlerin toplamı: &lt;b>15&lt;/b>&lt;br>
Tanımlı değişkenlerin çarpımı: &lt;b>60&lt;/b>&lt;br>
Birinci ve ikinci değişkenin bölmesi sonucu bölüm: &lt;b>5&lt;/b>&lt;br>
Birinci ve üçüncü değişkenin bölmesi sonucu kalan: &lt;b>1&lt;/b>
</screen></para><para>
            gibi düz HTML kodlarından ibaret olacaktır. Ziyaretçinin hiçbir
            şekilde bizim PHP kodlarımızı görme şansı yoktur. Kaynak kodundan
            kullandığımız <literal>\n</literal> karakteri HTML çıktımızda
            satırların tek bir satır gibi değil de alt alta yazılmış satırlar
            olarak oluşmasını sağladı. Bu gibi durumlarda kullanımı gerekli
            değilse de kullanımının gerekli olduğu durumlar kesinlikle vardır.
          </para><para>
            Birde bir önceki örneği dikkatli bir şekilde incelediyseniz orada
            değişkenin değerini verirken “ (tırnak işareti) kullanmama karşın
            son örnekte kullanmadım. Tırnak işareti kullanılmadığı zaman PHP
            değişkenimizin sayısal değer taşıyan bir değişken olduğunu anlayacaktır.
          </para><para>
            Diyelim ki elimizde iki tane metin bilgisi taşıyan değişken var.
            Bunlar <literal>$ad = "Fehmi Noyan"</literal> ve
            <literal>$soyad = "İSİ"</literal> olsun. Bu değişkenlerin değerlerini
            birleştirip tek bir değişkende saklamak mümkündür. Saklamak istediğimiz
            tek değişken <literal>$ad_soyad</literal> ise kullanmamız gereken
            komut kümesi
          </para><para>
<screen>
$ad_soyad = $ad . " " . $soyad;
</screen></para><para>
            gibi bir satırdır. Bu işlem için çok farklı birleştirme yolları olsa
            da bu kullanım birçok yerde işinizi görecektir.
          </para>
        </sect2>
        <sect2>
          <title>Web Formundan Bilgi Almak</title>
          <para>
            Buraya kadar anlattıklarım sadece bir giriş içindi (şimdiki aşama da
            daha işin başı, yani giriş bitmedi). Fakat sizinde bildiğiniz gibi
            dinamik bir sitede değişkenlerin değerleri kullanıcı tarafından sunucu
            sisteme yollanır. Bu iş için ya form yöntemi ya da adres satırından
            bilgi girişi yolu kullanılır. En yaygın ve kullanışlı olanı form yöntemidir.
          </para><para>
<screen>
&lt;! --- ad_soyad.html --- >
&lt;html>
&lt;head>&lt;title>Ad ve Soyad Bilgisi&lt;/title>&lt;/head>
&lt;body bgcolor="#ffffff" text="#000000">
&lt;form action="ad_soyad.php" method="get">
Adınız: &lt;input type="text" name="ad">&lt;br>
Soyadınız: &lt;input type="text" name="soyad">&lt;br>
&lt;input type="submit" value="Gönder">
&lt;/form>&lt;/body>&lt;/html>
</screen>
</para><para>
<screen>
&lt;?
################
# ad_soyad.php #
################
 echo "Adınız $ad ve soyadınız $soyad.";
?>
</screen></para><para>
            Yukarıdaki örnek dosyaları yorum satırlarında belirtilen adlar ile
            yazıp kaydettikten sonra, istemcinizin adres satırına
            <literal>http://localhost/ad_soyad.html</literal> yazıp karşınıza
            çıkacak formu doldurun. "Gönder" düğmesine bastıktan sonra PHP
            dosyamız çalışacak ve bize istenilen çıktıyı verecektir. Burada
            dikkat etmeniz gereken nokta istemcinizin adres satırındaki
            bilgidir. Eğer ben formda adım için “Fehmi Noyan” soyadım içinse
            “ISI” (Türkçe karakter kullanmamak için büyük i kullanmadım)
            bilgilerini girersem adres satırında
          </para><para>
<screen>
http://localhost/ad_soyad.php?ad=Fehmi+Noyan&amp;soyad=ISI
</screen></para><para>
            gibi bir satır görünecektir. Dikkat ederseniz form ile gönderilen
            bilgilerin <literal>name="..."</literal> kısmının PHP dosyamızdaki
            değişken adlarını ve adres satırındaki PHP dosyası ve
            <literal>?</literal> karakterinden sonraki kısımların PHP dosyamıza
            gidecek değişkenlerin değerini verdiğini fark edeceksiniz.
          </para><para>
            HTML dosyamızda oluşturduğumuz web formunda kullandığımız &lt;input>
            etiketi içindeki <literal>name="..."</literal> kodu bize o etiket ile
            gelen bilginin <literal>action=”...”</literal> kodu ile belirtilen
            dosyada aynı isimli değişken olarak kullanılacağını belirtir. Web
            formunu doldurmadan da, sadece adres satırına yukarıdaki satırı
            girerek de formumuza bilgi yollayabiliriz. Satırda PHP dosyamızın
            isminden sonra bir <literal>?</literal> karakteri kullanılır,
            daha sonra her değişkenin adı ve değeri birbirinden <literal>&amp;</literal>
            karakteri ile ayrılır. Bu yol ile web formlarından bilgi göndermek
            mümkündür ama pek kullanışlı değildir.
          </para><para>
            Formumuzda <literal>get</literal> yöntemini kullandığımız için adres
            satırında girdiğimiz bilgiler görüntülendi. Aynı HTML dosyasını formun
            bilgileri gönderme metodunu <literal>post</literal> olacak şekilde
            ayarlayıp tekrar deneyin. Bu sefer adres satırında girilen hiçbir
            bilgi olmayacaktır. Yani sadece
          </para><para>
<screen>
http://localhost/ad_soyad.php
</screen></para><para>
            gibi bir satır olacaktır. Ben örneklerimde bundan sonra
            <literal>post</literal> yöntemini kullanacağım.
          </para>
        </sect2>
        <sect2>
          <title>Diziler</title>
          <para>
            Diziler bazen kullanılması kaçınılmaz olan ve her PHP programcısının
            kullanımını bilmesi gereken elemanlardır. Adından da anlaşılacağı üzere,
            diziler bir tek değişkenin değeri içerisinde birden çok değer saklar.
            Mesela içerisinde haftanın günlerini barındıran bir dizi değişken
          </para><para>
<screen>
  $hafta = array(“Pazartesi”, ”Salı”, ”Çarşamba”, ”Perşembe”, ”Cuma”, ”Cumartesi”);
</screen></para><para>
            şeklinde tanımlanabilir. Dikkat ederseniz haftanın son günü olan
            “Pazar” dizi içerisinde yer almıyor. Pazar’ı dizi içerisine dahil
            etmek için
          </para><para>
<screen>
  $hafta[] = ”Pazar”;
</screen></para><para>
            şeklinde bir ifade kullanabiliriz. Böylece son belirtilen “Pazar”
            elemanı dizinin son elemanı olmuş olur.
          </para><para>
            Dizi içerisindeki bir elemanı ekrana yazmak için, mesela dizinin
            3. elemanı,
</para><para><screen>
  echo $hafta[2];
</screen></para><para>
            komutu kullanılır. Dizinin 3. elemanı için neden “2” rakamını kullandık?
            Bunun sebebi dizilerin ilk elemanının 1. değil 0. eleman olmasıdır.
            Bir dizi değişkeninin eleman sayısı <literal>count()</literal> işlevi
            ile öğrenilebilir.
</para><para><screen>
  echo count($hafta);
</screen></para><para>
            ifadesi ekrana 7 rakamını basacaktır. Dizi değişkenleri ve bunlar
            üzerinde işlem yapan işlevler ile ilgili bilgiyi PHP Manuel’in
            “Array Functions” kısmında bulabilirsiniz.
          </para>
        </sect2>
        <sect2>
          <title>Mantıksal İşleçler</title>
          <para>
            Bir PHP dosyasında en çok kullanacağınız ifadeleri oluşturan mantıksal
            işleçleri önceden programlama mantığı almamış bir kişi için ilk
            etapta anlaşılması biraz zor gelebilir fakat bu bölümü anlatırken bu
            durumu da göz önünde bulundurdum ve olabildiğimce sade ve anlaşılır
            bir dil kullanmaya gayret gösterdim.
          </para><para>
            Bu etapta tekrar hatırlatmak istiyorum, PHP ile kullanılan mantıksal
            işleçleri C dili ile kullanılanların tamamen aynısıdır ve kullanım
            şekilleri arasında hiçbir fark yoktur. İlk önce kullanılan işleçlerinin
            hangileri olduğunu ve daha sonra bunların kullanım şekillerini anlatmayı
            daha uygun gördüm.
          </para><para>
            <informaltable frame="none" style="background:#999999;">
              <tgroup cols='2'>
              <tbody>
                <row style="background:#eeeedd;">
                  <entry align="center" valign="top"/>
                  <entry align="center" valign="top">İşleç İsmi</entry>
                </row><row style="background:#ffffee;">
                  <entry valign="top">&amp;&amp;</entry><entry valign="top">Ve</entry>
                </row><row style="background:#ffffee;">
                  <entry valign="top">||</entry><entry valign="top">Veya</entry>
                </row><row style="background:#ffffee;">
                  <entry valign="top">==</entry><entry valign="top">Eşittir</entry>
                </row><row style="background:#ffffee;">
                  <entry valign="top">!</entry><entry valign="top">Değil</entry>
                </row><row style="background:#ffffee;">
                  <entry valign="top">!=</entry><entry valign="top">Eşit değil</entry>
                </row><row style="background:#ffffee;">
                  <entry valign="top">></entry><entry valign="top">Büyüktür</entry>
                </row><row style="background:#ffffee;">
                  <entry valign="top">&lt;</entry><entry valign="top">Küçüktür</entry>
                </row><row style="background:#ffffee;">
                  <entry valign="top">>=</entry><entry valign="top">Büyük ya da eşittir</entry>
                </row><row style="background:#ffffee;">
                  <entry valign="top">&lt;=</entry><entry valign="top">Küçük ya da eşittir</entry>
                </row>
              </tbody></tgroup>
            </informaltable>
          </para><para>
            Yukarıdaki işleçlerini mantıksal ifadelerde karşılaştırma ve
            verilen koşulun doğruluğunu sınama için kullanacağız. İlk iki
            işleç dışında, az çok matematik bilgisi olan birisi diğer
            işleçlerinin kullanım şeklini kestirmiştir. Aslında ilk ikisi
            de matematikte işlenmiş olan mantık konusunun bir parçasıdır.
          </para><para>
            Kullanacağımız ifadelere gelen bilgiler bilgisayar dilinde iki
            şekilde değerlendirilir. 0 ve 1, yani yanlış ve doğru.
            Kuracağımız tüm ifadeler bu iki değer çevresinde sınırlıdır.
          </para><para>
            <informaltable frame="none" style="background:#999999;">
              <tgroup cols='2'>
              <tbody>
                <row style="background:#eeeedd;">
                  <entry align="center" valign="top">&amp;&amp; İşleçi (Ve)</entry>
                  <entry align="center" valign="top">|| İşleçi (Veya)</entry>
                </row><row style="background:#ffffee;">
                  <entry valign="top">0 &amp;&amp; 0 = 0</entry>
                  <entry valign="top">0 || 0 = 0</entry>
                </row><row style="background:#ffffee;">
                  <entry valign="top">1 &amp;&amp; 0 = 0</entry>
                  <entry valign="top">1 || 0 = 1</entry>
                </row><row style="background:#ffffee;">
                  <entry valign="top">0 &amp;&amp; 1 = 0</entry>
                  <entry valign="top">0 || 1 = 1</entry>
                </row><row style="background:#ffffee;">
                  <entry valign="top">1 &amp;&amp; 1 = 1</entry>
                  <entry valign="top">1 || 1 = 1</entry>
                </row>
              </tbody></tgroup>
            </informaltable>
          </para><para>
            Yukarıda <literal>&amp;&amp;</literal> ve <literal>||</literal>
            işleçlerinin aldıkları değerler doğrultusunda oluşturdukları
            değerleri yazdım. Bu karşılaştırma işleçlerini birazdan
            anlatacağım mantıksal ifadeler içerisinde kullanacağız.
          </para>
        </sect2>
        <sect2>
          <title>PHP Komutları</title>
          <para>
            <variablelist>
              <varlistentry>
                <term>if</term>
                <listitem>
                  <para>
                    <literal>if</literal> komutu bir ifadenin doğru olması halinde
                    izleyen komut kümesini işletir. İngilizce anlamı “eğer” olan
                    kelime üstlendiği görev bakımından da anlamı ile bir bütünlük
                    içindedir.
                  </para><para>
<screen>
&lt;?
################
#    if.php    #
################

$a = 5;
$b = 3;
if ( $a > $b )
 {  echo “a sayısı b  sayısından büyüktür.”; }
?>
</screen></para><para>
                    Yukarıdaki kod parçası <literal>$a</literal> değişkenindeki
                    değerin sayısal olarak <literal>$b</literal> dekinden büyük
                    olması halinde komut kümesinde belirtilen kodu yerine getirip
                    ekrana “a sayısı b  sayısından büyüktür.“ metnini basacaktır.
                    Aksi taktirde (yani $a’nın sayısal değeri $b’ninkinden küçük
                    ise) hiçbir işlem yapılmadan komut kümesindeki kod atlanır.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>if... else ...</term>
                <listitem>
                  <para>
                    Bu komutta <literal>if</literal> komutunda olduğu gibi
                    belirtilen ifadenin doğru olması halinde <literal>if</literal>
                    ile belirtilen komut kümesini işletir, ifadenin yanlış olması
                    halinde ise <literal>else</literal> ile belirtilen komut kümesi
                    işletilecektir.
                  </para><para>
<screen>
&lt;?
###################
#   if_else.php   #
###################

$a = 2;
$b = 3;
 if ($a > $b) {
     echo “a sayısı b sayısından büyüktür.”;
 } else {
    echo “b sayısı a sayısından büyüktür.”;
 }
?>
</screen></para><para>
                    Parantez içindeki mantıksal ifadenin doğruluğu halinde
                    <literal>if</literal> komutunu izleyen komut kümesini
                    (“{“ ve “}” işaretleri ile sınırlı bölge) işletilir.
                    Yukarıda <literal>$a</literal> ile belirtilen değişkenin
                    sayısal olarak değeri <literal>$b</literal> ile belirtilenden
                    büyük olması halinde ekrana “a sayısı b sayısından büyüktür.”
                    metni aksi taktirde, yani <literal>$a</literal> değişkeni
                    sayısal olarak <literal>$b</literal>'den küçükse,  ekrana
                    “b sayısı a sayısından büyüktür.” metni basılacaktır.
                    Komut kümesinde belirtilen kod sadece ekrana yazı yazma değil,
                    her türlü işlem için düzenlenebilir.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>while</term>
                <listitem>
                  <para>
                    Yine İngilizce anlamı “esnasında” olan kelime yaptığı görev
                    itibari ile anlamına yakındır. Parantez içinde belirtilen
                    koşul doğru olduğu sürece istenilen komut kümesini işletir.
                    Aşağıdaki örnek ilk bakışta biraz karışık gelebilir fakat
                    dikkatli ve adım adım takip ederseniz pek de karışık
                    olmadığını anlayacaksınız.
                  </para><para>
<screen>
&lt;html>
&lt;head>&lt;title>HTML içinde kullanılan PHP&lt;/title>
&lt;/head>
&lt;body bgcolor="#ffffff" text="#000000">

&lt;?
################
#  while.php   #
################

$a = 1;
while($a &lt; 7):
 echo “&lt;h$a>Bu h$a ile yazılmış bir başlık.&lt;/h$a>&lt;br>\n”;
 $a = $a + 1;
 endwhile;
?>

&lt;/body>
&lt;/html>
</screen></para><para>
                    Yukarıdaki örnek hem <literal>while</literal> döngüsünün
                    kullanımına hem de HTML içinde PHP kullanımına güzel bir
                    örnek oluşturuyor. Kullandığım <literal>while</literal>
                    döngüsünü aşağıdaki gibi de yazabilirdim.
                  </para><para>
<screen>
&lt;html>
&lt;head>&lt;title>HTML içinde kullanılan PHP&lt;/title>
&lt;/head>
&lt;body bgcolor="#ffffff" text="#000000">

&lt;?
################
#  while.php   #
################

$a = 1;
while($a &lt; 7)
{
 echo “&lt;h$a>Bu h$a ile yazılmış bir başlık.&lt;/h$a>&lt;br>\n”;
 $a++;
}
?>

&lt;/body>
&lt;/html>
</screen></para><para>
                    Sonuç yine aynı olacaktır. Kullanım açısından bir fark yoktur
                    hangisinin kullanılacağı programcıya kalmıştır fakat ben
                    örneklerimde hep ikinci kullanımı tercih ediyorum.
                  </para><para>
                    Yukarıdaki örnekte yabancı olduğunuz bir kullanım
                    <literal>$a++</literal> ifadesidir (Bu kullanımın aynısı C’de
                    de vardır) Bu ifade <literal>$a = $a + 1</literal> ifadesi ile
                    aynıdır (Programcılıkta çok kullanılan bir ifadedir fakat
                    deneyimi olmayanlar biraz zorlanacaktır). Bunun anlamı,
                    ”$a’daki değeri bir arttır ve sonra bu değeri $a’nın yeni değeri
                    olarak ata” dır. Yani <literal>$a = 1</literal> ise
                    <literal>$a++</literal>’dan sonra <literal>$a = 2</literal>
                    olacaktır. Aynı şekilde <literal>$a--</literal>'de,
                    “$a’nın değerini bir azalt ve bu değeri $a’nın yeni değeri
                    olarak ata” dır.
                  </para><para>
                    Yukarıdaki örnekte ilk olarak <literal>$a</literal> değişkenine
                    1 değeri atanıyor ve bu <literal>&lt;h$a></literal> ifadesi ile
                    bir HTML etiketine çevriliyor. <literal>$a = 1</literal> değeri
                    için bu ifade <literal>&lt;h1></literal>, <literal>$a = 2</literal>
                    için bu ifade <literal>&lt;h2> ... </literal> diye değerler alır.
                    <literal>while</literal> döngüsü ile <literal>$a</literal>’nın
                    alabileceği en son değerin 6 olduğu belirtilmiştir (<literal>$a &lt; 7</literal>,
                    yedi olduğu an döngü son bulur!). <literal>$a</literal>’nın 7
                    değerini alması ile belirtilen koşul yanlış olur (yani 0) ve
                    döngü işletilmez. Eğer <literal>$a++</literal> ifadesi
                    kullanılmamış olsaydı, program sonsuz döngüye girecekti bu da
                    ekrana sonsuz kere <literal>&lt;h1></literal> etiketi ile
                    belirtilen metnin basılması demektir. (Aslında sunucu sistemdeki
                    PHP ayar dosyasında öntanımlı olarak PHP dosyalarının maksimum
                    çalışma süreleri 30 saniye olarak belirlendiği için sonsuz döngü
                    sözcükleri tam olarak doğru değildir).
                  </para><para>
                    <literal>while</literal> döngüsünde koşul önce gözden geçirilir,
                    daha sonra  işlemler gerçekleştirilir.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>do ... while</term>
                <listitem>
                  <para>
                    <literal>do...while</literal> döngüsü, <literal>while</literal>
                    döngüsü ile aynı işleve sahiptir. Yalnız arada bir fark vardır.
                    <literal>While</literal> döngüsünde koşul döngüye girilmeden
                    kontrol edilir buna karşın <literal>do....while</literal>
                    döngüsünde koşul döngünün sonunda kontrol edilir.
                  </para><para>
<screen>
&lt;?
$a = 0;
do {
  print $a;
} while($a > 0);
?>
</screen>
                  </para><para>
                    Yukarıdaki kod normal <literal>while</literal> döngüsü ile
                    yazılmış olsaydı, yani aağıdaki gibi
                  </para><para>
<screen>
&lt;?
$a = 0;
while($a > 0) {
  print $a;
}
?>
</screen>
                  </para><para>
                    ekrana hiçbir çıktı vermeyecekti. Halbuki ilk örnekte ekrana
                    “0” basılacaktır. <literal>Do....while</literal> ile
                    oluturulan bir döngü <literal>while</literal> ile de
                    oluşturulabilir ve benim şahsi görüşüm, <literal>while</literal>
                    döngüsünün kullanımı daha kolaydır. Tabi ki bu döngünün de
                    kendine has kullanım alanları vardır ama ben şu ana kadar
                    kendi yazdığım betiklerde bu tür döngüler için hep
                    <literal>while</literal> döngüsünü kullandım.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>for</term>
                <listitem>
                  <para>
                    <literal>for</literal> döngüsü de hemen hemen aynı işlevi
                    görür. Kullanım şeklini, <literal>while</literal> döngüsündeki
                    örnek ile aynı çıktıyı verecek bir örnek ile açıklamak istiyorum.
                  </para><para>
<screen>
&lt;html>
&lt;head>&lt;title>HTML içinde kullanılan PHP&lt;/title>
&lt;/head>
&lt;body bgcolor="#ffffff" text="#000000">

&lt;?
################
#   for.php    #
################

 for ($a = 1; $a &lt; 7; $a++)
 {
  echo "&lt;h$a>Bu h$a ile yazılmış bir başlıktır.&lt;/h$a>&lt;br>\n";
 }
?>
&lt;/body>
&lt;/html>
</screen>
                  </para><para>
                    Yukarıdaki kod da <literal>while</literal> döngüsündeki ile
                    aynı çıktıyı verir. <literal>for</literal> döngüsünde
                    değişkenin başlangıç değeri ilk olarak yazılır, daha sonra
                    koşul ve en sonunda ise değişken için işletilmesi gereken
                    bölüm gelir. Yani kullanımın kalıbı
                  </para><para>
<screen>
   for (ilk_değer;koşul;işlem)
</screen>
                  </para><para>
                    şeklindedir.
                  </para><para>
                    Tabii benim kullandığım örnek tüm döngüler için geçerli, öyle
                    durumlar ile karşılaşırsınız ki alternatifiniz olmaz yani
                    sadece <literal>for</literal> ya da <literal>while</literal>
                    döngüsünü kullanabilirsiniz. Nasıl olsa hepsi aynı işi yapıyor
                    diye üstten bakıp geçmeyin, iyice kavrayın.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>switch</term>
                <listitem>
                  <para>
                    <literal>switch</literal> döngüsü aslında iç içe geçmiş
                    <literal>if</literal> döngüleridir. Fakat, kişisel deneyimlerime
                    dayanarak söylüyorum, birçok <literal>if</literal> kullandığınız
                    bir döngüde iş bazen gerçekten içinden çıkılmaz bir hal alıyor.
                    Mesela bir web formu ile (drop-down menu ile) size bir değer
                    gelecek. Siz bu değerin ne olduğunu anlamak istiyorsunuz. Bunun
                    için menüde önceden tanımlı değerler arasında bir secim yapılır.
                    İşte bu seçim için <literal>switch</literal> döngüsü kullanılır.
                    Aşağıdaki dosyaları yorum kısımlarında belirtilen isimler ile
                    kaydedin ve daha sonra istemcinizden <literal>menu.html</literal>
                    dosyasını açın.
                  </para><para>
<screen>
&lt;!-- menu.html adı ile kaydedin -->
&lt;html>
  &lt;head>
    &lt;title>Menu&lt;/title>
  &lt;/head>
  &lt;body bgcolor="#ffffff" text="#000000">
    &lt;form action="menu.php" method="post">
      &lt;b>İşletim sisteminizi seçin&lt;/b>&lt;br>
      &lt;select name=”os_type” size=”1”>
        &lt;option value=”win”>Windows 9x&lt;/option>
        &lt;option value=”winnt”>Windows NT&lt;/option>
        &lt;option value=”linux”>Linux&lt;/option>
        &lt;option value=”unix”>UNIX&lt;/option>
        &lt;option value=”os2”>OS/2&lt;/option>
        &lt;option value=”macos”>MacOS&lt;/option>
      &lt;/select>
      &lt;input type="submit" value=”  Sorgula  “>
    &lt;/form>
  &lt;/body>
&lt;/html>
</screen>
                  </para><para>
<screen>
&lt;?
// menu.php adı ile kaydedin

switch($os_type)
{
  case “win” :
     echo “Kullandığınız işletim sistemi Windows 9x”;
     break;
  case “winnt” :
     echo “Kullandığınız işletim sistemi Windows NT”;
     break;
  case “linux” :
     echo “Kullandığınız işletim sistemi Linux”;
     break;
  case “unix” :
     echo “Kullandığınız işletim sistemi UNIX”;
     break;
  case “os2” :
     echo “Kullandığınız işletim sistemi OS/2”;
     break;
  case “macos” :
     echo “Kullandığınız işletim sistemi MacOS”;
     break;
}
?>
</screen>
                  </para><para>
                    Yukarıdaki örnek kullanıcıya kullandığı işletim sistemini
                    soruyor ve gelen cevap doğrultusunda döngüde belirtilen
                    kısmı işletiyor. Kullandığım <literal>break</literal> komutu
                    programın o kısmının işletilmesi halinde döngüden çıkılmasını
                    sağlar, yani kullanıcı işletim sistemin Linux olarak
                    işaretlemişse Windows, WindowsNT ve en son Linux bölümü
                    işletilir. Linux bölümündeki “Kullandığınız işletim sistemi Linux”
                    metni ekrana basılır ve bir sonraki komut olan <literal>break</literal>
                    işletilir, <literal>break</literal> komutunun işlemesi ile döngüden
                    çıkılır ve böylece diğer değerler kontrol edilerek vakit kaybedilmez.
                  </para><para>
                    <literal>switch</literal> döngüsünde kullanılan ve benim şu
                    örnekte kullanmadığım bir özelliği daha var:
                    <literal>default</literal> seçeneği.
                  </para><para>
                    Bu seçenek diğer hiçbir seçim doğru olmadığı taktirde çalıştırılacak
                    kısımdır. Bir örnek vermek gerekirse.
                  </para><para>
<screen>
&lt;?
// menu.php adı ile kaydedin

$i = 5;
switch($i)
{
  case “2”:
     echo “Değeri 2”;
     break;
  case “3”:
     echo “Değeri 3”;
     break;
  default:
     echo “Değeri bilinmiyor”;
}
?>
</screen>
                  </para><para>
                    Bu kod ekrana “Değeri bilinmiyor” yazacaktır. Çünkü siz
                    <literal>$i</literal> değişkenine tanımlı olan 2 ve 3
                    değerleri dışında ne değer verirseniz verin bu iki koşul
                    dışında kalan bölüm yani <literal>default</literal> ile
                    tanımlı bölüm işletilecektir.
                  </para>
                </listitem>
              </varlistentry>
            </variablelist>
          </para>
        </sect2>
        <sect2>
          <title>Bazı PHP İşlevleri</title>
          <para>
            <variablelist>
              <varlistentry>
                <term>Include() ve Require() işlevleri</term>
                <listitem>
                  <para>
                    <literal>include</literal> ve <literal>require</literal>
                    işlevleri bir PHP programcısının hayatını kolaylaştıran
                    başlıca işlevlerdendir. Bu iki işlevin görevleri birbirinin
                    aynı olsa da işleyişlerinde ufak ama önemli bir fark vardır.
                    Bu iki işlev parametre olarak aldıkları dosyayı sanki o
                    dosyanın tüm içeriğini yazılmışçasına işler. Mesela
                  </para><para>
<screen>
&lt;?
#################
#  inc_req.php  #
#################

include (“./dosya.html”);
require (“./dosya.html”);

?>
</screen>
                  </para><para>
                    Bu PHP kodu bulunduğu dizindeki <literal>dosya.html</literal>
                    dosyasını iki kere ekrana basar. Yani sanki siz o dosyanın
                    içeriğini elle yazmışsınız gibi çalışır. Bu iki işlev arasındaki
                    fark, <literal>require()</literal> işlevi sadece gerektiği
                    durumlarda dosyayı işler fakat <literal>include()</literal>
                    işlevi dosya ekrana basılmayacak olsa bile (bir döngü içinde
                    olabilir) dosyayı açıp hafıza kaybına sebep olur. Bunun için
                    <literal>include()</literal> işlevini kullanmanızın zorunlu
                    olmadığı durumlarda <literal>require()</literal> işlevini
                    kullanmanız performansı arttıracaktır.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>mail() işlevi</term>
                <listitem>
                  <para>
                    Adından da anlayacağınız üzere PHP’de e-posta göndermek için
                    kullanılan işlevdir. Kullanımı çok basit ve zahmetsiz olmasına
                    karşın eğer denemelerinizi evde bir Windows sistemi üzerinde
                    gerçekleştiriyorsanız bu işlevi kullanmak için bilgisayarınıza
                    bir de eposta sunucusu kurmanız gerekli (ne yazık ki PHP ile
                    kullanılan birçok işlev Windows altında sorun çıkarıyor).
                    Kurulu bir Linux sistemde böyle bir sorununuz yok, çünkü Linux
                    ile birlikte kurulan <literal>sendmail</literal>  programı
                    e-posta gönderme işinizi hallediyor.
                  </para><para>
<screen>
&lt;?
######################
#   mail_gonder.php  #
######################

mail ($kime, $konu, $mesaj, ”From: $kimden\n”);

?>
</screen>
                  </para><para>
                    Yukarıdaki tek satır <literal>$kimden</literal> değişkeni ile
                    gelen kişinin adresi ile <literal>$kime</literal> adlı adrese
                    <literal>$konu</literal> adlı ve içeriği <literal>$mesaj</literal>
                    olan e-postayı gönderir. “From:” bölümü e-postanın kimden geldiğini
                    belirtir. Tabi yukarıdaki PHP dosyasının çalışabilmesi için bu
                    dosyaya gerekli bilgileri yollayacak HTML dosyasının da yazılması
                    gerekli.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>system() işlevi </term>
                <listitem>
                  <para>
                    Bu işlev PHP bir sistem modülü olarak kurulduğunda
                    işletilebilir bir işlevdir. C programlama dilindeki
                    <literal>system()</literal> işlevi ile aynı görevi yapar.
                    Yani işleve parametre olarak girilen komutu işletim sistemi
                    üzerinde işletir.
                  </para><para>
<screen>
&lt;?
##################
#   system.php   #
##################

$dizin_icerigi = system(“ls”);
echo $dizin_icerigi;
?>
</screen>
                  </para><para>
                    Yukarıdaki örnek PHP dosyamızın bulunduğu dizinin içeriğini
                    ekrana basar.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>isset() ve unset() işlevleri</term>
                <listitem>
                  <para>
                    <literal>isset()</literal> işlevi bir değişkenin içersinde
                    bir değer bulunup bulunmadığını kontrol eder. Bazen bir PHP
                    programında değer atanmamış değişkenler de bulunabilir. Bu
                    değişkenler boş yere bilgisayarın hafızasında yer işgal eder.
                    Ayrıca bu işlevi bir formdan bilgi alırken bilginin gönderilip
                    gönderilmediğini kontrol etmek için de kullanabiliriz.
                  </para><para>
                    <literal>unset()</literal> işlevi ise kendisine parametre olarak
                    verilen değişkeni yok eder. Kullanımları <literal>isset($degisken)</literal>
                    ve <literal>unset($degisken)</literal> şeklindedir.
                  </para>
                </listitem>
              </varlistentry>
            </variablelist>
          </para>
        </sect2>
        <sect2>
          <title>PHP ile Dosya İşlemleri</title>
          <para>
            Daha öncede belirttiğim gibi PHP, C programlama dili ile birçok
            benzerlik göstermesine rağmen dosya işlemleri gibi uğraştırıcı
            işlemlerde programcıya büyük kolaylıklar sağlar. PHP’de dosyalar
            ile kullanılabilecek birçok işlev olmasına rağmen (altmıştan fazla!)
            burada sadece dosya ve dizin açma, dosyadan ve dizinden okuma ve
            dosyaya bilgi yazma gibi konulara değineceğim.
          </para><para>
            <variablelist>
              <varlistentry>
                <term>fopen() işlevi</term>
                <listitem>
                  <para>
                    <literal>fopen()</literal> işlevi PHP’de dosyaları açmak için kullanılır. İşleve
                    parametre olarak iki değer girilir. Birincisi, dosya adı ve
                    ikinci de üzerinde işlem yapılacak dosyanın hangi işlem için
                    kullanılacağıdır.
<screen>
&lt;? fopen(“dosya_adı”, ”amaç”); ?>
</screen>
                  </para><para>
                    İşlevin kullanımı yukarıdaki kalıba göredir. “dosya_adı” ile
                    belirtilen yere üzerinde işlem yapılacak dosya tam yolu ile
                    yazılmalıdır, “amaç” kısmına ise dosyanın açılacağı kip yazılır.
                  </para><para>
                    <informaltable frame="none" style="background:#999999;">
                      <tgroup cols='2'>
                      <tbody>
                        <row style="background:#eeeedd;">
                          <entry align="center" valign="top">Kip</entry>
                          <entry align="center" valign="top">Kullanım Amacı</entry>
                        </row><row style="background:#ffffee;">
                          <entry valign="top">r</entry>
                          <entry valign="top">
                            Dosya sadece okuma için açılır. İmleç dosyanın başında
                            konumlanır.
                          </entry>
                        </row><row style="background:#ffffee;">
                          <entry valign="top">r+</entry>
                          <entry valign="top">
                            Dosya hem yazma hem okuma için açılır. İmleç dosyanın
                            başında konumlanır.
                          </entry>
                        </row><row style="background:#ffffee;">
                          <entry valign="top">w</entry>
                          <entry valign="top">
                            Dosya yazma için açılır. Eğer aynı isimli dosya varsa
                            silinir ve yeniden oluşturulur.
                          </entry>
                        </row><row style="background:#ffffee;">
                          <entry valign="top">w+</entry>
                          <entry valign="top">
                            Dosya hem yazma hem okuma için açılır. Eğer aynı
                            isimli dosya varsa silinir ve yeniden oluşturulur.
                          </entry>
                        </row><row style="background:#ffffee;">
                          <entry valign="top">a</entry>
                          <entry valign="top">
                            Dosya sadece yazma için açılır. İmleç dosyanın sonuna
                            konumlandırılır. Dosya yoksa oluşturulur.
                          </entry>
                        </row><row style="background:#ffffee;">
                          <entry valign="top">a+</entry>
                          <entry valign="top">
                            Dosya hem yazma hem okuma için açılır. İmleç dosyanın
                            sonuna konumlanır. Dosya yoksa oluşturulur.
                          </entry>
                        </row>
                      </tbody></tgroup>
                    </informaltable>
                  </para><para>
                    Yukarıdaki tablo <literal>fopen()</literal> işlevi ile birlikte
                    kullanabileceğimiz dosya açma kipi parametreleridir.
                  </para><para>
<screen>
&lt;?
#################
#  dosya_ac.php #
#################
$dosya_ac = (fopen(“./dosya.txt”, ”r”));
if ($dosya_ac)
{
  echo “Dosya başarı ile açıldı ”;
   if (fclose($dosya_ac))
    {
        echo “ve kapatıldı.”;
     }
      else
    {

      echo “fakat kapatırken hata oluştu!”;
   }
}
  else
{
  echo “Dosyayı açmaya çalışırken bir hata oluştu!”;
}
?>
</screen>
                  </para><para>
                    Yukarıdaki PHP dosyası dosyanın açılıp açılamamasına göre
                    ekrana bir mesaj verecektir. Açılan bir dosyayı kapatmak
                    için <literal>fclose()</literal> işlevi kullanılır.
                  </para><para>
                    Yukarıdaki örnekte ilk <literal>if</literal> deyiminin
                    içerisinde başka bir <literal>if</literal> deyimi kullandım.
                    Bir dosyayı açıp tekrar kapatırken karşılaşabileceğimiz
                    tüm ihtimalleri göz önünde bulundurmamız gerekmektedir.
                    Mesela dosya açma işlemi başarılı bir şekilde
                    gerçekleşmediyse PHP ekrana “Dosyayı açmaya çalışırken bir
                    hata oluştu!” yazısını yazacaktır. Şayet dosya açma işlemi
                    başarılı ise “Dosya başarı ile açıldı ” yazısını yazacak ve
                    dosyanın doğru bir şekilde kapatılıp kapatılamaması durumuna
                    göre “ve kapatıldı.” veya “fakat kapatırken hata oluştu!”
                    ifadelerinde birisini ekrana basacaktır.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>fgets() ve fread() işlevleri</term>
                <listitem>
                  <para>
                    Bu iki işlev yazma modunda açılmış bir dosyadan bilgi almak
                    için kullanılır. Aralarında ufak bir fark vardır.
                    <literal>fgets()</literal> işlevi metin dosyalarında
                    kullanılır ve dosyayı satır satır okur.
                    <literal>fread()</literal> işlevi ise dosyayı ikili kipte
                    (bayt bayt) okur.
                  </para><para>
<screen>
&lt;?
####################
#  dosya_oku.php   #
####################

$dosya = fopen(“./dosya.txt”, ”r”);
while (!feof($dosya))
{
  $satir = fgets($dosya,1024);
  echo “$satir&lt;br>”;
}
fclose($dosya);
?>
</screen>
                  </para><para>
                    Yukarıdaki PHP programı bulunduğumuz dizindeki
                    <literal>dosya.txt</literal> adlı dosyayı okuma
                    kipinde açıp dosyanın sonuna kadar
                    (<literal>!feof</literal> kalıbını birazdan anlatacağım)
                    satır satır okuma gerçekleştirir ve ekrana yazar. Dosyayı
                    okuma işlemi bitince de dosyayı kapatıp programı sonlandırır.
                    <literal>fgets</literal> ile kullandığım “1024” rakamı
                    okunacak bir satırdan kaç bayt alınacağını belirtir.
                    Aslında yukarıdaki program <literal>require()</literal>
                    işlevi ile hemen hemen aynı işi yapar.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>fputs() ve fwrite() işlevleri</term>
                <listitem>
                  <para>
                    Tahmin edeceğiniz gibi bu iki işlevde dosyaya bilgi yazmak
                    için kullanılır. İkisi arasında bir fark yoktur. Yazma
                    kipinde açılmış bir dosyaya bilgi girişi için kullanılırlar.
                  </para><para>
<screen>
&lt;?
###################
#  dosya_yaz.php  #
###################
$metin = ”Burada herhangi bir metin olabilir.”;
$dosya = fopen(“./defter.txt”,”w”);
fwrite($dosya,$metin);
fclose($dosya);
?>
</screen>
                  </para><para>
                    Yukarıdaki PHP dosyası <literal>$metin</literal> adlı
                    değişkendeki bilgiyi <literal>$dosya</literal> ile
                    belirtilen dosyaya yazacaktır. Bu işlem sırasında
                    bulunduğumuz dizinde <literal>defter.txt</literal>
                    adlı bir dosya varsa silinecek ve yeniden
                    oluşturulacaktır. Eğer varolan dosyamıza ekleme yapmak
                    istiyorsak kullanmamız gereken dosya açma komutu
                    <literal>fopen(“./defter.txt”,”a”)</literal>  şeklinde
                    olmalıdır. Ekleme dosya sonunu yapılır.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>feof</term>
                <listitem>
                  <para>
                    Bir dosyanın sonunun gelip gelmediğini kontrol eder. Daha
                    önceki örneklerimden birinde kullanmıştım.
                  </para><para>
<screen>
  while (!feof($dosya)) ......
</screen>
                  </para><para>
                    Oradaki kullanım DEĞİL mantıksal işleçi ile olduğu için
                    kullandığım <literal>while</literal> döngüsünde dosya
                    sonu olmayana kadar koşul doğru kabul edilip döngü
                    sürdürülecektir.
                  </para>
                </listitem>
              </varlistentry>
            </variablelist>
          </para>
        </sect2>
        <sect2>
          <title>PHP ile Dizin İşlemleri</title>
          <para>
            <variablelist>
              <varlistentry>
                <term>opendir() işlevi</term>
                <listitem>
                  <para>
                    Adında da anlaşılacağı gibi bu işlev kendine parametre olarak
                    verilen dizini açmak için kullanılır. Bulunduğumuz dizindeki
                    “resimler” alt dizinini açmak için
                  </para><para>
<screen>
  opendir(”./resimler”);
</screen>
                  </para><para>
                    gibi bir ifade kullanırız.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>readdir() işlevi</term>
                <listitem>
                  <para>
                    Bu işlev ise açık olan bir dizinde okuma yapmamıza olanak
                    sağlar. Yine bulunduğumuz dizindeki “resimler” altdizinini
                    okumak için
                  </para><para>
<screen>
  $dizi=opendir(“./resimler”);
  readdir(“$dizin”);
</screen>
                  </para><para>
                    gibi bir komut kullanırız. İsterseniz dizinler ile ilgili
                    iki işlevi bir örnek ile açıklayalım. Bu işlevin çalışabilmesi
                    için bulunduğumuz dizinin içinde bir “abc” dizini olmalı ve
                    kullanıcı yetkileri 705 yada 755 şeklinde (yani herkese okuma
                    yetkisi) olmalıdır.
                  </para><para>
<screen>
&lt;?
##################
#   dizin.php    #
##################

$i = 1;
$dizin_ac = opendir(“./abc”);
while ($dosya = readdir($dizin_ac))
{
  echo “Bu abc dizinindeki $i. eleman : $dosya&lt;br>”;
  $i++
}

?>
</screen>
                  </para><para>
                    Yukarıdaki PHP programı bulunduğumuz dizindeki “abc” dizinini
                    açıp, içeriğini sıra ile ekrana basmaktadır.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>ereg() ve eregi() işlevleri</term>
                <listitem>
                  <para>
                    <literal>ereg()</literal> ve <literal>eregi()</literal>
                    işlevleri bir metin içerisinde verilen bir kelimeyi arar.
                    <literal>eregi()</literal> işlevi <literal>ereg()</literal>
                    işlevinden farklı olarak arama sırasında büyük-küçük harf
                    ayrımı yapmaz.
                  </para><para>
                    Hazırladığınız bir web formunda kullanıcının doğru bir e-posta
                    adresi girip girmediğini kontrol etmek için aşağıdaki gibi bir
                    kod kullanabilirsiniz.
                  </para><para>
<screen>
&lt;?
################
#   ereg.php   #
################
if(ereg(“@”,$eposta) &amp;&amp; ereg(“.”,$eposta))
{
  echo “Kaydolduğunuz için teşekkürler!”;
}
  else
{
  echo “&lt;font color="#f80000">Lütfen e-posta adresinizi doğru girin!&lt;/font>”;
  require(“uye_kayit.html”);
}

?>
</screen>
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>ereg_replace() ve eregi_replace işlevleri</term>
                <listitem>
                  <para>
                    Bu işlevler de belirtilen metin içinde istenilen bir kelimeyi
                    bulup değiştirmek için kullanılır. Yine <literal>eregi_replace()</literal>
                    işlevinin <literal>ereg_replace()</literal> işlevinden farkı
                    büyük-küçük harf ayrımı yapmamasıdır.
                  </para><para>
<screen>
&lt;?
######################
#  ereg_replace.php  #
######################
ereg_replace(“fni18444@gantep.edu.tr”, ”yeni_adresim@sunucu.com”, $metin);
?>
</screen>
                  </para><para>
                    Diyelim ki 10-15 sayfalık bir yazı yazdım ve bu yazı
                    içerisinde e-posta adresimi sıkça kullandım. Yazımı
                    yazdıktan bir süre sonra e-posta adresim değişti.
                    İşte yukarıdaki kod ile önceden yazdığım yazı
                    içerisindeki eski adresimi yenisi ile değiştirebilirim.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>md5() işlevi</term>
                <listitem>
                  <para>
                    <literal>md5()</literal> şifreleme için kullanılan bir
                    işlevdir. İşleve parametre olarak verilen metnin uzunluğu
                    ne kadar olursa olsun işlev bu metni 32bit ile şifreler
                    ve geri dönüşümü yoktur. Yani <literal>md5</literal> ile
                    şifrelenmiş bir metni tekrar eski haline getirmek
                    olanaksızdır (en azından şimdilik ;)). Peki bu ne işimize
                    yarayacak? Karşılaştırma yaparken, mesela <literal>md5</literal>
                    ile şifrelenip veritabanına kaydedilmiş bir şifreyi kontrol
                    etmek için, kullanıcıdan gelen şifreyi de <literal>md5</literal>
                    ile şifreleyip karşılaştırma yapmanız yeterli olacaktır.
                    Md5 hakkında daha ayrıntılı bilgi için internette herhangi
                    bir arama motorundan “RFC1321” aratmanız yeterli olacaktır.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>unlink() işlevi</term>
                <listitem>
                  <para>
                    Bu işlev kendisine parametre olarak girilen dosyayı silmek
                    için kullanılır. Kullanımı <literal>unlink(“dosya_adı”)</literal>
                    şeklindedir.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>mkdir() ve rmdir() işlevleri</term>
                <listitem>
                  <para>
                    Bu iki işlev de dizin oluşturma ve silme için kullanılır.
                    <literal>mkdir()</literal> kendisine parametre olarak verilen
                    bir dizini oluşturur ve <literal>rmdir()</literal> ise
                    kendisine parametre olarak verilen dizini siler.
                  </para><para>
                    Tabii buraya kadar anlattığım dizin ve dosya işlemlerini
                    gerçekleştirebilmeniz için o dosya ve dizin üzerinde kullanım
                    hakkına sahip olmanız gerekmektedir. Aksi taktirde dosyaya
                    ulaşımda sorun olduğuna dair bir hata mesajı ile karşılaşırsınız.
                    İnternet'teki bir sunucudan istekte bulunan bir kullanıcı
                    sunucu sistem tarafında “diğer” kullanıcı grubuna dahil edilir.
                    Dosya erişim yetkileri bu özellik göz önünde bulundurularak
                    ayarlanmalıdır.
                  </para>
                </listitem>
              </varlistentry>
            </variablelist>
          </para>
        </sect2>
        <sect2>
          <title>PHP ile İşlevleri Yazmak</title>
          <para>
            PHP ile hazır olan işlevlerin yanı sıra, hazır olarak gelen
            işlevlerden yararlanarak kendi işlevlerimizi de kullanabiliriz.
            Bu iş normal bir programlama dilindeki işlev tanımlama
            işleminden pek farklı değildir. İşlev tanımlama işini bir
            örnek üzerinde anlatırsam daha iyi anlaşılacağını düşünüyorum.
          </para><para>
            Ben hazırladığım sitelerde konu başlıklarını ve kategorileri
            vermek için çoğunlukla ana sayfamda oluşturduğum küçük
            tabloları kullanırım. Bu tablolar benim başlıklarım için bir
            çerçeve görevi görür.
          </para><para>
<screen>
&lt;!-- Bu dosyayı fonk.php adı ile kaydedin -->
&lt;html>
&lt;head>
&lt;title>PHP ile işlev tanımlama&lt;/title>
&lt;/head>
&lt;body bgcolor="#ffffff" text="#000000" link="#000000" alink="#000000" vlink="#000000">
&lt;center>
&lt;?
 function tablo($baslik, $metin, $url)
 {
  echo "&lt;table border='0' cellpadding='1' bgcolor='#000000' width='600'>&lt;tr>&lt;td>
&lt;table border='0' cellpadding='0' cellspacing='0' bgcolor='#334455' width='600'>
&lt;tr>&lt;td>&lt;font color='#ffffff'>&lt;b>&lt;li>$baslik&lt;/b>&lt;/font>&lt;/td>&lt;/tr>
&lt;tr>&lt;td bgcolor='#eaeaea'>&nbsp;$metin&lt;br>&lt;a href='$url'>$url&lt;/a>&lt;/td>
&lt;/tr>&lt;/table>&lt;/td>&lt;/tr>&lt;/table>&lt;br>\n";
 }

tablo("Linux İşletim Sistemi","Linux, Linus Torvalds adında Finlandiyalı
bir öğrenci tarafından geliştirildi. Daha ayrıntılı bilgi
için...","http://www.belgeler.org/KiTAPLIK/archive-tlkg-lis.html");

tablo("PHP","Açık kaynak kodlu olarak dağıtılan PHP dinamik web sayfası tasarımı
konusunda bir ıır açtı! PHP konusunda her türlü yardımı bulabileceğiniz PHP
Manual gönüllüler tarafından birçok dile çevrildi.","http://www.php.org.tr");

?>

&lt;/body>
&lt;/html>
</screen>
          </para><para>
            Yukarıdaki PHP dosyası ile <literal>tablo</literal> adlı bir işlev
            tanımladım. Tanımladığım bu işleve her seferinde <literal>$baslik, $metin</literal>
            ve <literal>$url</literal> değişkenlerini gireceğimi belirttim.
            PHP yorumlayıcım <literal>tablo()</literal> işlevini yorumlarken daha
            önceden yazılmış <literal>function tablo () { .... }</literal>
            bölümünden yaralanır. Bu bölümde değişkenlerin adları yerine işlev adı
            ile daha sonradan verilen değerleri kullanır. Bu kullanım işi tanımlama
            sırasına göredir. Bu gibi işlevler sayesinde sayfanızda çok kullandığınız
            kalıpları sürekli yazmak zorunda kalmazsınız. Örneği kaydedip
            çalıştırırsanız daha iyi anlayacağınızı sanıyorum.
          </para><para>
            Buraya kadar PHP’ye bir giriş yaptım. Buradan sonra MySQL’e de bir
            giriş yapmayı ve daha sonra örneklerimi ve anlatımımı PHP+MySQL
            üzerinde devam ettirmeyi düşünüyorum.
          </para>
        </sect2>
      </sect1>
      <sect1 xml:id="html-php-mysql-giris_prg-mysql">
        <title>MySQL’e Giriş</title>
        <para>
          PHP, MySQL dışında birçok veritabanı yazılımı (PostgreSQL, MsSQL,
          Oracle, dBase...) ile birlikte sorunsuz çalışabilmesine rağmen en
          yüksek performans PHP+MySQL+Apache üçlüsünden elde edilmiştir
          (Bu belgeyi hazırladığım sırada Slackware Linux’un son sürümü olan
          8.0 sürümünde PHP ile MySQL desteği gelmektedir, 7.1 sürümünde MySQL
          yerine PostgreSQL bulunmaktaydı!). Zaten Internet üzerinde
          bulabileceğiniz hazır PHP betikleri ya da yardım belgelerinin çoğu
          PHP’yi MySQL ile birlikte ele almaktadır. Benim bilgimde sadece
          MySQL dahilinde olduğu için, ben de bu belgede PHP+MySQL ikilisini
          anlatacağım.
        </para>
        <sect2>
          <title>Veritabanı Nedir?</title>
          <para>
            Bir veritabanı adından da anlaşılacağı gibi bilgilerin depolandığı
            hiyerarşik bir yapıdır. Biz web üzerinde kullanıcı adı, şifresi,
            e-posta adresi gibi bilgileri bu veritabanlarında saklarız. Aynı
            bilgileri bir dosyaya yazıp gerektiğinde dosyayı açıp bilgileri
            okutmak da bir çözüm gibi görünse de bu işlem hem daha karmaşık
            ve zahmetli hem de daha yavaştır. Aslında az çok İngilizce bilen
            birisi için MySQL kullanmak  pek zor olmayacaktır. Ben denemelerimi
            Linux altında yaptığım için bu belgede de anlatım o doğrultuda
            olacaktır. Fakat veritabanına bağlandıktan sonra SQL komutları
            (evet MySQL değil SQL. MySQL ile kullanılan komutlar birçok
            veritabanı sorgulama dilindekilerle aynıdır) arasında bir fark
            yoktur. Sadece Linux işletim sistemi altında büyük-küçük harf ayrımı
            vardır. Denemelerinizi yaptığınız sunucu üzerinde kullanıcı adınızın
            <literal>kullanici</literal> ve parolanızın <literal>parola</literal>
            olduğunu varsayarak bölüme başlıyorum.
            Veritanına bir Linux terminalinden bağlanmak için
          </para><para>
<screen>
$ mysql –h localhost –u kullanici –p
</screen>
          </para><para>
            komut satırını kullanmanız gerekli. En sondaki <literal>-p</literal>
            parametresi bizim kullanıcımız için bir parola tanımlı olduğunu ve
            yukarıdaki komutu verdikten sonra bu parolayı girmemiz gerektiğini
            anlatır.
          </para><para>
            Eğer bir sorun ile karşılaşmadan veritabanına bağlanabildiyseniz
            karşınıza aşağıdaki gibi bir ekran gelecektir.
          </para><para>
            <screen>mysql></screen>
          </para><para>
            Bu ekran bizim SQL’e doğru bir şekilde bağlandığımızı gösterir.
            Bir veritabanı hiyerarşisi içinde barındırdığı veritabanlarından ve bu
            veritabalarının içlerindeki tablolardan oluşur. Linux altındaki MySQL
            kurulumlarında “test” ve “mysql” isimli veritabanları hazır olarak
            gelir. Bir veritabanı hiyerarşisinde her kullanıcının kendine ait bir
            veritabanı vardır ve işlemlerini bu veritabanı altında gerçekleştirir.
            Yani kendi veritabanı altında tablo oluşturabilir, silebilir, tabloya
            bilgi ekleyip bilgi çıkarabilir. Bunun dışında her kurulum ile gelen
            “test” veritabanı tüm kullanıcıların kullanımına açıktır, “mysql”
            veritabanında ise kullanıcılara ait bilgiler tutulur ve bu veritabanını
            sadece veritabanı yöneticisi kullanabilir. Benim işlemlerimi yapacağım
            hayali veritabınımın ismi “base” olacak.
          </para><para>
<screen>
$ mysql -h localhost -u kullanici -p
Enter Password:

mysql> show databases;

+----------+
| Database |
+----------+
| mysql    |
| test     |
+----------+
2 rows in set (0.00 sec)

mysql>
</screen>
          </para><para>
            Yukarıda sistemimizde mevcut veritabanlarını listesini
            <command>show databases;</command> komutu ile alıyoruz.
            MySQL’de her komuttan sonra mutlaka <literal>;</literal> karakteri
            kullanılmalıdır. Aşağıda yeni bir veritabanı oluşturuyor ve onu
            kullanmaya başlıyorum.
          </para><para>
<screen>
mysql> create database base;

mysql> show databases;

+----------+
| Database |
+----------+
| mysql    |
| test     |
| base     |
+----------+
3 rows in set (0.00 sec)

mysql> use base;

Database changed
mysql>
</screen>
          </para><para>
            Yukarıda <literal>base</literal> adlı bir veritabanı oluşturdum
            (<literal>create database base;</literal>) ve <literal>use base;</literal>
            komutu ile işlem yapacağım veritabanını belirledim. Burada dikkat
            edilmesi gereken husus bizim istediğimiz zaman bir veritabanı
            oluşturamayacağımızdır. Veritabanı hiyeraşisine kaydımız yapılırken
            bize kullanım hakkı verilen veritabanını oluşturabilir ve kullanabiliriz.
            Yani ben <literal>kullanici</literal> kullanıcısıyla
            <literal>herhangi</literal> adlı bir veritabanı oluşturamam.
          </para>
        </sect2>
        <sect2>
          <title>MySQL’de Tablolar</title>
          <para>
            Bilgilerimizi saklamak için veritabanlarını kullandığımızı daha önce
            belirtmiştim. Sakladığımız bilgileri daha kolay bir şekilde
            işleyebilmek için sınıflandırmamız gerekir. Bu sınıflandırma işlemi
            için tabloları kullanırız. Tablolar sütunlar ve satırlardan oluşur.
            Aşağıda veritabanında kayıtlı “kullanicilar” isimli bir tablo
            görünüyor (Tabloların nasıl oluşturulacağını ilerideki bölümlerde
            aklayacağım).
          </para><para>
<screen>
mysql> select * from kullanicilar;

+----+--------------+---------+------------------------+-------+
| no | Ad           | Soyad   |  eposta                | bolum |
+----+--------------+---------+------------------------+-------+
|  1 | Fehmi Noyan  | ISI     | fni18444@gantep.edu.tr | eee   |
|  2 | Mehmet       | Korkmaz | kormkaz@linux.org.tr   | pe    |
|  3 | Adem         | Sarnici | a_sarnici@yahoo.com    | pe    |
|  4 | Seckin Fatih | Solgun  | sf_solgun@freebsd.org  | me    |
+----+--------------+---------+------------------------+-------+
4 rows in set (0.05 sec)

mysql>
</screen>
          </para><para>
            Yukarıdaki tabloda dört sütun ve dört satır var. Tablodaki verileri
            ekrana basmak için <literal>select * from kullanicilar;</literal>
            komutunu kullandım. Aynı komutu <literal>select Ad from kullanicilar;</literal>
            şeklinde verince
          </para><para>
<screen>
mysql> select Ad from kullanicilar;

+--------------+
| Ad           |
+--------------+
| Fehmi Noyan  |
| Mehmet       |
| Adem         |
| Seckin Fatih |
+--------------+
4 rows in set (0.03 sec)

mysql>
</screen>
          </para><para>
            Yukarıdaki gibi bir tablo elde ederiz. MySQL ile MS-DOS ve UNIX
            işletim sistemlerinde olduğu gibi joker karakterler kullanılabilir.
            İlk komut satırında kullandığım “*” karakteri de bu joker karakterlere
            bir örnek. İlk tablodaki no, Ad, Soyad ve eposta adlı bölümler
            tablonun sütunlarının isimlerini gösterir. Komut satırında kullandığım
            “*” karakteri bu sütunların hepsinin görüntülenmesini istediğimi
            belirtir. Aslında daha önceden komut satırından işlem yönetenler
            için fazla yabancı bir ifade olmasa da ilk kez karşılaşacaklar için
            biraz karışıktır fakat zamanla kavranacaktır.  Kısacası veritabanından
            bilgi almak için
          </para><para>
<literallayout>
  <command>select</command> <emphasis>istenen_bilgi</emphasis> <command>from</command> <emphasis>tablo_adı</emphasis><command>;</command>
</literallayout>
          </para><para>
            gibi bir kalıp kullanılır.
            Veritabanından alınan sorgu belli koşulları gerektirebilir. Mesela
            yukarıdaki <literal>kullanicilar</literal> adlı tabloda ismi
            <literal>Mehmet</literal> olan kullanıcıları ekrana görüntülemek
            istersem
          </para><para>
<screen>
mysql> select Ad from kullanicilar where Ad=’Mehmet’;
</screen>
          </para><para>
            gibi bir komut kullanmam gerekirdi.
          </para><para>
            Örnekleri çoğaltmak mümkün. Yapılan sorgu isteğe ve gereksinime göre
            değişik koşullar dahilinde gerçekleştirilebilir. <literal>where</literal>
            kalıbı ile olmasını istediğimiz bir özelliği belirtiyoruz. Peki
            elimizdeki verilerde olmasını istemediğimiz bir bilgiyi nasıl
            belirteceğiz? Bu iş için <literal>not</literal> kalıbı kullanılır.
          </para><para>
<screen>
mysql> select eposta from kullanicilar where not bolum=’pe’;
</screen>
          </para><para>
            Yukarıdaki sorgu kalıbı <literal>kullanicilar</literal> adlı tablodan
            <literal>bolum</literal> bilgisi <literal>pe</literal> olmayan tüm
            kullanıcıların e-posta adreslerini ekrana basacaktır.
            <literal>not</literal> kalıbı ile <literal>or</literal> kalıbı da
            kullanılır. <literal>or</literal> kalıbı çift istekli durumlarda
            <literal>not</literal> işleçinin tam tersi işlev görür. Yani
            <literal>kullanicilar</literal> adlı tablodan <literal>Ad</literal>
            bilgisi <literal>Mehmet</literal> olan ve bölümü <literal>eee</literal>
            olmayan kullanıcıların listesi için kullanılması gereken SQL komutu
            aşağıdaki gibidir.
          </para><para>
<screen>
mysql> select Ad from kullanicilar where not bolum=’pe’ or Ad=’Mehmet’;
</screen>
          </para><para>
            Buraya kadar hep tablolar üzerinde işlemlerden bahsettim. Sıra
            üzerinde işlem yaptığımız bu tabloları nasıl oluşturduğumuza geldi.
          </para><para>
            SQL’de tablo oluşturma işi aynen veritabanı oluşturma gibidir. Sadece
            tablo oluştururken tabloda tanımlı alanların özelliklerinin belirtilmesi
            gerekir. Yukarıda tüm örneklerimde kullandığım <literal>kullanicilar</literal>
            adlı tabloyu oluşturmak için kullanılacak SQL satırı aşağıdaki gibidir.
          </para><para>
<screen>
mysql> create table kullanicilar
->(no int auto_increment, Ad varchar(13), Soyad varchar(12),
-> eposta varchar(25), bolum varchar(5), primary key(no));

mysql>
</screen>
          </para><para>
            Tabloda kullanılan sütunların veri tiplerini ve en fazla kaç baytlık
            veri saklayabileceklerini belirttim. <literal>int</literal> terimi
            kullanılacak verinin sayısal bir değer olacağını simgeler, diğer
            sütunlar için kullandığım <literal>varchar</literal> terimi ise
            girilecek dizinin karakter kümesi olduğunu ve parantez içindeki
            sayısal değer ise bu kümenin maksimum alabileceği karakter sayısını
            belirler. Eğer girilen veri belirtilen maksimum değerden fazla ise
            belirtilen değer kadar karakter işleme alınır. Bunun için tablo
            oluştururken girilecek verilerin uzunluğunu göz önünde bulundurmanızda
            fayda vardır. Bunların dışında <literal>-></literal> karakteri de
            dikkatinizi çekmiştir. SQL’de bir komutu <literal>;</literal> ile
            sonlandırmadığınız sürece o komut ENTER tuşun bassanız bile bitmiş
            sayılmaz ve sizden bitirici karakteri (“<literal>;</literal>” ya da
            <literal>\g</literal>) girmeniz beklenir. Komutu üç satır halinde
            yazmamın sebebi sadece uzun ve karmaşık bir satır yazmaktan kaçınmak
            içindi. Aynı komutu tek satır yazmanız halinde de sonuçta herhangi
            bir değişiklik olmayacaktır. <literal>no</literal> sütunu için
            kullandığım <literal>auto_increment</literal> ve en sonda kullandığım
            <literal>primary key(no)</literal> kalıpları tabloda <literal>no</literal>
            ile belirtilen kısmın otomatik olarak her veri girdiğinde bir
            arttırılmasını sağlar. Bu özelliğin kullanılabilmesi için kullanılacak
            sütuna <literal>primary key</literal> özelliğinin atanması gerekir.
          </para><para>
            Diyelim ki tablomuzu oluşturduk ve web üzerinden bilgilerimizi kaydediyoruz.
            Bir gün, tablomuzu oluştururken kullandığımız sütun özelliklerini görmek
            istersek ne yapacağız? Bunun için <command>describe</command> komutu
            kullanılır. Komutun kullanımı
          </para><para>
<literallayout>
  <command>describe</command> <emphasis>tablo_adi</emphasis><command>;</command>
</literallayout>
          </para><para>
            şeklindedir.
          </para><para>
            Şimdi sıra boş olarak oluşturduğumuz <literal>kullanicilar</literal> adlı
            tabloya bilgi girişinde. Bilgi girişi için <command>insert</command>
            komutu kullanılır.
          </para><para>
<screen>
mysql> insert into kullanicilar
-> values (“”,”Fehmi Noyan”,”ISI”,
-> “fni18444@gantep.edu.tr”,”eee”);
</screen>
          </para><para>
            Yukarıdaki komut kümesi <literal>kullanicilar</literal> adlı tabloya
            belirtilen bilgileri sırası ile girer. Bilgi girişi için
          </para><para>
<literallayout>
  <command>insert into</command> <emphasis>tablo_adi</emphasis> <command>values (</command><emphasis>"alan1_değeri", "alan2_değeri", ..., "alanN_değeri"</emphasis><command>);</command>
</literallayout>
          </para><para>
            kalıbı kullanılır. İlk sütuna gelecek bolume sadece <literal>“”</literal>
            karakterlerini bırakmam bu bölümün <literal>auto_increment</literal>
            özelliğinden dolayı SQL tarafından otomatik olarak doldurulacak
            olmasındandır. Girilen her değer tırnak içinde yazılır ve birbirlerinden
            virgül ile ayrılır.
          </para><para>
            Bazen bir tablodaki verileri herhangi bir sebepten dolayı yenilememiz
            gerekebilir. Mesela yukarıdaki tabloda <literal>Fehmi Noyan</literal>
            adlı kullanıcının e-posta adresi değişmişse ve biz yeni adresi
            tablomuzda eski adresle değiştirmek istiyorsak kullanacağımız komut
            <command>update</command> komutudur.
          </para><para>
<screen>
mysql> update kullanicilar set eposta=’yeni_adresim@adres.com’
    -> where no=’1’;
</screen>
          </para><para>
            Yukarıdaki SQL satırı <literal>kullanicilar</literal> adlı tablodan
            <literal>no</literal> bilgisi 1 olan kullanıcının <literal>eposta</literal>
            bilgisini <literal>yeni_adresim@adres.com</literal> olarak değiştirilmesi
            için kullanılır. Komutun kullanımında
          </para><para>
<literallayout>
  <command>update</command> <emphasis>tablo_adı</emphasis> <command>set</command> <emphasis>sütun_adı=’yeni değer’</emphasis> <command>where</command> <emphasis>koşul</emphasis><command>;</command>
</literallayout>
          </para><para>
            kalıbı uygulanır. <literal>where</literal> koşulundan sonra herhangi
            bir koşul satırı kullanılabilir (ben <literal>no</literal> bilgisini
            kullandım).
          </para><para>
            Girilen bilgileri silmek için <command>delete</command> komutu
            kullanılır.
          </para><para>
<screen>
mysql> delete from kullanicilar where bolum=’eee’;
</screen>
          </para><para>
            Yukarıdaki SQL komutu <literal>kullanicilar</literal> tablosundaki
            <literal>bolum</literal> bilgisi <literal>eee</literal> olan tüm
            kullanıcılar ile ilgili satırları silecektir. Komutun kullanımı
          </para><para>
<literallayout>
  <command>delete from</command> <emphasis>tablo_adı</emphasis> <command>where</command> <emphasis>koşul</emphasis><command>;</command>
</literallayout>
          </para><para>
            şeklindedir.
          </para><para>
            Son olarak da, MySQL’den çıkış için <command>quit</command> komutu
            kullanılır.
          </para><para>
            MySQL hakkında yazacaklarım bu kadar. Tabi benim bu belgeye dahil
            etmediğim daha birçok komut ve kullanım mevcut. Fakat ben bir
            sonraki bölümde PHP ile tablo işlemlerinde genelde bu komutları
            (bilgi ekleme, bilgi silme, bilgi alma ve bilgi yenileme)
            kullanacağım için sadece gerekli komutları verdim. Tabii yapacağınız
            çalışmanın amacına göre kullanacağınız veritabanlarının niteliği
            farklı olacaktır ama buradaki bilgilerin, en azından, MySQL hakkında
            hiç bilgisi olmayan bir kullanıcı için yaralı olabileceğini düşünüyorum.
          </para>
        </sect2>
      </sect1>
      <sect1 xml:id="html-php-mysql-giris_prg-phpmysql">
        <title>PHP ile MySQL kullanmak</title>
        <para>
          Buraya kadar PHP ve MySQL’e giriş yaptım. Buradan sonra artık web
          üzerinde akrobasi yapmaya başlayabiliriz ;).
        </para><para>
          Aslında veritabanlarının çok çeşitli kullanımları olsa da ben genelde
          çerez yollama, sayaç, ziyaretçi defteri, parolalı giriş ve kullanıcı
          kaydı gibi konular üzerinde duracağım. Buradan sonra artık yeni işlev
          kullansam bile çok nadir olarak kullandığım yeni işlevin kullanım
          şeklini açıklayacağım (Bu belgeyi buraya kadar okumuş ve kendi çabaları
          ile bir şeyler yapmış birisi için buna ihtiyaç olacağını da sanmıyorum
          zaten ;)). Bu bölüm genelde yazacağım örnekler ve bu örneklerin
          açıklamaları halinde olacaktır.
        </para><para>
          İlk önce MySQL bölümünde kullandığım “kullanicilar” adlı tablodan PHP
          ile veri alma, veri silme ve veri yükleme işlemlerini gerçekleştirelim.
          Aşağıda “kullanicilar” tablosunu bir hatırlatma olsun diye tekrar verdim.
        </para><para>
<literallayout>
+----+--------------+---------+------------------------+-------+
| no | Ad           | Soyad   |  eposta                | bolum |
+----+--------------+---------+------------------------+-------+
|  1 | Fehmi Noyan  | ISI     | fni18444@gantep.edu.tr | eee   |
|  2 | Mehmet       | Korkmaz | kormkaz@linux.org.tr   | pe    |
|  3 | Adem         | Sarnici | a_sarnici@yahoo.com    | pe    |
|  4 | Seckin Fatih | Solgun  | sf_solgun@freebsd.org  | me    |
+----+--------------+---------+------------------------+-------+
</literallayout>
        </para><para>
          Önce PHP ile veritabanına bağlanma ve veri alma işlemlerini ele alalım.
          PHP ile MySQL’e bağlanmak için <command>mysql_connect()</command> işlevi
          kullanılır.
        </para><para>
<screen>
&lt;?
#################
#   mysql.php   #
#################

/* mysql’e bağlanma islemi */
@mysql_connect(“localhost”, ”kullanici”, ”parola”)
  or die (“Veritabanına bağlanırken bir hata oluştu!”);

/* mysql’de kendi veritabanimizi secim islemi */
@mysql_select_db(“base”)
  or die(“Veritanında bir hata oluştu!”);

$sira = 0;
while ($sira &lt; 4)
{
  /* mysql’e sorgu gönderiliyor ve bu sorgudan gelen degerler bir degiskene atanıyor.
  $sorgu = mysql_query(“select * from kullanicilar”);
  $ad = mysql_result($sorgu, $sira, ’Ad’);
  echo “$ad &lt;br>”;
  $sira++;
}
?>
</screen>
        </para><para>
          Yukarıdaki PHP dosyası bizim kendi sunucumuz üzerindeki MySQL sunucusuna
          <literal>kullanici</literal> kullanıcı adı ve <literal>parola</literal>
          parolası ile bağlanıyor. Komutların başındaki <literal>@</literal>
          işareti komutun işletilmesinde bir hata oluşursa ekrana hata mesajının
          basılmaması içindir. Onun yerine kendi belirlediğimiz hata mesajını
          <literal>or die</literal> kalıbı ile verebiliyoruz. Bağlanma işleminden
          sonra <command>mysql_select_db</command> (mysql’deki <literal>use base</literal> gibi)
          işlevi ile kendi veritabanımıza geçiyoruz.
        </para><para>
          Buradan sonra <literal>sira</literal> bir adlı bir değişkene 0(sıfır)
          değerini atadım. Bunun amacı MySQL’de işlem yapılan satırların sıfırdan
          itibaren bir satır sayısı almalarıdır. (Ben örneğimde <literal>while</literal>
          döngüsünde koşulu <literal>$sira &lt; 4</literal> şeklinde tanımladım ama
          normalde bir tabloda kaç satır olduğunu bilmeniz mümkün olmayabilir. Ben
          satır sayısını bildiğim için böyle bir yol seçtim.)
        </para><para>
          Döngü içerisinde  <literal>$sorgu</literal> adlı değişkene <command>mysql_query()</command>
          işlevi ile SQL’den alınan bilgiler atanıyor. Daha sonra <command>mysql_result()</command>
          işlevi ile bu bilgilerden istek doğrultusundan ayıklama yapılıyor.
          <command>mysql_result()</command> işlevinin işleyiş tarzını bir düzleme
          benzetirsek:
        </para><para>
          <orderedlist>
            <listitem>
              <literal>$sorgu</literal> adındaki bilgilerin olduğu düzleme git.
            </listitem>
            <listitem>
              <literal>$sira</literal> ile belirtilen satırdan
            </listitem>
            <listitem>
              <literal>Ad</literal> sütunundaki bilgiyi al.
            </listitem>
          </orderedlist>
        </para><para>
          şeklinde bir yorum yapılabilir. <literal>mysql_query()</literal> sorgusu
          ile alnan sonuçlar <literal>mysql_result()</literal> ile ayıklanır.
          <literal>$ad</literal> değişkenine atanan değerler alt alta ekrana
          basılıyor. Daha sonra <literal>$sira</literal> değişkeni bir arttırılıyor
          (aksi taktirde sonsuz bir döngü içine girilir!) ve döngüden çıkılıyor.
        </para><para>
          Şimdi de kafamızda hayali bir senaryo oluşturup bu senaryoya göre bir
          HTML dosyası ve bu dosyadan veri alan bir PHP dosyası yapalım.
          Kullanıcı kaydı tutan bir web formu ve bu formdan bilgi alacak PHP
          dosyasını oluşturalım. Ama daha önce bu bilgilerin kaydedileceği SQL
          tablosunu oluşturalım.
        </para><para>
<screen>
$ mysql –h localhost –u kullanici –p
Enter Password:

mysql> use base;

Database changed
mysql> create table kayit
    -> (no int auto_increment, kullaniciadi varchar(15),
    -> sifre(25), eposta(25), primary key(no));

mysql> quit
</screen>
        </para><para>
          Yukarıda komut satırından mysql’e bağlanıp <literal>kayit</literal>
          isimli bir tablo oluşturdum. Şimdi sıra HTML form dosyamızda.
        </para><para>
<screen>
&lt;!-- kayit.html -->
&lt;html>
&lt;body bgcolor="#FFFFFF" text="#000000">
&lt;form action="kayit.php" method="post">
&lt;b>Kullanıcı Adınız:&lt;/b>&lt;input type="text" name="u_name" size="20">&lt;br>
&lt;b>Parolanız:&lt;/b>&lt;input type="password" name="pass" size="20">&lt;br>
&lt;b>e-posta adresiniz:&lt;/b>&lt;input type="text" name="mail" size="20">&lt;br>
&lt;input type="submit" value="  Kayıt  ">
&lt;/form>
&lt;/body>
&lt;/html>
</screen>
        </para><para>
<screen>
&lt;?
/*  kayit.php */

@mysql_connect("localhost", "kullanici", "parola")
    or die("Veritabani ile baglanti kurulamadi!");
@mysql_select_db("base")
    or die("Veritabaninda bir hata olustu!");

@mysql_query("insert into kayit values(‘’,’$u_name’,’$pass’,’$mail’)");
echo "&lt;center>&lt;b>Bilgileriniz varitabanina kaydedildi.&lt;/b>&lt;/center>";
require("./kayit.html");
?>
</screen>
        </para><para>
          Yukarıdaki PHP dosyası form ile gelen bilgileri veritabanındaki
          <literal>kayit</literal> adlı tabloya kaydediyor.
        </para><para>
          Kayıt işleminden sonra ekrana işlemin başarı ile gerçekleştirildiğine
          dair bir mesaj geliyor ve formu içeren HTML dosyası tekrar ekrana
          basılıyor.
        </para><para>
          MySQL’de tablo yenileme (update) ve veri silme (delete) komutları da
          <literal>mysql_query()</literal> işlevi ile kullanılır. Yani normal
          olarak SQL sorgusu gönderiliyor.
        </para><para>
          Burada sonra artık örnek uygulamalara geçiyorum.
        </para><para>
          Yeni bölüme başlamadan önce size <literal>phpinfo()</literal>
          işlevinden biraz söz etmek istiyorum. Yapmanız gereken tek şey bir PHP
          dosyası için <literal>&lt;? phpinfo(); ?></literal> yazıp kaydetmek.
          Üzerinde çalıştığınız sunucunun birçok özelliğini ve PHP ile birlikte
          kullanabileceğiniz birçok faydalı değişkeni bu işlev altında bulabilirsiniz.
        </para>
        <sect2>
          <title>Ziyaretçi Defteri Örneği</title>
          <para>
            Çoğu web sitesinde gördüğümüz ziyaretçi defterlerini PHP yardımı ile
            kendi sitenizde de kullanabilirsiniz. Gerçi internet üzerinde bu işi
            yapan hazır betikler bulmak pek zor değil fakat bu basit uygulamaları
            daha ileri teknikler için bir ön adım olarak kullanmanız açısından
            faydalı olacaktır.
          </para><para>
            Bu iş için önce bir HTML dosyası ile kullanıcıdan bilgi alınmalı. Daha
            sonra bu bilgi bir PHP dosyası ile bir metin dosyasına yazılarak isteyen
            kullanıcılara görüntülenmeli.
          </para><para>
<screen>
&lt;!-- Bu dosya defter.html adı ile kaydedilecek -->
&lt;html>
&lt;head>
&lt;title>Ziyaretçi Defteri&lt;/title>
&lt;/head>
&lt;body bgcolor="#ffffff" text="#000000">
&lt;center>
&lt;br>
&lt;table bgcolor="#000000" border="0" cellpadding="1" cellspacing="0" width="450">
  &lt;tr>&lt;td>
    &lt;table border="0" cellpadding="0" cellspacing="0" bgcolor="#FFFFFF" width="450">
      &lt;tr>&lt;td bgcolor="#006486">
        &lt;b>&lt;center>Defteri Doldurun&lt;/b>
      &lt;/td>&lt;/tr>
      &lt;td>
        &lt;form action="defter.php" method="post">&lt;br>
          &nbsp;&lt;b>Kimden :&lt;/b>&lt;input type="text" name="kimden" size=30>&lt;br>&lt;br>
          &lt;center>&lt;textarea rows="15" cols="50" name="metin">&lt;/textarea>
      &lt;/td>&lt;/tr>
      &lt;tr>&lt;td>
        &lt;center>&lt;br>
        &lt;input type="submit" value="  Deftere ekle  ">&nbsp;
        &lt;input type="reset" value="  Yazdıklarımı sil  ">&lt;br>&lt;br>
      &lt;/td>&lt;/tr>
    &lt;/table>
  &lt;/td>&lt;/tr>
&lt;/table>
&lt;/body>
&lt;/html>
</screen>
          </para><para>
<screen>
&lt;?
/* Bu dosya defter.php adi ile kaydedilecek */

if ($dosya_ac = (fopen(“./defter.txt”,”a”)))
{
  $tarih = date("d.m.Y");
  $yeni_metin = "&lt;br>&lt;table border='0' cellpadding='0' cellspacing='0' bgcolor='#eaeaea' width='600'>
  &lt;tr>&lt;td>&lt;b>$kimden&lt;/b> tarafından &lt;b>$tarih&lt;/b> tarihinde yazılmış.&lt;br>&lt;br>&lt;/td>&lt;/tr>\n
  &lt;tr>&lt;td>$metin&lt;/td>&lt;/tr>&lt;/table>&lt;br>”;
  fwrite($dosya_ac, $yeni_metin);
  fclose($dosya_ac);
  echo “Sayın $kimden defterimizi doldurduğunuz için teşekkürler.&lt;br>”;
  require(“./defter.txt”);
}
 else
{
 echo “&lt;center>&lt;br>&lt;b>Dosya açmada bir hata oluştu!&lt;/b>&lt;/center>”;
}
?>
</screen>
          </para><para>
            Yukarıdaki iki dosyayı yazdıktan sonra belirtilen isimler ile kaydedin.
            Tabii bu dosyalar basitten hazırlanmış haldeler. Görünümü güzelleştirmek
            ve geliştirmek size kalmış.
          </para><para>
            Sanırım ilk HTML dosyasında ne yaptığımı anlatmaya gerek yok. Bir form ile
            <literal>kimden</literal> ve <literal>metin</literal> adlı iki tane
            değişkeni belirtilen PHP dosyasına <literal>post</literal> yöntemi ile
            yolluyorum. Belki PHP dosyasında biraz karışıklık yaşamışsınızdır. Burada
            yabancı olduğunuz sadece <literal>date()</literal> işlevi var. PHP’de
            tarih almak için kullanılan <literal>date()</literal> işlevi, istenen
            bilgi türü küçük harf olursa (benim dosyamdaki <literal>d</literal> ve
            <literal>m</literal> gibi ) bilgi rakamla, büyük harf olursa (benim
            dosyamdaki <literal>Y</literal> gibi) bilgi tam olarak yazılır (tabi ki
            İngilizce).
          </para><para>
            Ziyaretçiden gelen bilgiler <literal>defter.txt</literal> adlı bir
            dosyada tutuluyor (dosyaya herkes için yazma yetkisi verilmelidir!)
            ve benim PHP koşulumun sonunda bu dosya ekrana yazdırılıyor
            (<literal>require</literal> ile). <literal>$metin</literal> değişkenini
            bir tablo içinde yazmamın tek sebebi ziyaretçiye görünecek dosyanın daha
            hoş olması içindir. <literal>require()</literal> işlevi ile ekrana
            yazdrdığımız dosya bir txt dosyası olsa bile içindeki HTML kodları
            istemci tarafından yorumlanacaktır.  Eğer sayfanızdan ayrı bir bağ verip
            önceden yazılanların görüntülenmesini istiyorsanız, o zaman bir metin
            değil de HTML dosyası kullanmanız gerekecektir.
          </para>
        </sect2>
        <sect2>
          <title>Sayaç Örneği</title>
          <para>
            Sayaç yapmanın birçok yolu vardır. Ben en basitinden bir uyguluma olarak,
            dosyalara değer yazıp bu değerler üzerinde işlem yapan bir sayaç uygulaması
            örneği verdim.
          </para><para>
<screen>
&lt;?
/* Bu dosya sayac.php adi ile kaydedilecek */

# $REMOTE_ADDR degiskeni sunucu hafizasinda tutulan gecici degiskenlerdendir.
$r_ip = $REMOTE_ADDR;

$ip_dosya_ac = fopen(“./ip.txt”, ”r”);
$dosyadaki_ip = fgets($ip_dosya_ac,1024);
if ($r_ip != $dosyadaki_ip)
{
  $sayac_dosyasi_ac = fopen(“./sayac.txt”, ”r”);
  $eski_deger = fgets($sayac_dosyasi_ac,1024);
  fclose($sayac_dosyasi_ac);

  $sayac_dosyasi_yaz = fopen(“./sayac.txt”,”w”);
  $yeni_deger = ++$eski_deger;
  fwrite($sayac_dosyasi_yaz, $yeni_deger);
  fclose($sayac_dosyasi_yaz);

  $ip_dosyasi_ac = fopen(“./ip.txt”,”w”);
  fwrite($ip_dosyasi_ac, $r_ip);
  fclose($ip_dosyasi_ac);

  echo “Sitemiz bugüne kadar &lt;b>$yeni_deger&lt;/b> kere ziyaret edilmiştir.”;
} else {
  $sayac_dosyasi_ac = fopen(“./sayac.txt”, ”r”);
  $eski_deger = fgets($sayac_dosyasi_ac,1024);
  fclose($sayac_dosyasi_ac);
  echo “Sitemiz bugüne kadar &lt;b>$eski_deger&lt;/b> kere ziyaret edilmiştir.”;
}
?>
</screen>
          </para><para>
            Yukarıdaki dosyayı oluşturduktan sonra aynı dizine <literal>sayac.txt</literal>
            ve <literal>ip.txt</literal> diye iki dosya oluşturun. Yalnız
            <literal>sayac.txt</literal> dosyasının içine başlangıç değeri olarak
            0(sıfır) yazmalısınız.
          </para><para>
            Yukarıdaki PHP programı önce <literal>ip.txt</literal> dosyasını açıp
            içindeki IP numarası ile ziyaretçinin IP numarasını karşılaştırıyor.
            Eğer iki numara aynı değilse sayaç dosyası açılıyor ve dosyada eski
            ziyaretçi sayısı (<literal>$eski_deger</literal>) okunuyor. Daha sonra
            bu okunan eski değer bir arttırılıp yani bir değişkene
            (<literal>$yeni_değer</literal>) atanıyor. Daha sonra IP değerinin
            tutulduğu dosya açılıp ziyaretçinin IP numarası bu dosyaya yazılıyor.
            En son olarak da ziyaretçiye sitenin bugüne kadar kaç defa ziyaret
            edildiğini gösteren bir mesaj ekrana yazılıyor.
          </para>
        </sect2>
        <sect2>
          <title>Çerez Örneği</title>
          <para>
            Çerezler HTTP ile kullanıcının bilgisayarına gönderdiğimiz bilgi
            paketleridir. Bu bilgiler düz yazı dosyası halinde kullanıcıya
            ulaşır ve kullanılan istemcinin tipine göre herhangi bir dizinde
            belirlenen süre kadar saklı tutulur. Çerezlere gönderen bilgisayar
            dışında başka bir bilgisayar tarafından ulaşılamaz. Windows sistemlerde
            MS-Internet Explorer, sunucu tarafında yollanan çerezleri
            <literal>C:\WINDOWS\Cookies</literal> dizini altında saklar. Linux altında,
            kullanılan istemci tarafından kullanıcının kendi ev dizininde oluşturulun
            gizli bir dizinde saklanır.
          </para><para>
            Örneğimde bir web sitesine parola ile giriş yapmış bir kullanıcının
            bilgisayarına yollanan çerezin kullanımı var. Tabii bu örnek için
            kullandığım veritabanı bilgilerinin varolduğunu varsayıyorum.
          </para><para>
<screen>
&lt;!-- Bu dosya index.html adı ile kaydedilecek -->
&lt;html>
&lt;head>
&lt;title>Şifrenizi girin&lt;/title>
&lt;/head>
&lt;body bgcolor="#ffffff" text="#000000">
&lt;br>&lt;br>
&lt;center>
&lt;form action="login.php" method="post">
  &lt;b>Kullanıcı adınız&lt;/b>&lt;input type="text" name="uid" size="20">&lt;br>
  &lt;b>Parolanız&lt;/b>&lt;input type="password" name="passwd" size="20">&lt;br>&lt;br>
  &lt;input type="submit" value="  Giriş  ">
&lt;/form>
&lt;/body>
&lt;/html>
</screen>
</para><para>
<screen>
&lt;?
/* bu dosya login.php adi ile kaydedilecek */

if (isset($uid) &amp;&amp; isset($passwd)) {
  # Veritabanina baglaniliyor
  @mysql_connect(“localhost”, ”kullanici”, ”parola”)
      or die(“Veritabani ile baglanti kurulamadi!”);
  @mysql_select_db(“base”)
      or die(“Veritabaninda bir hata olustu!”);

  $sorgu = mysql_query(“select  * from kayit”);
  $db_passwd = mysql_result($sorgu, $uid, ’parola’);
  if ($db_passwd == $passwd) {
    setcookie(“identify”,”OK”, time() + 3600);
    echo “Cerez yollandi.”;
  } else {
    echo “&lt;center>&lt;b>Kullanici adi ve sifrenizi kontrol edin!&lt;/b>&lt;/center>”;
    require(“./index.html”);
  }
} else {
  echo “&lt;center>&lt;b>Bir kullanici adi ve sifre girmelisiniz!&lt;/b>&lt;/center>”;
  require(“./index.html”);
}
?>
</screen>
          </para><para>
            Bu PHP dosyası eğer formdan <literal>$passwd</literal> ve
            <literal>$uid</literal> değişkenleri gelirse <literal>if</literal>
            döngüsüne giriyor. Döngü içerisinde MySQL’e bağlanılıp
            <literal>kayit</literal> adlı tablodan kullanıcı adı
            <literal>$uid</literal> olan satırdaki parola alınıp bir değişkene
            (<literal>$db_passwd</literal>) atanıyor. Eğer iki şifre aynı ise
            <literal>setcookie()</literal> işlevi ile kullanıcıya çerez yollanıyor.
            Yollanan çerezin adı <literal>identify</literal> ve bu çerezin değeri
            <literal>OK</literal>. Karşı tarafın bilgisayarında kalma süresi ise
            1 saat (3600 saniye). Çerez yollandıktan sonra ekrana “Cerez yollandi.”
            diye bir mesaj yazılıyor.
          </para><para>
            Çerez ile yollanan bir değişkenin değerini <literal>$deger</literal>
            adlı bir değişkene atmak için
          </para><para>
<literallayout>
   $deger = $HTTP_COOKIE_VARS["<emphasis>cerez_adi</emphasis>"];
</literallayout>
          </para><para>
            satırı kullanılır. Ancak çerezleri kullanırken dikkat etmeniz gereken
            önemli bir nokta var! Çerezi yolladığınız PHP dosyası ile aynı
            çerezin değerini çağıramıyorsunuz. Bu işlemi başka bir dosya üzerinde
            yapmak zorundasınız.
          </para>
        </sect2>
        <sect2 xml:id="html-php-mysql-giris_renkler">
          <title>Renk Tablosu Örneği</title>
          <para>
            Bu örneğimde HTML ile kullanabileceğiniz renklerin onaltılık tabandaki
            karşılıklarını veren bir PHP betiği var. Betik 512 tane rengin onaltılık
            kod karşılığını vermektedir. Aynı betik üzerinde sadece bir küçük
            değişiklik yaparak tam olarak 4096 tane rengin onaltılık karşılığını
            almak mümkündür. Bunu için, kodun başında yorum işareti ile verilen
            <literal>$d</literal> dizisini (16 elemanlı) yorum olmaktan çıkarıp
            normal (8 elemanlı) olan diziyi yorum satırı haline getirmek yeterlidir.
          </para><para>
            Fakat 4096 renk arasından kullanacağınız rengi seçmek gerçekten çok
            güçtür ve renk tonlamalarındaki geçişler çok yumuşak olduğu için çoğu
            renk birbirinin aynı gibi görünecektir.
          </para><para>
<screen>
&lt;!-- Bu dosyayı renk.php adı ile kaydedin -->
&lt;html>&lt;head>&lt;title>HTML Renk Kodlar&#x131;&lt;/title>&lt;/head>
&lt;body bgcolor="#e8e8e8" text="#000000">
&lt;center>
&lt;h1>HTML Renk Kodlar&#x131;&lt;/h1>
&lt;table border="0" width="540" cellpadding="0" cellspacing="2">

&lt;?
//$d = array("0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f");
$d = array("0","2","4","6","8","a","c","e");
$d_c = count($d);
// Kırmızı
$r_i = 0;
while($r_i &lt; $d_c) {
  $r = $d[$r_i] . $d[$r_i];
  // Yeşil
  $g_i = 0;
  while($g_i &lt; $d_c) {
    $g = $d[$g_i] . $d[$g_i];
    // Mavi
    $b_i = 0;
    echo "&lt;tr>";
    while($b_i &lt; $d_c) {
      $b = $d[$b_i] . $d[$b_i];

      // HTML Kodu ile tablonun satirlari olusturuluyor
      $renk = "#" . $r . $g . $b;
      echo "\n&lt;td style='background:$renk; color:white'>&lt;b>$renk&lt;/b>&lt;/td>";
      $b_i++;
    }
    echo "\n&lt;/tr>";
    $g_i++;
  }
  $r_i++;
}
?>
&lt;/table>&lt;/center>&lt;/body>&lt;/html>
</screen>
          </para>
        </sect2>
      </sect1>
    </chapter>
  </part>
  <appendix xml:id="html-php-mysql-giris_ek1">
    <title>Faydalı Kaynaklar</title>
    <para>
      Bu bölüm altında HTML, MySQL ve PHP konusunda elinizin altında bulunmasının
      faydalı olacağını düşündüğüm adresler var.
    </para><para>
      <variablelist>
        <varlistentry>
          <term>
            <link xlink:href="http://www.w3.org/"/>
          </term>
          <listitem>
            <para>
              Web tasarımı konusunda bilgi edinebileceğiniz güzel bir site.
              <link xlink:href="http://www.w3.org/TR/1999/w3/html40.tgz">HTML-4.01
              Belirtim paketi</link>ni alın ve makinanıza kurun. Ayrıca
              <link xlink:href="http://www.w3.org/TR/REC-CSS2">CSS2 Belirtim
              dosyası</link>nı da alın. Bunlar web tasarımı yapanlar için
              olmazsa olmaz iki temel kaynaktır.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <link linkend="web-organizasyonu">Web Sitesi Düzenlemesi ve Tasarımı</link>
          </term>
          <listitem>
            <para>
              Profesyonel anlamda web sitesi organizasyonu ve tasarımı konusunda bilgi
              edinebileceğiniz güzel bir belge.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <link xlink:href="http://www.php.net/"/>
          </term>
          <listitem>
            <para>
              PHP’nin resmi sitesi. Bu adresten PHP Manual’i indirmenizi şiddetle
              tavsiye ediyorum. PHP altında kullanabileceğiniz bütün işlevlerin
              listesini, PHP kurulumunu ve PHP hakkında aklınızda ne kadar soru
              varsa hepsine cevap bulabileceğiniz bir belge.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <link xlink:href="http://www.mysql.com/"/>
          </term>
          <listitem>
            <para>
              MySQL’in resmi sitesi. Yine bu adresten MySQL ile ilgili her türlü
              sorunuza yanıt bulabileceğiniz MySQL Manual’i ne yapıp edip edinin.
              Fakat PHP altında MySQL kullanımı ile ilgili bilgileri PHP Manual
              içinde bulacaksınız.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <link xlink:href="http://www.php.org.tr/"/>
          </term>
          <listitem>
            <para>
              Türkiye PHP gurubu tarafından geliştirilen sitede PHP hakkında
              birçok Türkçe kaynak bulabilirsiniz. Ayrıca sitenin forum kısmına
              PHP ile ilgili sorularınızı yazıp kısa zamanda değişik çözüm
              yolları edinebilirsiniz.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <link xlink:href="http://www.turk-php.com/"/>
          </term>
          <listitem>
            <para>
              Yine bir Türk PHP sitesi. Bakmanızda fayda var.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <link xlink:href="http://www.rehberim.gen.tr/webokulu/"/>
          </term>
          <listitem>
            <para>
              Türkçe içerikli bir web tasarım sitesi. Sadece PHP değil
              web ile ilgili birçok konuda bilgi bulabileceğiniz bir site.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <link xlink:href="http://wwwacs.gantep.edu.tr/programming/php/commandline.html"/>
          </term>
          <listitem>
            <para>
              Üniversitemizin bir sunucusu üzerinde bulunan sayfada Linux altında
              PHP kullanarak kabuk betiği yazma konusu ele alınmış. (Gerçi konu web
              tasarımının dışında fakat PHP’nin geniş kullanım alanlarına bir güzel örnek)
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <link xlink:href="http://www.hotscripts.com/"/>
          </term>
          <listitem>
            <para>
              Binlerce ücretsiz betik ve belge bulabileceğiniz çok güzel bir
              kaynak. Bakmanızı kesinlikle tavsiye ederim.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <link xlink:href="http://www.programmersheaven.com/zone27/"/>
          </term>
          <listitem>
            <para>
              Yine ücretsiz betikler ve belgeler bulabileceğiniz bir site.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </para><para>
      Yukarıdaki adresler bu belgenin konusu hakkındaki binlerce siteden sadece
      birkaçı. Yalnız ilk başta belirttiğim gibi elinizin altında
      HTML ve CSS2 Belirtim belgeleri ile PHP ve MySQL’in Manual dosyalarının
      bulunmasında çok büyük fayda var.
    </para>
  </appendix>
  <appendix xml:id="html-php-mysql-giris_ek2">
    <title>HTML’de kullanılan karakterlerin kodları</title>
    <para>
      HTML'de klavyeden yazamadığınız karakterleri bazı kurallara uyarak
      kodlayabilirsiniz. Örneğin Ü karakterini &amp;Uuml;, &amp;#220;, &amp;#xdc;
      gibi üç farklı gösterimle kodlayabilirsiniz. İlk gösterim sadece
      ISO-8859-1 karakter kümesindeki karakterler içindir ve bunlar aşağıda
      tablo halinde verilmiştir. Diğer iki tür kullanımda karakterin UTF-8
      karakter kümesindeki karakter kodu kullanılmıştır. &amp;#220; onluk
      tabanda, &amp;#xdc; ise onaltılık tabanda kodlanmıştır. UTF-8 karakter
      kümesini oluşturan karakterlerin tamamını içeren bir dosyayı makinanızda
      örneğin Red Hat dağıtımını kullanıyorsanız,
      <literal>/usr/share/i18n/charmaps/UTF-8.gz</literal> olarak bulabilirsiniz.
      Bu dosyada Ü harfi ile ilgili satır,
    </para><para>
<literallayout>
&lt;00DC>   /xc3/x9c  LATIN CAPITAL LETTER U WITH DIAERESIS
</literallayout>
    </para><para>
      şeklindedir. Burada kullanacağımız kısım &lt;00DC>'dir. &amp;#x00DC;
      ya da &amp;#xdc; olarak bu karakteri HTML dosyamızda kullanabiliriz.
    </para><para>
      Karakterleri bu şekilde kodlayarak yazmanın bir faydası da HTML dosyasının
      başlığında &lt;meta> etiketiyle karakter kodlamasının belirtilmesi
      ihtiyacını ortadan kaldırmasıdır.
      <xref linkend="html-php-mysql-giris_renkler"/>nde göreceğiniz gibi
      örnek olması için "ı" harfi yerine &amp;#x131; kullanılmıştır.
    </para><para>
      <command>ISO-8859-1 Karakter Kodları</command>
    </para><para>
<literallayout>

+---+----------+--------++---+----------+--------+
|   | &amp;nbsp;   | &amp;#160; || Ð | &amp;ETH;    | &amp;#208; |
| ¡ | &amp;iexcl;  | &amp;#161; || Ñ | &amp;Ntilde; | &amp;#209; |
| ¢ | &amp;cent;   | &amp;#162; || Ò | &amp;Ograve; | &amp;#210; |
| £ | &amp;pound;  | &amp;#163; || Ó | &amp;Oacute; | &amp;#211; |
| ¤ | &amp;curren; | &amp;#164; || Ô | &amp;Ocirc;  | &amp;#212; |
| ¥ | &amp;yen;    | &amp;#165; || Õ | &amp;Otilde; | &amp;#213; |
| ¦ | &amp;brvbar; | &amp;#166; || Ö | &amp;Ouml;   | &amp;#214; |
| § | &amp;sect;   | &amp;#167; || × | &amp;times;  | &amp;#215; |
| ¨ | &amp;uml;    | &amp;#168; || Ø | &amp;Oslash; | &amp;#216; |
| © | &amp;copy;   | &amp;#169; || Ù | &amp;Ugrave; | &amp;#217; |
| ª | &amp;ordf;   | &amp;#170; || Ú | &amp;Uacute; | &amp;#218; |
| « | &amp;laquo;  | &amp;#171; || Û | &amp;Ucirc;  | &amp;#219; |
| ¬ | &amp;not;    | &amp;#172; || Ü | &amp;Uuml;   | &amp;#220; |
| - | &amp;shy;    | &amp;#173; || Ý | &amp;Yacute; | &amp;#221; |
| ® | &amp;reg;    | &amp;#174; || Þ | &amp;THORN;  | &amp;#222; |
| ¯ | &amp;macr;   | &amp;#175; || ß | &amp;szlig;  | &amp;#223; |
| ° | &amp;deg;    | &amp;#176; || à | &amp;agrave; | &amp;#224; |
| ± | &amp;plusmn; | &amp;#177; || á | &amp;aacute; | &amp;#225; |
| ² | &amp;sup2;   | &amp;#178; || â | &amp;acirc;  | &amp;#226; |
| ³ | &amp;sup3;   | &amp;#179; || ã | &amp;atilde; | &amp;#227; |
| ´ | &amp;acute;  | &amp;#180; || ä | &amp;auml;   | &amp;#228; |
| µ | &amp;micro;  | &amp;#181; || å | &amp;aring;  | &amp;#229; |
| ¶ | &amp;para;   | &amp;#182; || æ | &amp;aelig;  | &amp;#230; |
| · | &amp;middot; | &amp;#183; || ç | &amp;ccedil; | &amp;#231; |
| ¸ | &amp;cedil;  | &amp;#184; || è | &amp;egrave; | &amp;#232; |
| ¹ | &amp;sup1;   | &amp;#185; || é | &amp;eacute; | &amp;#233; |
| º | &amp;ordm;   | &amp;#186; || ê | &amp;ecirc;  | &amp;#234; |
| » | &amp;raquo;  | &amp;#187; || ë | &amp;euml;   | &amp;#235; |
| ¼ | &amp;frac14; | &amp;#188; || ì | &amp;igrave; | &amp;#236; |
| ½ | &amp;frac12; | &amp;#189; || í | &amp;iacute; | &amp;#237; |
| ¾ | &amp;frac34; | &amp;#190; || î | &amp;icirc;  | &amp;#238; |
| ¿ | &amp;iquest; | &amp;#191; || ï | &amp;iuml;   | &amp;#239; |
| À | &amp;Agrave; | &amp;#192; || ð | &amp;eth;    | &amp;#240; |
| Á | &amp;Aacute; | &amp;#193; || ñ | &amp;ntilde; | &amp;#241; |
| Â | &amp;Acirc;  | &amp;#194; || ò | &amp;ograve; | &amp;#242; |
| Ã | &amp;Atilde; | &amp;#195; || ó | &amp;oacute; | &amp;#243; |
| Ä | &amp;Auml;   | &amp;#196; || ô | &amp;ocirc;  | &amp;#244; |
| Å | &amp;Aring;  | &amp;#197; || õ | &amp;otilde; | &amp;#245; |
| Æ | &amp;AElig;  | &amp;#198; || ö | &amp;ouml;   | &amp;#246; |
| Ç | &amp;Ccedil; | &amp;#199; || ÷ | &amp;divide; | &amp;#247; |
| È | &amp;Egrave; | &amp;#200; || ø | &amp;oslash; | &amp;#248; |
| É | &amp;Eacute; | &amp;#201; || ù | &amp;ugrave; | &amp;#249; |
| Ê | &amp;Ecirc;  | &amp;#202; || ú | &amp;uacute; | &amp;#250; |
| Ë | &amp;Euml;   | &amp;#203; || û | &amp;ucirc;  | &amp;#251; |
| Ì | &amp;Igrave; | &amp;#204; || ü | &amp;uuml;   | &amp;#252; |
| Í | &amp;Iacute; | &amp;#205; || ý | &amp;yacute; | &amp;#253; |
| Î | &amp;Icirc;  | &amp;#206; || þ | &amp;thorn;  | &amp;#254; |
| Ï | &amp;Iuml;   | &amp;#207; || ÿ | &amp;yuml;   | &amp;#255; |
+---+----------+--------++---+----------+--------+
</literallayout></para><para>
      <command>Türkçe'ye Özgü Karakterlerin Kodları</command>
    </para><para>
<literallayout>

+---+--------++---+--------+
| ğ | &amp;#287; || Ğ | &amp;#286; |
| ı | &amp;#305; || İ | &amp;#304; |
| ş | &amp;#351; || Ş | &amp;#350; |
+---+--------++---+--------+
</literallayout>
    </para>
  </appendix>
  <appendix xml:id="html-php-mysql-giris_ek3">
    <title>CSS  (Cascading Style Sheets)</title>
    <para>
      &lt;font> etiketini anlatırken, bu etiket yerine CSS kullanımının
      tasarımcıya kolaylık sağlayacağını söylemiştim. CSS sayesinde HTML
      ile kullanabildiğimiz etiketlerin özelliklerini değiştirebiliriz.
      Mesela hazırladığımız bir sayfada &lt;h1> ve &lt;h2> etiketi ile
      yazılacak yerlerin renginin #55558f kodu ile gösterilen renk olmasını
      istiyoruz. Normalde bunun için her başlık yazacağımız yere
      &lt;font color="#55558f"> yazmamız gerekecekti ama CSS bizi bu
      zahmetten kurtarıyor. CSS kodlarımızı HTML dosyamızda kullanabilmemiz
      için değişik yollar vardır. Bunlardan ikisi kodları direk HTML’nin
      &lt;style> etiketi içerisine yazmak diğeri ise CSS kodlarımızı ayrı
      bir dosyaya yazmamızdır.
    </para><para>
<screen>
&lt;html>
&lt;head>&lt;title>CSS Denemesi&lt;/title>
&lt;style>
 h1 { color: #55558f }
 h2 { color: #55558f }
&lt;/style>
&lt;/head>
&lt;body>
  &lt;h1>Merhaba. Bu yazının rengini CSS ile ayarladım.&lt;/h1>
  &lt;h2>Ayrıca bu yazınınki de.&lt;/h2>
&lt;/body>
&lt;/html>
</screen>
    </para><para>
      Yukarıdaki örneği bir HTML dosyasına yazıp, dosyayı açarsak, aşağıda
      göreceğiniz gibi başlıkların rengi siyah olmayacaktır. Bunun sebebi CSS ile
      &lt;h1> ve &lt;h2> etiketlerinın özelliklerini değiştirmiş olmamızdır.
    </para><para>
      <informaltable frame="none" style="background:#e0e0e0; width:95%">
        <tgroup cols='1'>
        <tbody>
          <row>
            <entry>
              <div>
                <h1 style="background:#e0e0e0;color:#55558f">Merhaba. Bu yazının rengini CSS ile ayarladım.</h1>
                <h2 style="background:#e0e0e0;color:#55558f">Ayrıca bu yazınınki de.</h2>
              </div>
            </entry>
          </row>
        </tbody></tgroup>
      </informaltable>
    </para><para>
      Aynı örnekteki &lt;style> etiketini
    </para><para>
<screen>
.....
&lt;style>
 h1, h2 { color: #55558f }
&lt;/style>
....
</screen>
    </para><para>
      şekilde yazmamızda sayfanın görünümünde bir değişikliğe yol açmayacaktır.
      Aynı sonucu elde etmek için kullanacağımız bir başka yöntem ise ayrı bir
      CSS dosyası hazırlamaktır. Bu yöntem önceki yönteme nazaran daha
      kullanışlıdır, çünkü hazırladığımız CSS dosyasını birden çok HTML
      dosyasında kullanma olanağı buluruz. Aşağıdaki kodları boş bir metin
      dosyasına yazıp <literal>ilk.css</literal> adı ile kaydedin.
    </para><para>
<screen>
h1, h2 { color: #55558f }
</screen></para><para>
      Daha sonra yeni HTML dosyası içine
</para><para><screen>
&lt;html>
&lt;head>
  &lt;title>CSS Denemesi&lt;/title>
  &lt;link rel="stylesheet" href="ilk.css" type="text/css">
&lt;/head>
&lt;body>
  &lt;h1>Merhaba. Bu yazının rengini CSS ile ayarladım.&lt;/h1>
  &lt;h2>Ayrıca bu yazınınki de.&lt;/h2>
&lt;/body>
&lt;/html>
</screen>
    </para><para>
      kodlarını yazıp kaydedin. HTML dosyasını açtığınız zaman ilk CSS sayfamızın
      aynısı ile karşılaşırız. Burada CSS dosyamız ayrı bir dosya olduğu için
      sadece bir dosyada değil, sitemizdeki tüm HTML dosyalarında kullanılabilir.
      Tüm dosyalarımızda belli bir standardı hedef almamız sitemizde uyumlu bir
      görünüm oluşmasına yardımcı olacaktır. CSS dosyalarında tanımlanabilecek
      özellikler çok çeşitlidir. CSS1’de yaklaşık 50 çeşit özellik (color,
      font-size... gibi) tanımlanabilmesine karşın 1998’den itibaren kullanılan
      CSS2’de yaklaşık 120 özellik tanımlanabilmektedir.
    </para><para>
      CSS hakkında daha ayrıntılı bilgi için <link xlink:href="http://www.w3.org/TR/REC-CSS2"/>
      adresindeki belgeyi okumanızı hatta bu belgeyi bir başvuru kaynağı olarak
      makinanızda bulundurmanızı tavsiye ederim. Burada CSS’nin 2.sürümü olan CSS2
      anlatılmaktadır.
    </para><para>
      Belgeler sitesinde kullanılan ve birçok web istemcisi ile uyumluluğu
      denenmiş kodlar içeren <link xlink:href="../belgeler.css">belgeler.css</link>
      dosyasını da incelemenizi öneririm. Bu dosyada kullanılan pek çok özellikten
      burada bahsedilmeyecektir. Ancak bu dosyayı kitaplığın sayfalarının dosyaları
      ile birlikte inceleyerek neyin niçin yapıldığını anlayabilirsiniz.
    </para>
  </appendix>
  <appendix xml:id="html-php-mysql-giris_ek4">
    <title>PHP ile Kabuk Betikleri Yazmak</title>
    <para>
      Web konusu ile pek ilgili olmasa da bu konuyu belgeye dahil etmeyi uygun
      gördüm. Bir zamanlar kabuk betikleri konusu ile bayağı ilgilenmeyi
      istemiştim ama bir türlü tam olarak kendimi veremedim. Daha sonra PHP
      ile de kabuk betikleri yazılabildiğini öğrendiğim zaman çok sevinmiştim.
      Benim gibi bu konuya ilgi duyan bir okuyucum varsa belgenin bu kısmının
      faydalı bir kaynak olacağını tahmin ediyorum.
    </para><para>
      Kabuk betikleri deyimi Unix veya türevi bir işletim sistemi kullanmamış
      okuyuculara biraz yabancı gelecektir. Kabuk betiklerinin yazım kuralları
      ve örneklerine geçmeden önce konuya yabancı olan okuyucular için kısa bir
      açıklama yapayım.
    </para><para>
      Unix altında kullanılan kabuk betikleri çoğunlukla sh, bash ya da csh denen
      kabuk programları üzerinde çalışır. Her kabuğun kendine özgü bir programlama
      dili vardır. PHP ile kabuk betiklerinin yazarken normal PHP komutlarından
      başka bir şey kullanmıyoruz. İşin güzel kısmı da bu ;)
    </para><para>
      Bir kabuk betiği MS-Dos’daki .bat dosyalarına benzetilebilir. Bu dosyalar
      kendi içerisinde yazılı olan komutları sıra ile işleten dosyalardır.
      Aşağıdaki betik bir iş yapmasa bile sıra ile komut işletimine güzel bir
      örnektir.
    </para><para>
      Bu komutları Unix ya da türevi bir sistemde bir metin dosyasına yazıp
      <literal>chmod +x betik_adı</literal> komutunu verdikten sonra
      <literal>./betik_adı</literal> komutu ile çalıştırın.
    </para><para>
      Windows'da ise bir PHP kabuk betiğini <literal>c:\php\php.exe -q betik_adi</literal>
      gibi bir komut ile bir DOS penceresinden çalıştırabilirsiniz.
    </para><para>
<screen>
mkdir dizin
cd dizin
pwd > dosya_yolu
cd ..
</screen>
    </para><para>
      İşte bir kabuk betiği yukarıdaki komutları sanki siz sırası ile girmişsiniz
      gibi işleten dosyadır.
    </para><para>
      Fakat PHP (sh, bash, csh ve perl) ile yazılan betiklerin içerisinde
      mantıksal ifadeler ve döngüler kullanmamız mümkündür. Kullandığınız bu
      döngüler sayesinde betiğinizin değişik durumlarda istediğiniz gibi
      dallanmasını sağlayabilirsiniz.
    </para><para>
      Aşağıdaki betik örneklerinden ilki çalıştırıldığı dizindeki dosyaların
      uzantısını değiştirmek için kullanılıyor. Kullanımı
    </para><para>
<literallayout>
$ cevir htm html
</literallayout>
    </para><para>
      şeklindedir. Bu komut bulunduğumuz dizinde uzantısı <literal>htm</literal>
      olan dosyaların uzantılarını <literal>html</literal> olarak değiştirmektedir.
    </para><para>
      İkinci örneğimde ise betiğe komut satırından parametre olarak girilen
      kullanıcı adı ile ilgili bilgiler <literal>/etc/passwd</literal>
      dosyasından okunup ekrana basılmaktadır.
    </para><para>
<screen>
#!/usr/bin/php -q
&lt;?
# Bu dosyayi cevir adi ile kaydedin
###############################
#   PHP UNIX Dosya Uzantisi   #
#     Degistirme Betigi       #
#      Fehmi Noyan ISI        #
###############################
if($argc != 3) {
  echo "Parametre Hatasi!\n";
  echo "Kullanim:\n";
  echo "   cevir [degisecek_uzanti] [yeni_uzanti]\n";
}
  else
{
  $dizin_ac = opendir("./");
  $i=0;

  while($dosya = readdir($dizin_ac)) {

    if (is_file($dosya) and strrpos($dosya, ".")) {
      $dosya_adi = explode(".", $dosya);
      $argnum = count($dosya_adi) - 1;

      if ($dosya_adi[$argnum] == $argv[1]) {
        $dosya_adi[$argnum] = $argv[2];
        $dosya_adi = implode(".", $dosya_adi);

        if (rename($dosya, $dosya_adi)) $i++;
      }
    }
  }
  echo "cevir: $i dosyanin uzantisi $argv[2] olarak degistirildi.\n";
}
?>
</screen>
    </para><para>
<screen>
#!/usr/bin/php -q
&lt;?php
# Bu dosyayi user adi ile kaydedin
###############################
# PHP UNIX Kullanici Sorgusu  #
#      Fehmi Noyan ISI        #
###############################
if ($argc != 2) {
  echo "Parametre Hatasi!\n\n";
  echo "Kullanim:\n";
  echo "         user [kullanici adi]\n";

} else {

  $satirlar = file("/etc/passwd");
  foreach ($satirlar as $satir) {
    $pwd_user_array = (explode(":", $satir));
    if ($pwd_user_array[0] == $argv[1]) {
      $kullanici_adi = $pwd_user_array[0];
      $isim = $pwd_user_array[4];
      $kabuk = $pwd_user_array[6];
      $dizin = $pwd_user_array[5];
    }
  }

  if ($kullanici_adi != $argv[1]) {
    echo " user: $argv[1] kullanicisi sistemde kayitli degil!\n";

  } else {
    echo " USER - Linux Kullanici Sorgusu -\n";
    echo " VER1.0\n\n";
    echo "Kullanici adi: $kullanici_adi\n";
    echo "         isim: $isim\n";
    echo "        dizin: $dizin\n";
    echo "        kabuk: $kabuk\n";
  }
}
?>
</screen>
    </para><para>
      Bu örneklerde normal PHP betiklerimizin dışında kullandığımız iki tane
      değişken var. <literal>argc</literal> ve <literal>argv[]</literal>
      değişkenleri. <literal>argc</literal> değişkeni betiğe komut satırından
      girilen parametre sayısını veren tamsayı değişkeni ve
      <literal>argv[]</literal> değişkeni ise bu parametrelerin kendilerini
      tutan dizi değişkeni. (<literal>argv[0]</literal> betiğinin kendi adıdır).
    </para><para>
      Bir de iki dosyanında en başında kullandığımız
      <literal>#!/usr/bin/php -q</literal> ifadesi var. Bu ifade bu dosyada yazılı
      olan komutların sistemde kurulu olan PHP yorumlayıcısı tarafından
      yorumlanacağını anlatır.
    </para>
  </appendix>
  <appendix xml:id="html-php-mysql-giris_ek5">
    <title>FTP ile Dosya Transferi</title>
    <para>
      FTP (File Transfer Protocol - Dosya Aktarma Protokolü) dosyaları Internet'e
      yollamak ve Internet'ten almak için, kullandığımız protokoldür. Windows
      ortamında bu iş için kullanılabilecek birçok program vardır. Her programın
      kendine has bazı özellikleri bulunsa da genel olarak hepsi sizden
      dosyalarınızı yollamak için bir sunucu adı, kullanıcı adı ve parola ister.
      Bu bilgileri girdikten sonra program sunucu bilgisayara bağlanır ve siz
      dosyalarınızı istediğiniz dizine (tabi kullanım hakkınız olduğu sürece)
      yerleştirebilirsiniz. Burada dikkat edilmesi gereken bir husus dosyaları
      karşı tarafa yollarken ya da karşı taraftan dosya alırken, dosya biçemi
      normal metin biçeminde değil ise, yani dosya çalışabilir bir dosya, bir
      resim dosyası ya da sıkıştırılmış bir dosya ise dosyaları göndermek için
      kullanacağınız kip <literal>binary</literal> kipi olmalıdır. Programdan
      programa kullanımda farklılıklar olduğunu söylemiştim, artık bunun ayarını
      yapmak programın menülerini karıştırıp yapmanıza kalmış. Gerçi artık
      piyasadaki tüm FTP programları aktarım kipini kendileri ayarlıyorlar, ama
      siz yine de kontrol edin.
    </para><para>
      Ayrıca yükleyebileceğiniz bir FTP programı dışında Linux ve Windows ile
      gelen FTP programı da işinizi görecektir. Windows’taki FTP programını
      çalıştırmak için izlemeniz gereken yol Başlat -> Çalıştır -> ftp sunucu-adresi
      olmalıdır.  Linux’ta ise komut satırından <literal>ftp sunucu-adı</literal>
      komutu işinizi görecektir. Örnek olarak bizim üniversitemizin ftp adresi olan
      <literal>gul2.bim.gantep.edu.tr</literal> adresine bağlanalım. Programlar
      çalıştıktan sonra sizden bir kullanıcı adı ve parola isteyecektir.
    </para><para>
<screen>
$ ftp gul2.bim.gantep.edu.tr
Connecting .....
Username: fni18444
Password:

User fni18444 logged in.
ftp>
</screen>
    </para><para>
      Yukarıda <literal>gul2.bim.gantep.edu.tr</literal> adresine ftp ile
      bağlandm. Bağlandığım an benim kullanıcı adıma tanımlı alana otomatik
      olarak giriş yaparım.
    </para><para>
<screen>
ftp> cd www
ftp> lcd ~/internet
ftp> put index.html
ftp> binary
ftp> put banner.png
ftp> get tux.png
ftp> bye
Goodbye....
</screen>
    </para><para>
      Yukarıda sırası ile <literal>cd www</literal> komutu ile bulunduğum dizindeki
      <literal>www</literal> adlı dizine giriyorum.
    </para><para>
      <literal>lcd ~/internet</literal> ile karşı tarafa göndereceğim dosyaların
      bulunduğu ve alacağım dosyaların konacağı yerin adresini yazıyorum. Bunun
      sonucu olarak karşı taraftan aldığım dosyalar bu dizine kaydedilir ve karşı
      tarafa yollayacağım dosyalarımın da bu dizin altında olmaları gerekir.
    </para><para>
      Şimdi sıra bizim için en önemli iki komutta: <literal>put</literal> ve
      <literal>get</literal>. <literal>put</literal> karşı tarafa dosya yollamak ve
      <literal>get</literal> karşı taraftan dosya almak için kullanılır. Dikkat
      ederseniz karşı taraftan resim alıp yollamadan önce <literal>binary</literal>
      komutu ile aktarım kipini değiştiriyoruz. En son olarak da <literal>bye</literal>
      komutu ile programdan çıkıyoruz.
    </para><para>
      FTP ile komut satırında iken <literal>help</literal> yada <literal>?</literal>
      yazıp ENTER tuşuna basarsanız kullanabileceğiniz komutların listesi
      görüntülenir.
    </para><para>
      Peki eğer herhangi bir FTP adresinden bir dosya almak istiyorsanız ve bu
      bilgisayarda bir kullanıcı adınız ve parolanız yoksa ne olacak!!??
      Kullanılan FTP Sunucu programlarında eğer etkin hale getirilmişse, ki hemen
      hemen hepsinde vardır, <literal>anonymous</literal> kullanıcı girişi vardır.
      Bu kullanıcı giriş şeklinde <literal>UserName</literal> kısmına
      <literal>anonymous</literal> yazmanız ve parola kısmına da e-posta adresinizi
      yazmanız yeterlidir. Bu giriş sayesinde sunucu altında bulunan halka açık
      FTP dizinlerine erişebilirsiniz.
    </para>
  </appendix>
    <!-- Legal Sections -->
  <appendix xml:id="html-php-mysql-giris_yasal">
    <title>Yasal Açıklama</title>
    <sect1 xml:id="html-php-mysql-giris_yasal-1">
      <title>Telif Hakkı ve Lisans</title>

      <!-- The LDP recommends, but doesn't require, the GFDL -->
      <para>
      Bu kitabın, <emphasis>HTML ile Web Tasarımına ve PHP-MySQL ile Web
      Programcılığına Giriş</emphasis>,<emphasis role="bold">
      telif hakkı © 2002 <emphasis>Fehmi Noyan İSİ</emphasis> ve
      <emphasis>Nilgün Belma Bugüner</emphasis></emphasis>'e
      aittir. Bu belgeyi, Free Software Foundation tarafından yayınlanmış bulunan <link linkend="gpl">GNU Genel Kamu Lisansı</link>nın 2. ya da daha sonraki sürümünün koşullarına bağlı kalarak kopyalayabilir, dağıtabilir ve/veya değiştirebilirsiniz. Bu Lisansın özgün kopyasını <link xlink:href="http://www.gnu.org/copyleft/gpl.html"/> adresinde bulabilirsiniz.
      </para>

      <para>
      Linux, Linus Torvalds adına kayıtlı bir ticarî isimdir.
      </para>
    </sect1>

    <sect1 xml:id="html-php-mysql-giris_yasal-2">
      <title>Feragatname</title>

      <para>
        Bu belgedeki bilgilerin kullanımından doğacak sorumluluklar,
        ve olası zararlardan belge yazarı sorumlu tutulamaz.
        Bu belgedeki bilgileri uygulama sorumluluğu uygulayana aittir.
      </para>

      <para>
        Tüm telif hakları aksi özellikle belirtilmediği sürece sahibine
        aittir. Belge içinde geçen herhangi bir terim bir ticarî isim
        ya da kuruma itibar kazandırma olarak algılanmamalıdır. Bir ürün
        ya da markanın kullanılmış olması ona onay verildiği anlamında
        görülmemelidir.
      </para>
    </sect1>
  </appendix>
</book>
