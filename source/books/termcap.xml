<?xml version="1.0" encoding="UTF-8"?>
<!-- ********************************************************************
     $Id: termcap.xml,v 1.2 2002/12/20 22:29:48 nilgun Exp $
******************************************************************** -->
<book xml:id="termcap" lang="tr">
<?dbhtml dir="../termcap"?>
 <bookinfo>
 <title>Termcap Kütüphanesi ve Veritabanı</title>
  <pubdate>Nisan 2006</pubdate>
 <authorgroup>
  <author>
    <firstname>Richard M. Stallman</firstname>
  </author>
  <author role="translator">
    <firstname>Nilgün B. Bugüner</firstname>
  </author>
  </authorgroup>
 <legalnotice><title>Legal Notice</title><para>
Copyright © 1988 Free Software Foundation, Inc.
</para><para>
Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.
</para><para>
Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the entire
resulting derived work is distributed under the terms of a permission
notice identical to this one.
</para><para>
Permission is granted to copy and distribute translations of this manual
into another language, under the above conditions for modified versions,
except that this permission notice may be stated in a translation approved
by the Foundation.
  </para></legalnotice>
    <legalnotice><title>Yasal Uyarı</title><para>
Telif Hakkı © 1988 Free Software Foundation, Inc.
      </para><para>
        Bu kılavuzun harfi harfine kopyalanmasına ve dağıtılmasına telif hakkı
        uyarısının ve bu izin uyarısının tüm kopyalarında bulunması şartıyla
        izin verilmiştir.
      </para><para>
        Bu kılavuzun değiştirilmiş kopyalarının kopyalanması ve dağıtılması,
        türetilmiş çalışmanın sonuçlarının tamamı, harfi harfine kopyalamanın
        koşullarını içererek ve buna eşdeğer bir izin uyarısı da sağlandığı
        takdirde izin verilmiştir.
      </para><para>
        Bu kılavuzun diğer dillere çevirilerine, bu izin uyarısını bulunduğu
        Free Software Foundation tarafından onaylanmış bir çeviri değilse,
        yukarıda açıklanan değiştirilmiş sürümlerinin koşulları sağlandığı
        takdirde izin verilmiştir.
      </para>
    </legalnotice>
    <legalnotice><title>Feragatname</title><para>
        BU KİTAP ÜCRETSİZ OLARAK RUHSATLANDIĞI İÇİN, İÇERDİĞİ BİLGİLER İÇİN İLGİLİ KANUNLARIN
        İZİN VERDİĞİ ÖLÇÜDE HERHANGİ BİR GARANTİ VERİLMEMEKTEDİR. AKSİ YAZILI OLARAK
        BELİRTİLMEDİĞİ MÜDDETÇE TELİF HAKKI SAHİPLERİ VE/VEYA BAŞKA ŞAHISLAR KİTABI
        "OLDUĞU GİBİ", AŞİKAR VEYA ZIMNEN, SATILABİLİRLİĞİ VEYA HERHANGİ BİR AMACA
        UYGUNLUĞU DA DAHİL OLMAK ÜZERE HİÇBİR GARANTİ VERMEKSİZİN DAĞITMAKTADIRLAR.
        BİLGİNİN KALİTESİ  İLE İLGİLİ TÜM SORUNLAR SİZE AİTTİR.
        HERHANGİ BİR HATALI BİLGİDEN DOLAYI DOĞABİLECEK OLAN BÜTÜN SERVİS, TAMİR VEYA
        DÜZELTME MASRAFLARI SİZE AİTTİR.
      </para><para>
        İLGİLİ KANUNUN İCBAR ETTİĞİ DURUMLAR VEYA YAZILI ANLAŞMA HARİCİNDE HERHANGİ
        BİR ŞEKİLDE TELİF HAKKI SAHİBİ VEYA YUKARIDA İZİN VERİLDİĞİ ŞEKİLDE KİTABI
        DEĞİŞTİREN VEYA YENİDEN DAĞITAN HERHANGİ BİR KİŞİ, BİLGİNİN KULLANIMI VEYA
        KULLANILAMAMASI (VEYA VERİ KAYBI OLUŞMASI, VERİNİN YANLIŞ HALE GELMESİ, SİZİN
        VEYA ÜÇÜNCÜ ŞAHISLARIN ZARARA UĞRAMASI VEYA BİLGİLERİN BAŞKA BİLGİLERLE UYUMSUZ
        OLMASI) YÜZÜNDEN OLUŞAN GENEL, ÖZEL, DOĞRUDAN YA DA DOLAYLI HERHANGİ BİR ZARARDAN,
        BÖYLE BİR TAZMİNAT TALEBİ TELİF HAKKI SAHİBİ VEYA İLGİLİ KİŞİYE BİLDİRİLMİŞ OLSA
        DAHİ, SORUMLU DEĞİLDİR.
</para><para>
Tüm telif hakları aksi özellikle belirtilmediği sürece sahibine aittir. Belge içinde geçen herhangi bir terim, bir ticari isim ya da kuruma itibar kazandırma olarak algılanmamalıdır. Bir ürün ya da markanın kullanılmış olması ona onay verildiği anlamında görülmemelidir.
      </para>
    </legalnotice>
   <abstract><para>
Termcap uygulamaların uçbirimlerin yeteneklerini kullanabilmelerini olanaklı kılan bir veritabanı ve bir kütüphanedir. Bir uçbirim için kaydedilmiş bilgilerden örnek vermek gerekirse, uçbirimin kaç sütun genişlikte olduğu, imlecin belli bir konuma taşınıp dizgenin oraya gönderilmesinin olanaklı olup olmadığı (satır ve sütun numaralarının nasıl kodlanacağı), ekran içeriğinin yukarı ve aşağı kaydırılabilirliği ve bu işlemin kaçar satırlık yapılabileceği gibi bilgilerin varlığından bahsedebiliriz. Termcap kütüphanesi ise ekranı uçbirimden bağımsız olarak kullanmak isteyen karakter temelli uygulamaların bu veritabanına kolayca erişebilmesini olanaklı kılmak için tasarlanmıştır.
    </para><para>
Bu kitap, 7 Kasım 1998'de güncellenen <link xl:href="http://www.gnu.org/software/termutils/manual/termcap-1.3/termcap.html">ikinci baskının</link> çevirisidir.
   </para></abstract>
 </bookinfo>

 <chapter xml:id="termcap-Introduction">
  <title>Giriş</title>
<indexterm scope="termcap-cp"><primary>termcap</primary></indexterm>
  <para>
<firstterm>Termcap</firstterm> uygulamaların uçbirimlerin yeteneklerini kullanabilmelerini olanaklı kılan bir veritabanı ve bir kütüphanedir. Berkeley Unix'in uçbirim kütüphanesi temel alınmıştır.
  </para><para>
Termcap veritabanı yüzlerce farklı uçbirimin yeteneklerini oldukça ayrıntılı bir biçimde içerir. Bir uçbirim için kaydedilmiş bilgilerden örnek vermek gerekirse, uçbirimin kaç sütun genişlikte olduğu, imlecin belli bir konuma taşınıp dizgenin oraya gönderilmesinin olanaklı olup olmadığı (satır ve sütun numaralarının nasıl kodlanacağı), ekran içeriğinin yukarı ve aşağı kaydırılabilirliği ve bu işlemin kaçar satırlık yapılabileceği gibi bilgilerin varlığından bahsedebiliriz.
  </para><para>
Termcap kütüphanesi, ekranı uçbirimden bağımsız olarak kullanmak isteyen karakter temelli uygulamaların bu veritabanına kolayca erişebilmesini olanaklı kılmak için tasarlanmıştır.
  </para><para>
Bu kılavuzda, termcap kütüphanesinin Unix sürümüne göre bazı ek oluşumlar içeren GNU sürümü anlatılmıştır. Ek oluşumların neler olduğu ve dolayısıyla Unix termcap'ının nasıl kullanılabileceğinden ayrıca bahsedilmiştir.
  </para><para>
Özgür yazılımlarda kullanmak için, termcap kütüphanesinin GNU sürümü özgür kaynak kodlu olarak dağıtılmaktadır. Unix ve VMS sistemlerinde (en azından) çalışmaktadır. Dosyaların GNU Emacs ile ilgili olanları <filename>termcap.c</filename> ve <filename>tparam.c</filename> dosyalarıdır.
  </para><para>
Bu kılavuz, kullanıcı uygulamaları için Unix ile temelde uyumlu tamamen özgür bir işletim sistemi geliştirilmesi amacıyla GNU projesi için yazıldı. Projenin yaklaşık olarak üçte ikisi tamamlandı. GNU Emacs metin düzenleyici ve oldukça taşınabilir olarak eniyilenmiş C derleyicisi de dahil olmak üzere, GNU projesi hakkında daha ayrıntılı bilgi edinmek istiyorsanız aşağıdaki adrese bir dolar göndermeniz yeterlidir (Belgenin özgün sürümündeki adres yerine bu çeviriye şu an geçerli olan adres yazılmıştır. Bu adres merkez büro adresidir.):
  </para><para>
<literallayout>
Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor,
Boston, MA 02110-1301  USA
</literallayout>
     </para></chapter>
 <chapter xml:id="termcap-Library">
  <title>Termcap Kütüphanesi</title>
  <para>
Termcap kütüphanesi uygulama geliştiricilerinin termcap veritabanına erişimin kolaylaştıran bir arayüzdür. Aşağıda sıralanmış amaçlara uygun işlevler içerir:
  </para><para><itemizedlist><listitem>
Kullanıcı uçbirimi türünün tanımının bulunması (<userinput>tgetent</userinput> işlevi).
    </listitem><listitem>
Çeşitli konularda bilgi edinmek için veritabanınının sorgulanması (<userinput>tgetnum</userinput>, <userinput>tgetflag</userinput>, <userinput>tgetstr</userinput> işlevleri).
    </listitem><listitem>
Gecikmelerin hesaplanması ve uygulanması (<userinput>tputs</userinput> işlevi).
    </listitem><listitem>
Uçbirime özgü imleç konumları gibi sayısal parametrelerin ekran komutlarının gerektirdiği biçimde kodlanması (<userinput>tparam</userinput>, <userinput>tgoto</userinput> işlevleri).
    </listitem></itemizedlist>
  </para>
  <sect1 xml:id="termcap-Preparation">
   <title>Termcap Kütüphanesinin Kullanıma Hazırlanması</title>
   <para>
Termcap kütüphanesini yazılımınızda kullanmak istiyorsanız iki işlem yapacaksınız:
   </para><para><itemizedlist><listitem><para>
Derleyicinin gereksinimlerini karşılamak için kütüphanedeki işlevlerin ve değişkenlerin bildirimleri.
     </para><para>
GNU sistemlerinde bu işlem, bu değişken ve işlevlerin kullanıldığı her kaynak dosyasının <userinput>termcap.h</userinput> başlık dosyasını içermesi sağlanarak yapılır.
     </para><para>
Unix sistemlerinde ise çoğunlukla böyle bir başlık dosyası yoktur. Bu nedenle değişkenleri <literal>external</literal> olarak kendiniz bildirmelisiniz. Bunu işlevler için de yapabileceğiniz gibi, isterseniz, örtük olarak bildirir ve değerlerine de ilgili türden <userinput>int</userinput> türüne dönüşüm uygularsınız.
     </para><para>
Her termcap kütüphane işlevini argümanlarının nasıl aktarılacağını belirtmek amacıyla ANSI C prototipleriyle bildirim olarak göstereceğiz. Eğer GNU C derleyicisi kullanmıyorsanız, büyük ihtimalle işlev prototiplerine ihtiyacınız olmayacağından bildirimlerinizde argüman isimlerini ve türlerini yoksayabilirsiniz.
     </para></listitem><listitem><para>
İlintileyici (ld) kütüphaneyi bulmaya çalışacaktır. Kütüphaneyi bulmasını sağlamak için yazılımınızı derlerken seçenek olarak <userinput>-ltermcap</userinput> veya <userinput>-ltermlib</userinput> belirteceksiniz.
     </para></listitem></itemizedlist>
   </para></sect1>
  <sect1 xml:id="termcap-Find">
   <title>Uçbirim Tanımının Bulunması</title>
   <titleabbrev><literal>tgetent</literal> işlevi</titleabbrev>
<indexterm scope="termcap-fn"><primary><literal>tgetent</literal> işlevi</primary></indexterm>
   <para>
Bir uygulama yazılımı termcap'ı kullanacaksa önce kullanımdaki uçbirimin tanımına bakmalıdır. Bu işlem <userinput>tgetent</userinput> işlevi çağrılarak yapılır.
</para><para xml:id="termcap-tgetent">
<funcsynopsis><funcprototype role="işlev">
<funcdef>int <command>tgetent</command></funcdef>
<paramdef>(char *<varname>tampon</varname>,
 char *<varname>uçbirim_türü</varname>);</paramdef>
</funcprototype><funcdescr><para>
Bu işlev tanımı bulur ve hatırlar; böylece ilgilendiğiniz <link linkend="termcap-Interrogate">uçbirim yeteneklerini sorgulayabilirsiniz</link>.
   </para><para>
<varname>uçbirim_türü</varname> aranacak uçbirim türünün ismini içeren bir dizge olmalıdır. Bu değeri bir <userinput>getenv ("TERM")</userinput> çağrısı ile <userinput>TERM</userinput> ortam değişkeninden elde edebilirsiniz.
   </para><para>
Termcap'ın GNU sürümünü kullanıyorsanız, <userinput>tgetent</userinput>'ten gerekli yeri kendisinin ayırmasını isteyebilirsiniz. İşleve <varname>tampon</varname> olarak bir boş gösterici aktarırsanız, <userinput>tgetent</userinput> <userinput>malloc</userinput> işlevini kullanarak gerektiği kadar yeri kendisi ayıracaktır. Ayrıca, ayrılan bellek alanının adresini almanın bir yolu olmadığından, bu bellek alanını serbest bırakma çabasına da girmeyeceksiniz.
   </para><para>
Termcap'ın Unix sürümünü kullanıyorsanız, tanımı içerecek alanı kendiniz ayırmalı ve adresini <varname>tampon</varname> argümanı ile işleve aktarmalısınız. Ne kadar alan gerektiğini söylemek mümkün olmadığından, teamüllere uygun olarak 2048 baytlık bir tampon yeterli olacaktır diyebiliriz. (Önceleri, uzlaşım 1024 baytın yeterli olacağı şeklindeydi, ama
günlerden bir gün bir uçbirim türü için bu yetersiz oldu.)
   </para><para>
Elde edilen tanımın nasıl saklandığı bu kılavuzun konusu değildir. Termcap bu tanımı kendi saklar ve bu tanımı <userinput>tgetnum</userinput>, <userinput>tgetstr</userinput> veya <userinput>tgetflag</userinput> çağrılarınıza yanıt vermek için kullanır. Eğer tamponu termcap ayırmışsa, <userinput>tgetent</userinput>'i tekrar çağırdığınızda termcap bu belleği serbest bırakır. Eğer tamponu siz ayırmışsanız, tanımın sorgulanması gerektiği sürece bu tamponun içeriğinin değişmeden kalmasını sağlamalısınız.
   </para><para>
Uçbirim türünün veritabanına erişimde bir zorlukla karşılaşılmışsa,  <userinput>tgetent</userinput> -1 değeriyle döner. Eğer, veritabanına sorunsuz erişildiği halde belirtilen uçbirim türü veritabanında yoksa 0 ile döner. Diğer durumlarda bunlardan farklı bir değerle döner.
   </para><para>
Burada <userinput>tgetent</userinput> işlevini nasıl kullanmanız gerektiği gösterilmiştir:
   </para><para>
<screen>
#ifdef unix
static char term_buffer[2048];
#else
#define term_buffer 0
#endif

init_terminal_data ()
{
  char *termtype = getenv ("TERM");
  int success;

  if (termtype == 0)
    hayati ("`setenv TERM &lt;uçbirimtürü&gt;'"
            " komutu ile bir uçbirim belirtmelisiniz.\n");

  success = tgetent (term_buffer, termtype);
  if (success &lt; 0)
    hayati ("Termcap veritabanına erişilemedi.\n");
  if (success == 0)
    hayati ("`%s' diye bir uçbirim tanımlanmamış.\n", termtype);
}
</screen>
   </para><para>
Buradaki <userinput>hayati</userinput> işlevinin bir hata iletisi basıp uygulamayı sonlandıran bir işlev olduğu varsayılmıştır.
   </para><para>
<userinput>TERMCAP</userinput> ortam değişkeni tanımlıysa, değeri uçbirim türü veritabanını hükümsüz bırakmakta kullanılır. <userinput>tgetent</userinput> işlevi <userinput>TERMCAP</userinput> değerini özdevinimli sınar. Eğer isim bir <userinput>/</userinput> ile başlıyorsa, değer, standart veritabanı olan <userinput>/etc/termcap</userinput> yerine veritabanı olarak kullanılacak dosya ismi olarak ele alınır. Eğer değer bir <userinput>/</userinput> ile başlamıyorsa, uygulanması istenen <varname>uçbirim_türü</varname> uçbirim türünün tanımı için kullanılır. Uçbirim tanımı ile ilgili daha ayrıntılı bilgi edinmek için <xref linkend="termcap-Data-Base"/> bölümüne bakınız.
   </para></funcdescr></funcsynopsis>
  </para></sect1>
  <sect1 xml:id="termcap-Interrogate">
   <title>Uçbirim Tanımının Sorgulanması</title>
   <para>
Bir uçbirim tanımında kayıtlı her bilgi parçasına <wordasword>yetenek</wordasword> adı verilir. Kayıtlı her uçbirim yeteneğinin özel bir anlamı olan ve iki harfle kodlanan bir ismi vardır. Örneğin sütun sayısının ismi  <userinput>co</userinput>'dur. Standart yetenek isimlerinin tamamını <xref linkend="termcap-Capabilities"/> bölümünde bulabilirsiniz.
   </para><para>
<userinput>tgetent</userinput> ile <link linkend="termcap-Find">uygun uçbirim tanımını bulduktan</link> sonra, artık uygulama yazılımınız çeşitli uçbirim yeteneklerini <wordasword>sorgulama</wordasword>ya hazır demektir. Aradığınız yetenek ile ilgili bilgi almak için yeteneğin iki harflik kodunu belirtmeniz gerekir.
   </para><para>
Yeteneklerin değerleri sayısal, mantıksal (yetenek var/yok tarzında) ya da dizge biçiminde olabilir. Her yetenek değerinin kendine özgü bir değer türü vardır. Örneğin, <userinput>co</userinput> daima bir sayısal değer içerirken <userinput>am</userinput> (kenarlarda özdevinimli sarmalama) daima bir var/yok değeri içerir. <userinput>cm</userinput> (imleç hareket komutu) ise daima bir dizge değere sahiptir. Her yeteneğin değerinin hangi türde olduğu bu kılavuzda açıklanmıştır.
   </para><para>
Bir yeteneğin değerini öğrenmek için kullanabileceğiniz üç işlev vardır ve yeteneğin değerinin türüne göre bunlardan biri kullanılır:
</para><para xml:id="termcap-tgetnum">
<indexterm scope="termcap-fn"><primary>tgetnum</primary></indexterm>
<funcsynopsis><funcprototype role="işlev">
<funcdef>int <command>tgetnum</command></funcdef>
<paramdef>(char *<varname>isim</varname>);</paramdef>
</funcprototype><funcdescr><para>
<userinput>tgetnum</userinput> işlevi, değeri sayısal olan bir yeteneği sorgulamakta kullanılır. <varname>isim</varname> argümanı yeteneğin iki harflik kodu olmalıdır. Eğer belirtilen yetenek mevcutsa, <userinput>tgetnum</userinput> onun değerini negatif olmayan bir değer olarak döndürür. Eğer belirtilen yetenek uçbirim tanımında yoksa, işlev -1 değeri ile döner.
</para></funcdescr></funcsynopsis>
</para><para xml:id="termcap-tgetflag">
<indexterm scope="termcap-fn"><primary>tgetflag</primary></indexterm>
<funcsynopsis><funcprototype role="işlev">
<funcdef>int <command>tgetflag</command></funcdef>
<paramdef>(char *<varname>isim</varname>);</paramdef>
</funcprototype><funcdescr><para>
<userinput>tgetflag</userinput>  işlevi, değeri mantıksal olan bir yeteneği sorgulamakta kullanılır. Eğer belirtilen yetenek uçbirim tanımında  mevcutsa, <userinput>tgetflag</userinput> 1 ile yoksa 0 ile döner.
</para></funcdescr></funcsynopsis>
</para><para xml:id="termcap-tgetstr">
<indexterm scope="termcap-fn"><primary>tgetstr</primary></indexterm>
<funcsynopsis><funcprototype role="işlev">
<funcdef>char *<command>tgetstr</command></funcdef>
<paramdef>(char  *<varname>isim</varname>,
 char **<varname>alan</varname>);</paramdef>
</funcprototype><funcdescr><para>
<userinput>tgetstr</userinput> işlevi, dizge değerli bir yeteneği sorgulamakta kullanılır.  Belirtilen <varname>isim</varname> uçbirim tanımında mevcut bir yeteneğin ismiyse işlev yeteneğin değerine bir gösterici ile, aksi takdirde bir boş gösterici ile döner.
      </para><para>
<userinput>tgetstr</userinput> işlevinin döndüreceği dizgenin saklanacağı alanı ayırmanın iki yolu vardır:
      </para><para><itemizedlist><listitem><para>
Alanı ayırmasını <userinput>tgetstr</userinput> işlevinden talep edersiniz. <varname>alan</varname> argümanı ile işleve bir boş gösterici aktarırsanız, <userinput>tgetstr</userinput> yeterli alanı ayırmak için <userinput>malloc</userinput> işlevini kullanacaktır. Termcap bu alanı serbest bırakmayacağı gibi aynı alanı tekrar kullanmayacağından, işiniz bittiğinde bu alanı sizin serbest bırakmanız gerekir.
        </para><para>
Ne kadar alan ayrılacağını düşünmeyi gerektirmediğinden bu yöntem daha sağlamsa da, sadece GNU termcap kütüphanesi tarafından desteklenmektedir.
        </para></listitem><listitem><para>
Gerekli alanı kendiniz ayırırsınız. <varname>alan</varname> argümanı olarak <userinput>char *</userinput> türünde bir göstericinin adresini vermelisiniz. <userinput>tgetstr</userinput> işlevini çağırmadan önce bu değişkeni yeterli alanla ilklendirmelisiniz. İşlev çağrıldığında dizge değerini bu alana kaydedecek ve göstericiyi bu kullanılan alanın sonrasını gösterecek şekilde arttıracaktır. Böylece, aynı göstericiyi çok sayıda <userinput>tgetstr</userinput> çağrısı yapmak için kullanabilmeniz mümkün kılınmıştır.
        </para><para>
Tek bir dizge için ne kadar alan gerektiğini saptamanın bir yolu olmadığı gibi ne sizin tarafınızdan ne de kütüphane tarafından bellek taşmalarını önlemenin bir yolu yoktur. Ancak, bir uçbirim tanımından elde edilebilecek tüm dizge değerli yeteneklerin değerlerinin toplam uzunluğu uçbirim tanımı için ayrılan alandan daha büyük olamayacağından aynı uzunlukta bir alanı ayırmak en iyi seçim olacaktır (tabii, aynı yeteneği birden fazla sorgulamamak şartıyla). Böyle bir alanı ayırırken, belirtilecek alanın uzunluğunu <userinput>tgetent</userinput> işlevine ayrılan tamponun uzunluğu olarak <userinput>strlen</userinput> işlevi ile saptayabilirsiniz. Aşağıda böyle bir örneğe yer verilmiştir.
        </para><para>
Gerekli alanı kendinizin ayırması gerekliliği termcap'ın Unix sürümü tarafından desteklenen tek yöntemdir.
        </para></listitem></itemizedlist>
      </para></funcdescr></funcsynopsis>
   </para><para>
Sorgulama işlevlerinde bir uçbirim ismi ya da bir uçbirim tanımı belirtmek zorunda olmadığınızın farkına varmış olmalısınız. Bu işlevler son yapılan <userinput>tgetent</userinput> çağrısında bulunan tanımı özdevinimli kullanırlar.
   </para><para>
Bu örnekte, bir uçbirim tanımındaki çeşitli yetenekler sorgulanırken, koşullar kodun çalışacağı sisteme göre Unix veya GNU yöntemlerine göre ayarlanmaktadır:
   </para><para>
<screen>char *tgetstr ();

char *cl_string, *cm_string;
int height;
int width;
int auto_wrap;

char PC;   /*  tputs için.  */
char *BC;  /* tgoto için.  */
char *UP;

interrogate_terminal ()
{
#ifdef UNIX
  /* Burada tgetent'e term_buffer'ın bizim
     tarafımızdan sağlandığı varsayılmıştır. */
  char *buffer
    = (char *) malloc (strlen (term_buffer));
#define BUFFADDR &amp;buffer
#else
#define BUFFADDR 0
#endif

  char *temp;

  /* Kullanacağımız bilgileri alalım.  */
  cl_string = tgetstr ("cl", BUFFADDR);
  cm_string = tgetstr ("cm", BUFFADDR);
  auto_wrap = tgetflag ("am");
  height = tgetnum ("li");
  width = tgetnum ("co");

  /* termcap işlevlerinin kullanacağı bilgileri alalım.  */
  temp = tgetstr ("pc", BUFFADDR);
  PC = temp ? *temp : 0;
  BC = tgetstr ("le", BUFFADDR);
  UP = tgetstr ("up", BUFFADDR);
}
</screen>
   </para><para>
<userinput>PC</userinput> değişkeni ile ilgili bilgiler için <xref linkend="termcap-Padding"/> bölümüne, <userinput>UP</userinput> ve <userinput>BC</userinput> için ise <xref linkend="termcap-Using-Parameters"/> bölümüne bakınız.
   </para>
  </sect1>
  <sect1 xml:id="termcap-Initialize">
   <title>Termcap Kullanımı için İlklendirme</title>
<indexterm scope="termcap-cp"><primary>uçbirim seçenekleri (çekirdek)</primary></indexterm>
   <para>
Bir uygulama yazılımı termcap'ı kullanarak komutları çıktılamaya başlamadan önce iki şeyi yerine getirmelidir:
   </para><para><itemizedlist><listitem><para>
Termcap kütüphanesi çıktı işlevleri tarafından kullanılan bazı genel değişkenlerin ilklendirilmesi. Bunlardan bazıları <link linkend="termcap-Output-Padding">gecikmeler</link> için <userinput>PC</userinput> ve <userinput>ospeed</userinput> değişkenleri ve <link linkend="termcap-tgoto">imleç hareketleri</link> için  <userinput>UP</userinput> ve <userinput>BC</userinput> değişkenleridir.
     </para></listitem><listitem><para>
Çekirdeğe uçbirime yatay sekme karakterlerinin gönderilmesi ile ilgili gecikme ve değiklik işlemlerini durdurmasının söylenmesi.
     </para></listitem></itemizedlist>
   </para><para>
Çıktılama işlemlerinin kapatılması için Berkeley Unix'te  <userinput>LLITOUT</userinput> isimli biti bir yapmak için <userinput>ioctl</userinput> işlevini <userinput>TIOCLSET</userinput> koduyla çağırmalı ve <userinput>TIOCSETN</userinput> kodunu kullanarak <userinput>ANYDELAY</userinput> bitlerini temizlemelisiniz. POSIX veya System V'de ise <userinput>OPOST</userinput> isimli biti temizlemelisiniz. Daha ayrıntılı bilgi edinmek için bu sistemlerin belgelerine bakınız.
   </para><para>
Uçbirim seçeneklerini düzgünce belirtmezseniz, bazı eski uçbirimler çalışmayacaktır. Bu, çekirdeğin çıktılamadan önce değiştirmesinin gerekli olduğu satırsonu, satırbaşı ve yatay sekme karakterlerini içereren bazı komutların bulunması sebebiyle böyledir.
   </para><para>
Çekirdeğin uçbirim seçeneklerini değiştirdiğiniz takdirde, yazılımınızın çıkarken bunları eski duruma getirmesi önemlidir. Bunun olması için, yazılımınız <userinput>SIGQUIT</userinput> ve <userinput>SIGINT</userinput> gibi ölümcül sinyalleri yakalamalı ve asıl sonlanma öncesi bu uçbirim seçeneklerini eski durumuna getirmelidir.
   </para><para>
Günümüz uçbirimlerinin komutları bu özel karakterleri kullanmadığından eski uçbirimlerin sorunları hakkında dikkatli olmanız gerekmeyeceğinden çekirdeğin uçbirim seçeneklerinde değişiklik yapmanız gerekmez.
   </para>
</sect1>
  <sect1 xml:id="termcap-Padding">
   <title>Geciktirme</title>
<indexterm scope="termcap-cp"><primary>geciktirme</primary></indexterm>
   <para>
<wordasword>Geciktirme</wordasword>, işinin bitmesi uzun zaman alan bir uçbirim ekran komutunun ardından boş karakterlerin çıktılanması demektir. Uçbirim tanımında hangi komutların ne kadar geciktirilmesi gerektiği belirtilir. <userinput>tputs</userinput> işlevi, bir uçbirim komutunu çalıştırırken komuttan geciktirme bilgisini alır ve gerektiği kadar geciktirme uygular.
   </para>
   <sect2 xml:id="termcap-Why-Pad" chunkthis="1">
    <title>Geciktirme Niçin Gerekir ve Nasıl Yapılır</title>
    <para>
Çoğu uçbirim türü yüksek hızlı bir hattan gönderildiğinde, çalışması uzun süren komutlar içerir. Örneğin, ekranın temizlenmesi komutun tamamen alınmasından itibaren 20 ms sürer. 9600 bps'lik bir hatta bağlı bir uçbirim bu süre zarfında hala ekranı temizlemekle meşgulken, çıktılanmak üzere 20 ek karakter alabilirdi. Her uçbirimin, henüz işleme alınmamış karakterleri hatırda tutmak için kullandığı belli bir miktarda tamponlama kapasitesi vardır. Fakat çok yavaş komutlarda tek bir satır bile bu tamponu doldurmak için yeterli olur. Bunların ardından gelen komutların saklanacağı bir yer kalmadığından bu komutlar kaybolup gider.
    </para><para>
Bu sorunla karşılaşmamak için, ekran komutunun gerektirdiği çalışma süresince hattan işe yaramaz karakterler (genellikle boş karakter) göndeririz. Eğer uçbirim çoğu uçbirimin yaptığı gibi bu boş karakterleri tamponu doldurmasın diye yoksayıyorsa, istenen etki sağlanmış olur. Eğer yeterince geciktirme sağlanabilmişse hiçbir çıktı kaybı olmaz. Doğru geciktirme, işlemin yavaşlamasına sebebiyet vermeksizin çıktı kaybını engelleyen geciktirmedir.
    </para><para>
Geciktirme amacıyla hattan gönderilecek boş karakterlerin sayısı hattın hızına göre değişir. 9600 bps'lik bir hattan her ms'de bir karakter gönderilebilir, yani ekranın temizlenmesi için gerekli 20 ms için 20 boş karakter göndermek yeterli olur. 1200 bps'lik bir hat için bu sadece üç karakterlik bir geciktirme demektir.
    </para></sect2>
   <sect2 xml:id="termcap-Not-Enough" chunkthis="1">
    <title>Geciktirme Yetersiz Kalırsa</title>
    <para>
Yetersiz geciktirmenin iyi bilinen bazı göstergeleri vardır.
    </para><para><itemizedlist>
     <listitem>
      <para>
Emacs ekranın altında <userinput>I-search: ^Q-</userinput> çıktılar.
      </para><para>
Bu uçbirim tamponunun ekran komutları ile tamaen dolduğu anlamına gelir, böylece bilgisayara artık birşey göndermemesini söylemeyi denemiş olur.
      </para></listitem><listitem><para>
Ekran fasılalı olarak bozunmaya uğrar ya da siz eylemi yinelerken bozunmanın ayrıntıları değişir. (Bozunmaya uğramış bir ekranın başlıca sebebi bir komutun basitçe yanlış uygulanması ya da kullanıcının seçimlerinin uçbirim tanımındaki kabullerle uyumsuz olmasıdır ki, bundan genelde geridönüş yoktur -- kilitlenme.)
      </para><para>
Bu, tamponun dolmadığı halde bazı komutların kaybedilmesi demektir. Hangi komutun kaybedileceği çok sayıda olasılığa bağlı olarak değişiklik gösterir.
      </para></listitem><listitem><para>
Ekran yüksek hızlarda bozunmaya uğrarken düşük hızlarda bu olmaz. Geciktirme sorunları hemen hemen daima hız azaltılınca kaybolur, 1200 baud için bile.
      </para><para>
Bu, daha yüksek bir hızda komutların icra süresinden daha hızlı alınması demektir.
      </para></listitem></itemizedlist></para><para>
Esrarengiz bir uçbirim üzerinde her esrarengiz komut geciktirme sorunlarına yol açabilir. Pratikte bu sorunlarla karşılaşılan komutlar çoğunlukla, <userinput>cl</userinput> ve <userinput>cd</userinput> <link linkend="termcap-Clearing">ekran temizleme komutları</link>, <userinput>sf</userinput> ve <userinput>sr</userinput> <link  linkend="termcap-Scrolling">ekran kaydırma komutları</link> ile <userinput>al</userinput> ve <userinput>dl</userinput> <link linkend="termcap-Insdel-Line">satır ekleme ve satır silme komutlarıdır</link>.
    </para><para>
Bazan uçbirim tanımı <userinput>sf</userinput> tanımında başarısız olur, bu durumla karşılaşmamak için bazı uygulamalar bunun yerine <userinput>do</userinput> kullanır, yani sorun karşınıza <userinput>do</userinput> ile ilgili olarak çıkabilir.  Böyle bir durumda, <userinput>do</userinput> için olduğu gibi önce <userinput>sf</userinput>'yi tanımlar ardından da <userinput>sf</userinput>'ye biraz geciktirme eklersiniz.
    </para><para>
En iyi strateji baştan 200 ms'lik bir geciktirme eklemektir. Bu yeterince fazladır; aslında, gözle görünür bir yavaşlamaya sebep olması gerekir. (Eğer böyle bir yavaşlık görmüyorsanız, değişiklik etkin olmamıştır; bkz. <xref linkend="termcap-Changing"/>.) Eğer bu sorunu gideriyorsa, geciktirmeyi uygulayacak doğru yeri bulmuşsunuz demektir; artık sorun ortaya çıkana kadar geciktirmeyi azaltabilirsiniz, sorun ortaya çıkınca da tekrar arttırırsınız. Eğer sorun devam ediyorsa ya sorun başka bir yetenekle ilgilidir ya da yetenek için geciktirme anlamlı değildir.
    </para><para>
Çoğu uçbirim imleç konumuna bağlı ekran kaydırma ve satır ekleme/silme için doğru geciktirmelere sahip olduğundan o kadar tasalanmayın. Eğer ekranın büyükçe bir bölümünü kaydırırken bu sorunla karşılaştığınız halde küçük bir bölümünü kaydırıken sorun çıkmıyorsa, bu, konuma bağlı gecikme yerine sabit gecikme kullanmanız gerekli olduğu anlamına gelebilir.
    </para></sect2>
   <sect2 xml:id="termcap-Describe-Padding" chunkthis="1">
    <title>Uçbirim Tanımında Geciktirmenin Belirtilmesi</title>
    <para>
Uçbirim tanımındaki, her ekran komutunun başında kendi için gerekli geciktirme miktarını belirten bir dizi rakam bulunur. Bu rakamlar geciktirme süresinin ms cinsinden ifadesidir. Bu rakamları isteğe bağlı olarak bir nokta ve bir rakam izleyebilir; bu, gerektiğinde onda bir milisaniyeleri belirtebilmek için kullanılır.
    </para><para>
Bazan komutun ihtiyaç  duyduğu geciktirme imlecin konumuna bağlıdır. Örneğin, satır girme komutunun gerektirdiği süre bir satırın aşağı taşınıp boş bir satır elde edilmesi için kullanıldığından ihtiyaç duyulan süre satır sayısına bağlıdır. Geciktirme süresinden sonra bir yıldız işareti (<userinput>*</userinput>) koyarak geciktirme süresinin komuttan etkilenen satır sayısının katları oranında arttırılacağını belirtmiş oluruz.
    </para><para><screen>:al=1.3*\E[L:</screen>
    </para><para>
Bu, bir uçbirim için satır girme komutunun tanımı olsun. Buradaki geciktirme süresi her satır için 1.3 milisaniyedir. Komutun kendisi ise <userinput><keycap>ESC</keycap> [ L</userinput>'dir.
    </para><para>
Bu şekilde belirtilmiş geciktirme süresi  <userinput>tputs</userinput>'a çıktıya kaç ek karakter göndereceğini belirtir. Bkz. <xref linkend="termcap-Output-Padding"/>.
    </para><para>
Tüm komutlar için geciktirmeyi etkileyen iki özel yetenek vardır. Bunların isimleri <userinput>pc</userinput> ve <userinput>pb</userinput>'dir.   <userinput>pc</userinput> değişkeni geciktirme için kullanılacak karakteri,  <userinput>pb</userinput> ise geciktirmenin gerekmediği hız değerini içerir. Bu değişkenler için öntanımlı değerler sırasıyla boş karakter ve 0'dır. Bu değerler çoğu uçbirimde böyledir. Bkz.  <xref linkend="termcap-Pad-Specs"/>.
    </para></sect2>
   <sect2 xml:id="termcap-Output-Padding" chunkthis="1">
    <title><literal>tputs</literal> ile Geciktirme</title>
<indexterm scope="termcap-cp"><primary>hat hızı</primary></indexterm>
<indexterm scope="termcap-fn"><primary>tputs</primary></indexterm>
   <para>
<link linkend="termcap-Describe-Padding">Önceki bölümlerde açıklanan geciktirme işlemini</link> gerçekleştirmek için bir termcap işlevi olan <userinput>tputs</userinput> kullanılır. <userinput>tputs</userinput> işlevi komutun tanımından geciktirme belirtimini ayırdıktan sonra komutu çıktıya gönderir; bu dizgenin hemen ardından geciktirme belirtimine uygun sayıda boş karakteri gönderir.
</para><para xml:id="termcap-tputs">
<indexterm scope="termcap-fn"><primary>tputs</primary></indexterm>
<funcsynopsis><funcprototype role="işlev">
<funcdef>int <command>tputs</command></funcdef>
<paramdef>(char  *<varname>dizge</varname>,
 int    <varname>satır_sayısı</varname>,
 int  (*<varname>çıktı_işlevi</varname>) ());</paramdef>
</funcprototype><funcdescr><para>
Burada <varname>dizge</varname> çıktılanacak dizge (geciktirme belirtimini de içerir); <varname>satır_sayısı</varname> işlemden etkilenen satır sayısı (eğer komutun tanımı <userinput>*</userinput> ile biten bir geciktirme belirtimi içeriyorsa, bu değer geciktirme süresi ile çarpılır). Son argüman olan <varname>çıktı_işlevi</varname> ise argüman olarak tek karakter alacak (<userinput>fputchar</userinput> gibi) ve geciktirme için gönderilecek karakterleri çıktılayacak işlevin ismi olmalıdır.
    </para>
<indexterm scope="termcap-fn"><primary>ospeed</primary></indexterm>
<indexterm scope="termcap-fn"><primary>PC</primary></indexterm>
    <para>
<userinput>tputs</userinput> ile ilgili işlemlerin denetimi <userinput>ospeed</userinput> ve <userinput>PC</userinput> isimli iki değişkenle yapılır. <userinput>ospeed</userinput> değeri uçbirimin çıktılama hızı kabul edilir, <userinput>ioctl</userinput> sistem çağrısı onunla kodlandığında hız bilgisi ile döner. Bu değer geciktirme amacıyle yollanacak karakterlerin sayısını hesaplamakta kullanılır. <userinput>PC</userinput> değişkeni ise geciktirme amacıyla kullanılacak karakteri içerir.
    </para><para>
<userinput>tputs</userinput> işlevini kullanmadan önce bu değişkenleri uygun değerlerle ilklendirmiş olmalısınız. <userinput>PC</userinput> değişkeninin değeri uçbirim tanımındaki <userinput>pc</userinput> yeteneğinden elde edilmelidir (bkz. <xref linkend="termcap-Pad-Specs"/>). Tanım bir <userinput>pc</userinput> yeteneği içermiyorsa bu değişkeni 0 ile ilklendirin.
    </para><para>
<varname>satır_sayısı</varname> argümanı biraz daha fazla ilgi gerektirir. Normalde, komut tarafından yeri değiştirilen ve boşaltılan satır sayısıdır. İmleç hareket komutlarında ya da tek satırlık düzenleme komutlarında 1 değeri kullanılır. <userinput>al</userinput> (bir satır gir) ve <userinput>cd</userinput> (imleçten ekranın sonuna kadar sil) gibi birden fazla satırı etkileyen komutlarda ise bu değer ekran yüksekliği eksi o anki düşey konum olmalıdır (başlangıç 0'dır). <userinput>AL</userinput> (çok sayıda satır ekle) gibi çok sayıda satır ekleme ve ekran kaydırma komutlarında da değer bu şekile saptanır; girilen satırların sayısı olarak "değil".
    </para><para>
Bir komut tarafından etkilenen satırların sayısını azaltmak için pencere kaydırma özelliği kullanılıyorsa, <varname>satır_sayısı</varname> değeri bunu hesaba katmalıdır. Bu, geciktirme süresinin uçbirimin ne kadar süreyle meşgul olacağına bağlı olmasından dolayıdır ve pencere kaydırma özelliği bu süreyi kısaltır. Bkz. <xref linkend="termcap-Scrolling"/>.
    </para><para>
<userinput>ic</userinput> ve <userinput>dc</userinput> komutları da (karakter ekleme ve silme komutları) imleç konumundan satır sonuna kadar sütun sayısı olarak bu komuttan etkilenen karakter sayısına bağlı olarak geciktirme gerektirmeleriyle biraz sorunludurlar. Bu bağımlılığın belirtilmesini mümkün kılacak bir yol olsaydı iyi olurdu, böylece  bu komutlar için <varname>satır_sayısı</varname> değerinin aslında etkilenen sütun sayısı olduğunu söylemek zorunda kalmazdık. Ancak, termcap tanımına göre <varname>satır_sayısı</varname> daima etkilenen satırların sayısıdır, bu durumda bile bu böyledir ve bu durum için bu değer 1'dir. Bu kuralı artık değiştirmek kolay değildir, çünkü artık yazılmış çok fazla uygulama ve uçbirim tanımı var.
    </para><para>
<userinput>ic</userinput> ve <userinput>dc</userinput> dizgeleri için
<varname>satır_sayısı</varname> daima 1 olduğundan, bunlar için <userinput>*</userinput> kullanmak anlamlı değildir ama yine de bazıları bunu yapıyor. Bunlar <userinput>*</userinput> imi silinerek düzeltilmelidir. Eğer bir gün böyle girdiler kullanılmamaya başlarsa, herhangi bir yazılımı etkilemeksizin bu işlemler için <varname>satır_sayısı</varname> argümanı yerine daha elverişli bir uzlaşım kullanmak mümkün olabilir.
    </para></funcdescr></funcsynopsis></para>
</sect2></sect1>
  <sect1 xml:id="termcap-Parameters">
   <title>Parametreler</title>
<indexterm scope="termcap-cp"><primary>parametreler</primary></indexterm>
   <para>
Bazı uçbirim denetim dizgeleri sayısal <wordasword>parametreler</wordasword> gerektirir. Örneğin, imlecin yerini değiştirirken, onun taşınacağı yatay ve düşey konumları belirtmeniz gerekir. imlecin nasıl taşınacağını belirleyen uçbirimin <userinput>cm</userinput> yeteneğinin değeri basitçe bir dizge değeri olamaz;  imleç konumlarının nasıl ilerletileceği komutun onu nereye koyacağı belirtilmelidir.
   </para><para>
Termcap belirtimi, hangi dizge değerli yeteneklerin kaç tane parametre gerektirdiği ve bu parametrelerin anlamları gibi uzlaşımlar içerir. Örneğin, belirtim, <userinput>cm</userinput> dizgesi için üst sol köşe 0,0 olmak üzere düşey ve yatay konumları belirten iki parametre alır, der. Bu uzlaşımlar her komut için belgede açıklanmıştır.
   </para><para>
Termcap ayrıca, yetenek belirtimlerinde kullanılmak üzere çıktı parametrelerinin nerede nasıl kodlanacağını belirleyen bir dil de tanımlamıştır. Bu dil <userinput>%</userinput> karakteri ile başlayan karakter dizileri kullanır. (Fikir <userinput>printf</userinput>'deki ile aynı olduğu halde, ayrıntılar bakımından biraz farklıdır.) Dilin parametre kodlaması ile ilgili kısmı bu bölümde anlatılacaktır.
   </para><para>
Ekrana çıktılama yaparken belirtime göre parametreleri kodlamak için bir yazılım <userinput>tparam</userinput> ya da <userinput>tgoto</userinput> işlevini çağırır. Bu işlevler çıktılanacak komutu içeren bir dizge üretirler (keza, bir geciktirme belirtimi de <userinput>tputs</userinput> ile işlenir; bkz. <xref linkend="termcap-Padding"/>).
   </para>
   <sect2 xml:id="termcap-Encode-Parameters" chunkthis="1">
    <title>Kodlamanın Açıklaması</title>
<indexterm scope="termcap-cp"><primary>parametrelerin kodlanması</primary></indexterm>
   <para>
Parametre gerektiren bir uçbirim komut dizgesi, bu parametrelerin nasıl kodlanacağının bir belirtimi olarak <userinput>%</userinput> karakteri ile başlayan özel karakter dizileri içerir. Bu diziler <userinput>tparam</userinput> ve <userinput>tgoto</userinput> işlevlerinin eylemlerini denetim altına almak için kullanılır.
    </para><para>
<userinput>tparam</userinput> ve <userinput>tgoto</userinput> işlevlerine aktarılacak parametre değerlerinin bir vektör biçiminde olacağı varsayılır. Bu vektör içindeki bir gösterici işlenecek sonraki paremetreyi belirler. <userinput>%</userinput>'li dizilerin bazıları tek bir parametreyi kodlar ve göstericiyi sonraki parametreye ilerletir. Bazıları da çıktı üretmeksizin ya göstericiyi ya da parametre değerini değiştirir.
    </para><para>
Örneğin, bir standart ANSI uçbiriminin <userinput>cm</userinput> dizgesi  <userinput>\E[%i%d;%dH</userinput> biçiminde yazılır. (<userinput>\E</userinput>, <keycap>ESC</keycap>'e karşılıktır.) <userinput>cm</userinput> teamülen daima iki parametre gerektirir: düşey ve yatay konum; yani bu dizge iki parametrenin kodlanmasını gerektirir. Burada <userinput>%i</userinput> kendinden sonra gelen iki değeri 1 arttırır. <userinput>%d</userinput>'ler ise değerleri birer onluk sayı olarak kodlar. Eğer imleç konum değerleri 20,58 olacaksa bu dizge, sonucu <userinput>\E[21;59H</userinput> olacak şekilde kodlanmalıdır.
    </para><para>
Öncelikle, bunlar çıktı üreten <userinput>%</userinput> dizileridir. <userinput>%%</userinput> dışında herbiri bir parametreyi kodlayıp göstericiyi sonraki parametreye ilerletir.
    </para><para><variablelist><varlistentry>
      <term><literal>%%</literal></term><listitem><para>
Tek bir <userinput>%</userinput> çıktılar.  Sadece <userinput>%</userinput> işaretini çıktılamak içindir. <userinput>%%</userinput> bir parametre olarak değerlendirilmez.
       </para></listitem></varlistentry><varlistentry>
      <term><literal>%d</literal></term><listitem><para>
<userinput>printf</userinput> işlevindeki gibi parametresini onluk sayı olarak çıktılar.
       </para></listitem></varlistentry><varlistentry>
      <term><literal>%2</literal></term><listitem><para>
<userinput>printf</userinput> işlevindeki <userinput>%02d</userinput> gibidir: parametresini onluk sayı olarak çıktılar ve daima an az iki rakam kullanır.
       </para></listitem></varlistentry><varlistentry>
      <term><literal>%3</literal></term><listitem><para>
<userinput>printf</userinput> işlevindeki <userinput>%03d</userinput> gibidir: parametresini onluk sayı olarak çıktılar ve daima an az üç rakam kullanır.
</para><para><note><para><userinput>%4</userinput> ve daha büyük diziler tanımlanmamıştır.</para></note>
       </para></listitem></varlistentry><varlistentry>
      <term><literal>%.</literal></term><listitem><para>
Parametre değerini tek bir karakterin ASCII kodu olarak yorumlar ve karakteri çıktılar. <userinput>printf</userinput> işlevindeki <userinput>%c</userinput> gibidir.
       </para></listitem></varlistentry><varlistentry>
      <term><literal>%+<varname>karakter</varname></literal></term><listitem><para>
Parametre değerini <varname>karakter</varname> karakterine ekleyerek sonucu çıktılar. Örneğin, `<userinput>%+ </userinput>' ile 0 değeri boşluk, 1 değeri <userinput>!</userinput> olarak çıktılanır.
       </para></listitem></varlistentry></variablelist>
    </para><para>
Aşağıdaki <userinput>%</userinput> dizileri bir parametreyi çıktılamazlar parametrelerde (değer ya da sıralarında) değişikliğe sebep olurlar, yani sadece yan etkilerinden yararlanılır. Ayrıca gösterici konumunu açıkça belirtilmedikçe ilerletmezler. Standart Unix termcap'i sadece <userinput>%i</userinput>, <userinput>%r</userinput> ve <userinput>%&gt;</userinput> dizilerini tanımlamıştır. Diğerleri GNU oluşumudur.
    </para><para><variablelist><varlistentry>
      <term><literal>%i</literal></term><listitem><para>
Sonraki iki parametrenin değerlerini 1 arttırır. Bu imleç başlangıcını 0 değilde 1 kabul eden uçbirimlerde kullanılır. Örneğin, <userinput>%i%d,%d</userinput> iki parametreden 0 olanını 1, 1 olanını 2 olarak çıktılayacaktır.
       </para></listitem></varlistentry><varlistentry>
      <term><literal>%r</literal></term><listitem><para>
Sonraki iki parametrenin yerlerini değiştirir. İmlecin yeri belirtilirken yatay konumun önce belirtilmesi gereken uçbirimlerde yararlıdır.
       </para></listitem></varlistentry><varlistentry>
      <term><literal>%s</literal></term><listitem><para>
Sonraki parametrenin atlanmasını sağlar. Bir çıktı üretmez.
       </para></listitem></varlistentry><varlistentry>
      <term><literal>%b</literal></term><listitem><para>
Bir parametreyi yedekler. Bu parametre son parametre ise tekrar çıktılanacak son parametre haline gelecek ve sonraki çıktı komutu tarafından kullanılacaktır. <userinput>%b</userinput>'i birden fazla kullanarak çok sayıda parametreyi hatta bir parametreyi defalarca yedekleyebilirsiniz.
       </para></listitem></varlistentry><varlistentry>
      <term><literal>%&gt;</literal><varname>c1</varname><varname>c2</varname></term>
      <listitem><para>
Sonraki parametreyi koşullu arttırır. Burada <varname>c1</varname> ve <varname>c2</varname> ASCII kodları sayısal olarak verilmiş iki karakterdir. Eğer sonraki parametre <varname>c1</varname>'in ASCII kodundan büyükse, parametreye <varname>c2</varname>'nin ASCII kodu eklenir.
       </para></listitem></varlistentry><varlistentry>
      <term><literal>%a </literal><varname>işleç</varname> <varname>tür</varname> <varname>konum</varname></term>
      <listitem><para>
Kendinden sonraki parametreye bir aritmetik işlem uygular. Burada <varname>işleç</varname> aritmetik işlemin işleci, <varname>tür</varname> ve <varname>konum</varname> ise ikisi birlikte, işleme sokulacak "diğer terimi" belirtir. Herhangi bir çıktı üretilmez.
       </para><para>
İfade içindeki boşluklar terimleri ayırmak içindir; bu boşluklar veritabanında görünmez, sadece 5 karakter uzunlukta bir dizi bulunur.
       </para><para>
<varname>işleç</varname> karakteri uygulanacak aritmetik işlem çeşidini belirten bir işleçtir. Şu karakterlerden biri olmalıdır:
       </para><para><variablelist><varlistentry>
         <term><literal>=</literal></term><listitem><para>
Sonraki parametreye "diğer terimi" atar, eski değer yoksayılır.
          </para></listitem></varlistentry><varlistentry>
         <term><literal>+</literal></term><listitem><para>
Sonraki parametreye "diğer terimi" ekler.
          </para></listitem></varlistentry><varlistentry>
         <term><literal>-</literal></term><listitem><para>
Sonraki parametreden "diğer terimi" çıkarır.
          </para></listitem></varlistentry><varlistentry>
         <term><literal>*</literal></term><listitem><para>
Sonraki parametre ile "diğer terimi" çarpar.
          </para></listitem></varlistentry><varlistentry>
         <term><literal>/</literal></term><listitem><para>
Sonraki parametreyi "diğer terime" böler.
          </para></listitem></varlistentry></variablelist>
       </para><para>
"Diğer terim" bir sabit olabileceği gibi, başka bir parametre de olabilir; <varname>tür</varname> karakteri bunu belirtmek içindir. Şunlardan biri olabilir:
       </para><para><variablelist><varlistentry>
         <term><literal>p</literal></term><listitem><para>
Başka bir parametre kullanılır. <varname>konum</varname> ile hangi parametrenin kullanılacağı belirtilir. <varname>konum</varname> karakterinin ASCII kodundan 64 çıkarıldığında kalan, "diğer terim" olarak kullanılacak parametrenin bu parametreye göre (göreli) konumunu vermelidir. <varname>konum</varname> olarak <userinput>A</userinput> karakteri verilmişse "diğer terim" olarak sonraki parametreden sonraki parametre kullanılır. Karakter <userinput>?</userinput> ise sonraki parametreden önceki parametre kullanılır.
          </para></listitem></varlistentry><varlistentry>
         <term><literal>c</literal></term><listitem><para>
Değerin bir sabit olduğunu belirtir. <varname>konum</varname> karakteri ile sabitin değeri belirtilir. 0200 biti boştur, dolayısıyla 0200 sıfır için kullanılabilir.
          </para></listitem></varlistentry></variablelist>
        </para></listitem></varlistentry></variablelist>
    </para><para>
Aşağıdaki <userinput>%</userinput> dizileri esrarengiz uçbirimlerin tuhaf tasarımlarına imkan vermek için kullanılan özel amaçlı dizilerdir. Genellikle sonraki bir ya da iki parametre üzerinde işlem yaparlar, başka parametre kullanmazlar ve bir çıktı üretmezler. <userinput>%m</userinput> bir GNU oluşumudur, diğerleri standart Unix termcap'ta tanımlıdır.
    </para><para><variablelist><varlistentry>
      <term><literal>%n</literal></term><listitem><para>
Sonraki parametreye 0140 ile "ayrıcalıklı veya" uygular, ondan sonraki parametreye de aynısını yapar.
       </para></listitem></varlistentry><varlistentry>
      <term><literal>%m</literal></term><listitem><para>
Sonraki parametrenin bitlerinin eşleniğini alır, bunu sonraki parametreye de uygular.
       </para></listitem></varlistentry><varlistentry>
      <term><literal>%B</literal></term><listitem><para>
Sonraki parametreye BCD kodlaması uygular. Bu C deyimi yeni değerin nasıl hesaplandığını göstermektedir:
       </para><para>
<screen><varname>parm</varname> = (<varname>parm</varname> / 10) * 16 + <varname>parm</varname> % 10;
</screen>
       </para></listitem></varlistentry><varlistentry>
      <term><literal>%D</literal></term><listitem><para>
Delta Data uçbirimlerin gerektirdiği dönüşümü sonraki parametreye uygular. Bu C deyimi yeni değerin nasıl hesaplandığını göstermektedir:
       </para><para>
<screen>
<varname>parm</varname> -= 2 * (<varname>parm</varname> % 16);
</screen>
      </para></listitem></varlistentry></variablelist></para>
   </sect2><sect2 xml:id="termcap-Using-Parameters" chunkthis="1">
    <title>Ekran Komutlarının Parametrelerle Gönderilmesi</title>
    <titleabbrev><userinput>tparam</userinput> ve <userinput>tgoto</userinput> işlevleri</titleabbrev>
    <para>
Termcap kütüphanesinin <userinput>tparam</userinput> ve <userinput>tgoto</userinput> işlevleri uçbirim dizge parametreleri için <userinput>printf</userinput> işlevinin yaptığına benzer şekilde kullanılabilir. Yeni <userinput>tparam</userinput> işlevi bir GNU oluşumudur, daha genel amaçlıdır ancak, Unix termcap'ta yoktur. İmleç hareketleri için bir parametre kodlama işlevi olarak <userinput>tgoto</userinput> tercih edilen bir işlevdir.
    </para><para>
<userinput>tparam</userinput> işlevi herhangi bir sayıdaki parametreye sahip ekran komutlarını kodlayabilir ve bir tampon alanı belirtmenizi mümkün kılar. <userinput>cm</userinput> yeteneği dışında tüm yeteneklerin parametreleri için tercih edilen bir işlevdir.
</para><para xml:id="termcap-tparam">
<indexterm scope="termcap-fn"><primary>tparam</primary></indexterm>
<funcsynopsis><funcprototype role="işlev">
<funcdef>char *<command>tparam</command></funcdef>
<paramdef>(char  *<varname>biçim_dizgesi</varname>,
 char  *<varname>tampon</varname>,
 int    <varname>boyut</varname>,
 int    <varname>parm1</varname>,
 ...);</paramdef>
</funcprototype><funcdescr><para>
Burada, <varname>biçim_dizgesi</varname>'nin bir uçbirim yeteneğinin değeri olacağı varsayılır; <varname>tampon</varname> ve <varname>boyut</varname> ise çıktı tamponu içindir. <varname>parm1</varname>, ... ise biçim dizgesinde kodlanacak tamsayı parametrelerdir. <userinput>tparam</userinput> işlevi biçim dizgesi içindeki <userinput>%</userinput> dizilerini parametrelerle kodlayarak sonucu tampona kopyalar.
     </para><para>
Çıktı tamponunu adresiyle <varname>tampon</varname> argümanında, bayt cinsinden boyuyla <varname>boyut</varname> argümanında siz tanımlayabilirsiniz. Eğer ayırdığınız alan yetersiz kalırsa, <userinput>tparam</userinput> işlevi <userinput>malloc</userinput>'u kullanarak tamponu büyütür. Her iki durumda da
<userinput>tparam</userinput> tamponun adresi ile döner. Eğer dönüş değeri <varname>tampon</varname> ile aynıysa sizin ayırdığınız alan kullanılmıştır, değilse, işlev yeni bir tampon ayırmıştır ve onu da çıktılama tamamlanınca siz serbest bırakmalısınız. Eğer işleve <varname>boyut</varname> ve
<varname>tampon</varname> olarak 0 değeri aktarmışsanız, tampon için gerekli alanı <userinput>tparam</userinput> kendisi ayırır.
     </para><para>
Parametre gerektirmekten başka geciktirme belirtilmesi zorunlu olan yeteneklerde <userinput>tparam</userinput> tarafından üretilen çıktı için <userinput>tputs</userinput> kullanmalısınız. Bkz. <xref linkend="termcap-Padding"/>.  Burada buna bir örnek verilmiştir:
     </para><para>
<screen>{
char *buf;
char buffer[40];

buf = tparam (command, buffer, 40, parm);
tputs (buf, 1, fputchar);
if (buf != buffer)
free (buf);
}
</screen>
     </para><para>
Eğer sıfır değerli bir parametre <userinput>%.</userinput> tarzı kodlama ile kodlanırsa, <userinput>tputs</userinput> buna memnun olmayacak ve bu bir sürü soruna yol açacaktır.  Fakat, şansa bakın ki, <userinput>%.</userinput> tarzı kodlama birkaç modası geçmiş uçbirim tarafından sadece <userinput>cm</userinput> yeteneğinde kullanılmaktadır. Bu sorunla karşılaşmamak için <userinput>cm</userinput> yeteneğini kodlarken <userinput>tparam</userinput> işlevini değil <userinput>tgoto</userinput> işlevini kullanın.
       </para></funcdescr></funcsynopsis>
     </para><para>
İmleç hareketlerinde bazı özel durumlar <userinput>tgoto</userinput> işlevinin kullanılmasını gerektirmektedir. <userinput>tgoto</userinput> kullanmanızı gerektiren sebepler şunlardır:
     </para><para><itemizedlist>
      <listitem><para>
Unix uyumluluğu için. Çünkü Unix termcap, <userinput>tparam</userinput> işlevine sahip değildir.
       </para></listitem><listitem><para>
<userinput>cm</userinput> yeteneği için. <userinput>tgoto</userinput> işlevi,  parametre kodlamasında bazı eski model uçbirimlerdeki boş karakter, sekme ve satırsonu karakteri ile ilgili sorunları önlemek amacıyla bu yetenek için <userinput>%.</userinput>  kodlamasını kullanır.
       </para></listitem></itemizedlist>
</para><para xml:id="termcap-tgoto">
<indexterm scope="termcap-fn"><primary>tgoto</primary></indexterm>
<funcsynopsis><funcprototype role="işlev">
<funcdef>char *<command>tgoto</command></funcdef>
<paramdef>(char *<varname>cm_dizgesi</varname>,
 int   <varname>yatay_konum</varname>,
 int   <varname>düşey_konum</varname>);</paramdef>
</funcprototype><funcdescr><para>
İşlevin üç argümanı vardır: uçbirim tanımının <userinput>cm</userinput> dizgesi ile imlecin yatay ve düşey konumları. <userinput>tgoto</userinput> parametreli dizgeyi bir iç tamponda kendisi hazırlar ve bu tamponun adresi ile döner. İşlevin daha sonraki kullanımlarında <userinput>tgoto</userinput> aynı tamponu yeniden kullanacaktır.
     </para><para>
<userinput>%.</userinput> kodlaması ile kodlanan parametreler boş karakterler, sekmeler ve satırsonu karakterleri üretebilir. Bunlar sorunlara yol açabilir: Boş karakterler <userinput>tputs</userinput>'un dizgenin sonuna gelindiğini varsaymasına sebep olabilir. Sekmeler, çekirdeğin veya başka bir uygulamanın bu karakteri boşluklarla genişletmesine sebep olabilir. Satırsonu karakterlerinde ise çekirdek bir satırbaşı karakteri ekleyebilir ya da satırsonunu aşmak için normal olarak satırın sonunu boşluklar ekleyebilir. Bu tür sorunlarla karşılaşmamak için <userinput>tgoto</userinput> bu karakterlerden kaçınmada dikkatlidir. Pek iyi de, bunu nasıl yapar: Hedef imleç konumu (sıfır, dokuz ya da on) böyle bir soruna yol açacak gibiyse, <userinput>tgoto</userinput> konumu bir arttırır ve böylece imlecin bir dizge eklenerek bir konum geri ya da yukarı hareket etmesine engel olur (sorunu telafi eder).
     </para>
<indexterm scope="termcap-fn"><primary>UP</primary></indexterm>
<indexterm scope="termcap-fn"><primary>BC</primary></indexterm>
     <para>
Geri ya da yukarı taşıma için kullanılacak telafi dizgeleri <userinput>BC</userinput> ve <userinput>UP</userinput> isimli genel değişkenlerde bulunur. Bunlar büyük harfli isimleriyle aslında birer <literal>external</literal> C değişkenleridir ve <userinput>char *</userinput> türünde bildirilirler. Uygun değerleri siz belirtirsiniz. Bu değerler normalde, uçbirim tanımından <userinput>tgetstr</userinput> işlevi kullanılarak <userinput>le</userinput> ve <userinput>up</userinput> uçbirim yeteneklerinden elde edilir. Ayrıca, bu iki değişken sıfır da olabilir, bu durumda boş karakterler, sekmeler ve satırsonu karakterleri ile ilgili sorunların telafisine çalışılmaz.
     </para><para>
<userinput>BC</userinput> ve <userinput>UP</userinput> değişkenlerinin değerleri sıfır olduğunda <userinput>tgoto</userinput> işlevi sadece <userinput>cm</userinput> dışında, diğer tüm komutlar için güvenlidir.
     </para><para><note><para>
<userinput>tgoto</userinput> işlevinde yatay ve düşey konum argümanları ters sıradadır. Hatta <userinput>cm</userinput> dizgesinde bile düşey konum parametresi yatay konum parametresinden öncedir. Eğer <userinput>tgoto</userinput> işlevini <userinput>AL</userinput> gibi tek parametre alan bir komut ile kullanıyorsanız, parametreyi <varname>düşey_konum</varname> argümanı ile işleve aktarmalısınız.
     </para></note></para></funcdescr></funcsynopsis></para>
 </sect2></sect1></chapter>
 <chapter xml:id="termcap-Data-Base">
  <title>Veritabanının Biçimi</title>
  <para>
Uçbirim tanımının termcap veritabanı <userinput>/etc/termcap</userinput> dosyasında saklanır. Bu dosya uçbirim tanımları, boş satırlar ve açıklamalardan oluşur.
  </para><para>
Bir uçbirim tanımı uçbirim türü için bir ya da daha fazla isim ile başlar. Tanım bilgisi ardarda sıralanmış <wordasword>yetenek isimleri</wordasword> ile bunların değerlerinden oluşur. Uçbirimi, anlamları standart olan <link linkend="termcap-Capabilities">yetenek isimleri</link> ve bunların değerleri tanımlar.
  </para>
  <sect1 xml:id="termcap-Format">
   <title>Uçbirim Tanımının Biçimi</title>
<indexterm scope="termcap-cp"><primary>tanım biçimi</primary></indexterm>
   <para>
Termcap veritabanında, açıklamalar (<userinput>#</userinput> ile başlayan satırlardır ve yoksayılırlar) dışında, boş olmayan her satır bir uçbirim tanımıdır. Bir uçbirim tanımı normalde tek bir satırdan oluşur, ancak satırsonu karakterinden önce bir <userinput>\</userinput>  ekleyerek tanım çok sayıda satıra bölünebilir. Eklenen bu iki karaktere bir <userinput>\ satırsonu</userinput> dizgesi olarak bir tanım içinde rastlanırsa bu dizgeler yoksayılırlar (yani böyle satırlar tek bir satır gibi ele alınır).
   </para><para>
Tercih edilen yöntem tanımı yeteneklerine göre bölümlere ayırmaktır: Her sütunun hemen önüne dört karakter, <userinput>: \ satırsonu sekme</userinput> yerleştirilir. Böylece her alt satırın aynı girinti miktarı ile başlaması sağlanmış olur. <userinput>\ satırsonu</userinput> dizgeleri yoksayıldığından geriye <userinput>: tab :</userinput> kalır. Bir yetenek ilk iki nokta üstüste karakterinde biterken diğer yetenek ikincisinden başlar ve bu böyle gider. Eğer sadece  <userinput>\ satırsonu</userinput> ile ayırırsanız ardına bir girinti ekleyemeyebilirsiniz.
   </para><para>
Gerçek bir uçbirim tanımı örneği:
   </para><para>
<screen>dw|vt52|DEC vt52:\
        :cr=^M:do=^J:nl=^J:bl=^G:\
        :le=^H:bs:cd=\EJ:ce=\EK:cl=\EH\EJ:\
        :cm=\EY%+ %+ :co#80:li#24:\
        :nd=\EC:ta=^I:pt:sr=\EI:up=\EA:\
        :ku=\EA:kd=\EB:kr=\EC:kl=\ED:kb=^H:
</screen>
   </para><para>
Her uçbirim tanımı uçbirimin türünü ifade eden isimlerden oluşan bir liste ile başlar. İsimler birbirlerinden <userinput>|</userinput> karakteri ile ayrılır ve liste bir iki nokta üstüste karakteri ile sonlandırılır. İlk isim uçbirimin kısa ismidir ve iki karakter uzunlukta olmalıdır, bu isim sadece çok eski Unix sistemlerinde kullanılırdı; günümüz sistemlerinde kullanılmamaktadır. Listedeki son isim ise "DEC vt52" veya "Ann
Arbor Ambassador with 48 lines" gibi uçbirimin tam ismi olmalıdır. Diğer isimler kullanıcının bu uçbirim türünü kullanmak istediğinde belirteceği isimler olmalıdır, <userinput>vt52</userinput> veya <userinput>aaa-48</userinput> gibi. Uçbirim isimlerinin nasıl seçildiği <xref linkend="termcap-Naming"/> bölümünde açıklanmıştır.
   </para><para>
Uçbirim isimlerinden sonra uçbirim yetenekleri listesi gelir ve bunlar da iki nokta üstüste karakterleri ile ayrılırlar. Her yeteneğin iki harften oluşan bir ismi vardır; örneğin, ekranın satır sayısı için <userinput>li</userinput>, imleç konumlandırma dizgesi için <userinput>cm</userinput> gibi.
   </para></sect1>
  <sect1 xml:id="termcap-Capability-Format">
   <title>Yeteneklerin Yazılması</title>
   <para>
Yetenekler aldıkları değere göre üç çeşittir: dizgeler, sayılar ve seçimlikler. Her birinin tanım içindeki sözdizimleri kendilerine özeldir ve her yeteneğin uzlaşımla belirlenmiş belli değer çeşidi vardır. Örneğin, <userinput>li</userinput> yeteneği daima sayısal bir değere sahipken, <userinput>cm</userinput>'nin değeri daima bir dizgedir.
   </para><para>
Bir seçimlik yetenek bir mantıksal değer içerir: eğer bu yetenek mevcutsa değeri doğru, değilse yanlış'tır. Yetenek mevcutsa sadece ismi yazılır, yoksa yazılmaz (yani bu yetenekler aslında bir değer almaz, sadece isimlerinin uçbirim tanımında var olup olmadıklarına bakılır).
   </para><para>
Sayısal değerli bir yetenek daima negatif olmayan bir değere sahiptir. Yetenek isminden sonra bir <userinput>#</userinput> konup sayısal değer yazılır. Örneğin, <userinput>li</userinput> yeteneği <userinput>&hellip;:li#48:&hellip;</userinput> şeklinde yazılmışsa ekranda 48 satır gösterme yeteneğinde bir uçbirim sözkonusudur.
   </para><para>
Dizge değerli bir yetenek daima bir karakter dizisi içerir. Genellikle bunlarda ekranda bazı işlemler gerçekleştiren karakterler kullanılır. Yetenek isminden sonra bir <userinput>=</userinput> konup karakterler yazılır. Örneğin, <userinput>cm</userinput> yeteneği <userinput>&hellip;:cm=\E[%i%d;%dH:&hellip;</userinput> şeklinde bir komut ve bu komutun biçim dizgesi olarak yazılır ve aldığı parametreler imlecin ekranda konumlanacağı yeri belirler.
   </para><para>
Bir dizge değerindeki özel karakterler C dilindeki gibi <userinput>\</userinput> ile öncelenerek yazılırlar. <userinput>\E</userinput> dizgesi <keycap>ESC</keycap>'e karşılıktır. <userinput>^</userinput> karakteri bir tuşun Ctrl tuşu ile birlikte basıldığı durumu ifade etmek için kullanılır. Örneğin, <userinput>^a</userinput> dizgesi Ctrl-a  demektir ve <userinput>\001</userinput> ile aynıdır. <userinput>\</userinput> ve <userinput>^</userinput> karakterleri sıradan birer karakter olarak yazılmak istenirse <userinput>\\</userinput> ve
<userinput>\^</userinput> şeklinde yazılırlar.
   </para><para>
Bir dizge içinde bir iki nokta üstüste karakteri kullanmak isterseniz onu <userinput>\072</userinput> biçiminde yazmalısınız. Diyeceksiniz ki, "neden onu da  <userinput>\:</userinput> biçiminde yazmayalım?"; sebebi, bir yeteneği uçbirim tanımında ararken sorgulama işlevlerinin tersbölü karakterlerini görmezden gelmeleridir. <userinput>:ce=ab\:cd:</userinput> biçiminde yazılmış bir <userinput>ce</userinput> yeteneğinin <userinput>ab:cd</userinput> değerine sahip olacağını düşünürseniz yanılırsınız, <userinput>cd</userinput> bir seçimlik yetenek olarak ele alınacaktır.
   </para><para>
Dizge değerlerin çoğu <link linkend="termcap-Padding">geciktirme miktarını</link> ifade eden bir takım rakamlarla başlar ve dizge içinde <userinput>%</userinput> karakteri ile başlayan ve <link linkend="termcap-Parameters">parametrelerin</link> nasıl kodlanacağını belirten alt dizgeler içerirler. Bunlar uçbirime doğrudan çıktılanmazlar, yeteneğin değerinin bir parçası olarak <userinput>tputs</userinput>, <userinput>tparam</userinput> veya <userinput>tgoto</userinput> işlevleri tarafından özel olarak ele alınırlar. Daha özel olarak, <userinput>\</userinput> ve <userinput>^</userinput> dizgedeki karakterleri belirtmek için sözdiziminin parçaları olarak yorumlanırlar.
   </para><para>
VT52 örneğine tekrar bakalım:
   </para><para>
<screen>dw|vt52|DEC vt52:\
        :cr=^M:do=^J:nl=^J:bl=^G:\
        :le=^H:bs:cd=\EJ:ce=\EK:cl=\EH\EJ:\
        :cm=\EY%+ %+ :co#80:li#24:\
        :nd=\EC:ta=^I:pt:sr=\EI:up=\EA:\
        :ku=\EA:kd=\EB:kr=\EC:kl=\ED:kb=^H:
</screen>
   </para><para>
Buradaki yeteneklerden <userinput>co</userinput> ve <userinput>li</userinput> sayısal değerli, <userinput>bs</userinput> ve <userinput>pt</userinput> ise seçimlik yeteneklerdir. Diğerleri dizge değerli yeteneklerdir. Dizgelerin çoğu <keycap>ESC</keycap>'i ifade eden <userinput>\E</userinput> ile başlarken, kalanı denetim karakterlerini ifade eden <userinput>^</userinput> karakterini içeriyor. Tek tek yeteneklerin anlamları bu tanımda yer almaz, onlar başka yerdedir (bkz. <xref linkend="termcap-Capabilities"/>).
   </para></sect1>
  <sect1 xml:id="termcap-Naming">
   <title>Uçbirim Türü İsimlendirme Uzlaşımları</title>
<indexterm scope="termcap-cp"><primary>uçbirim türlerinin isimleri</primary></indexterm>
   <para>
Uçbirim türünün seçiminde kullanılan bazı uzlaşımlar vardır. Bunlardan biri, tüm harflerin küçük harf olması gerekliliğidir. En alışılmış, en temel işlem kipindeki bir uçbirim için uçbirim ismi bir tire içermemelidir.
   </para><para>
Eğer aynı uçbirimin farklı uçbirim tanımları gerektiren başka işlem kiplerine sahip sürümleri varsa, bunların isimlerinin başına, bir tire ile ayırarak temel işlem kipindeki uçbirimin ismi yazılır. Böyle ikincil tanımların kullanımı için iki sebep vardır:
   </para><para><itemizedlist>
    <listitem><para>
Uçbirim davranış değişikliği sağlayan bir seçeneğe sahiptir. Sistem bu seçeneğin nasıl etkin kılınacağını bilmediğinden kullanıcı bunu uygun uçbirim türünü seçerek yapabilmelidir.
     </para>
<indexterm scope="termcap-cp"><primary>sarmalama</primary></indexterm>
     <para>
Örneğin, VT-100 imlecin sağ kenardayken bir alt satıra geçip geçmeyeceğini denetleyen bir ayar seçeneğine sahiptir. Eğer imlecin sağ kenara geldiğinde alt satıra geçmesini istiyorsanız <userinput>vt100-am</userinput>, aksi takdirde <userinput>vt100-nam</userinput> uçbirim türünü seçmelisiniz. Düz <userinput>vt100</userinput> sistem yöneticisinin tercihine bağlı olarak ya <userinput>vt100-am</userinput> ya da <userinput>vt100-nam</userinput> ile eşanlamlı uçbirim türü olarak tanımlanır.
     </para><para>
Standard <userinput>-am</userinput> soneki, imleç sağ kenara geldiğinde alt satırın başına gidecek anlamındadır.
     </para></listitem><listitem><para>
Kullanıcıya kendi uçbirimini seçme imkanı vermek için. Uçbirim, sistemin denetleyebildiği bir seçeneğe sahip olduğunda bu yapılabilir.
     </para>
<indexterm scope="termcap-cp"><primary>ekran boyutu</primary></indexterm>
     <para>
Örneğin, Ann Arbor Ambassador 20 ila 60 satırlık bir ekran için yapılandırılabilir. Satırlar azaldığında daha büyük karakterler kullanılırken, arttırıldiğında düzenlemekte olduğunuzdan daha fazla satır görürsünüz. Sonuç olarak kullanıcı farklı tercihler yapabilir. Bununla birlikte, termcap çeşitli ekran boyutlarına uygun uçbirim türleri sağlar. Eğer <userinput>aaa-30</userinput> uçbirim türünü seçerseniz, uçbirim 30 satırlık, <userinput>aaa-48</userinput> seçerseniz 48 satırlık yapılandırılacaktır.
     </para></listitem></itemizedlist>
   </para><para>
Standart sonekler ve uzlaşılmış anlamları:
   </para><para><variablelist><varlistentry>
     <term><literal>-w</literal></term>
     <listitem><para>
"wide" (geniş) kısaltması.  Bu kip uçbirimin daha çok sütun içermesini sağlar. Bu normalde bir kullanıcı seçeneğidir.
     </para></listitem></varlistentry><varlistentry>
     <term><literal>-am</literal></term>
     <listitem><para>
"Automatic margins" (imleç sağ kenerdan alt satırın başina gidecek) kısaltması. Uçbirimin bu yeteneğe sahip olması isteniyorsa bu soneki içeren tür seçilmelidir.  Bu seçenek normalde (soneksiz isme sahip uçbirim türünde) kapalıdır.
     </para></listitem></varlistentry><varlistentry>
     <term><literal>-nam</literal></term>
     <listitem><para>
"No automatic margins" kısaltması. <userinput>-am</userinput> kısaltmasının zıddıdır. Normal uçbirimde <userinput>am</userinput> yeteneği etkinse, bu sonek, bu yeteneğin kapalı olduğu uçbirim türünü seçmek için kullanılır.
     </para></listitem></varlistentry><varlistentry>
     <term><literal>-na</literal></term>
     <listitem><para>
"No arrows" (ok tuşları yok) kısaltması.  Bu uçbirim tanımı ok tuşlarını yerel kipte etkisiz olarak ilklendirir. Bu bir kullanıcı seçeneğidir.
     </para></listitem></varlistentry><varlistentry>
     <term><literal>-rv</literal></term>
     <listitem><para>
"Reverse video" kısaltması. Ekran koyu zemin üzerinde açık renk metin göstermek yerine açık renk zemin üzerinde koyu renk metin gösterecek şekilde ya da tam tersi (normal uçbirim tanımında yeteneğin etkin olup olmamasına bağlı olarak) elde edilecek şekilde yapılandırılır. Bu seçenek iki dizgenin bir diğerine göre zıt renklerde gösterilebilme yeteneğiyle ilgili olarak kullanılmaz.
      </para><para>
Bu bir kullanıcı seçeneğidir. Hangi tür uçbirimi seçerseniz seçin termcap buna itaat edecektir.
     </para></listitem></varlistentry><varlistentry>
     <term><literal>-s</literal></term>
     <listitem><para>
"Status" kısaltması. Normal çıktının dokunmadığı bir durum satırının etkinleştirilmesi içindir. (Bkz. <xref linkend="termcap-Status-Line"/>).
      </para><para>
Bazı uçbirimler sadece durum satırı olarak kullanılabilen özel bir satıra sahiptir. Bu tür uçbirimlerin bir <userinput>-s</userinput> sonekine ihtiyacı yoktur; durum satırı komutu öntanımlı tanımlanmıştır.  Diğer uçbirimlerde ise bir durum satırını etkinleştirmek demek, ekrandan bir satırı normal kullanımdan kaldırmak, etkin ekran yüksekliğini bir satır eksiltmek demektir. Bu tür uçbirimlerde kullanıcı durum satırı kullanmak istediğinde uçbirimi seçerken <userinput>-s</userinput> soneklisini tercih edecektir.
     </para></listitem></varlistentry><varlistentry>
     <term><literal>-<varname>satır_sayısı</varname></literal></term>
     <listitem><para>
Ekranın <varname>satır_sayısı</varname> satırlık olacağını belirtir. Ambassador gibi bazı uçbirim türleri bu seçeneğe sahiptir. Normalde bu bir kullanıcı seçeneğidir; uçbirim türünü seçerek termcap'in kaç satır kullanacağını belirleyebilirsiniz.
     </para></listitem></varlistentry><varlistentry>
     <term><literal>-<varname>sayfa_sayısı</varname>p</literal></term>
     <listitem><para>
Uçbirimin kaç <varname>sayfa_sayısı</varname> sayfalık ekran belleği olacağını belirler. Uçbirimler için bu bir donanım seçeneğidir.
     </para></listitem></varlistentry><varlistentry>
     <term><literal>-unk</literal></term>
     <listitem><para>
Uçbirim tanımının doğrudan kullanıma uygun olmadığını belirtir. Bu tür tanımlar <userinput>tc</userinput> yeteneği sayesinde başka uçbirimlerin tanımlarına eklenirler. <userinput>-unk</userinput> soneki yerine istediğiniz yetenekleri sağlayacak uçbirim soneklerini getirmelisiniz.
      </para></listitem></varlistentry></variablelist>
    </para></sect1>
  <sect1 xml:id="termcap-Inheriting">
   <title>İlgili Tanımları Miras Alma</title>
<indexterm scope="termcap-cp"><primary>miras alma</primary></indexterm>
   <para>
İki uçbirimin tanımları benzer olduğunda, eşdeğerdeki parçaları iki defa vermek gerekmez. <userinput>tc</userinput> yeteneği ile bunlardan biri diğerinin kurallarını kullanabilir.  Böyle bir durumda bir tanım diğerine <firstterm>başvuruyor</firstterm> ya da onun yeteneklerini <firstterm>miras alıyor</firstterm> deriz.
   </para><para>
<userinput>tc</userinput> yeteneği uçbirim tanımında tanımlanmış son yetenek olmalıdır. Değeri ise yeteneklerin miras alınacağı uçbirim tanımının ismi olmalıdır. Örnek:
   </para><para>
<screen>N9|aaa|ambassador|aaa-30|ann arbor ambassador/30 lines:\
        :ti=\E[2J\E[30;0;0;30p:\
        :te=\E[60;0;0;30p\E[30;1H\E[J:\
        :li#30:tc=aaa-unk:
</screen>
   </para><para>
Burada, <userinput>aaa-30</userinput> uçbirim türü (ayrıca düz <userinput>aaa</userinput> olarak da bilinir), herşeyin ekran yüksekliğine bağımlı olarak tanımlandığı Ambassador <userinput>aaa-unk</userinput> tanımının kurallarıyla tanımlanmaktadır. <userinput>aaa-36</userinput>, <userinput>aaa-48</userinput> ve benzerleri farklı ekran yükseklikleri sağlamak için benzer şekilde <userinput>aaa-unk</userinput> tanımını miras alırlar.
   </para><para>
<userinput>aaa-30</userinput> tanımının içerdiği <userinput>li</userinput> (tanımın kaç satırlık olacağını belirler), <userinput>ti</userinput> ve <userinput>te</userinput> (uçbirimi bu satır sayısına göre yapılandırırlar) yetenekleri, miras alınan aynı yetenekleri değiştirmek içindir.
   </para><para>
<userinput>aaa</userinput> türü etkin uçbirim tanımı yukarıdaki tanıma <userinput>aaa-unk</userinput> tanımının eklenmişi olur. <userinput>tgetent</userinput> işlevi <userinput>tc</userinput> yeteneğini gördüğünde ek <link linkend="termcap-Find">uçbirim tanımını bulur</link> ve ikisini birleştirir. Diğer taraftan, <userinput>tc</userinput> yeteneğinin kullanımı sadece uçbirim tanımları yapanları ilgilendirir. Kullanıcılar ve uygulama geliştiricilerin bu yetenekle ilgilenmeye ihtiyaçları olmayacaktır.
   </para><para>
Miras alınan uçbirim tanımı sona eklendiğinden, miras alan tanım, miras alınan tanımın içindeki yetenekleri tekrar tanımlayarak bu yeteneklerin tanımlarını değiştirebilir.
   </para><para>
Ayrıca miras alan tanım, yeteneklere yeni bir değer belirtmeyerek miras aldığı yetenekleri iptal edebilir. Bunun için yetenek isminden sonra bir <userinput>@</userinput> karakteri konur. Örnek:
   </para><para>
<screen>NZ|aaa-30-nam|ann arbor ambassador/30 lines/no automatic-margins:\
        :am@:tc=aaa-30:
</screen>
   </para></sect1>
  <sect1 xml:id="termcap-Changing">
   <title>Etkin Veritabanı Değişirse</title>
   <para>
Her uygulama uçbirim tanımını veritabanından okumalıdır, böylelikle veritabanındaki bir değişikliğin, değişiklik yapıldıktan sonra başlatılan tüm süreçlerde etkin olması sağlanabilir.
   </para><para>
Değişiklik, değişiklik yapılmadan önce başlatılmış süreçler için normal olarak etkin olmayacaktır. Uygulama başlatılırken, uçbirim tanımını bir kere okuyacak ve okuduğunu kullanacaktır. Eğer uygulama, veritabanındaki değişiklikleri algılama özelliğine sahip değilse, süreci sonlandırıp uygulamayı yeniden başlatmalısınız.
   </para><para>
Eğer kullanılan tanım <userinput>TERMCAP</userinput> ortam değişkeninden geliyorsa, veritabanı dosyası bundan etkilenir ve veritabanındaki değişiklikler <userinput>TERMCAP</userinput> değişkenini değiştirmedikçe etkisiz kalır. Örneğin, bazı kullanıcıların <filename>.login</filename> dosyaları, uygulamaların başlatılmasını hızlandırmak için uçbirim tanımını <userinput>TERMCAP</userinput>'a kopyalar. Eğer bunu yapmışsanız, veritabanındaki değişikliklerin etkili olabilmesi için <userinput>TERMCAP</userinput> değişkenini değiştirmeniz gerekecektir.
   </para></sect1></chapter>
 <chapter xml:id="termcap-Capabilities">
  <title>Uçbirim Yeteneklerinin Tanımları</title>
  <para>
Bu kısım çeşitli alt bölümlere bölünmüştür. Her bölümde uçbirim kullanımı ile ilgili ayrı bir özellik ele alınmıştır. Bir uygulama geliştiriyorsanız sadece sizi ilgilendiren alt bölümlere bakmanız yeterlidir, ama yeni bir uçbirim tanımı yazıyorsanız her alt bölümü okumalı ve yetenek tanımlarını orada açıklandığı gibi yazmalısınız.
  </para><para>
Ekran komutu olma özelliğindeki dizge değerli yetenekler <link linkend="termcap-Parameters">sayısal parametreler</link> gerektirebilir. Böyle yeteneklerin çoğu aslında parametre kullanmaz. Eğer yetenek parametre gerektiriyorsa bu, tanımının başında açıkça belirtilir. Basit durumlarda, parametrelerin tamamı tanımın ilk ya da ikinci sözcüğünde tamamlanmış olur. Örneğin, <userinput>rp</userinput> yeteneği iki parametre gerektiren bir komuttur ve tanımı şöyledir:
  </para><para><blockquote><para>
Bir <varname>c</varname> karakterini <varname>n</varname> kere yineleyerek çıktılayan dizge değerli yetenek.
   </para></blockquote></para><para>
Daha karmaşık durumlarda ya da çok sayıda parametre olduğunda her biri ayrı ayrı açıklanır.
  </para><para>
Bir yeteneğin önerilmediğinden sözediliyorsa, bu, bu yeteneği kullanan uygulamalar yazmayın demektir, fakat uçbirim tanımı hala o yeteneği içermeye devam edecektir.
  </para><para>
Bir yeteneğin atıl olduğundan sözediliyorsa, bu, bu yeteneğin artık uçbirim tanımlarında da bulunmadığı anlamına gelir.
  </para>
  <sect1 xml:id="termcap-Basic">
   <title>Temel Karakteristikler</title>
   <para>
Bu bölüm uçbirimin temel ve doğal özellikleri olan yetenekleri belgeler. Bunlar ayrıca, karakterlerin çıktılanması ile de ilgilidirler.
   </para><para><variablelist><varlistentry>
<indexterm scope="termcap-ky"><primary>os</primary></indexterm>
<indexterm scope="termcap-cp"><primary>üste yazmama</primary></indexterm>
     <term><literal>os</literal></term>
     <listitem><para>
Uçbirimin üste yazmama özelliği olup olmadığını belirleyen seçimlik yetenek. Bu yetenek etkinse, bir karakterin yazıldığı konumda bir karakter varsa, yeni karakter bu karakteri silmez. Üste yazmamanın etkin olduğu uçbirimler, yazdırma uçbirimleri, saklama tüpleri (günümüzde tamamen atıldırlar) ve bazı biteşlemli ekranlardır.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>eo</primary></indexterm>
     <term><literal>eo</literal></term>
     <listitem><para>
Uçbirimde üste yazmama özelliği etkin olsa bile çıktılanan bir boşluk karakterinin aynı konumdaki bir karakteri silmesinin mümkün olup olmadığını belirleyen seçimlik yetenek.  Eğer bu yetenek etkin değilse ve üste yazmama yeteneği etkinse, çıktılanan bir boşluğun imleci hareket ettirmekten başka bir etkisi olmaz.
      </para><para>
(Üste yazmamanın kapalı olduğu uçbirimlerde, çıktılanan bir boşluğun aynı konumdaki bir karakteri daima sileceğini varsayabilirsiniz.)
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>gn</primary></indexterm>
<indexterm scope="termcap-cp"><primary>soysal uçbirim türü</primary></indexterm>
     <term><literal>gn</literal></term>
     <listitem><para>
Uçbirimin gerçek bir uçbirim olmayan bir soysal tür olup olmadığını belirten seçimlik yetenek. Soysal uçbirim türleri, kullanıcının sisteme bağlanırken atanan öntanımlı uçbirim türü olduğu ve kullanıcının bağlandıktan sonra gerçek uçbirimi kendisinin seçeceği düşünülerek tasarlanmışlardır. Soysal uçbirim türüne bir örnek  <userinput>network</userinput> türüdür.
      </para><para>
Eğer kullanıcı bir soysal uçbirimi gerçek bir uçbirim ile değiştirememişse, soysal türler bir uçbirimin yerine getirmesi gerekenlerin nasıl yapılacağını belirtmediğinden, termcap kullanan uygulamalar uçbirimi destek açısından daima çok yetersiz bulacaklardır. <userinput>gn</userinput> yeteneği bu uygulamaları farklı bir hata iletisi ile kullanıcılarını uyarmak için yönlendirir: "Uçbiriminiz çok yetersiz" demek yerine "Gerçek bir uçbirim türü belirtmemişsiniz." diye uyarı verirler.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>hc</primary></indexterm>
     <term><literal>hc</literal></term>
     <listitem><para>
Uçbirimin yazılımsal değilde donanımsal (yazıcı gibi) olduğunu belirten seçimlik yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>rp</primary></indexterm>
<indexterm scope="termcap-cp"><primary>çıktıyı yinele</primary></indexterm>
     <term><literal>rp</literal></term>
     <listitem><para>
Bir <varname>c</varname> karakterini <varname>n</varname> kere yineleyerek çıktılayan dizge değerli yetenek. İlk parametre yinelenecek karakterin ASCII kodu, ikinci parametre yineleme sayısıdır. Bu komut çoğunlukla karakterin yineleme sayısıyla orantılı bir geciktirme gerektirir. Bu etki, <userinput>%</userinput> dizili parametre aritmetiği kullanarak hesaplanan değeri komut dizgesinin önüne yerleştirerek sağlanabilir, bu durumda <userinput>tputs</userinput> onu geciktirme miktarı olarak ele alacaktır.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>hz</primary></indexterm>
     <term><literal>hz</literal></term>
     <listitem><para>
Bu seçimlik yetenek, varlığında uçbirimin <userinput>~</userinput> karakterini bir ekran komutu olarak kullanılması nedeniyle çıktılamayacağını belirtir.
      </para><para>
Bu seçeneğin varlığında uygulamalar çıktılanacak tüm metni tarayıp <userinput>~</userinput> karakterlerini başka karakterlerle değiştirmelidir. Bu yapılmadığında ekran görüntüsü bozunmaya uğrayabilir.
      </para><para>
Günümüzde nadiren rastlanan eski Hazeltine uçbirimler böyleydi. Bu bakımdan bu seçeneği desteklemek konusunda tasalanmanız gerekmez.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>CC</primary></indexterm>
<indexterm scope="termcap-cp"><primary>komut karakteri</primary></indexterm>
     <term><literal>CC</literal></term>
     <listitem><para>
Uçbirimde komut karakterinin öntanımlı komut karakterinden farklı bir karakterle temsil edilmesi durumunda bu karakteri belirtmek için kullanılan dizge değerli yetenek. Öntanımlı komut karakteri <keycap>ESC</keycap>'dir.
      </para><para>
Uçbirim tanımındaki tüm komut dizgeleri öntanımlı komut karakteri kullanılarak yazılmalıdır. Eğer komut karakterini değiştiren bir uygulama yazıyorsanız, tüm ekran komutlarının yeni komut karakterini nasıl kullanacaklarını belirtmek için <userinput>CC</userinput> yeteneğini kullanın.
      </para><para>
Çoğu uygulamalar <userinput>CC</userinput> yeteneğine bakma gereği duymazlar.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>xb</primary></indexterm>
<indexterm scope="termcap-cp"><primary>Superbee</primary></indexterm>
     <term><literal>xb</literal></term>
     <listitem><para>
<keycap>ESC</keycap> ve <keycombo><keycap>Control</keycap><keycap>C</keycap></keycombo> karakterlerini gönderemeyen Superbee uçbirim türünü tanımlayan seçimlik yetenek. Bu yeteneği destekleyen uygulamalar <keycap>F1</keycap> ve <keycap>F2</keycap> tuşlarından gönderilen kod dizilerini aldıklarında sırayla <keycap>ESC</keycap>
veya <keycombo><keycap>Control</keycap><keycap>C</keycap></keycombo> basılmış gibi işlem yapar. Fakat bu yeteneğin kullanılması önerilmemekte ve artık desteklenmemektedir.
     </para></listitem></varlistentry></variablelist>
   </para></sect1>
  <sect1 xml:id="termcap-Screen-Size">
   <title>Ekran Boyutları</title>
<indexterm scope="termcap-cp"><primary>ekran boyutları</primary></indexterm>
   <para>
Bir uçbirimin sütun ve satır sayısını belirleyen <userinput>co</userinput> ve <userinput>li</userinput> isimli iki yeteneği vardır. Fakat ekran boyutları denince bundan fazlası bilinmek istenir.
   </para><para>
Bazı işletim sistemlerinde "ekran" aslında bir penceredir ve etkin genişliği değişkendir. Bu sistemlerin bazılarında, uçbirim tanımında ne yazdığına bakmadan <userinput>co</userinput> yeteneğinden dönecek değere karar vermek için <userinput>tgetnum</userinput> kullanılır. Diğerlerinde ise uygulamalar pencere genişliğini öğrenmek için bir sistem çağrısı yaparlar. Örneğin BSD 4.3 sistemlerinde, o anki ekran boyutunu öğrenmek için <userinput>ioctl</userinput> işlevi <userinput>TIOCGWINSZ</userinput> ile çağrılır.
   </para><para>
Tüm pencereli sistemlerde kullanıcı pencerenin boyutlarını değiştirdiğinde uygulamayı uyarmak bakımından termcap yetersiz kalır. Uygulama yazılımları bu olasılığı sisteme bağlı olarak değerlendirmelidir. Bazı sistemlerde C kabuğu pencere değişikliklerini algılayıp <userinput>TERMCAP</userinput> ortam değişkenine uygun değeri atayarak bu sorunu çözer. Bu sadece uygulamaların ilk başlatılışlarında uygulamalara yardımcı olur, çalışmakta olan uygulamalara değil.
   </para><para>
BSD 4.3 dahil bazı sistemlerde ise, ekran boyutları değiştiğinde bir uçbirim kullanan tüm uygulamalar <userinput>SIGWINCH</userinput> isminde bir sinyal alırlar. Termcap kullanan uygulamalar bu sinyali aldıklarında, yeni ekran boyutlarını öğrenmek için  <userinput>ioctl TIOCGWINSZ</userinput> çağrısı yapmalıdır.
   </para><para><variablelist><varlistentry>
<indexterm scope="termcap-ky"><primary>co</primary></indexterm>
<indexterm scope="termcap-cp"><primary>ekran genişliği</primary></indexterm>
     <term><literal>co</literal></term>
     <listitem><para>
Karakter sayısı cinsinden ekran genişliğini veren sayısal değerli yetenek. Yazıcı türü uçbirimlerin bile bir <userinput>co</userinput> yeteneği vardır.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>li</primary></indexterm>
     <term><literal>li</literal></term>
     <listitem><para>
Ekranın satır sayısı cinsinden yüksekliğini veren sayısal değerli yetenek.
      </para></listitem></varlistentry></variablelist>
  </para></sect1>
  <sect1 xml:id="termcap-Cursor-Motion">
   <title>İmleç Hareketleri</title>
<indexterm scope="termcap-cp"><primary>imleç hareketleri</primary></indexterm>
   <para>
Termcap, uçbirimin görünür bir işaretleyici olarak bir <wordasword>imleç</wordasword>'e sahip olduğunu ve ekran komutlarının bu imlecin konumuyla etkileşim içinde olacağını varsayar. İmlecin belirtilen bir konuma taşınmasının izlenmesi çok önemlidir.
   </para><para>
Farklı imleç hareketlerini yerine getiren bir çok uçbirim yeteneği vardır. Çoğu uygulama bunların hepsini kullanmayacak olsa da bir uçbirim tanımı bunların çoğunu tanımlamalıdır. <userinput>cm</userinput> isimli bir yetenek imleci ekran üzerinde keyfi bir konuma taşır; her uygulama için bunun olması yeterli olduğu halde, sadece göreli hareket komutlarına sahip bazı eski ve zayıf ekranlar ve yazıcı türü uçbirimler bunu destekleme gereği duymazlar. Diğer imleç hareket komutları eniyileme amaçlıdır ve uygulamaların bazı durumlarda birkaç karakter çıktılamasını mümkün kılarlar.
   </para><para>
Uygulamanızda göreli imleç hareket komutlarını kullanmayı düşünüyorsanız, imlecin başlangıç konumunu bilmeniz gerekir. Bunu yapmak için, imleç konumlarını takip etmeli ve uçbirime yapılan her çıktılamada (karakter çıktılama dahil) kayıtlarınızı güncellemelisiniz. Buna ek olarak uçbirimin imleci sağ kenardan alt satırın başına döndürüp döndürmediğini de saptamanız gerekir. Bkz.  <xref linkend="termcap-Wrapping"/>.
   </para><para>
Üzerinde durmamız gereken bir hareket yeteneği de <userinput>nw</userinput> yeteneğidir. Bu yetenek imleci alt satırın başına taşır. Bunu yaparken bazan başına getirildiği satırı temizler bazan da hiçbir temizlik yapmaz. Bu yetenek, <userinput>cm</userinput> veya <userinput>do</userinput> gibi başka hareket yetenekleri olmayan uçbirimlerde bile olması gereken ortak yeteneklerden biridir. Yazıcı türü uçbirimler bile bu yeteneği destekler.
   </para><para><variablelist><varlistentry>
<indexterm scope="termcap-ky"><primary>cm</primary></indexterm>
     <term><literal>cm</literal></term>
     <listitem><para>
İmleci <varname>l</varname>'inci satırın <varname>c</varname>'inci sütununa konumlandıran dizge değerli yetenek. Her iki parametrenin başlangıç konumları sıfırdır ve ekran belleğine değil görünen ekrana görelidir.
      </para><para>
Birkaç çok eski ve atıl olmuş uçbirim dışında tüm uçbirimler <userinput>cm</userinput> yeteneğini destekler; bu bakımdan, <userinput>cm</userinput> yeteneğinin yokluğu uygulamalar açısından kabul edilebilir değildir.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>ho</primary></indexterm>
<indexterm scope="termcap-cp"><primary>ev konumu</primary></indexterm>
     <term><literal>ho</literal></term>
     <listitem><para>
İmleci ekranın sol üst köşesine (bu konuma <wordasword>ev konumu</wordasword> denir) konumlandıran dizge değerli yetenek. Ekranın sol üst köşesi ekran belleğinin başlangıcı değilse, bu komut imleci görünür ekranın sol üst köşesine konumlandırır, ekran belleğinin başlangıcına değil.
      </para><para>
Ekran uçbirimlerinin hepsi bu yeteneği destekler ve bu yeteneğin yokluğu uygulamalar açısından kabul edilebilir değildir.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>ll</primary></indexterm>
     <term><literal>ll</literal></term>
     <listitem><para>
İmleci ekranın sol alt köşesine konumlandıran dizge değerli yetenek. Bazı uçbirimler bunu ev konumundan taşıyarak yaparlar, ancak uygulamalar bu tür bir işlemi asla varsaymamalıdır. Sadece <userinput>ll</userinput> dizgesini çıktılamalıdırlar (eğer varsa); önce ev konumuna gidip bundan sonra sol alt köşeye gitmenin en iyi yolu budur ve <userinput>ll</userinput> komutu bunu yapacaktır.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>cr</primary></indexterm>
     <term><literal>cr</literal></term>
     <listitem><para>
İmleci üzerinde bulunduğu satırın başına taşıyan dizge değerli yetenek. Uçbirimde bu yetenek yoksa, uygulamalar bu işlemi ASCII satırbaşı karakterini kullanarak yapabilir.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>le</primary></indexterm>
     <term><literal>le</literal></term>
     <listitem><para>
İmleci bir sütun sola taşıyan dizge değerli yetenek. Seçimlik <userinput>bw</userinput> yeteneği belirtilmedikçe, eğer imleç satırın başındaysa, bu komutun etkisi belirsiz olacağından komutu böyle bir durumda kullanmayın. Eğer <userinput>bw</userinput> belirtilmişse, bu komut imlecin satırbaşında olduğu durumda da kullanılabilir; bu takdirde imleç önceki satırın son sütununa taşınır.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>nd</primary></indexterm>
     <term><literal>nd</literal></term>
     <listitem><para>
İmleci bir sütun sağa taşıyan dizge değerli yetenek. İmleç satırın sonundaysa bu komutun etkisi belirsiz olacaktır; <userinput>am</userinput> seçeneği mevcut olmasa bile bu komutu burada kullanmayın.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>up</primary></indexterm>
     <term><literal>up</literal></term>
     <listitem><para>
İmleci bir satır üste taşıyan dizge değerli yetenek. İmleç zaten en üst satırdaysa komutun etkisi belirsizdir; bu tarz kullanılmamalıdır.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>do</primary></indexterm>
     <term><literal>do</literal></term>
     <listitem><para>
İmleci bir satır alta taşıyan dizge değerli yetenek. İmleç zaten en alt satırdaysa komutun etkisi belirsizdir; bu tarz kullanılmamalıdır.
      </para><para>
Bazı uygulamalar, imlecin son satırda olması durumunda, eğer <userinput>sf</userinput> tanımlanmış ama <userinput>sr</userinput> tanımlanmamışsa,  <userinput>do</userinput> kullanarak bir satırlık yukarı kaydırma yaparlar. (Bu sadece, eski ve/veya davranışları yanlış olan uçbirimlerde durumu kurtarmak için yapılırsa da yaygın olarak kullanıldığı görülmektedir.) Fakat, doğru çözüm, eğer komut <userinput>do</userinput> kullanarak kaydırmayla uygulanacaksa uçbirim tanımında <userinput>sf</userinput> yeteneğini tanımlamaktır.
      </para><para>
Özgün fikir, bu dizgenin bir satırsonu karakteri içermeyeceği şeklindedir, dolayısıyla komut, çekirdeğin genel alışkanlığı olan satırsonu karakterinin bir CRLF ile değiştirilmesi iptal edilmeksizin kullanılmalıdır. Ancak, bazı uçbirim tanımlarında <userinput>do</userinput> dizgesi bir satırsonu içerebilmektedir; böyle bir durumda uygulama çekirdeğin çıktı dönüşümünü iptal etmelidir (bkz. <xref linkend="termcap-Initialize"/>).
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>bw</primary></indexterm>
     <term><literal>bw</literal></term>
     <listitem><para>
Varlığında, <userinput>le</userinput> komutunun sıfırıncı sütunda kullanıldığında imlecin önceki satırın son sütununa taşınacağını belirten seçimlik yetenek. Bu seçeneğin yokluğunda, <userinput>le</userinput> komutu sıfırıncı sütunda kullanılmamamalıdır.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>nw</primary></indexterm>
     <term><literal>nw</literal></term>
     <listitem><para>
Büyük olasılıkla taşımadan önce satırın kalanını silerek, imleci sonraki satırın başına taşıyan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>DO</primary></indexterm>
<indexterm scope="termcap-ky"><primary>LE</primary></indexterm>
<indexterm scope="termcap-ky"><primary>RI</primary></indexterm>
<indexterm scope="termcap-ky"><primary>UP</primary></indexterm>
     <term><literal>DO, UP, LE, RI</literal></term>
     <listitem><para>
İmleci <varname>n</varname> satır aşağı veya yukarı ya da <varname>n</varname> sütun sola veya sağa taşıyan dizge değerli yetenekler. Bu komutları, imleci ekranın kenarlarından dışarı taşıma anlamında kullanırsanız, etkileri belirsizdir. Sadece birkaç uçbirim tanımı bu komutları içerir ve çoğu uygulama bu komutları kullanmaz.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>CM</primary></indexterm>
     <term><literal>CM</literal></term>
     <listitem><para>
İmleci, ekran belleğine göreli olarak, <varname>l</varname>'inci satırın <varname>c</varname>'inci sütununa taşıyan dizge değerli yetenek. Her iki parametre içine başlangıç sıfırdır. Bu yetenek, ekrana göre adreslemesi belleğe göre adreslemesinden farklı olan uçbirimlerde vardır ve bu tür uçbirimlerin hepsinde de yoktur.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>ch</primary></indexterm>
     <term><literal>ch</literal></term>
     <listitem><para>
İmleci aynı satırın <varname>c</varname>'inci sütununa taşıyan dizge değerli yetenek. Bu, <userinput>cm</userinput> yeteneğinin düşey konumu değiştirmeyen özel bir durumudur. <userinput>ch</userinput> yeteneği, eğer bu özel durumda çıktı <userinput>cm</userinput> yeteneğinden elde edilenden  daha hızlı elde edilebiliyorsa uçbirim tanımına konur. Uygulamalar, çoğu uçbirimin bu yeteneği içermediğini varsaymalıdır.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>cv</primary></indexterm>
     <term><literal>cv</literal></term>
     <listitem><para>
İmleci aynı sütunda <varname>l</varname>'inci satıra taşıyan dizge değerli yetenek. Bu, <userinput>cm</userinput> yeteneğinin yatay konumu değiştirmeyen özel bir durumudur. <userinput>ch</userinput> yeteneği, eğer bu özel durumda çıktı <userinput>cm</userinput> yeteneğinden elde edilenden  daha hızlı elde edilebilyorsa uçbirim tanımına konur. Uygulamalar, çoğu uçbirimin bu yeteneği içermediğini varsaymalıdır.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>sc</primary></indexterm>
     <term><literal>sc</literal></term>
     <listitem><para>
Uçbirimin kaydettiği imleç konumunu almak için dizge değerli yetenek. Sadece son kaydedilen konum kullanılabilir. Eğer bu yetenek varsa, ayrıca <userinput>rc</userinput> yeteneğinin de olması gerekir. Çoğu uçbirim ikisini birden sağlamaz.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>rc</primary></indexterm>
     <term><literal>rc</literal></term>
     <listitem><para>
İmleci son kaydedilen imleç konumuna taşıyan dizge değerli yetenek. Eğer bu yetenek varsa, ayrıca <userinput>sc</userinput> yeteneğinin de olması gerekir. Çoğu uçbirim ikisini birden sağlamaz.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>ff</primary></indexterm>
     <term><literal>ff</literal></term>
     <listitem><para>
Yazıcı türü uçbirimlerde sonraki sayfaya geçmeyi sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>ta</primary></indexterm>
     <term><literal>ta</literal></term>
     <listitem><para>
İmleci sağdaki sonraki donanımsal sekme konumuna taşıyan dizge değerli yetenek. Eğer uçbirim donanımsal sekme konumlarına sahip değilse bu yetenek yoktur. Çekirdek, sekmelerin boşluklarla doldurma yöntemi ile kullanıldığı uçbirim kiplerine sahipse bu yeteneği kullanmayın.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>bt</primary></indexterm>
     <term><literal>bt</literal></term>
     <listitem><para>
İmleci soldaki sonraki donanımsal sekme konumuna taşıyan dizge değerli yetenek. Eğer uçbirim donanımsal sekme konumlarına sahip değilse bu yetenek yoktur. Çekirdek, sekmelerin boşluklarla doldurma yöntemi ile kullanıldığı uçbirim kiplerine sahipse bu yeteneği kullanmayın.
      </para></listitem></varlistentry></variablelist>
   </para><para>
Aşağıdaki yetenekler uçbirimlerin tanımlarında vardır ama yeni uygulamalarda kullanılması önerilmemektedir.
   </para><para><variablelist><varlistentry>
<indexterm scope="termcap-ky"><primary>nc</primary></indexterm>
     <term><literal>nc</literal></term>
     <listitem><para>
Varlığı, uçbirim <userinput>cr</userinput> yeteneği olarak ASCII satırbaşı karakterini desteklemiyor anlamına gelen seçimlik yetenek. Eski uygulamalar <userinput>cr</userinput> yeteneğinin yokluğunda bu yeteneğin olduğunu varsaydıkları için bu yetenek hala vardır. Satırsonu karakterinin kullanılamayabileceğini eski uygulamalara belirtmek için <userinput>nc</userinput> yeteneği kullanılır.
      </para><para>
Yeni uygulamalar öntanımlı bir <userinput>cr</userinput> yeteneğinin varolacağını varsaymamalı ve <userinput>nc</userinput> yeteneğinin varlığına bakmamalıdır. Yine de, uçbirim tanımları <userinput>cr</userinput> yeteneğini içermiyorsa, <userinput>nc</userinput> yeteneğini içermelidir.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>xt</primary></indexterm>
     <term><literal>xt</literal></term>
     <listitem><para>
Varlığı, uçbirimin imleç konumlamada ASCII sekme karakterini kullanmayabileceği anlamına gelen seçimlik yetenek. Eski uygulamalar <userinput>ta</userinput> yeteneğinin yokluğunda bu amaçla ASCII sekme karakterinin kullanılabilecegini varsaydıklarından bu yetenek vardır. Eski uygulamalara sekme kullanmayın diyebilmek için <userinput>xt</userinput> yeteneğini kullanıyoruz.
      </para><para>
Yeni uygulamalar öntanımlı bir <userinput>ta</userinput> yeteneğinin varolacağını varsaymamalı ve <userinput>xt</userinput> yeteneğinin varlığına bakmamalıdır. Ayrıca, <userinput>xt</userinput> yeteneğinin standart çıktı kipiyle ilgili bazı sorunlarının olduğu gözardı edilmemelidir (bkz. <xref linkend="termcap-Standout"/>). Yeteneğin standart çıktıyla ilgili sorunlar sebebiyle değil imlecin konumlanması ile ilgili olarak kullanılmaması önerilmektedir.
      </para><para>
Aslında, <userinput>xt</userinput> yeteneği uçbirimin bir Teleray 1061 olduğu anlamına gelir.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>bc</primary></indexterm>
     <term><literal>bc</literal></term>
     <listitem><para>
<userinput>le</userinput> yeteneğine eşdeğer tamamen atıl olmuş bir yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>bs</primary></indexterm>
     <term><literal>bs</literal></term>
     <listitem><para>
Varlığı, imleci sola hareket ettirmek için ASCII gerisilme karakterinin kullanılabileceğini belirten seçimlik yetenek. Atıl bir yetenektir; bunun yerine <userinput>le</userinput> yeteneğinin varlığına bakın.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>nl</primary></indexterm>
     <term><literal>nl</literal></term>
     <listitem><para>
İmleci duruma göre alt satıra taşıyan ya da kaydırma yapan, ancak kullanılması önerilmeyen dizge değerli yetenek. Aynı komut, imleç en alt satırda ise ekranı kaydırmalı, başka bir satırda ise alt satıra geçmelidir. Yeni uygulamalar <userinput>do</userinput> veya <userinput>sf</userinput> kullanmalı, <userinput>nl</userinput> yeteneğini yoksaymalıdır.
      </para><para>
<userinput>nl</userinput> yeteneğinin yokluğunda, eski uygulamalar bu amaçla satırsonu karakterlerinin kullanılabileceğini varsayar. Bu uygulamaların iyi bir seçim yapmadıkları söylenebilirse de, eğer bir alt satıra geçmenin en iyi yolu bir satırsonu karakteri kullanmaktır demek istemiyorsak, bir uçbirim tanımında <userinput>nl</userinput> yeteneğinin tanımlı olması hala arzu edilebilir olacaktır.
      </para></listitem></varlistentry></variablelist>
  </para></sect1>
  <sect1 xml:id="termcap-Wrapping">
   <title>Sarmalama</title>
<indexterm scope="termcap-cp"><primary>sarmalama</primary></indexterm>
   <para>
<wordasword>Sarmalama</wordasword> imleci sağ kenardan sonraki satırda sol kenara  götürmek demektir. Bazı uçbirimler bir karakter sağ kenarda çıktılandığında bunu özdevinimli yaparken bazıları bunu yapmaz. Termcap kullanan çoğu uygulama uçbirimin sarmalama yapıp yapmadığını bilmek ister.  Bunun olup olmadığını belirleyen iki seçimlik yetenek vardır.
   </para><para><variablelist><varlistentry>
<indexterm scope="termcap-ky"><primary>am</primary></indexterm>
     <term><literal>am</literal></term>
     <listitem><para>
Son sütuna yazılan karakterin imlecin sonraki satırın başına taşınmasına sebep olacağını belirten seçimlik yetenek.
      </para><para>
<userinput>am</userinput> yeteneği yoksa, bir karakterin son sütuna yazılması imleci yerinde bırakır.
      </para><para>
<userinput>am</userinput> yetenekli bir uçbirimde son satırın son sütununa yazmaktan kaçınılmalıdır. Aksi takdirde, bu bir kaydırma ile sonuçlanabilir (bkz. <xref linkend="termcap-Scrolling"/>) ve bu istenen birşey değildir.
      </para><para>
Yazılımınız <userinput>am</userinput> seçeneğinin varlığına bakmayı gerektiriyorsa, sarmalamanın tuhaf bir yolla yapılacağını belirten <userinput>xn</userinput> seçeneğinin varlığına da bakması gerekir. Bilinen çogu uçbirim <userinput>xn</userinput> seçeneğine sahiptir.
      </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>xn</primary></indexterm>
     <term><literal>xn</literal></term>
     <listitem><para>
İmlecin tuhaf bir yolla sarmalanacağını belirten seçimlik yetenek. Tuhaf davranışın bilinen en azından iki çeşidi vardır. Termcap veritabanı bu ikisini ayrımsamayı sağlayacak hiçbir şey içermez.
      </para><para>
Concept-100 uçbirimlerde, son sütuna yapılan çıktılama sonucunda sarmalama hemen hemen  sıradan bir <userinput>am</userinput> uçbirimdeki gibidir. Fakat bu son karakter bir satırsonu karakteri ise karakter yoksayılır.
      </para><para>
DEC VT-100 uçbirimler (sarmalama seçeneği etkinse) başka bir tuhaf şey yapar: imlecin sarmalanması için son sütuna yazılacak karakterden sonra bir karakter gelmesi gerekir. Aslında sarmalama, son sütuna yazılacak karakter yazılmadan önce sonraki karakterin  alınmasıyla gerçekleşir.
      </para><para>
Bu uçbirimlerin ikisinde de, son satıra bir karakter yazıldıktan hemen sonra alt satırın başına sonraki karakter yazılır. Fakat satırsonu, gerisilme gibi göreli imleç hareket karakterlerinin etkisi uçbirime bağlı olarak değişiklik gösterir. Ayrıca silme ve kaydırma komutlarının da etkileri uçbirime bağlıdır. <userinput>xn</userinput> yeteneğine sahip bir uçbirimin neler yapacağı konusunda hiçbir önkabul yapamazsınız. Dolayısıyla, ne yaptığınızdan emin olmak istiyorsanız, bu tür uçbirimlerde sarmalama işlemini uçbirimin insafına terketmemelisiniz.
      </para><para>
<userinput>xn</userinput> yeteneğine sahip bir uçbirimde kararlı sonuçlar almak istiyorsanız, son sütuna yazdıktan sonra, bir <userinput>cm</userinput> mutlak konumlama komutu kullanın. Diğer bir kararlı sonuç çözümü, imleci sonraki satırın başına konumlandıran satırbaşı-satırsonu karakter çiftini çıktılamaktır.
      </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>LP</primary></indexterm>
     <term><literal>LP</literal></term>
     <listitem><para>
Varlığı halinde, son satırın son sütununa yapılan bir yazma işleminin istenmeyen bir kaydırmaya yol açmayacağını garanti eden seçimlik yetenek. <userinput>LP</userinput> DEC'in <userinput>xn</userinput> tuhaflıklarının belirtisidir.
      </para></listitem></varlistentry></variablelist>
    </para></sect1>
  <sect1 xml:id="termcap-Scrolling">
   <title>Kaydırma</title>
<indexterm scope="termcap-cp"><primary>kaydırma</primary></indexterm>
   <para>
<wordasword>Kaydırma</wordasword> denince, ekran içeriğinin bir satır yukarı ya da aşağı kaydırılmasını anlayacağız. İçeriğin yukarı kaydırılmasına <wordasword>ileri kaydırma</wordasword>, aşağı kaydırılmasına ise <wordasword>geri kaydırma</wordasword> diyeceğiz.
   </para><para>
Çoğu uçbirimde sıradan çıktılama sırasında her satırın çıktılanmasından sonra kaydırma yapılır. Fakat, rasgele erişimli çıktılama için termcap kullanan uygulamalar, ekran içeriğini kaydırmak gerektiğinde bu bölümde açıklanan komutları kullanırlar.
   </para><para>
Bazı uçbirimler <wordasword>kaydırma bölgesi</wordasword> denen bir özelliğe sahiptir. Bu özellik, kaydırmanın etkisini belli sayıda satırla sınırlayabilmenizi sağlar. Bu sayıda satır dışında satır kaydırmadan etkilenmez. Kaydırma bölgesi özelliğinin varlığını gösteren yetenekler <userinput>cs</userinput> veya <userinput>cS</userinput> yetenekleridir.
   </para><para><variablelist><varlistentry>
<indexterm scope="termcap-ky"><primary>sf</primary></indexterm>
     <term><literal>sf</literal></term>
     <listitem><para>
İmlecin son satırın başlangıcında olduğu kabulüyle, ekran içeriğini bir satır yukarı kaydıran dizge değerli yetenek.
      </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>sr</primary></indexterm>
     <term><literal>sr</literal></term>
     <listitem><para>
İmlecin ilk satırın başlangıcında olduğu kabulüyle, ekran içeriğini bir satır aşağı kaydıran dizge değerli yetenek.
      </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>do</primary></indexterm>
     <term><literal>do</literal></term>
     <listitem><para>
Bir kaç uygulama <userinput>sf</userinput> yeteneğinin yaptığını yapmak için <userinput>do</userinput> kullanmayı dener. Bu aslında doğru bir öngörü değildir; bu yetenek bazı eski uçbirim tanımlarında bir <userinput>sf</userinput> komutunun yokluğunu gidermek için vardır.
      </para><para>
Bu uçbirim tanımları <userinput>sr</userinput> tanımı içerdiklerinden, bir zamanlar <userinput>do</userinput> tanımı da farklıydı ve kaydırma amacıyla da kullanılırdı. Fakat, kaydırma işlemi imleci bir satır aşağı taşımaktan daha fazla geciktirme gerektirdiğinden, bu iki işlevin tek bir komutta birleştirilmesi arzu edilen bir şey değildir. <userinput>sf</userinput> ve <userinput>do</userinput> tanımlamasının ayrı ayrı yapılması geciktirmenin gerektiği gibi yapılmasını mümkün kılar. Ayrıca, tüm kaynaklar, kaydırma konusunda <userinput>do</userinput> yeteneğine  bel bağlanmaması gerektiğinde hem fikirdir
      </para><para>
Bu durumda en iyi yaklaşım, bu uçbirim tanımlarına <userinput>sf</userinput> yeteneğinin eklenmesi, eğer kaydırma yapılıyorsa, <userinput>do</userinput> tanımının kopyalanmasıdır.
      </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>SF</primary></indexterm>
     <term><literal>SF</literal></term>
     <listitem><para>
İmlecin son satırın başlangıcında olduğu kabulüyle, ekran içeriğini <varname>n</varname> satır yukarı kaydıran dizge değerli yetenek.
      </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>SR</primary></indexterm>
     <term><literal>SR</literal></term>
     <listitem><para>
İmlecin ilk satırın başlangıcında olduğu kabulüyle, ekran içeriğini <varname>n</varname> satır aşağı kaydıran dizge değerli yetenek.
      </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>cs</primary></indexterm>
     <term><literal>cs</literal></term>
     <listitem><para>
Kaydırma bölgesinin belirtilebilmesini sağlayan dizge değerli yetenek. Bu komut iki parametre alır: kaydırma bölgesinin başlangıcının (ilk satır için sıfırdır) belirtildiği <varname>başlangıç</varname> parametresi ile son satırının belirtildiği <varname>son</varname> parametresi. Bir kaydırma bölgesi belirtildiğinde, kaydırma işlemi belirtilen satır aralığı ile sınırlanır; aralığın dışında kalan satırlar kaydırma işleminden etkilenmez.
      </para><para>
İmleci kaydırma bölgesinin dışına taşımaya çalışmayın. Bölge, açıkça kaldırılana kadar belirlenmiş olarak kalır. Kaydırma bölgesini kaldırmak için, kaydırma bölgesi olarak tam ekran yüksekliği belirtilmiş başka bir <userinput>cs</userinput> komutu kullanılır.
      </para><para>
<userinput>cs</userinput> komutuyla kaydırma bölgesi tanımlandığında, imleç konumu tanımsız olur, dolayısıyla hemen ardından imleci <userinput>cm</userinput> ile konumlamak gerekir.
      </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>cS</primary></indexterm>
     <term><literal>cS</literal></term>
     <listitem><para>
Kaydırma bölgesinin belirtilebilmesini parametreleri farklı bir biçimde kullanarak sağlayan dizge değerli yetenek. Etkisi <userinput>cs</userinput> ile aynıdır. Farklı olarak dört parametre gerektirir:
      </para><para><orderedlist numeration="arabic">
       <listitem><para>
Ekrandaki toplam satır sayısı.
        </para></listitem><listitem><para>
Kaydırılmak istenen bölgenin yukarısındaki satır sayısı.
        </para></listitem><listitem><para>
Kaydırılmak istenen bölgenin aşağısındaki (bölgenin dışındaki) satır sayısı.
        </para></listitem><listitem><para>
İlk parametre ile aynı olarak ekrandaki satır sayısı.
        </para></listitem></orderedlist>
      </para><para>
Bu yetenek Ann Arbor Ambassador'un kaydırma bölgesi özelliği için tasarlanmış bir GNU oluşumudur; istenirse, <userinput>cs</userinput> dizgesine Unix dışı <userinput>%</userinput>'li diziler konularak da yapılabilirdi, fakat Unix termcap'inin <userinput>cs</userinput> yeteneğini kullanan Unix uygulamalarında sorun çıkabilirdi. Şimdilik <userinput>cS</userinput> yeteneğini sadece GNU Emacs kullanmaktadır.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>ns</primary></indexterm>
     <term><literal>ns</literal></term>
     <listitem><para>
Varlığında, uçbirimin sıradan çıktıyı normalde kaydırmayacağını belirten seçimlik yetenek. Günümüz uçbirimlerinde, bu, son satırın son sütununda çıktılanan bir satırsonu karakteriyle imlecin ilk satırın başına taşınacağı anlamına gelir. Bazı atıl uçbirimlerde farklı şeyler olabilir.
      </para><para>
Bu yeteneğe sahip olsa bile uçbirim kaydırma yapabilir. Eğer <userinput>sf</userinput> yeteneği mevcutsa, <userinput>ns</userinput>'in varlığına rağmen kaydırma için kullanılabilir.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>da</primary></indexterm>
     <term><literal>da</literal></term>
     <listitem><para>
Varlığında, satırların yukarı kaydırılmasında ilk satır aşıldığında, eğer ardından aşağı kaydırma yapılırsa ekranın geri gelebileceğini belirten seçimlik yetenek.
      </para><para>
<userinput>da</userinput> ve <userinput>db</userinput> seçenekleri kaydırmanın yapılışını kesinlikle etkilemez. Fakat, kaydırma yapan uygulamalar, eğer bu seçenekler uçbirim tanımında varsa, ekranda kaydırılan satırları temizlemek isterler.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>db</primary></indexterm>
     <term><literal>db</literal></term>
     <listitem><para>
Varlığında, satırların aşağı kaydırılmasında son satır aşıldığında, eğer ardından yukarı kaydırma yapılırsa ekranın geri gelebileceğini belirten seçimlik yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>lm</primary></indexterm>
     <term><literal>lm</literal></term>
     <listitem><para>
Uçbirimin, ekran belleğinde sahip olduğu satır sayısını belirten sayısal değerli yetenek. Sıfır değeri, uçbirimin bir ekranlık ekran belleğinden fazlasına sahip olduğu anlamına gelir, ama satır sayısı sabit değildir. (Satır sayısı her satırdaki metnin miktarına bağlı olabilir.)
      </para></listitem></varlistentry></variablelist>
   </para><para>
<userinput>SF</userinput> yeteneğinin tanımlı olduğu her uçbirim ayrıca, <userinput>sf</userinput> yeteneğini de tanımlamalıdır; aynı şekilde  <userinput>SR</userinput> tanımlıysa <userinput>sr</userinput>'de tanımlı olmalıdır. Bununla birlikte, çoğu uçbirim bir kerede sadece bir satırlık kaydırma yapabilir ve bu durumda <userinput>sf</userinput> yeteneği olduğu halde <userinput>SF</userinput> yeteneği tanımlanmamış olabilir, Benzer şekilde  <userinput>SR</userinput>'siz <userinput>sr</userinput> olabilir.
   </para><para>
Bu bakımdan, kaydırma oluşumlarını kullanan uygulamalar, <userinput>SF</userinput> yeteneğinin yokluğunda <userinput>sf</userinput> ile, benzer şekilde <userinput>SR</userinput>'nin yokluğunda <userinput>sr</userinput> ile çalışabilmelidir. Diğer yandan, bazı yavaş uçbirimlerde, <userinput>SF</userinput>  değil sadece <userinput>sf</userinput> kullanan bir uygulama da olabilir.
   </para><para>
Bir kaydırma komutunu <userinput>tputs</userinput> ile çıktılarken, <varname>satır_sayısı</varname> argümanı ekranın kaydırılmak istenen bölümünün satır sayısı toplamına eşit olmalıdır. Çoğunlukla bu komutlar satır sayısına bağlı geciktirme gerektirirler (bkz. <xref linkend="termcap-Padding"/>).
   </para></sect1>
  <sect1 xml:id="termcap-Windows">
   <title>Pencereler</title>
<indexterm scope="termcap-cp"><primary>pencere</primary></indexterm>
   <para>
Termcap'ta bir <wordasword>pencere</wordasword>, ekranın dikdörtgen biçiminde bir parçasıdır ve tüm ekran işlemleri bu alanda sınırlanır. Sarmalama, temizleme, kaydırma, ekleme ve silme işlemleri belirtilen pencerede  ekranın tamamında uygulandığı gibi uygulanır.
   </para><para><variablelist><varlistentry>
<indexterm scope="termcap-ky"><primary>wi</primary></indexterm>
     <term><literal>wi</literal></term>
     <listitem><para>
Uçbirimin çıktılama için kullanacağı ekran penceresini ayarlamakta kullanılan dizge değerli yetenek. Hepsinin başlangıcı sıfır olmak üzere bu komut dört parametre alır:
      </para><para><orderedlist numeration="arabic">
       <listitem>
Pencerenin ilk satırı olacak satır.
        </listitem><listitem>
Pencerenin son satırı olacak satır.
        </listitem><listitem>
Pencerenin ilk sütunu olacak sütun.
        </listitem><listitem>
Pencerenin son sütunu olacak sütun.
        </listitem>
      </orderedlist></para>
    </listitem></varlistentry></variablelist>
   </para><para>
Çoğu uçbirim pencereleri desteklemez.
   </para></sect1>
  <sect1 xml:id="termcap-Clearing">
   <title>Ekran Parçalarının Temizlenmesi</title>
<indexterm scope="termcap-cp"><primary>silme</primary></indexterm>
<indexterm scope="termcap-cp"><primary>ekranın temizlenmesi</primary></indexterm>
   <para>
Ekranın çeşitli parçalarını boşaltmak anlamında temizleyen çeşitli uçbirim yetenekleri vardır. Çoğu ekran uçbirimi bu yeteneklerin hepsini desteklerken, <userinput>cl</userinput> dizgesini bütün ekran uçbirimleri destekler.
   </para><para><variablelist><varlistentry>
<indexterm scope="termcap-ky"><primary>cl</primary></indexterm>
     <term><literal>cl</literal></term>
     <listitem><para>
Ekranın tamamını temizledikten sonra imleci üst sol köşeye yerleştiren dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>cd</primary></indexterm>
     <term><literal>cd</literal></term>
     <listitem><para>
İmlecin üzerinde bulunduğu satırdan itibaren bu satır dahil ekranın alt satırına kadar ekranı temizleyen dizge değerli yetenek. Bu komut sadece imleç sıfırıncı sütundayken kullanılmalıdır; aksi takdirde komutun ne yapacağı belirlenmemiştir.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>ce</primary></indexterm>
     <term><literal>ce</literal></term>
     <listitem><para>
İmleçten satırın sonunu kadar satırı temizleyen dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>ec</primary></indexterm>
     <term><literal>ec</literal></term>
     <listitem><para>
İmlecin üzerinde bulunduğu karakterden başlayarak <varname>n</varname> karakteri temizleyen dizge değerli yetenek. Bu komutun imlecin yerini değiştirmeyeceği umulur. <varname>n</varname> parametresi ile belirtilen karakter sayısı ekranın sağ kenarını aşacak sayıda olmamalıdır; aksi takdirde komutun ne yapacağı belirlenmemiştir.
      </para></listitem></varlistentry></variablelist>
   </para><para>
Satır sonuna kadar temizleme (<userinput>ce</userinput>) ekranı güncelleyen uygulamalar için hayati önemdedir. Hemen hemen tüm ekran uçbirimleri bu işlemi desteklediğinden, <userinput>ce</userinput>'nin yokluğunda bir uyguluma böyle bir uçbirimle çalışmayı reddedebilir. Yine de, bu sınırlamayı koymak istemiyorsanız, satır sonuna kadar temizleme işlemini sağ kenara kadar boşluk karakterleri çıktılayarak bunu sağlayabilirsiniz. bunu yaparken imleci yerinde bırakmak için imlecin başlangıç konumunu hatırlamanız gerekir. Ayrıca bu teknik boşluk yazmanın silme olacağı kabulüne dayanır. Fakat bu sadece <userinput>ce</userinput> desteği olmayan ekran uçbirimleri için doğrudur.
   </para></sect1>
  <sect1 xml:id="termcap-Insdel-Line">
   <title>Satır Ekleme/Silme</title>
<indexterm scope="termcap-cp"><primary>satır ekleme</primary></indexterm>
<indexterm scope="termcap-cp"><primary>satır silme</primary></indexterm>
   <para>
<wordasword>Satır eklemek</wordasword> mevcut metin satırları arasında, ekranın ortasında boş bir satır oluşturmaktır. Satırın eklendiği yerin altında kalan satırlar aşağı kayıp bir satır da ekranın altında kaybolurken, üstünde kalan satırlarda bir değişiklik gözlenmez.
   </para><para>
<wordasword>Satır silmek</wordasword> ise ekranda satırları yukarı kaydırmak suretiyle bir satırın altındaki satır tarafından örtülerek görünmemesinin sağlanmasıdır. Bu işlemin sonunda ekranın altında yeni bir satır görünecektir. Bu yeni satır genelde boş olur, ancak <userinput>db</userinput> yeteneği etkin olan sistemlerde bu satır daha önce ekranın altına kaydırılmış veya ekranın altına eklenmiş bir satır olabilir.
   </para><para>
Satırların eklenmesi ve silinmesi görüntünün uzatma veya kısaltma anlamında güncellenmesini sağlayan uygulamalar için yararlıdır. Ayrıca metin düzenleyicilerde ekranın kısmen kaydırılması,  kesilmesi ve eklenmek istenen satırların yeniden gösterilmesini sağlamak için de yararlıdır.
   </para><para>
Birçok uçbirimde imlecin olduğu konumda tek bir satırın eklenmesi ya da silinmesine yarayan komutlar varken bazıları silinecek ya da eklenecek satır sayısını parametre olarak alan tek bir komutla çok sayıda satırın silinmesini ya da eklenmesini sağlayabilir. Bu komutları kullanmadan önce imleç daima sıfırıncı sütuna taşınır.
   </para><para><variablelist><varlistentry>
<indexterm scope="termcap-ky"><primary>al</primary></indexterm>
     <term><literal>al</literal></term>
     <listitem><para>
İmlecin bulunduğu satırın öncesine boş bir satır ekleyen dizge değerli yetenek. İmlecin bulunduğu satır ve onun altındaki tüm satırlar aşağı taşınır. Ekrandaki son satır (veya kaydırılan bölgenin son satırı) görünmez olur; bu satır çoğu durumda yok edilir. Eğer <userinput>db</userinput> yeteneği mevcutsa, yokedilmeyebilir (bkz. <xref linkend="termcap-Scrolling"/>).
      </para><para>
Bu komut kullanılmadan önce imleç sol girintinin içine alınmış olmalıdır. Komut imlecin konumunu değiştirmez.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>dl</primary></indexterm>
     <term><literal>dl</literal></term>
     <listitem><para>
İmlecin bulunduğu satırı silen dizge değerli yetenek. İmlecin bulunduğu satırın altında kalan tüm satırlar yukarı taşınır. Ekranın altında (veya kaydırma bölgesinin sonunda) bir boş satır görünür. Eğer <userinput>db</userinput> yeteneği mevcutsa, ekranın altında görünen satır boş olmayabilir.
      </para><para>
Bu komut kullanılmadan önce imleç sol girintinin içine alınmış olmalıdır. Komut imlecin konumunu değiştirmez.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>AL</primary></indexterm>
     <term><literal>AL</literal></term>
     <listitem><para>
İmlecin bulunduğu satırın öncesine <varname>n</varname> boş satır ekleyen dizge değerli yetenek. Bu komut <varname>n</varname> kere yinelenen <userinput>al</userinput> komutu imiş gibi görünse de işlemi tek bir <userinput>al</userinput> komutu kadar hızlı gerçekleştirir.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>DL</primary></indexterm>
     <term><literal>DL</literal></term>
     <listitem><para>
İmlecin bulunduğu satırdan başlayarak <varname>n</varname> satırı silen dizge değerli yetenek. Bu komut <varname>n</varname> kere yinelenen <userinput>dl</userinput> komutu imiş gibi görünse de işlemi tek bir <userinput>dl</userinput> komutu kadar hızlı gerçekleştirir.
      </para></listitem></varlistentry></variablelist>
   </para><para>
<userinput>AL</userinput> komutunu içeren her uçbirim tanımı <userinput>al</userinput> komutunu da içermek zorundadır; aynı kural <userinput>DL</userinput> ve <userinput>dl</userinput> için de benzer şekilde geçerlidir. Diğer yandan, bir uçbirim tanımı tek bir satır ile işlem yapan <userinput>al</userinput> ve/veya <userinput>dl</userinput> komutlarını içerirken <userinput>AL</userinput> ve/veya <userinput>DL</userinput> komutlarını içermeyebilir.
   </para><para>
Bu bakımdan, satır ekleme ve silme işlemlerini kullanan bir yazılım <userinput>AL</userinput> komutunun yokluğu durumunda <userinput>al</userinput> komutuyla, <userinput>DL</userinput> yokluğunda ise <userinput>dl</userinput> ile çalışabilmeye hazır olmalıdır. Bununla birlikte, sadece <userinput>al</userinput> ve <userinput>dl</userinput> komutlarını kullanan, <userinput>AL</userinput> ve <userinput>DL</userinput>'ye hiç bakmayan yazılımlar da geliştirilebilir.
   </para><para>
Eğer bir uçbirim satır ekleme ve silmeyi doğrudan desteklemiyor ama bölgesel kaydırmayı destekliyorsa, aynı etki kaydırma işlemi ile sağlanabilir. Bu bakımdan, satır ekleme ve silme işlemleri yapan yazılımlar böyle bir duruma da hazırlıklı olmalıdır. Satır ekleme ve silme işlemleri için tek yolun bu olduğu VT100 uçbirimlerinin yaygın kullanımı gözönüne alındığında böyle bir durumun gözönüne alınmış olması oldukça önem kazanır.
   </para><para>
Kaydırma bölgesi ayarlanabilen uçbirimlerde satırların silinmesi veya eklenmesi kaydırma bölgesinden etkilenir. Birkaç ardışık satırın birkaç satır vasıtasıyla yukarı veya aşağı kaydırılmasının istendiği durumlarda yararlıdır. Bkz.
<xref linkend="termcap-Scrolling"/>.
   </para><para>
Ekranın altına itilen satırlar, eğer uçbirim seçimlik <userinput>db</userinput> yeteneğine sahipse kaybedilmezler; bunlar ekranın görünmeyen bölgesinin belleğine kaydedilirler. Bu işlem, kaydırma ile satırların ekranın altına itilmesi ile aynıdır. Gerek geri kaydırma gerekse satır silme işlemleri sonunda eğer uçbirim seçimlik <userinput>db</userinput> yeteneğinden başka seçimlik kaydırma bölgesi yeteneğine de sahipse ekranın altında kaybolan bu satırlar tekrar görünecektir.
   </para><para>
Ekleme veya silme komutunu <userinput>tputs</userinput> ile çıktılarken <varname>satır_sayısı</varname> argümanı, imleç konumundan ekranın (veya kaydırma bölgesinin) altındaki satıra kadar tüm satırları sayısını içermelidir. Bu komutlar çoğunlukla satır sayısına göreli bir geciktirme gerektirirler. Bkz. <xref linkend="termcap-Padding"/>.
   </para><para>
<userinput>AL</userinput> ve <userinput>DL</userinput> için <varname>satır_sayısı</varname> argümanı sadece eklenen veya silinen satırların sayısını değil, işlemden etkilenen tüm satırların sayısını içermelidir. <userinput>AL</userinput> ile <varname>n</varname> satır eklemenin <userinput>al</userinput> ile bir satır eklemek kadar hızlı olabilmesi için bu böyledir.
   </para></sect1>
  <sect1 xml:id="termcap-Insdel-Char">
   <title>Karakter Ekleme/Silme</title>
<indexterm scope="termcap-cp"><primary>karakter ekleme</primary></indexterm>
<indexterm scope="termcap-cp"><primary>karakter silme</primary></indexterm>
   <para>
<wordasword>Karakter eklemek</wordasword>, bir satırın ortasında satırın kalanını sağa iterek boş bir alan oluşturmaktır. Bu işlem sırasında en sağ sütundaki karakter kaybedilir.
   </para><para>
<wordasword>Karakter silmek</wordasword>, bir satırın ortasında satırın kalanını sola çekmek suretiyle bir karakterin örtülmesini sağlamaktır. Bu işlem sırasında en sağdaki sütunda bir boş alan ortaya çıkar.
   </para><para>
Karakterlerin eklenmesi ve silinmesi görüntünün uzatma veya kısaltma anlamında güncellenmesini sağlayan uygulamalar için yararlıdır. Ayrıca metin düzenleyicilerde düzenlenen bir satırda sonuçların yeniden görüntülenmesi için de yararlıdır.
   </para><para>
Birçok uçbirimde imlecin olduğu konumda tek bir karakterin eklenmesi ya da silinmesine yarayan komutlar varken bazıları silinecek ya da eklenecek karakter sayısını parametre olarak alan tek bir komutla çok sayıda karakterin silinmesini ya da eklenmesini sağlayabilir.
   </para><para>
<indexterm scope="termcap-cp"><primary>ekleme kipi</primary></indexterm>
Çoğu uçbirim bir karakterin belli bir konumda çıktılanması işleminin normalde araya ekleme şeklinde olmasını sağlar. Araya ekleme kipine giriş ve çıkış için özel bir komut dizgesi kullanılır. Bir uçbirimin bir ekleme komutu yerine bir ekleme kipi ile tasarlanma sebebi, karakterlerin eklenmesi işleminin genellikle karakterlerin yazılması sırasında olagelmesidir. Ekleme kipinde bu işlem, kipe giriş ve çıkış için harcanan sabit zaman haricinde karakterlerin normalde yazımı kadar hızlıdır. Hatta, hat hızı yeterinden yüksekse ekleme kipinde karakterlerin çıktılanması için geciktirme bile gerekebilir.
   </para><para>
Ekleme kipine girmenizi gerektiren bazı uçbirimler ekleme yapılan her konum için özel bir komut kullanmanızı gerektirebildikleri gibi bazıları da eklenen her karakterden önce ve sonra özel birer komut kullanmanızı da gerektirebilirler.
   </para>
<indexterm scope="termcap-cp"><primary>silme kipi</primary></indexterm>
   <para>
Karakterlerin silinmesi genellikle bir ya da daha fazla konum için bir komutun doğrudan kullanılması ile gerçekleşir; ancak bazı uçbirimlerde silme komutunu kullanabilmek için özel bir silme kipine girmeyi ve sonrasında da çıkmayı gerektirebilir. Bazan ekleme kipi ile silme kipi aynı kip olur.
   </para><para>
Bazı uçbirimler çıktılanmış bir boşluk karakterinin konumu ile karakter içermeyen bir konumu farklı değerlendirir. Böyle uçbirimlerde, karakter ekleme veya silme işlemi etkisini satırın son sütunundaki karakterde değil imleç konumundaki karakterden itibaren gösterir. Hatta ilk satırda kaymayı durduracak bir konum olmadıkça etki birden fazla satırı da  kapsayabilir. Bu tür uçbirimler seçimlik <userinput>in</userinput> yeteneğinin varlığı ile tanınırlar.
   </para><para>
<userinput>in</userinput> yetenekli uçbirimlerde, karakterlerin silinip ardından tekrar yazılması olarak bildiğiniz karakter atlama tekniği daha sonraki karakter silme ve ekleme işlemlerinin bu satır üzerinde standartdışı şeyler yapmalarına sebep olur. Bunun olma ihtimali olan bir programda <userinput>in</userinput> yeteneğinin varlığına bakmalı ve <userinput>in</userinput> yeteneğinin varlığı durumunda, boşluk olarak görünecek sütunlara boşluk karakteri yazmaya dikkat etmelisiniz.
   </para><para>
Uçbirim yeteneklerinin bolluğu tüm bu karmaşıklığın açıklanmasını gerektirir. Burada hepsini listeledik. Aşağıdaki listeyi yazılımcının bu yetenekleri bir algoritmada hesaba katacağı sıraya göre hazırladık.
   </para><para><variablelist><varlistentry>
<indexterm scope="termcap-ky"><primary>im</primary></indexterm>
     <term><literal>im</literal></term>
     <listitem><para>
Ekleme kipine girilmesini sağlayan dizge değerli yetenek.
      </para><para>
<userinput>vi</userinput> metin düzenleyicisi bir karakterin eklenmesinin sadece <userinput>im</userinput> yeteneğinin varlığı halinde mümkün olacağını varsaydığından eğer uçbirimin özel bir ekleme kipi yoksa ama karakter eklemek için özel bir komutu varsa uçbirim tanımında <userinput>im</userinput> yeteneği boş değerle belirtilmiş olmalıdır.
      </para><para>
Yeni uygulamalar <userinput>vi</userinput> gibi davranmamalıdır. <userinput>im</userinput>'e sadece tanımlanmış olduğu kadar değer biçmeliler.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>ei</primary></indexterm>
     <term><literal>ei</literal></term>
     <listitem><para>
Ekleme kipini bırakmayı sağlayan dizge değerli yetenek. <userinput>im</userinput> varsa bu yetenek de olmalıdır.
      </para><para>
Ekleme kipine giriş ve çıkış için aynı komutu kullanan sadece bir kaç eski uçbirim kalmıştır ve bu dizge bu uçbirimlerde ekleme kipi etkinse etkisiz, etkisizse etkin yapar. Bu uçbirimler için bundan dolayı <userinput>ei</userinput> yeteneğinin <userinput>im</userinput> yeteneğine eşdeğer olduğundan bahsedilebilir. Bu tür uçbirimleri destekleyecekseniz, programınız ekleme kipinde olup olmadığını daima hatırlamak zorunda kalacaktır. Bununla birlikte, bu uçbirimlerin artık kullanılmadığını gözönünde tutarak onları desteklemeyi reddedebilirsiniz. Günümüz uçbirimlerinin hepsinde ekleme kipinden her çıkmak isteyişinizde <userinput>ei</userinput> komutunu rahatça kullanabilirsiniz.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>ic</primary></indexterm>
     <term><literal>ic</literal></term>
     <listitem><para>
İmleç konumuna bir karakter ekleyen dizge değerli yetenek. İşlem imleci hareket ettirmez.
      </para><para>
Bir karakterin ekleme kipinde çıktılanması için karakteri eklemek yeterliyse, <userinput>ic</userinput> yeteneği boş değerle tanımlanmalıdır.
      </para><para>
Eğer uçbiriminiz ekleme için bir seçim yolu (ekleme kipi ya da özel bir komut olarak) tanımlıyorsa ve <userinput>im</userinput> tanımlıyken <userinput>ic</userinput>'nin tanımsız olması çok sayıda karakter eklendiğinde en verimli işlemi belirttiğinden <userinput>ic</userinput> olmaksızın <userinput>im</userinput>'i tanımlamayın. Her ekleme yapılışında <emphasis>her ikisini de</emphasis> kullanmak gerekir anlamında her iki dizgeyi de <emphasis>tanımlamayın</emphasis>.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>ip</primary></indexterm>
     <term><literal>ip</literal></term>
     <listitem><para>
Ekleme kipinde eklenen karakterden sonrasını çıktılayan dizge değerli yetenek. Çoğunlukla bir karakter eklenmesinden sonra gecikme gerekliyse geciktirme uygulamak için kullanılır (bkz. <xref linkend="termcap-Padding"/>).
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>IC</primary></indexterm>
     <term><literal>IC</literal></term>
     <listitem><para>
İmleç konumundan itibaren <varname>n</varname> karakter ekleyen dizge değerli yetenek. <userinput>ic</userinput> dizgesinin bir boşlukla <varname>n</varname> kere yinelenmesine eşdeğerdir.
      </para><para>
<userinput>IC</userinput> yeteneği varsa uygulamalar ekleme kipine girmeksizin bu yeteneği kullanabilirler.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>mi</primary></indexterm>
     <term><literal>mi</literal></term>
     <listitem><para>
Varlığının, ekleme kipindeyken imleç taşımanın ve uçbirimin ekleme kipinde kalacağının varsayılmasının güvenli olduğu anlamına gelen seçimlik yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary sortas="in">in</primary></indexterm>
     <term><literal>in</literal></term>
     <listitem><para>
Varlığı halinde, uçbirimin çıktılanmış bir boşluk karakterinin konumu ile karakter içermeyen bir konumu farklı değerlendireceğini belirten seçimlik yetenek.
      </para></listitem></varlistentry></variablelist>
   </para><para>
Bir uygulama yazılımında uçbirimin karakter eklemesi yapabileceğini varsaymak için <userinput>IC</userinput>, <userinput>im</userinput>,
<userinput>ic</userinput> veya <userinput>ip</userinput> yeteneklerinden birinin tanımlanmış olması yeterlidir.
   </para><para>
<varname>n</varname> boşluk karakteri ekleyip imleci konumlamak için aşağıdaki algoritmayı izleyin:
   </para><para><orderedlist numeration="arabic">
    <listitem><para>
<userinput>IC</userinput> yeteneği sağlanmışsa dizgeyi <varname>n</varname> parametreli çıktılamak yeterlidir. Aksi takdirde (veya <userinput>IC</userinput> dizgesine bakmak istemiyorsanız) aşağıdaki adımları uygulayın.
     </para></listitem><listitem><para>
Uçbirim zaten ekleme kipinde değilse ve varsa <userinput>im</userinput> dizgesini çıktılayın.
     </para></listitem><listitem><para>
4'den 6'ya kadar ki adımları <varname>n</varname> kere yineleyin.
     </para></listitem><listitem><para>
Varsa <userinput>ic</userinput> dizgesini çıktılayın.
     </para></listitem><listitem><para>
Bir boşluk çıktılayın.
     </para></listitem><listitem><para>
Varsa <userinput>ip</userinput> dizgesini çıktılayın.
     </para></listitem><listitem><para>
<userinput>ei</userinput> çıktılayarak ekleme kipinden çıkın. Bunu hemen yapmanıza gerek yoktur.  Seçimlik <userinput>mi</userinput> yeteneği varsa imleci taşıyabilirsiniz ve imleç ekleme kipinde kalır; böylece yeniden ekleme kipine girmeksizin başka ekleme işlemleri de yapabilirsiniz.
     </para></listitem></orderedlist>
   </para><para>
Boşluk olmayan <varname>n</varname> karakter ekleyip imleci konumlamak için aşağıdaki algoritmayı izleyin:
   </para><para><orderedlist numeration="arabic">
    <listitem><para>
Karakterleri çıktılamak için <userinput>IC</userinput> yeteneği sağlanmışsa dizgeyi <varname>n</varname> parametreli çıktılamak yeterlidir. Aksi takdirde (veya <userinput>IC</userinput> dizgesine bakmak istemiyorsanız) aşağıdaki adımları uygulayın.
     </para></listitem><listitem><para>
Uçbirim zaten ekleme kipinde değilse ve varsa <userinput>im</userinput> dizgesini çıktılayın.
     </para></listitem><listitem><para>
4'den 6'ya kadar ki adımları çıktılanacak her karakter için tekrarlayın
     </para></listitem><listitem><para>
Varsa <userinput>ic</userinput> dizgesini çıktılayın.
     </para></listitem><listitem><para>
Sonraki karakteri çıktılayın.
     </para></listitem><listitem><para>
Varsa <userinput>ip</userinput> dizgesini çıktılayın.
     </para></listitem><listitem><para>
<userinput>ei</userinput> çıktılayarak ekleme kipinden çıkın. Bunu hemen yapmanıza gerek yoktur.  Seçimlik <userinput>mi</userinput> yeteneği varsa imleci taşıyabilirsiniz ve imleç ekleme kipinde kalır; böylece yeniden ekleme kipine girmeksizin başka ekleme işlemleri de yapabilirsiniz.
     </para></listitem></orderedlist>
   </para><para><note><para>
Bir husus dışında bu, özgün Unix termcap belirtimi ile aynı değildir: belirtim <userinput>IC</userinput> dizgesinin ekleme kipine girmeksizin kullanılabileceğini varsayar. Bildiğim kadarıyla bu böyledir, ekleme kipine girmek ve çıkmaktan kaçınmak mümkündür ve ayrıca karakterler eklendikleri konumlara gittikten sonra karakter ekleme geciktirmesinden de kaçınılabilir.
   </para></note></para><para>
Karakterlerin silinmesi bu kadar karmaşık değildir; bir sütunun silinmesi <userinput>dc</userinput> dizgesi çıktılanarak yapılır. Yine de, <userinput>dc</userinput>'nin işini yapabilmesi için <userinput>dm</userinput> ile girilmesi gereken bir silme kipi olabilir.
   </para><para><variablelist><varlistentry>
<indexterm scope="termcap-ky"><primary>dc</primary></indexterm>
     <term><literal>dc</literal></term>
     <listitem><para>
İmleç konumundaki karakteri silen dizge değerli yetenek. Bu yeteneği olmayan bir uçbirim karakterleri silemez.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>DC</primary></indexterm>
     <term><literal>DC</literal></term>
     <listitem><para>
İmleç konumundan itibaren <varname>n</varname> karakteri silen dizge değerli yetenek. <userinput>dc</userinput> dizgesinin <varname>n</varname> kere yinelenmesi ile aynı etkiye sahiptir. <userinput>DC</userinput> yeteneği olan her uçbirim <userinput>dc</userinput> yeteneğine de sahiptir.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>dm</primary></indexterm>
     <term><literal>dm</literal></term>
     <listitem><para>
Silme kipine girmeyi sağlayan dizge değerli yetenek. Olmayışı silme kipinin olmadığı ve herhangi bir anda <userinput>dc</userinput> yeteneğinin kullanılabileceği (<userinput>dc</userinput> yeteneğinin olduğu varsayımıyla) anlamına gelir.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>ed</primary></indexterm>
     <term><literal>ed</literal></term>
     <listitem><para>
Silme kipinden çıkmayı sağlayan dizge değerli yetenek. <userinput>dm</userinput> mevcutsa bu yetenek de olmalıdır.
      </para></listitem></varlistentry></variablelist>
   </para><para>
<varname>n</varname> karakteri silmek ve imleci konumlamak için bu adımları uygulayın:
   </para><para><orderedlist numeration="arabic">
    <listitem><para>
<userinput>DC</userinput> yeteneği varsa, parametre <varname>n</varname> ile kullanmak yeterlidir. Aksi takdirde aşağıdaki adımları uygulamak gerekir.
     </para></listitem><listitem><para>
Uçbirim zaten silme kipinde değilse ve varsa <userinput>dm</userinput> dizgesini çıktılayın.
     </para></listitem><listitem><para>
<userinput>dc</userinput> dizgesini <varname>n</varname> kere çıktılayın.
     </para></listitem><listitem><para>
Sonunda <userinput>ed</userinput> dizgesini çıktılayın. Eğer seçimlik <userinput>mi</userinput> yeteneği mevcutsa silme kipine yeniden girmek ve çıkmak gerekmeksizin imleci taşıyabilir ve başka silme işlemleri de yapabilirsiniz.
     </para></listitem></orderedlist>
   </para><para>
<userinput>IC</userinput> yeteneğinde olduğu gibi <userinput>DC</userinput> yeteneğinin de silme kipine girmeksizin çalışacağı (<userinput>dc</userinput> çalışmasa bile) varsayımıyla özgün termcap belirtiminden ayrılırız.
   </para><para>
<userinput>dm</userinput> ve <userinput>im</userinput> yeteneklerinin her ikisi de mevcutsa ve aynı değere sahiplerse bu, uçbirimin hem silme hem de ekleme kipi olarak tek bir kipe sahip olduğu anlamına gelir. Bunun bilinmesi bir program için yararlıdır, çünkü bu durumda silme/ekleme kipini bırakmaksızın ve yeniden girmeksizin silme ve ekleme işlemleri yapabilir.
   </para></sect1>
  <sect1 xml:id="termcap-Standout">
   <title>Çarpıcı ve Sıradan Görünüm Kipleri</title>
<indexterm scope="termcap-cp"><primary>görünüm kipleri</primary></indexterm>
<indexterm scope="termcap-cp"><primary>göze çarpma</primary></indexterm>
   <para>
<wordasword>Görünüm kipleri</wordasword> karakterlerin görünümlerini değiştirme yollarıdır. Çok bilinen görünüm kipleri arasında negatif görüntü, karartma, aydınlatma, yanardönerlik, altçizme, görünmezlik ve başka karakter kümesi sayılabilir. Her uçbirim çeşidi bunların hiçbirine veya hepsine ya da bazılarına destek içerebilir.
   </para><para>
Her uçbirim türü için, bir metni vurgulu duruma getiren bir görünüm kipi veya bunların birleşimi <wordasword>çarpıcı görünüm kipi</wordasword> olarak adlandırılır. Çarpıcı görünüm kipine giriş ve çıkış için <userinput>so</userinput> ve <userinput>se</userinput> yetenekleri kullanılır. Görünüm kiplerini sadece bazı metin parçalarını vurgulamak için kullanan programlar genelde çarpıcı görünüm kipini kullanırlar, böylece çok sayıda uçbirim üzerinde çalışabilirler. Altçizme ve diğer karakter kümesi kipi dışında kalan görünüm kiplerinin kullanımları daha az yaygındır.
   </para><para>
Görünüm kiplerini gerçekleyen uçbirimler bunu nasıl yaptıklarına bağlı olarak iki genel sınıftan birine girerler.
   </para><para>
Bazı uçbirimlerde bir görünüm kipinin varlığı veya yokluğu her karakter konumu için ayrı kaydedilir. Bu uçbirimlerde, yazılan her karakter yazıldıkları andaki görünüm kiplerini de içerir ve bu kipler karakter silininceye ya da üzerine yazılancaya kadar korunurlar. İleride yazılacak karakterler için görünüm kiplerini açıp kapamaya yarayan özel komutlar vardır.
   </para>
<indexterm scope="termcap-cp"><primary>sihirli çerez</primary></indexterm>
   <para>
Bazı uçbirimlerde ise görünüm kipinin değiştiğini belirten işaretleyiciler kullanılır ve iki işaretleyici arasında kalan bütün konumlar bu kipten etkilenir. Bu işaretleyicilere geleneksel olarak <wordasword>sihirli çerezler</wordasword> denir.
   </para><para>
Görünüm kiplerini açıp kapamak amacıyla her iki uçbirim sınıfında da (sihirli çerezli uçbirimler ve çerezsiz uçbirimler) aynı yetenekler (<userinput>so</userinput>, <userinput>se</userinput>, <userinput>mb</userinput>, vb.) kullanılır. Sihirli çerezli uçbirimlerde bu komutlar sihirli çerezleri yazarlar. Çerezsiz uçbirimlerde ise çıktıyı etkileyecek o anki kipleri değiştirirler. Basit uygulamalar bu komutları çerez yazıp yazmadıklarını bilmeksizin kullanabilirler.
   </para><para>
Ancak, bir ekranda çalışan ve bunu güncelleyen bir uygulama, uçbirimin sihirli çerezleri kullanıp kullanmadığını ve bunların etkilerini tam olarak bilmek zorundadır. Bu bilgi <userinput>sg</userinput> yeteneğinden gelir.
   </para><para>
<userinput>sg</userinput> yeteneği, varlığı uçbirimin görünüm kipleri için sihirli çerezleri kullandığını belirten sayısal değerli bir yetenektir. Değeri bir sihirli çerezin işgal ettiği karakter konumu sayısıdır. Genellikle çerez ekranda bir veya daha fazla karakterlik yer işgal eder ve bu karakter konumları boş olarak gösterilir. Bazı uçbirimlerde ise çerez sıfır genişlikte olabilir.
   </para><para>
<userinput>sg</userinput> yeteneği çarpıcı görünüm kipini açan ve kapayan çerezlerin her ikisi için de geçerlidir. Bu, her iki çerez çeşidinin de ekranda aynı aynı genişlikte olacağı varsayımına dayanır. Eğer bu gerçekleşmezse, daha dar çerezler diğer çerezlerle aynı genişliğe gelene kadar boşluklarla "genişletilirler".
   </para><para>
Bazı sihirli çerezli uçbirimlerde, her satır daima normal görünümle başlar; başka bir deyişle bir sihirli çerezin etki alanı satırın dışına çıkamaz. Fakat diğer uçbirimlerde bir sihirli çerez açıkça iptal edilmedikçe kendinden sonraki satırları da etkiler. Termcap sihirli çerezlerin bu anlamda çalışma yöntemlerini ayrımsamaya yarayacak bir yol tanımlamaz. Sonuçtan emin olmak için en iyisi her satırın başına bir çerez koymaktır.
   </para><para>
Bazı çerezsiz uçbirimlerde, çarpıcı görünüm kipi veya diğer görünüm kipleri imleç hareket ettirilerek iptal edilebilir. Bazılarında da, imlecin hareket ettirilmesinin görünüm kipleri üzerinde bir etkisi olmaz. Bu ikinci tür uçbirimler seçimlik <userinput>ms</userinput> ("can move in standout" kısaltması olarak) yeteneği ile tanınırlar. Görünüm kipleri etkinken imlecin taşınmasına sebep olabilecek durumlara sahip tüm uygulamalar bu seçimlik yeteneğin varlığına bakmalıdır; yeteneğin yokluğu durumunda imleci hareket ettirmeden önce görünüm kiplerini normale getirmelidirler.
   </para><para>
Bir uygulama sadece çarpıcı görünüm kipini etkinleştirmişse kipi normale çevirmek için <userinput>se</userinput> yeteneğini kullanmalıdır. Sadece diğer karakter kümesi kipini etkinleştirmişse kipi normale çevirmek için <userinput>ae</userinput> yeteneğini kullanmalıdır. Eğer diğer görünüm kiplerini etkinleştirmişse bu kipleri normale çevirmek için <userinput>me</userinput> yeteneğini kullanmalıdır.
   </para><para><note><para>
<userinput>so</userinput> ve <userinput>mb</userinput> &hellip; <userinput>mr</userinput> komutlarından biri ile bir görünüm kipi eğer diğer görünüm kiplerinden biri etkinken etkinleştirilmeye çalışılırsa bazı uçbirimlerde iki kip birleştirilirken bazılarında evvelce etkin olan kip kapatılır. İkinci tür uçbirim davranışının sebebi bu uçbirimlerin başka bir görünüm kipine geçmeksizin bir görünüm kipini etkinleştirecek ya da kapatacak komutlarının olmayışıdır. Görünüm kiplerini birarada kullanacak uygulamalar bunu <userinput>sa</userinput> yeteneğinin yokluğunda yapmaya çalışmamalı, bir kipten diğerine geçerken evvelce etkin olan kipi kapatmalı ve ondan sonra istenen kipe geçmelidirler.
   </para></note></para><para>
Bazı eski uçbirimlerde <userinput>so</userinput> ve <userinput>se</userinput> komutları yerine çarpıcı görünüm kipini açıksa kapatan kapalıysa açan komut olarak tek bir komut olabilir. Bu durum kurallara uyma adına ek bir <userinput>se</userinput> komutu çıktılayacak bir uygulama için risklidir. Şansa bakın ki, bu uçbirimlerin hepsi artık atıl olmuştur.
   </para><para>
Çarpıcı görünümde olmayan metni çarpıcı görünümle değiştirerek ekranı güncelleyen uygulamalar seçimlik <userinput>xs</userinput> yeteneğinin varlığına bakmalıdır. Çerezsiz uçbirimlerde, bu yetenek yazılmış çarpıcı görünüm kipinden çıkmanın tek yolunun <userinput>ce</userinput> dizgesi ile ya da daha güçlü bir şeyle satırın bu bölümümün temizlenmesi olduğunu söyler (bkz. <xref linkend="termcap-Clearing"/>); bu ekran konumlarına sadece yeni karakterler yazmakla orada etkin olan kipler değişmiyecektir. Sihirli çerezli uçbirimlerde ise  <userinput>xs</userinput> yeteneği bir çerezi kaldırmanın tek yolunun çerezi içeren satır bölümünü temizlemek olduğunu söyler; aynı konuma farklı bir çerez yazmak işe yaramaz.
   </para><para>
Böyle uygulamalar ayrıca uçbirimin bir Teleray 1061 olduğunu belirten seçimlik <userinput>xt</userinput> yeteneğinin varlığına da bakmalıdır. Bu uçbirimde imleci bir sihirli çerezin önüne konumlamak mümkündür, bu durumda bir çerezi kaldırmak için iki yol olur: (1) imlecin üzerinde bulunduğu satırı silmek, (2) imleci çerezin konumundan en az bir karakter önceye (muhtemelen bir önceki satıra) konumlamak ve bu uçbirimlerde sonraki <userinput>so</userinput> sihirli çerezini bulup kaldıran <userinput>se</userinput> dizgesini çıktılamaktır. (Ayrıca, bir satırın başlangıcında olmayan bir çerezi o satırı temizleyerek de kaldırmak mümkün olabilir.) <userinput>xt</userinput> yeteneğinin ayrıca, sekme karakterlerinin kullanımıyla da sorunları vardır, fakat bu bakımdan artık atıl olmuştur (bkz. <xref linkend="termcap-Cursor-Motion"/>).
   </para><para><variablelist><varlistentry>
<indexterm scope="termcap-ky"><primary>so</primary></indexterm>
     <term><literal>so</literal></term>
     <listitem><para>
Çarpıcı görünüm kipine girmeyi sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>se</primary></indexterm>
     <term><literal>se</literal></term>
     <listitem><para>
Çarpıcı görünüm kipinden çıkmayı sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>sg</primary></indexterm>
     <term><literal>sg</literal></term>
     <listitem><para>
Sihirli çerezli ekranın genişliğini veren sayısal yetenek. Görünüm kipini karakter karakter kaydeden uçbirimlerde bu yetenek yoktur.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>ms</primary></indexterm>
     <term><literal>ms</literal></term>
     <listitem><para>
Varlığı, görünüm kipleri normal durumda değilken imleci hareket ettirmenin güvenli olduğu anlamına gelen seçimlik yetenek. Bu seçeneğin yokluğunda, uygulamalar imleci hareket ettirmeden önce daima görünüm kiplerini normale çevirmelidir.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>xs</primary></indexterm>
     <term><literal>xs</literal></term>
     <listitem><para>
Varlığı, ekrandaki görünüm kiplerini sıfırlamanın tek yolunun satırı sonuna kadar temizlemek olduğu anlamına gelen seçimlik yetenek. Çerezsiz uçbirimlerde, kiplerin etkin olduğu alanı temizlemelisiniz. Sihirli çerezli uçbirimlerde ise çerezi içeren alanı temizlemelisiniz. Ayrıntılar için yukarıya bakınız.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>xt</primary></indexterm>
     <term><literal>xt</literal></term>
     <listitem><para>
Varlığı, imlecin tam sihirli çerezin önüne konumlanamayacağını ve imleçten sonraki sihirli çerezi silecek komutun <userinput>se</userinput> olduğunu belirten seçimlik yetenek. Ayrıntılar için yukarıya bakınız.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>mb</primary></indexterm>
     <term><literal>mb</literal></term>
     <listitem><para>
Yanarsöner kipe girmeyi sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>md</primary></indexterm>
     <term><literal>md</literal></term>
     <listitem><para>
Çifte parlaklık kipine girmeyi sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>mh</primary></indexterm>
     <term><literal>mh</literal></term>
     <listitem><para>
Yarı parlaklık kipine girmeyi sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>mk</primary></indexterm>
     <term><literal>mk</literal></term>
     <listitem><para>
Görünmez kipe girmeyi sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>mp</primary></indexterm>
     <term><literal>mp</literal></term>
     <listitem><para>
Korumalı kipe girmeyi sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>mr</primary></indexterm>
     <term><literal>mr</literal></term>
     <listitem><para>
Negatif görüntü kipine girmeyi sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>me</primary></indexterm>
     <term><literal>me</literal></term>
     <listitem><para>
Çarpıcı görünüm kipi ve altçizme kipi dahil tüm görünüm kiplerini kapatan dizge değerli yetenek. Bazı uçbirimlerde ayrıca, diğer karakter kümesi kipini de kapatırken bazılarında kapatmayabilir. <userinput>mb</userinput> &hellip; <userinput>mr</userinput> yeteneklerinden birinin mevcudiyeti bu yeteneğin de mevcudiyetini gerektirir.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>as</primary></indexterm>
     <term><literal>as</literal></term>
     <listitem><para>
Diğer karakter kümesi kipini etkin kılan dizge değerli yetenek. Bu kip karakterlerin bazıları ya da bir kısmı için başka bir resim atar. Bu karakter resimlerinin ne olacağı ile ilgili bir standart yoktur.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>ae</primary></indexterm>
     <term><literal>ae</literal></term>
     <listitem><para>
Diğer karakter kümesi kipini kapatan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>sa</primary></indexterm>
     <term><literal>sa</literal></term>
     <listitem><para>
Görünüm kiplerinin keyfi bir birleşimini açmaya yarayan dizge değerli yetenek. Herbiri farklı bir görünüm kipini temsil eden 9 parametre kabul eder. Değeri 1 olan görünüm kipi etkin, 0 olan kapalıdır. Uçbirimlerin çoğu <userinput>sa</userinput> yeteneğini desteklemez.
      </para><para>
Dokuz parametre sırasıyla, <varname>çarpıcı görünüm</varname>, <varname>altçizme</varname>,
<varname>negatiflik</varname>, <varname>yanarsönerlik</varname>, <varname>yarı parlaklık</varname>, <varname>çifte parlaklık</varname>, <varname>boş</varname>, <varname>korumalı</varname>, <varname>diğer karakter kümesi</varname> kiplerini temsil eder.
      </para></listitem></varlistentry></variablelist>
  </para></sect1>
  <sect1 xml:id="termcap-Underlining">
   <title>Altçizme</title>
<indexterm scope="termcap-cp"><primary>altçizme</primary></indexterm>
   <para>
Çoğu uçbirimde altçizme de çarpıcı görünüm kipi gibi bir görünüm kipi çeşididir. Bu sebeple sihirli çerezler kullanılarak ya da çıktılanan her karakterin anlık durumunu etkileyen bir seçenek olarak gerçeklenebilir. Ayrıntılı bilgi için <xref linkend="termcap-Standout"/> bölümüne bakınız.
   </para><para>
<userinput>ug</userinput> yeteneği, uçbirimin altçizme için sihirli çerezler kullandığını belirten sayısal bir yetenektir ve değeri altçizme çerezinin işgal ettiği karakter konumlarının sayısıdır. <userinput>sg</userinput>'nin çarpıcı görünüm kipi olarak kullanılması gibi bu yetenek de altçizme kipi için kullanılır. Çok basit uygulamalar dışında, <userinput>ug</userinput>'nin değerini dikkate almaksızın altçizme kipini doğru olarak kullanmak imkansızdır.
   </para><para><variablelist><varlistentry>
<indexterm scope="termcap-ky"><primary>us</primary></indexterm>
     <term><literal>us</literal></term>
     <listitem><para>
Altçizme kipini etkin kılan ya da altçizme kipini başlatan bir sihirli çerez çıktılayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>ue</primary></indexterm>
     <term><literal>ue</literal></term>
     <listitem><para>
Altçizme kipini etkisiz kılan ya da altçizme kipini kapatan bir sihirli çerez çıktılayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>ug</primary></indexterm>
     <term><literal>ug</literal></term>
     <listitem><para>
Altçizme kipiyle ilgili bir değişikliği belirten sihirli çerezin genişliği; eğer uçbirim bunun için sihirli çerezleri kullanmıyorsa bu yetenek yoktur.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>ms</primary></indexterm>
     <term><literal>ms</literal></term>
     <listitem><para>
Varlığı, görünüm kipleri normal durumda değilken imleci hareket ettirmenin güvenli olduğu anlamına gelen seçimlik yetenek. Bu seçeneğin yokluğunda, uygulamalar imleci hareket ettirmeden önce daima altçizme kipini kapatmalıdır.
      </para></listitem></varlistentry></variablelist>
   </para><para>
Altçizme yapmak için iki eski yöntem daha vardır: (1) tek bir karakteri altçizgili yapan bir komut vardır, (2) altçizgi karakterinin (<userinput>_</userinput>) çıktılanması ve üste yazmama yöntemiyle bir karakterin altı çizilebilir. Bunları destekleyen gözden ırak kalmış uçbirimleri bulup çıkarmak hususunda yazarı çaba harcamadıkça yeni uygulamalar bu yetenekleri yakalamakla uğraşmazlar. Yine de uçbirim tanımları uygun olduğunda bu yetenekleri sağlamalıdır.
   </para><para><variablelist><varlistentry>
<indexterm scope="termcap-ky"><primary>uc</primary></indexterm>
     <term><literal>uc</literal></term>
     <listitem><para>
İmlecin altındaki karakterin altını çizdikten sonra imleci sağa taşıyan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>ul</primary></indexterm>
     <term><literal>ul</literal></term>
     <listitem><para>
Varlığı, uçbirimin altçizme işlemini karaktere altçizgi karakterini (<userinput>_</userinput>) ekleyerek yapabildiğini belirten seçimlik yetenek; genelde bazı uçbirimler altçizme kipini desteklemiyor olsalar bile bunu yapabilirler. Bu yeteneğin olumsuz yanı yeni bir metin çıktılanırken eskisinin üzerine yazarak bozuk çıktı üretmesidir. Bu sebepten altçizgi karakterlerinin kendileri çıktılanacaksa eski metni altçizgili yapmasın diye özel olarak ele alınmalıdırlar.
      </para></listitem></varlistentry></variablelist>
  </para></sect1>
  <sect1 xml:id="termcap-Cursor-Visibility">
   <title>İmleç Görünürlüğü</title>
<indexterm scope="termcap-cp"><primary>görünürlük</primary></indexterm>
   <para>
Bazı uçbirimler imleci görünmez yapma veya genişletme yeteneğine de sahiptir. Kullanıcının ekranda ilgilendiği bir konumu daha belirgin yapmak amacıyla kullanmayı tasarlayan uygulamalarca imleç genişletmesi sıkça yapılır; örneğin Emacs girdi üzerinde imleci genişletir. Böyle uygulamalar çıkışta imleci daima eski haline getirmelidir.
   </para><para><variablelist><varlistentry>
<indexterm scope="termcap-ky"><primary>vs</primary></indexterm>
     <term><literal>vs</literal></term>
     <listitem><para>
İmleci genişleten dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>vi</primary></indexterm>
     <term><literal>vi</literal></term>
     <listitem><para>
İmleci görünmez yapan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>ve</primary></indexterm>
     <term><literal>ve</literal></term>
     <listitem><para>
İmleci normale döndüren dizge değerli yetenek.
      </para></listitem></varlistentry></variablelist>
   </para><para>
<userinput>vs</userinput> veya <userinput>vi</userinput> yeteneği tanımlıysa <userinput>ve</userinput> yeteneği de tanımlanmış olmalıdır.
   </para></sect1>
  <sect1 xml:id="termcap-Bell">
   <title>Çan</title>
<indexterm scope="termcap-cp"><primary>çan</primary></indexterm>
   <para>
Burada uçbirimin kullanıcının dikkatini çekmek için kullanılan yeteneklerinden bahsedeceğiz.
   </para><para><variablelist><varlistentry>
<indexterm scope="termcap-ky"><primary>bl</primary></indexterm>
     <term><literal>bl</literal></term>
     <listitem><para>
Uçbirimin duyulabilen bir ses çıkarmasına sebep olan dizge değerli yetenek. Bu yeteneğin yokluğunda uçbirimin bir ses çıkarabilmesinin bir yolu yoktur.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>vb</primary></indexterm>
<indexterm scope="termcap-cp"><primary>görünür çan</primary></indexterm>
     <term><literal>vb</literal></term>
     <listitem><para>
Dikkat çekmek için ekranın yanıp sönmesine (görünür çan) sebep olan dizge değerli yetenek. Bu yeteneğin yokluğunda uçbirimin böyle bir şey yapabilmesinin bir yolu yoktur.
      </para></listitem></varlistentry></variablelist>
  </para></sect1>
  <sect1 xml:id="termcap-Keypad">
   <title>Tuştakımı ve İşlev Tuşları</title>
   <para>
Çoğu uçbirim belirli karakter dizilerini bilgisayara gönderen ok ve işlev tuşlarına sahiptir. Doğru dizilimler uçbirime bağımlı olduğundan termcap, yetenekleri kullanılan dizilimlere göre tanımlar. Termcap'in çoğu dizge değerli yeteneğinin tersine bu yetenekler uçbirime dizge gönderen komutlar değildirler.
   </para><para>
Tuştakımının ok tuşlarını kullanacak uygulamalar <userinput>ks</userinput> yeteneğinin varlığına bakmalı ve tuştakımı ok tuşlarını etkin kılmak için uçbirime bunu göndermelidir. Böyle uygulamalar ayrıca, çıkışta <userinput>ke</userinput> dizgesini göndermelidir.
   </para><para><variablelist><varlistentry>
<indexterm scope="termcap-ky"><primary>ka</primary></indexterm>
     <term><literal>ks</literal></term>
     <listitem><para>
Tuştakımı ok tuşlarını etkin kılan dizge değerli yetenek. Uçbirimde bu yetenek yoksa ancak bu bölümdeki diğer yetenekler mevcutsa uygulamalar tuştakımı ok tuşlarının daima etkin olduğunu varsayabilir.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>ke</primary></indexterm>
     <term><literal>ke</literal></term>
     <listitem><para>
Tuştakımı tuşlarını normale döndüren dizge değerli yetenek. Bu yetenek sadece <userinput>ks</userinput> varsa vardır.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>kl</primary></indexterm>
     <term><literal>kl</literal></term>
     <listitem><para>
Girdi karakterlerinin sola ok tuşuna basarak gönderilmesini sağlayan dizge değerli yetenek. Bu yeteneğin yokluğunda uçbirimin bilgisayara sola ok tuşu ile bir şey aktarabileceğini umamazsınız.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>kr</primary></indexterm>
     <term><literal>kr</literal></term>
     <listitem><para>
Girdi karakterlerinin sağa ok tuşuna basarak gönderilmesini sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>ku</primary></indexterm>
     <term><literal>ku</literal></term>
     <listitem><para>
Girdi karakterlerinin yukarı ok tuşuna basarak gönderilmesini sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>kd</primary></indexterm>
     <term><literal>kd</literal></term>
     <listitem><para>
Girdi karakterlerinin aşağı ok tuşuna basarak gönderilmesini sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>kh</primary></indexterm>
     <term><literal>kh</literal></term>
     <listitem><para>
Girdi karakterlerinin ev konumu tuşuna basarak gönderilmesini sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>K1&hellip;K5</primary></indexterm>
     <term><literal>K1 &hellip; K5</literal></term>
     <listitem><para>
Klavyede üçe üçlük takım varsa, girdi karakterlerinin üçe üçlük takımının içindeki diğer beş tuşa basarak gönderilmesini sağlayan dizge değerli yetenekler. Bu tuşlardan birinin ev konumu tuşu olabileceğini ve dolayısıyla bu yeteneklerden birinin <userinput>kh</userinput> yeteneği ile aynı olacağına dikkat edin.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>k0</primary></indexterm>
     <term><literal>k0</literal></term>
     <listitem><para>
Girdi karakterlerinin 10. işlev tuşuna (0 etiketli tuş varsa 0. tuşa) basarak gönderilmesini sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>k1&hellip;k9</primary></indexterm>
     <term><literal>k1 &hellip; k9</literal></term>
     <listitem><para>
Girdi karakterlerinin 1'den 9'a kadar ki işlev tuşlarına basarak gönderilmesini sağlayan dizge değerli yetenekler.
     </para></listitem></varlistentry><varlistentry>
     <term><literal>kn</literal></term>
     <listitem><para>
10'dan fazla olduğunda işlev tuşlarının sayısını belirten sayısal yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>l0&hellip;l9</primary></indexterm>
     <term><literal>l0 &hellip;l9</literal></term>
     <listitem><para>
Klavyenin <userinput>k0</userinput> &hellip; <userinput>k9</userinput> yetenekleriyle tanımlanan tuşlarının etiketlerindeki dizgeler. Bu dizgeler zaten <userinput>f0</userinput> veya
<userinput>f10</userinput> ve <userinput>f1</userinput> &hellip; <userinput>f9</userinput> iseler bu yetenekler tanımlanmamış olmalıdır.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>kH</primary></indexterm>
     <term><literal>kH</literal></term>
     <listitem><para>
Girdi karakterlerinin aşağı ev konumu tuşuna basarak gönderilmesini sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>kb</primary></indexterm>
     <term><literal>kb</literal></term>
     <listitem><para>
"Gerisilme" tuşu varsa, girdi karakterlerinin bu tuşa basarak gönderilmesini sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>ka</primary></indexterm>
     <term><literal>ka</literal></term>
     <listitem><para>
"Tüm sekmelere temizle" tuşu varsa, girdi karakterlerinin bu tuşa basarak gönderilmesini sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>kt</primary></indexterm>
     <term><literal>kt</literal></term>
     <listitem><para>
"Bu sütundaki sekme durağını kaldır" tuşu varsa, girdi karakterlerinin bu tuşa basarak gönderilmesini sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>kC</primary></indexterm>
     <term><literal>kC</literal></term>
     <listitem><para>
Ekranı temizle" tuşu varsa, girdi karakterlerinin bu tuşa basarak gönderilmesini sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>kD</primary></indexterm>
     <term><literal>kD</literal></term>
     <listitem><para>
"Karakteri sil" tuşu varsa, girdi karakterlerinin bu tuşa basarak gönderilmesini sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>kL</primary></indexterm>
     <term><literal>kL</literal></term>
     <listitem><para>
Satırı sil" tuşu varsa, girdi karakterlerinin bu tuşa basarak gönderilmesini sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>kM</primary></indexterm>
     <term><literal>kM</literal></term>
     <listitem><para>
"Ekleme kipinden çık" tuşu varsa, girdi karakterlerinin bu tuşa basarak gönderilmesini sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>kE</primary></indexterm>
     <term><literal>kE</literal></term>
     <listitem><para>
"Satır sonuna kadar temizle" tuşu varsa, girdi karakterlerinin bu tuşa basarak gönderilmesini sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>kS</primary></indexterm>
     <term><literal>kS</literal></term>
     <listitem><para>
"Ekran sonuna kadar temizle" tuşu varsa, girdi karakterlerinin bu tuşa basarak gönderilmesini sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>kl</primary></indexterm>
     <term><literal>kI</literal></term>
     <listitem><para>
"Karakter ekle" ya da "ekleme kipine gir" tuşu varsa, girdi karakterlerinin bu tuşa basarak gönderilmesini sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>kA</primary></indexterm>
     <term><literal>kA</literal></term>
     <listitem><para>
"Satır ekle" tuşu varsa, girdi karakterlerinin bu tuşa basarak gönderilmesini sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>kN</primary></indexterm>
     <term><literal>kN</literal></term>
     <listitem><para>
"Sonraki sayfa" tuşu varsa, girdi karakterlerinin bu tuşa basarak gönderilmesini sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>kP</primary></indexterm>
     <term><literal>kP</literal></term>
     <listitem><para>
"Önceki sayfa" tuşu varsa, girdi karakterlerinin bu tuşa basarak gönderilmesini sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>kF</primary></indexterm>
     <term><literal>kF</literal></term>
     <listitem><para>
"İleri kaydır" tuşu varsa, girdi karakterlerinin bu tuşa basarak gönderilmesini sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>kR</primary></indexterm>
     <term><literal>kR</literal></term>
     <listitem><para>
"Geri kaydır" tuşu varsa, girdi karakterlerinin bu tuşa basarak gönderilmesini sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>kT</primary></indexterm>
     <term><literal>kT</literal></term>
     <listitem><para>
"Bu sütuna sekme durağı koy" tuşu varsa, girdi karakterlerinin bu tuşa basarak gönderilmesini sağlayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>ko</primary></indexterm>
     <term><literal>ko</literal></term>
     <listitem><para>
Uçbirimin sahip olduğu diğer işlev tuşlarını listeleyen dizge değerli yetenek. Bu, <userinput>kH</userinput> &hellip; <userinput>kT</userinput> yeteneklerindeki bilgiyi belirtmenin artık kullanılmayan bir yoludur. Dizge, virgüllerle ayrılmış olarak iki karakterlik termcap yetenek isimlerini listeler. Listelenmiş her yetenek ismi, uçbirimin bu yeteneğin değeri olan dizgeyi gönderme yeteneğinin olduğunu belirtir. Örneğin, <userinput>:ko=cl,ll,sf,sr:</userinput> değeri, uçbirimin "ekranı temizle", "aşağı ev", "ileri kaydır" ve "geri kaydır" isimli dört işlev tuşunun olduğu anlamına gelir.
      </para></listitem></varlistentry></variablelist>
  </para></sect1>
  <sect1 xml:id="termcap-Meta-Key">
   <title>Meta Tuşu</title>
<indexterm scope="termcap-cp"><primary>meta tuşu</primary></indexterm>
   <para>
Meta tuşu basılan her karaktere 0200 bitini ekleyerek değiştiren bir tuştur. Bu bit sadece ve sadece karakter tuşlanırken Meta tuşu basılı tutulduğunda etkilidir. Meta tuşu ile birlikte tuşlanan karakterlere Meta karakterler denir. Emacs Meta karakterleri metin düzenleme komutları olarak kullanır.
   </para><para><variablelist><varlistentry>
<indexterm scope="termcap-ky"><primary>km</primary></indexterm>
     <term><literal>km</literal></term>
     <listitem><para>
Varlığı, uçbirimin bir Meta tuşuna sahip olduğunu belirten seçimlik yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>mm</primary></indexterm>
     <term><literal>mm</literal></term>
     <listitem><para>
Meta tuşunu işlevselleştiren dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>mo</primary></indexterm>
     <term><literal>mo</literal></term>
     <listitem><para>
Meta tuşunu işlevsizleştiren dizge değerli yetenek.
      </para></listitem></varlistentry></variablelist>
   </para><para>
Eğer uçbirim <userinput>km</userinput> yeteneğine sahipse ama <userinput>mm</userinput> ve <userinput>mo</userinput> yeteneklerine sahip değilse, bu, Meta tuşunun daima işlevsel olduğu anlamına gelir. <userinput>mm</userinput> ve <userinput>mo</userinput> yeteneklerine sahipse Meta tuşu açılıp kapatılabilir. <userinput>mm</userinput> göndererek işlevselleştirilir ve <userinput>mo</userinput> göndererek işlevsizleştirilir. Meta tuşunu neden işlevsizleştirmek isterler ki.
   </para></sect1>
  <sect1 xml:id="termcap-Initialization">
   <title>İlklendirme</title>
<indexterm scope="termcap-cp"><primary>sıfırlama</primary></indexterm>
<indexterm scope="termcap-cp"><primary>ilklendirme</primary></indexterm>
<indexterm scope="termcap-cp"><primary>sekme durakları</primary></indexterm>
   <variablelist><varlistentry>
<indexterm scope="termcap-ky"><primary>ti</primary></indexterm>
     <term><literal>ti</literal></term>
     <listitem><para>
İmleci ekranda rasgele hareket ettiren uygulamalar için uygun ya da gerekli olan her ne özel kip varsa uçbirime koyan dizge değerli yetenek. Termcap'le tam ekran çalışan uygulamalar her başlatılışlarında bu dizgeyi çıktılamalıdır.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>te</primary></indexterm>
     <term><literal>te</literal></term>
     <listitem><para>
<userinput>ti</userinput> yeteneği ile yapılan her ne varsa geri alan dizge değerli yetenek. Başlatıldıklarında <userinput>ti</userinput> çıktılayan uygulamalar çıkarken de bu yeteneği çıktılamalıdırlar.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>is</primary></indexterm>
     <term><literal>is</literal></term>
     <listitem><para>
Her oturum açmada uçbirimi ilklendirmeye yarayan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>if</primary></indexterm>
     <term><literal>if</literal></term>
     <listitem><para>
Her kullanım oturumu için uçbirimi ilklendirecek komut dizgelerini içeren dosyanın ismini içeren dizge değerli yetenek. Normalde <userinput>is</userinput> ve <userinput>if</userinput> birlikte kullanılmaz.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>i1</primary></indexterm>
     <term><literal>i1</literal></term>
<indexterm scope="termcap-ky"><primary>i3</primary></indexterm>
     <term><literal>i3</literal></term>
     <listitem><para>
Her oturum açmada uçbirimi ilklendirmeye yarayan dizge değerli iki yetenek daha. <userinput>i1</userinput> tanımlıysa <userinput>is</userinput>'den önce, <userinput>i3</userinput> tanımlıysa <userinput>is</userinput>'den sonra çıktılanır.
      </para><para>
Üç farklı ilklendirme dizgesinin oluş sebebi uçbirimle ilgili bir grup tuşu biraz farklı ilklendirebilmeyi kolaylaştırmaktır. İki veya üç dizge temel türde tanımlanır; sonradan diğer türler bir veya iki dizgeyi değiştirebilir.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>rs</primary></indexterm>
     <term><literal>rs</literal></term>
     <listitem><para>
Tuhaf bir kipteki uçbirimi sıfırlamaya yarayan dizge değerli yetenek. Normalde bu yetenek <userinput>is</userinput> (veya aynı etkiye sahip başka yetenekler) ve diğer birtakım yetenekleri de içerir. <userinput>is</userinput> içermeyen bir <userinput>rs</userinput> yeteneği, tuhaf bir kipteki uçbirimi sıfırlamak için hiç kimsenin kullanmak istemeyeceği can sıkıcı ve yavaş bir komut olurdu.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>it</primary></indexterm>
     <term><literal>it</literal></term>
     <listitem><para>
Uçbirim enerjilendiğinde donanımsal sekme durakları arasındaki ilk boşluk miktarını veren sayısal yetenek. Uçbirimi ilklendiren uygulamalar sekme duraklarının ayarlanmasının gerekli olup olmadığına bu yeteneğe bakarak karar verirler. İlk genişlik 8 ise doğru ve iyidir, değilse duraklar ayarlanmalıdır. Ayarlanamıyorsa, sekmeleri boşluklara çevirmesi için çekirdeğe başvurulur.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>ct</primary></indexterm>
     <term><literal>ct</literal></term>
     <listitem><para>
Tüm sekme duraklarını yokeden dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>st</primary></indexterm>
     <term><literal>st</literal></term>
     <listitem><para>
Tüm satırlar için o anki imleç sütununu sekme durağı yapan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>NF</primary></indexterm>
     <term><literal>NF</literal></term>
     <listitem><para>
Varlığı, uçbirimin XON/XOFF akış denetimini desteklemediğini belirten seçimlik yetenek. Bu durumda uygulamalar uçbirime XON (<userinput>C-q</userinput>) veya XOFF (<userinput>C-s</userinput>) karakterlerini göndermemelidirler.
      </para></listitem></varlistentry></variablelist>
  </sect1>
  <sect1 xml:id="termcap-Pad-Specs">
   <title>Geciktirme Yetenekleri</title>
<indexterm scope="termcap-cp"><primary>geciktirme</primary></indexterm>
   <para>
Komut dizgesi olarak kullanılan tüm yeteneklerin geciktirme belirtimlerine riayet etmenin doğru yolunu açıklayan sadece iki uçbirim yeteneği vardır. Biri <userinput>pc</userinput>'dir ve termcap kullanan tüm uygulamalarca riayet edilmelidir.
   </para><para><variablelist><varlistentry>
<indexterm scope="termcap-ky"><primary>pb</primary></indexterm>
     <term><literal>pb</literal></term>
     <listitem><para>
Geciktirmenin gerektiği en düşük aktarım hızının (baud cinsinden) belirtildiği sayısal yetenek.  Uygulamalar buna bakarak düşük hızlarda geciktirme yapmaktan kaçınabilirler.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>pc</primary></indexterm>
     <term><literal>pc</literal></term>
     <listitem><para>
Geciktirme için kullanılan dizge değerli yetenek. Bu dizgenin ilk karakteri adım karakteri olarak boş (null) karakter yerine kullanılır. Bu yeteneğin olmadığı durumda adım karakteri olarak boş karakter kullanılır. Termcap kullanan her uygulama bu yeteneğe bakmalı ve onu  <userinput>tputs</userinput> işlevinin kullandığı <userinput>PC</userinput> değişkenini ayarlamakta kullanmalıdır. Bkz. <xref linkend="termcap-Padding"/>.
      </para></listitem></varlistentry></variablelist>
   </para><para>
Sıradan ardışık çıktıda kullanılan imleç hareket komutlarına çekirdeğin verdiği geciktirme miktarının belirtildiği bazı termcap yetenekleri vardır.
   </para><para><variablelist><varlistentry>
<indexterm scope="termcap-ky"><primary>dC</primary></indexterm>
     <term><literal>dC</literal></term>
     <listitem><para>
Satırbaşı karakteri (CR) için gerekli geciktirmenin ms cinsinden değerini içeren sayısal yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>dN</primary></indexterm>
     <term><literal>dN</literal></term>
     <listitem><para>
Satırsonu karakteri (LF) için gerekli geciktirmenin ms cinsinden değerini içeren sayısal yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>dB</primary></indexterm>
     <term><literal>dB</literal></term>
     <listitem><para>
Gerisilme karakteri için gerekli geciktirmenin ms cinsinden değerini içeren sayısal yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>dF</primary></indexterm>
     <term><literal>dF</literal></term>
      <listitem><para>
Sayfa ileri karakteri için gerekli geciktirmenin ms cinsinden değerini içeren sayısal yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>dT</primary></indexterm>
     <term><literal>dT</literal></term>
     <listitem><para>
Sekme karakteri için gerekli geciktirmenin ms cinsinden değerini içeren sayısal yetenek.
      </para></listitem></varlistentry></variablelist>
   </para><para>
Bazı sistemlerde çekirdek yukarıdaki yetenekleri kullanırken bazılarında geciktirme belirten dizge değerli <userinput>cr</userinput>, <userinput>sf</userinput>, <userinput>le</userinput>, <userinput>ff</userinput> ve <userinput>ta</userinput> yeteneklerini kullanır. Böyle geciktirme gerektiren uçbirim tanımları <userinput>dC</userinput> &hellip;
<userinput>dT</userinput> yeteneklerini içermeli ve ayrıca ilgili dizge değerli yeteneklerde uygun geciktirme miktarını belirtmelidir. Sıradan ardışık çıktı için geciktirme gerektirmeyen günümüz uçbirimlerinde belki de böyle şeyler yapmaya ihtiyaç duymayacaksınız.
   </para></sect1>
  <sect1 xml:id="termcap-Status-Line">
   <title>Durum Satırı</title>
<indexterm scope="termcap-cp"><primary>durum satırı</primary></indexterm>
   <para>
<wordasword>Durum satırı</wordasword> uçbirim üzerinde normal çıktı için değil, sadece özel iletiler için kullanılan bir satırdır. Tasarlandığı haliyle uygulamanın ne yapmakta olduğunu kullanıcıya açıklamak için sürekli güncellenen bir satırdır ve bu da bu satıra neden bu ismin verildiğini açıklar. Fakat aslında herşey için kullanılabilirdi. Durum satırının uçbirim karakteristiklerinin farklılaştırılması sıradan çıktıyı etkilemez. Durum satırının içeriği sadece bu bölümde açıklanan özel durum satırı yetenekleriyle değiştirilir.
   </para><para><variablelist><varlistentry>
<indexterm scope="termcap-ky"><primary>hs</primary></indexterm>
     <term><literal>hs</literal></term>
     <listitem><para>
Varlığı, uçbirimin bir durum satırı olduğunu belirten seçimlik yetenek. Bir durum satırı içeren bir uçbirim <userinput>ts</userinput> ve <userinput>fs</userinput> yeteneklerini de sağlamalıdır.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>ts</primary></indexterm>
     <term><literal>ts</literal></term>
     <listitem><para>
Uçbirim imlecini durum satırına taşıyan dizge değerli yetenek. Bu yetenekler <userinput>fs</userinput> yeteneğinin amacına uygun olarak eski imleç konumunu özellikle kaydetmelidir.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>fs</primary></indexterm>
     <term><literal>fs</literal></term>
     <listitem><para>
İmleci durum satırından alıp eski konumuna taşıyan dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>es</primary></indexterm>
     <term><literal>es</literal></term>
     <listitem><para>
Varlığı, durum satırına yazılırken diğer ekran komutlarının çalışacağını belirten seçimlik yetenek. Başka bir deyişle, durum satırı kısmen temizlenirken, aynı zamanda  çarpıcı görünüm kipine girmek ve bırakmak için <userinput>ch</userinput> kullanmak üzere imleç hareket ettirilebilir, karakterler silinebilir ve eklenebilir (şüphesiz bir <userinput>ch</userinput>  yeteneği mevcutsa).
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>ds</primary></indexterm>
     <term><literal>ds</literal></term>
     <listitem><para>
Durum satırının gösterimini iptal eden dizge değerli yetenek. Bunun yokluğunda durum satırını ekrandan kaldırmanın bir yolu yoktur.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>ws</primary></indexterm>
     <term><literal>ws</literal></term>
     <listitem><para>
Durum satırının genişliğini içeren sayısal yetenek. Durum satırı olan bir uçbirimde bu yetenek yoksa durum satırı diğer satırlarla aynı genişlikte demektir.
      </para><para>
<userinput>ws</userinput> değerinin bazan 8 gibi küçücük bir değer olabileceğini aklınızdan çıkarmayın.
      </para></listitem></varlistentry></variablelist>
  </para></sect1>
  <sect1 xml:id="termcap-Half-Line">
   <title>Yarım Satırlık Hareket</title>
   <para>
Bazı uçbirimler alt ve üst indisleri çıktılayabilmek için imleci düşeyde yarım satır hareket ettirme yeteneğine sahiptirler. Çoğunlukla yazıcı benzeri uçbirimlerin böyle yetenekleri vardır.
   </para><para><variablelist><varlistentry>
<indexterm scope="termcap-ky"><primary>hu</primary></indexterm>
     <term><literal>hu</literal></term>
     <listitem><para>
İmleci yarım satır yukarı taşıyan dizge değerli yetenek. Eğer uçbirim ekransa sorumluluğunuz üst satıra taşmamaktır; yine de bunu destekleyen çoğu uçbirim, yazıcı benzeri basılı çıktı veren bir aygıttır ve endişelenmeniz gerekmez.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>hd</primary></indexterm>
     <term><literal>hd</literal></term>
     <listitem><para>
İmleci yarım satır aşağı taşıyan dizge değerli yetenek. Eğer uçbirim ekransa sorumluluğunuz alt satıra taşmamaktır.
      </para></listitem></varlistentry></variablelist>
  </para></sect1>
  <sect1 xml:id="termcap-Printer">
   <title>Uçbirimlerle İlintili Yazıcıların Denetimi</title>
<indexterm scope="termcap-cp"><primary>yazıcı</primary></indexterm>
   <para>
Bazı uçbirimlere yazıcı benzeri basılı çıktı veren aygıtlar bağlıdır. Bunlar ekran içeriğini yazıcıya kopyalayabilecekleri gibi çıktıyı yazıcıya da yönlendirebilirler. Termcap bir yazılıma ekran üzerinde çıktı göründükçe bunların da yönlendirileceğini belirtecek bir yola sahip değildir; bazı uçbirimler bunu yapabilir, bazıları yapmaz.
   </para><para><variablelist><varlistentry>
<indexterm scope="termcap-ky"><primary>ps</primary></indexterm>
     <term><literal>ps</literal></term>
     <listitem><para>
Ekran içeriğinin yazdırılmasını sağlayan dizge değerli yetenek. Yokluğunda ekran içeriği yazıcıya çıktılanamaz.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>po</primary></indexterm>
     <term><literal>po</literal></term>
     <listitem><para>
Çıktıyı yazıcıya yönlendiren dizge değerli yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>pf</primary></indexterm>
     <term><literal>pf</literal></term>
     <listitem><para>
Çıktının yazıcıya yönlendirilmesini sonlandıran dizge değerli yetenek. Uçbirim tanımında <userinput>po</userinput> mevcutsa bu yetenek de olmak zorundadır.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>pO</primary></indexterm>
     <term><literal>pO</literal></term>
     <listitem><para>
Çıktının sonraki <varname>n</varname> karakterini ne olduklarıyla ilgilenmeksizin yazıcıya yönlendiren dizge değerli yetenek. Yönlendirme <varname>n</varname> karakter gönderildikten sonra sona erer. <varname>n</varname> karakter gönderilinceye kadar <userinput>pf</userinput> yeteneği olsa bile hiçbir şey yönlendirmeyi sonlandıramaz. <varname>n</varname> hiçbir zaman 255'ten büyük olamaz.
      </para><para>
Bu yeteneğin kullanım amaçlarından biri de metin olmayan bayt dizilerinin de (biteşlemler gibi) yazıcıya gönderilebilmesidir.
      </para></listitem></varlistentry></variablelist>
   </para><para>
Yazıcılarında içinde bulunduğu çoğu uçbirim <userinput>ps</userinput>, <userinput>po</userinput> ve <userinput>pO</userinput> yeteneklerinin hepsini birden desteklemez; çıktısını her çeşit yazıcıya gönderebilen bir uygulamanın bu üç yeteneğin de varlığına bakması ve içlerinden en uygun olanı seçip kendi amacına uygun olarak kullanması gerekir.
   </para>
</sect1></chapter>
 <chapter xml:id="termcap-Summary">
  <title>Yetenek İsimlerinin Listesi</title><para>
Burada yetenek isimleri kısa açıklamalarıyla birlikte alfabetik sırada verilmiştir. Tanımları ile ilgili konu başlıklarına <xref linkend="termcap-ky"/> üzerinden ulaşabilirsiniz.
  </para>
  <sect1 xml:id="termcap-boolean-caps"><title>Seçimlik Yetenekler</title>
  <variablelist><varlistentry>
    <term><literal>am</literal></term>
    <listitem><para>
Son sütuna yazılan karakterin imlecin sonraki satırın başına taşınmasına sebep olacağını belirten seçimlik yetenek.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>bs</literal></term>
    <listitem><para>
Atıl: Sola hareket için de kullanılabilen ASCII gerisilme karakteri.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>bw</literal></term>
    <listitem><para>
Sol girintide kullanıldığında <userinput>le</userinput> komutunun imleci önceki satırın son sütununa taşıyacağını belirten seçimlik yetenek.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>da</literal></term>
    <listitem><para>
Satırların yukarı kaydırılması sırasında ilk satır aşıldığında, eğer ardından aşağı kaydırma yapılırsa ekranın geri gelebileceğini belirten seçimlik yetenek.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>db</literal></term>
    <listitem><para>
Satırların aşağı kaydırılması sırasında son satır aşıldığında, eğer ardından yukarı kaydırma yapılırsa ekranın geri gelebileceğini belirten seçimlik yetenek.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>eo</literal></term>
    <listitem><para>
Üste yazmama özelliği etkin olsa bile çıktılanan boşluk karakteri aynı konumdaki karakteri siler.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>es</literal></term>
    <listitem><para>
Durum satırına yazma sırasında diğer ekran komutlarının çalışabildiğini gösterir.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>gn</literal></term>
    <listitem><para>
Uçbirimin gerçek değil soysal bir tür olduğunu belirtir.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>hc</literal></term>
    <listitem><para>
Uçbirim tanımının bir yazıcıya ait olduğunu belirtir..
     </para></listitem></varlistentry><varlistentry>
    <term><literal>hs</literal></term>
    <listitem><para>
Uçbirimin bir durum satırına sahip olduğunu belirtir.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>hz</literal></term>
    <listitem><para>
Uçbirimin <userinput>~</userinput> karakterini çıktı olarak kabul edemediğini belirtir.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>in</literal></term>
    <listitem><para>
Boşluk karakteri konumlarının boş konum olarak ele alınmadığını belirten yetenek.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>km</literal></term>
    <listitem><para>
Uçbirimin bir Meta tuşu vardır.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>LP</literal></term>
    <listitem><para>
Son satırın son sütununa yazmak ekranı kaydırmaz.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>5i</primary></indexterm>
    <term><literal>5i</literal></term>
    <listitem><para>
Yazıcıya gönderilen veri ekrana yansıtılmaz.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>mi</literal></term>
    <listitem><para>
Ekleme kipinde imleç hareketi güvenlidir.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>ms</literal></term>
    <listitem><para>
Çarpıcı görünüm kipinde imleç hareketi güvenlidir.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>nc</literal></term>
    <listitem><para>
Atıl: bu uçbirimda ASCII satırbaşı (CR) kullanılmaz.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>NF</literal></term>
    <listitem><para>
XON/XOFF akış denetimi kullanılmaz.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>NP</primary></indexterm>
    <term><literal>NP</literal></term>
    <listitem><para>
Geciktirme karakteri gerekmez.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>NR</primary></indexterm>
    <term><literal>NR</literal></term>
    <listitem><para>
<userinput>ti</userinput> yeteneği <userinput>te</userinput> yeteneğinin tersi değildir.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>ns</literal></term>
    <listitem><para>
Uçbirimin sıradan çıktıyı normalde kaydırmayacağını belirten seçimlik yetenek.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>nx</primary></indexterm>
    <term><literal>nx</literal></term>
    <listitem><para>
Geciktirme çalışmaz. XON/XOFF akış denetimi gerekir.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>os</literal></term>
    <listitem><para>
Uçbirimin üste yazmama özelliği olup olmadığını belirleyen seçimlik yetenek.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>ul</literal></term>
    <listitem><para>
Altçizgili karakterler üzerine yazılarak altı çizili yapılır.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>xb</literal></term>
    <listitem><para>
<keycap>ESC</keycap> ve <keycombo><keycap>Control</keycap><keycap>C</keycap></keycombo> karakterlerini gönderemeyen Superbee uçbirim türünü tanımlayan seçimlik yetenek.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>xn</literal></term>
    <listitem><para>
İmleci sarmalamanın tuhaf bir yolu; 80 sütundan sonra satırsonu karakteri yoksayılır.
     </para></listitem></varlistentry><varlistentry>
<indexterm scope="termcap-ky"><primary>xo</primary></indexterm>
    <term><literal>xo</literal></term>
    <listitem><para>
XON/XOFF akış denetimi kullanılır.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>xs</literal></term>
    <listitem><para>
Bir satırı temizlemek için tek yolun bu satırdaki görünüm kipi konumlarının (veya sihirli çerezlerin) temizlenmesi olduğunu  belirten yetenek.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>xt</literal></term>
    <listitem><para>
Teleray 1061; muhtelif tuhaf karakteristikler.
     </para></listitem></varlistentry></variablelist>
   </sect1>

   <sect1 xml:id="termcap-numeric-caps"><title>Sayısal Yetenekler</title>
   <variablelist><varlistentry>
    <term><literal>co</literal></term>
    <listitem><para>
Ekran genişliği.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>dB</literal></term>
    <listitem><para>
Atıl: Gerisilme karakteri için gereken gecikme (ms cinsinden).
     </para></listitem></varlistentry><varlistentry>
    <term><literal>dC</literal></term>
    <listitem><para>
Atıl: Satırbaşı karakteri (CR) için gereken gecikme (ms cinsinden)
     </para></listitem></varlistentry><varlistentry>
    <term><literal>dF</literal></term>
    <listitem><para>
Atıl: Sayfa ileri karakteri için gereken gecikme (ms cinsinden)
     </para></listitem></varlistentry><varlistentry>
    <term><literal>dN</literal></term>
    <listitem><para>
Atıl: Satırsonu karakteri (LF) için gereken gecikme (ms cinsinden)
     </para></listitem></varlistentry><varlistentry>
    <term><literal>dT</literal></term>
    <listitem><para>
Atıl: Sekme karakteri için gereken gecikme (ms cinsinden).
     </para></listitem></varlistentry><varlistentry>
    <term><literal>it</literal></term>
    <listitem><para>
Donanımsal sekme durakları arasındaki boşluğun sütun sayısı cinsinden ilk değeri.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>kn</literal></term>
    <listitem><para>
İşlev tuşunun numarası.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>li</literal></term>
    <listitem><para>
Ekranın yüksekliği.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>lm</literal></term>
    <listitem><para>
Ekran belleğinin satır sayısı.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>pb</literal></term>
    <listitem><para>
Geciktirme için aslen gerekli en düşük aktarım hızı (baud rate).
     </para></listitem></varlistentry><varlistentry>
    <term><literal>sg</literal></term>
    <listitem><para>
Sihirli çarpıcılık çerezinin genişliği. Sihirli çerezler kullanılmıyorsa yoktur.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>ug</literal></term>
    <listitem><para>
Sihirli altçizme çerezinin genişliği. Altçizme için sihirli çerezler kullanılmıyorsa yoktur.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>ws</literal></term>
    <listitem><para>
Durum satırının genişliği.
     </para></listitem></varlistentry></variablelist>
   </sect1>
   <sect1 xml:id="termcap-string-caps"><title>Dizgesel Yetenekler</title>
   <variablelist><varlistentry>
    <term><literal>ae</literal></term>
    <listitem><para>
Diğer karakter kümesi kipini kapatan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>al</literal></term>
    <listitem><para>
İmleç konumunun öncesine boş bir satır yerleştiren komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>AL</literal></term>
    <listitem><para>
İmleç konumunun öncesine <varname>n</varname> boş satır yerleştiren komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>as</literal></term>
    <listitem><para>
Diğer karakter kümesi kipini etkinleştiren komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>bc</literal></term>
    <listitem><para>
<userinput>le</userinput> komutunun çok eski ve artık kullanılmayan ismi,
     </para></listitem></varlistentry><varlistentry>
    <term><literal>bl</literal></term>
    <listitem><para>
Zil sesi komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>bt</literal></term>
    <listitem><para>
İmleci önceki donanımsal sekme durağının bulunduğu sütunun soluna taşıyan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>CC</literal></term>
    <listitem><para>
Uçbirimin komut karakterini değiştiren komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>cd</literal></term>
    <listitem><para>
İmlecin bulunduğu satır dahil sonraki satırları temizleyen komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>ce</literal></term>
    <listitem><para>
İmleç konumundan satırın sonuna kadar silen komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>ch</literal></term>
    <listitem><para>
İmleci aynı satırın <varname>c</varname>'inci sütununa konumlayan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>cl</literal></term>
    <listitem><para>
Ekranı tamamen temizleyip imleci sol üst köşeye konumlayan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>cm</literal></term>
    <listitem><para>
İmleci <varname>l</varname>'inci satırın <varname>c</varname>'inci sütununa konumlayan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>CM</literal></term>
    <listitem><para>
Ekran belleğine göreli olarak, imleci <varname>l</varname>'inci satırın <varname>c</varname>'inci sütununa konumlayan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>cr</literal></term>
    <listitem><para>
İmleci üzerinde bulunduğu satırın başına taşıyan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>cs</literal></term>
    <listitem><para>
Kaydırma bölgesinin belirtilebilmesini sağlayan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>cS</literal></term>
    <listitem><para>
Kaydırma bölgesinin belirtilebilmesini parametreleri farklı bir biçimde kullanarak sağlayan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>ct</literal></term>
    <listitem><para>
Tüm sekme duraklarını kaldıran komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>cv</literal></term>
    <listitem><para>
İmleci aynı sütunda l'inci satıra taşıyan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>dc</literal></term>
    <listitem><para>
İmlecin bulunduğu konumdaki karakteri silen komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>DC</literal></term>
    <listitem><para>
İmlecin bulunduğu konumdan başlayarak <varname>n</varname> karakteri silen komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>dl</literal></term>
    <listitem><para>
İmlecin bulunduğu satırı silen komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>DL</literal></term>
    <listitem><para>
İmlecin bulunduğu satırdan başlayarak <varname>n</varname> satırı silen komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>dm</literal></term>
    <listitem><para>
Silme kipine giriş komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>do</literal></term>
    <listitem><para>
İmleci bir satır aşağı taşıyan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>DO</literal></term>
    <listitem><para>
İmleci <varname>n</varname> satır aşağı taşıyan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>ds</literal></term>
    <listitem><para>
Durum satırının gösterimini iptal eden komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>ec</literal></term>
    <listitem><para>
İmlecin üzerinde bulunduğu karakterden başlayarak <varname>n</varname> karakteri temizleyen komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>ed</literal></term>
    <listitem><para>
Silme kipinden çıkış komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>ei</literal></term>
    <listitem><para>
Ekleme kipini bırakma komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>ff</literal></term>
    <listitem><para>
Yazıcı için, sonraki sayfaya geçiş komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>fs</literal></term>
    <listitem><para>
İmlecin son satırın başlangıcında olduğu kabulüyle, ekran içeriğini bir satır yukarı kaydıran komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>hd</literal></term>
    <listitem><para>
İmleci yarım satır aşağı taşıyan dizge.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>ho</literal></term>
    <listitem><para>
İmleci sol üst köşeye konumlayan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>hu</literal></term>
    <listitem><para>
İmleci yarım satır yukarı taşıyan dizge.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>i1</literal></term>
    <listitem><para>
Her yeni oturum açılışında uçbirimi ilklendiren komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>i3</literal></term>
    <listitem><para>
Yeni oturum açılışı için ilklendirme komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>ic</literal></term>
    <listitem><para>
İmleç konumuna bir karakter ekleyen komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>IC</literal></term>
    <listitem><para>
İmleç konumuna <varname>n</varname> karakter ekleyen komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>if</literal></term>
    <listitem><para>
Uçbirimi ilklendirecek komutların bulunduğu dosyanın isminin belirtildiği komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>im</literal></term>
    <listitem><para>
Ekleme kipine giriş komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>ip</literal></term>
    <listitem><para>
Ekleme kipinde eklenen karakterden sonrasını çıktılayan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>is</literal></term>
    <listitem><para>
Her yeni oturum açılışında uçbirimi ilklendiren komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>k0</literal></term>
    <listitem><para>
10. (varsa 0.) işlev tuşu ile girdi gönderme komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>k1 &hellip; k9</literal></term>
    <listitem><para>
1.'den 9.'ya kadar işlev tuşları ile karakter gönderme komutları.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>K1 &hellip; K5</literal></term>
    <listitem><para>
Üçe üçlük tuştakımının içindeki diğer beş tuş için karakter gönderme komutları.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>ka</literal></term>
    <listitem><para>
"Tüm sekmeleri temizle" tuşu ile girdi gönderme komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>kA</literal></term>
    <listitem><para>
"Ekleme kipi" tuşu ile girdi gönderme komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>kb</literal></term>
    <listitem><para>
"Gerisilme" tuşu ile girdi gönderme komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>kC</literal></term>
    <listitem><para>
"Ekranı temizle" tuşu ile girdi gönderme komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>kd</literal></term>
    <listitem><para>
Aşağı ok tuşu ile girdi gönderme komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>kD</literal></term>
    <listitem><para>
"Silme karakteri" tuşu ile girdi gönderme komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>ke</literal></term>
    <listitem><para>
İşlev tuşlarını yerel olarak çalışır yapma komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>kE</literal></term>
    <listitem><para>
"Satır sonuna kadar sil" tuşu ile girdi gönderme komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>kF</literal></term>
    <listitem><para>
"İleri kaydır" tuşu ile girdi gönderme komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>kh</literal></term>
    <listitem><para>
"Eve git" tuşu ile girdi gönderme komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>kH</literal></term>
    <listitem><para>
"Aşağı ev" tuşu ile girdi gönderme komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>kI</literal></term>
    <listitem><para>
"Karakter ekle" veya "Ekleme kipine gir" tuşu ile girdi gönderme komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>kl</literal></term>
    <listitem><para>
Sola ok tuşu ile girdi gönderme komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>kL</literal></term>
    <listitem><para>
"Satırı sil" tuşu ile girdi gönderme komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>kM</literal></term>
    <listitem><para>
"Ekleme kipinden çık" tuşu ile girdi gönderme komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>kN</literal></term>
    <listitem><para>
"Sonraki sayfa" tuşu ile girdi gönderme komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>ko</literal></term>
    <listitem><para>
İyice Atıl: uçbirimin isimli işlev tuşlarını listeleme komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>kP</literal></term>
    <listitem><para>
"Önceki sayfa" tuşu ile girdi gönderme komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>kr</literal></term>
    <listitem><para>
Sağa ok tuşu ile girdi gönderme komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>kR</literal></term>
    <listitem><para>
"Geri kaydır" tuşu ile girdi gönderme komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>ks</literal></term>
    <listitem><para>
İşlev tuşlarını yayın tuşları yapan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>kS</literal></term>
    <listitem><para>
"Ekran sonuna kadar temizle" tuşu ile girdi gönderme komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>kt</literal></term>
    <listitem><para>
"Bu sütunun sekme durağını kaldır" tuşu ile girdi gönderme komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>kT</literal></term>
    <listitem><para>
"Bu sütuna sekme durağı koy" tuşu ile girdi gönderme komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>ku</literal></term>
    <listitem><para>
Yukarı ok tuşu ile girdi gönderme komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>l0</literal></term>
    <listitem><para>
10. (varsa 0.) işlev tuşunu etiketleyen komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>l1 &hellip; l9</literal></term>
    <listitem><para>
1'den 9'a kadar işlez tuşlarını etiketleyen komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>le</literal></term>
    <listitem><para>
İmleci bir sütun sola taşıyan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>LE</literal></term>
    <listitem><para>
İmleci <varname>n</varname> sütun sola taşıyan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>ll</literal></term>
    <listitem><para>
İmleci sol alt köşeye konumlayan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>mb</literal></term>
    <listitem><para>
Yanardöner kipe giriş komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>md</literal></term>
    <listitem><para>
Çifte parlak kipe giriş komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>me</literal></term>
    <listitem><para>
Tüm görünüm kiplerini kapatan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>mh</literal></term>
    <listitem><para>
Yarı parlak kipe giriş komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>mk</literal></term>
    <listitem><para>
Görünmezlik kipine giriş komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>mm</literal></term>
    <listitem><para>
Meta tuşunu işlevselleştirme komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>mo</literal></term>
    <listitem><para>
Meta tuşunu işlevsizleştirme komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>mp</literal></term>
    <listitem><para>
Korumalı kipe giriş komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>mr</literal></term>
    <listitem><para>
Negatif görüntü kipine giriş komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>nd</literal></term>
    <listitem><para>
İmleci bir sütun sağa taşıyan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>nl</literal></term>
    <listitem><para>
Atıl: <userinput>do</userinput> ve <userinput>sf</userinput> yerine artık kullanılmayan yeteneğin ismi.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>nw</literal></term>
    <listitem><para>
Bazan satırın kalanını da silerek imleci sonraki satırın başına taşıyan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>pc</literal></term>
    <listitem><para>
Geciktirme için kullanılacak karakteri belirten komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>pf</literal></term>
    <listitem><para>
Yazıcıyı çıktı yönlendirmeyi sonlandıran komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>po</literal></term>
    <listitem><para>
Çıktıyı yazıcıya yönlendiren komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>pO</literal></term>
    <listitem><para>
Sonraki <varname>n</varname> karakteri yazıcıya yönlendiren komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>ps</literal></term>
    <listitem><para>
Ekranı bağlı yazıcıya basan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>rc</literal></term>
    <listitem><para>
İmleci kayıtlı son konuma taşıyan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>RI</literal></term>
    <listitem><para>
İmleci <varname>n</varname> karakter sağa taşıyan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>rp</literal></term>
    <listitem><para>
<varname>c</varname> karakterini <varname>n</varname> kere basan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>rs</literal></term>
    <listitem><para>
Uçbirimi tuhaf bir kipteyken sıfırlama komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>sa</literal></term>
    <listitem><para>
Görünürlük kiplerini açıp kapayan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>sc</literal></term>
    <listitem><para>
O anki imleç konumunu kaydeden komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>se</literal></term>
    <listitem><para>
Çarpıcı görünüm kipini bırakma komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>sf</literal></term>
    <listitem><para>
Ekranı bir satır yukarı kaydıran komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>SF</literal></term>
    <listitem><para>
Ekranı <varname>n</varname> satır yukarı kaydıran komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>so</literal></term>
    <listitem><para>
Çarpıcı görünüm kipine giriş komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>sr</literal></term>
    <listitem><para>
Ekranı bir satır aşağı kaydıran komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>SR</literal></term>
    <listitem><para>
Ekranı <varname>n</varname> satır aşağı kaydıran komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>st</literal></term>
    <listitem><para>
İmleç konumunu tüm satırlar için sekme durağı yapan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>ta</literal></term>
    <listitem><para>
İmleci sonraki donanımsal sekme durağına taşıyan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>te</literal></term>
    <listitem><para>
Uçbirimi sıralı çıktıya ayarlayan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>ti</literal></term>
    <listitem><para>
Uçbirimi rasgele imleç hareketi için ilklendiren komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>ts</literal></term>
    <listitem><para>
Uçbirim imlecini durum satırına taşıyan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>uc</literal></term>
    <listitem><para>
Karakterin altını çizdikten sonra imleci sağa taşıyan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>ue</literal></term>
    <listitem><para>
Altçizme kipinden çıkış komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>up</literal></term>
    <listitem><para>
İmleci bir satır yukarı taşıyan dizge.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>UP</literal></term>
    <listitem><para>
İmleci <varname>n</varname> satır yukarı taşıyan dizge.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>us</literal></term>
    <listitem><para>
Altçizme kipine giriş komutu.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>vb</literal></term>
    <listitem><para>
Ekranı yanardöner yapan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>ve</literal></term>
    <listitem><para>
İmleci normale döndüren komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>vi</literal></term>
    <listitem><para>
İmleci görünmez yapan komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>vs</literal></term>
    <listitem><para>
İmleci genişleten komut.
     </para></listitem></varlistentry><varlistentry>
    <term><literal>wi</literal></term>
    <listitem><para>
Uçbirimin çıktılama için kullanacağı ekran penceresini ayarlamakta kullanılan komut.
     </para></listitem></varlistentry></variablelist>
  </sect1></chapter>
<index xml:id="termcap-fn" condition="multi-index" label="i"><title>Değişkenler ve İşlevler Dizini</title></index>
<index xml:id="termcap-ky" condition="multi-index" label="ii"><title>Yetenekler Dizini</title></index>
<index xml:id="termcap-cp" condition="multi-index" label="iii"><title>Kavramlar Dizini</title></index>
</book>

