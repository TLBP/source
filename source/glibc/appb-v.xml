<?xml version="1.0" encoding="UTF-8"?>
<!-- ********************************************************************
         appb-v.xml
     ******************************************************************** -->
 <section xml:id="glibc-Library-Summary-V"
          xmlns="http://docbook.org/ns/docbook" version="5.0" xml:lang="tr">
  <info>
   <title>V</title>
  </info>
  <para>
   <glosslist>
    <glossentry>
     <glossterm>
      <command>va_alist</command>
     </glossterm>
     <glossdef>
      <para><literal>varargs.h</literal> (Unix):  <xref linkend="glibc-Old-Varargs"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal><varname>type</varname><command>va_arg</command> (va_list <varname>ap</varname>, <varname>type</varname>)</literal>
     </glossterm>
     <glossdef>
      <para><literal>stdarg.h</literal> (ISO):  <xref linkend="glibc-Argument-Macros"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>void <command>__va_copy</command> (va_list <varname>dest</varname>, va_list <varname>src</varname>)</literal>
     </glossterm>
     <glossdef>
      <para><literal>stdarg.h</literal> (GNU):  <xref linkend="glibc-Argument-Macros"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <command>va_dcl</command>
     </glossterm>
     <glossdef>
      <para><literal>varargs.h</literal> (Unix):  <xref linkend="glibc-Old-Varargs"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>void <command>va_end</command> (va_list <varname>ap</varname>)</literal>
     </glossterm>
     <glossdef>
      <para><literal>stdarg.h</literal> (ISO):  <xref linkend="glibc-Argument-Macros"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <command>va_list</command>
     </glossterm>
     <glossdef>
      <para><literal>stdarg.h</literal> (ISO):  <xref linkend="glibc-Argument-Macros"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>void * <command>valloc</command> (size_t <varname>size</varname>)</literal>
     </glossterm>
     <glossdef>
      <para><literal>malloc.h</literal>, <literal>stdlib.h</literal> (BSD):  <xref linkend="glibc-Aligned-Memory-Blocks"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>vasprintf</command> (char **<varname>ptr</varname>, const char *<varname>template</varname>, va_list <varname>ap</varname>)</literal>
     </glossterm>
     <glossdef>
      <para><literal>stdio.h</literal> (GNU):  <xref linkend="glibc-Variable-Arguments-Output"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>void <command>va_start</command> (va_list <varname>ap</varname>)</literal>
     </glossterm>
     <glossdef>
      <para><literal>varargs.h</literal> (Unix):  <xref linkend="glibc-Old-Varargs"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>void <command>va_start</command> (va_list <varname>ap</varname>, <varname>last-required</varname>)</literal>
     </glossterm>
     <glossdef>
      <para><literal>stdarg.h</literal> (ISO):  <xref linkend="glibc-Argument-Macros"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>VDISCARD</command></literal>
     </glossterm>
     <glossdef>
      <para><literal>termios.h</literal> (BSD):  <xref linkend="glibc-Other-Special"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>VDSUSP</command></literal>
     </glossterm>
     <glossdef>
      <para><literal>termios.h</literal> (BSD):  <xref linkend="glibc-Signal-Characters"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>VEOF</command></literal>
     </glossterm>
     <glossdef>
      <para><literal>termios.h</literal> (POSIX.1):  <xref linkend="glibc-Editing-Characters"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>VEOL</command></literal>
     </glossterm>
     <glossdef>
      <para><literal>termios.h</literal> (POSIX.1):  <xref linkend="glibc-Editing-Characters"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>VEOL2</command></literal>
     </glossterm>
     <glossdef>
      <para><literal>termios.h</literal> (BSD):  <xref linkend="glibc-Editing-Characters"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>VERASE</command></literal>
     </glossterm>
     <glossdef>
      <para><literal>termios.h</literal> (POSIX.1):  <xref linkend="glibc-Editing-Characters"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>void <command>verr</command> (int <varname>status</varname>, const char *<varname>format</varname>, va_list)</literal>
     </glossterm>
     <glossdef>
      <para><literal>err.h</literal> (BSD):  <xref linkend="glibc-Error-Messages"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>void <command>verrx</command> (int <varname>status</varname>, const char *<varname>format</varname>, va_list)</literal>
     </glossterm>
     <glossdef>
      <para><literal>err.h</literal> (BSD):  <xref linkend="glibc-Error-Messages"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>versionsort</command> (const void *<varname>a</varname>, const void *<varname>b</varname>)</literal>
     </glossterm>
     <glossdef>
      <para><literal>dirent.h</literal> (GNU):  <xref linkend="glibc-Scanning-Directory-Content"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>versionsort64</command> (const void *<varname>a</varname>, const void *<varname>b</varname>)</literal>
     </glossterm>
     <glossdef>
      <para><literal>dirent.h</literal> (GNU):  <xref linkend="glibc-Scanning-Directory-Content"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>pid_t <command>vfork</command> (void)</literal>
     </glossterm>
     <glossdef>
      <para><literal>unistd.h</literal> (BSD):  <xref linkend="glibc-Creating-a-Process"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>vfprintf</command> (FILE *<varname>stream</varname>, const char *<varname>template</varname>, va_list <varname>ap</varname>)</literal>
     </glossterm>
     <glossdef>
      <para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-Variable-Arguments-Output"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>vfscanf</command> (FILE *<varname>stream</varname>, const char *<varname>template</varname>, va_list <varname>ap</varname>)</literal>
     </glossterm>
     <glossdef>
      <para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-Variable-Arguments-Input"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>vfwprintf</command> (FILE *<varname>stream</varname>, const wchar_t *<varname>template</varname>, va_list <varname>ap</varname>)</literal>
     </glossterm>
     <glossdef>
      <para><literal>wchar.h</literal> (ISO):  <xref linkend="glibc-Variable-Arguments-Output"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>vfwscanf</command> (FILE *<varname>stream</varname>, const wchar_t *<varname>template</varname>, va_list <varname>ap</varname>)</literal>
     </glossterm>
     <glossdef>
      <para><literal>wchar.h</literal> (ISO):  <xref linkend="glibc-Variable-Arguments-Input"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>VINTR</command></literal>
     </glossterm>
     <glossdef>
      <para><literal>termios.h</literal> (POSIX.1):  <xref linkend="glibc-Signal-Characters"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>VKILL</command></literal>
     </glossterm>
     <glossdef>
      <para><literal>termios.h</literal> (POSIX.1):  <xref linkend="glibc-Editing-Characters"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>vlimit</command> (int <varname>resource</varname>, int <varname>limit</varname>)</literal>
     </glossterm>
     <glossdef>
      <para><literal>sys/vlimit.h</literal> (BSD):  <xref linkend="glibc-Limits-on-Resources"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>VLNEXT</command></literal>
     </glossterm>
     <glossdef>
      <para><literal>termios.h</literal> (BSD):  <xref linkend="glibc-Other-Special"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>VMIN</command></literal>
     </glossterm>
     <glossdef>
      <para><literal>termios.h</literal> (POSIX.1):  <xref linkend="glibc-Noncanonical-Input"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>vprintf</command> (const char *<varname>template</varname>, va_list <varname>ap</varname>)</literal>
     </glossterm>
     <glossdef>
      <para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-Variable-Arguments-Output"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>VQUIT</command></literal>
     </glossterm>
     <glossdef>
      <para><literal>termios.h</literal> (POSIX.1):  <xref linkend="glibc-Signal-Characters"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>VREPRINT</command></literal>
     </glossterm>
     <glossdef>
      <para><literal>termios.h</literal> (BSD):  <xref linkend="glibc-Editing-Characters"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>vscanf</command> (const char *<varname>template</varname>, va_list <varname>ap</varname>)</literal>
     </glossterm>
     <glossdef>
      <para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-Variable-Arguments-Input"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>vsnprintf</command> (char *<varname>s</varname>, size_t <varname>size</varname>, const char *<varname>template</varname>, va_list <varname>ap</varname>)</literal>
     </glossterm>
     <glossdef>
      <para><literal>stdio.h</literal> (GNU):  <xref linkend="glibc-Variable-Arguments-Output"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>vsprintf</command> (char *<varname>s</varname>, const char *<varname>template</varname>, va_list <varname>ap</varname>)</literal>
     </glossterm>
     <glossdef>
      <para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-Variable-Arguments-Output"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>vsscanf</command> (const char *<varname>s</varname>, const char *<varname>template</varname>, va_list <varname>ap</varname>)</literal>
     </glossterm>
     <glossdef>
      <para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-Variable-Arguments-Input"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>VSTART</command></literal>
     </glossterm>
     <glossdef>
      <para><literal>termios.h</literal> (POSIX.1):  <xref linkend="glibc-Start-Stop-Characters"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>VSTATUS</command></literal>
     </glossterm>
     <glossdef>
      <para><literal>termios.h</literal> (BSD):  <xref linkend="glibc-Other-Special"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>VSTOP</command></literal>
     </glossterm>
     <glossdef>
      <para><literal>termios.h</literal> (POSIX.1):  <xref linkend="glibc-Start-Stop-Characters"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>VSUSP</command></literal>
     </glossterm>
     <glossdef>
      <para><literal>termios.h</literal> (POSIX.1):  <xref linkend="glibc-Signal-Characters"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>vswprintf</command> (wchar_t *<varname>s</varname>, size_t <varname>size</varname>, const wchar_t *<varname>template</varname>, va_list <varname>ap</varname>)</literal>
     </glossterm>
     <glossdef>
      <para><literal>wchar.h</literal> (GNU):  <xref linkend="glibc-Variable-Arguments-Output"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>vswscanf</command> (const wchar_t *<varname>s</varname>, const wchar_t *<varname>template</varname>, va_list <varname>ap</varname>)</literal>
     </glossterm>
     <glossdef>
      <para><literal>wchar.h</literal> (ISO):  <xref linkend="glibc-Variable-Arguments-Input"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>void <command>vsyslog</command> (int <varname>facility_priority</varname>, char *<varname>format</varname>, va_list arglist)</literal>
     </glossterm>
     <glossdef>
      <para><literal>syslog.h</literal> (BSD):  <xref linkend="glibc-syslog--vsyslog"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>VTIME</command></literal>
     </glossterm>
     <glossdef>
      <para><literal>termios.h</literal> (POSIX.1):  <xref linkend="glibc-Noncanonical-Input"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>vtimes</command> (struct vtimes <varname>current</varname>, struct vtimes <varname>child</varname>)</literal>
     </glossterm>
     <glossdef>
      <para><literal>vtimes.h</literal> (vtimes.h):  <xref linkend="glibc-Resource-Usage"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>void <command>vwarn</command> (const char *<varname>format</varname>, va_list)</literal>
     </glossterm>
     <glossdef>
      <para><literal>err.h</literal> (BSD):  <xref linkend="glibc-Error-Messages"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>void <command>vwarnx</command> (const char *<varname>format</varname>, va_list)</literal>
     </glossterm>
     <glossdef>
      <para><literal>err.h</literal> (BSD):  <xref linkend="glibc-Error-Messages"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>VWERASE</command></literal>
     </glossterm>
     <glossdef>
      <para><literal>termios.h</literal> (BSD):  <xref linkend="glibc-Editing-Characters"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>vwprintf</command> (const wchar_t *<varname>template</varname>, va_list <varname>ap</varname>)</literal>
     </glossterm>
     <glossdef>
      <para><literal>wchar.h</literal> (ISO):  <xref linkend="glibc-Variable-Arguments-Output"/>.
     </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>
      <literal>int <command>vwscanf</command> (const wchar_t *<varname>template</varname>, va_list <varname>ap</varname>)</literal>
     </glossterm>
     <glossdef>
      <para><literal>wchar.h</literal> (ISO):  <xref linkend="glibc-Variable-Arguments-Input"/>.
     </para>
     </glossdef>
    </glossentry>
   </glosslist>
  </para>
 </section>
