<?xml version="1.0" encoding="UTF-8"?>
<!-- ********************************************************************
         appb-t.xml
     ******************************************************************** -->
 <section xml:id="glibc-Library-Summary-T"
          xmlns="http://docbook.org/ns/docbook" version="5.0" xml:lang="tr">
  <info>
   <title>T</title>
  </info>
  <glosslist>
   <glossentry>
    <glossterm>
     <literal>double <command>tan</command> (double <varname>x</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>math.h</literal> (ISO):
<xref linkend="glibc-Trig-Functions"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>float <command>tanf</command> (float <varname>x</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>math.h</literal> (ISO):
<xref linkend="glibc-Trig-Functions"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>double <command>tanh</command> (double <varname>x</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>math.h</literal> (ISO):
<xref linkend="glibc-Hyperbolic-Functions"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>float <command>tanhf</command> (float <varname>x</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>math.h</literal> (ISO):
<xref linkend="glibc-Hyperbolic-Functions"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>long double <command>tanhl</command> (long double <varname>x</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>math.h</literal> (ISO):
<xref linkend="glibc-Hyperbolic-Functions"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>long double <command>tanl</command> (long double <varname>x</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>math.h</literal> (ISO):
<xref linkend="glibc-Trig-Functions"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>int <command>tcdrain</command> (int <varname>filedes</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>termios.h</literal> (POSIX.1):
<xref linkend="glibc-Line-Control"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <command>tcflag_t</command>
    </glossterm>
    <glossdef>
     <para><literal>termios.h</literal> (POSIX.1):
<xref linkend="glibc-Mode-Data-Types"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>int <command>tcflow</command> (int <varname>filedes</varname>, int <varname>action</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>termios.h</literal> (POSIX.1):
<xref linkend="glibc-Line-Control"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>int <command>tcflush</command> (int <varname>filedes</varname>, int <varname>queue</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>termios.h</literal> (POSIX.1):
<xref linkend="glibc-Line-Control"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>int <command>tcgetattr</command> (int <varname>filedes</varname>, struct termios *<varname>termios-p</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>termios.h</literal> (POSIX.1):
<xref linkend="glibc-Mode-Functions"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>pid_t <command>tcgetpgrp</command> (int <varname>filedes</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>unistd.h</literal> (POSIX.1):
<xref linkend="glibc-Terminal-Access-Functions"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>pid_t <command>tcgetsid</command> (int <varname>fildes</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>termios.h</literal> (Unix98):
<xref linkend="glibc-Terminal-Access-Functions"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <command>TCSADRAIN</command>
    </glossterm>
    <glossdef>
     <para><literal>termios.h</literal> (POSIX.1):
<xref linkend="glibc-Mode-Functions"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <command>TCSAFLUSH</command>
    </glossterm>
    <glossdef>
     <para><literal>termios.h</literal> (POSIX.1):
<xref linkend="glibc-Mode-Functions"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <command>TCSANOW</command>
    </glossterm>
    <glossdef>
     <para><literal>termios.h</literal> (POSIX.1):
<xref linkend="glibc-Mode-Functions"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <command>TCSASOFT</command>
    </glossterm>
    <glossdef>
     <para><literal>termios.h</literal> (BSD):
<xref linkend="glibc-Mode-Functions"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>int <command>tcsendbreak</command> (int <varname>filedes</varname>, int <varname>duration</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>termios.h</literal> (POSIX.1):
<xref linkend="glibc-Line-Control"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>int <command>tcsetattr</command> (int <varname>filedes</varname>, int <varname>when</varname>, const struct termios *<varname>termios-p</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>termios.h</literal> (POSIX.1):
<xref linkend="glibc-Mode-Functions"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>int <command>tcsetpgrp</command> (int <varname>filedes</varname>, pid_t <varname>pgid</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>unistd.h</literal> (POSIX.1):
<xref linkend="glibc-Terminal-Access-Functions"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>void * <command>tdelete</command> (const void *<varname>key</varname>, void **<varname>rootp</varname>, comparison_fn_t <varname>compar</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>search.h</literal> (SVID):
<xref linkend="glibc-Tree-Search-Function"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>void <command>tdestroy</command> (void *<varname>vroot</varname>, __free_fn_t <varname>freefct</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>search.h</literal> (GNU):
<xref linkend="glibc-Tree-Search-Function"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>long int </literal>
     <command>telldir </command>
     <literal>(DIR *</literal>
     <varname>dirstream</varname>
     <literal>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>dirent.h</literal> (BSD):
<xref linkend="glibc-Random-Access-Directory"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>TEMP_FAILURE_RETRY (<varname>expression</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>unistd.h</literal> (GNU):
<xref linkend="glibc-Interrupted-Primitives"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>char * <command>tempnam</command> (const char *<varname>dir</varname>, const char *<varname>prefix</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>stdio.h</literal> (SVID):
<xref linkend="glibc-Temporary-Files"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>char * <command>textdomain</command> (const char *<varname>domainname</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>libintl.h</literal> (GNU):
<xref linkend="glibc-Locating-gettext-catalog"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>void * <command>tfind</command> (const void *<varname>key</varname>, void *const *<varname>rootp</varname>, comparison_fn_t <varname>compar</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>search.h</literal> (SVID):
<xref linkend="glibc-Tree-Search-Function"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>double <command>tgamma</command> (double <varname>x</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>math.h</literal> (XPG, ISO):
<xref linkend="glibc-Special-Functions"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>float <command>tgammaf</command> (float <varname>x</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>math.h</literal> (XPG, ISO):
<xref linkend="glibc-Special-Functions"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>long double <command>tgammal</command> (long double <varname>x</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>math.h</literal> (XPG, ISO):
<xref linkend="glibc-Special-Functions"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>time_t <command>time</command> (time_t *<varname>result</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>time.h</literal> (ISO):
<xref linkend="glibc-Simple-Calendar-Time"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>time_t <command>timegm</command> (struct tm *<varname>brokentime</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>time.h</literal> (???):
<xref linkend="glibc-Broken-down-Time"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>time_t <command>timelocal</command> (struct tm *<varname>brokentime</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>time.h</literal> (???):
<xref linkend="glibc-Broken-down-Time"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>clock_t <command>times</command> (struct tms *<varname>buffer</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>sys/times.h</literal> (POSIX.1):
<xref linkend="glibc-Processor-Time"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <command>time_t</command>
    </glossterm>
    <glossdef>
     <para><literal>time.h</literal> (ISO):
<xref linkend="glibc-Simple-Calendar-Time"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>long int <command>timezone</command></literal>
    </glossterm>
    <glossdef>
     <para><literal>time.h</literal> (SVID):
<xref linkend="glibc-Time-Zone-Functions"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>FILE * <command>tmpfile</command> (void)</literal>
    </glossterm>
    <glossdef>
     <para><literal>stdio.h</literal> (ISO):
<xref linkend="glibc-Temporary-Files"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>FILE * <command>tmpfile64</command> (void)</literal>
    </glossterm>
    <glossdef>
     <para><literal>stdio.h</literal> (Unix98):  <xref linkend="glibc-Temporary-Files"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>int <command>TMP_MAX</command></literal>
    </glossterm>
    <glossdef>
     <para><literal>stdio.h</literal> (ISO):
<xref linkend="glibc-Temporary-Files"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>char * <command>tmpnam</command> (char *<varname>result</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>stdio.h</literal> (ISO):
<xref linkend="glibc-Temporary-Files"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>char * <command>tmpnam_r</command> (char *<varname>result</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>stdio.h</literal> (GNU):
<xref linkend="glibc-Temporary-Files"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>int <command>toascii</command> (int <varname>c</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>ctype.h</literal> (SVID, BSD):
<xref linkend="glibc-Case-Conversion"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>int <command>_tolower</command> (int <varname>c</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>ctype.h</literal> (SVID):
<xref linkend="glibc-Case-Conversion"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>int <command>tolower</command> (int <varname>c</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>ctype.h</literal> (ISO):
<xref linkend="glibc-Case-Conversion"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>tcflag_t <command>TOSTOP</command></literal>
    </glossterm>
    <glossdef>
     <para><literal>termios.h</literal> (POSIX.1):
<xref linkend="glibc-Local-Modes"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>int <command>_toupper</command> (int <varname>c</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>ctype.h</literal> (SVID):
<xref linkend="glibc-Case-Conversion"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>int <command>toupper</command> (int <varname>c</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>ctype.h</literal> (ISO):
<xref linkend="glibc-Case-Conversion"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>wint_t <command>towctrans</command> (wint_t <varname>wc</varname>, wctrans_t <varname>desc</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>wctype.h</literal> (ISO):
<xref linkend="glibc-Wide-Character-Case-Conversion"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>wint_t <command>towlower</command> (wint_t <varname>wc</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>wctype.h</literal> (ISO):
<xref linkend="glibc-Wide-Character-Case-Conversion"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>wint_t <command>towupper</command> (wint_t <varname>wc</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>wctype.h</literal> (ISO):
<xref linkend="glibc-Wide-Character-Case-Conversion"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>double <command>trunc</command> (double <varname>x</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>math.h</literal> (ISO):
<xref linkend="glibc-Rounding-Functions"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>int <command>truncate</command> (const char *<varname>filename</varname>, off_t <varname>length</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>unistd.h</literal> (X/Open):
<xref linkend="glibc-File-Size"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>int <command>truncate64</command> (const char *<varname>name</varname>, off64_t <varname>length</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>unistd.h</literal> (Unix98):
<xref linkend="glibc-File-Size"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>float <command>truncf</command> (float <varname>x</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>math.h</literal> (ISO):
<xref linkend="glibc-Rounding-Functions"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>long double <command>truncl</command> (long double <varname>x</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>math.h</literal> (ISO):
<xref linkend="glibc-Rounding-Functions"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <command>TRY_AGAIN</command>
    </glossterm>
    <glossdef>
     <para><literal>netdb.h</literal> (BSD):
<xref linkend="glibc-Host-Names"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>void * <command>tsearch</command> (const void *<varname>key</varname>, void **<varname>rootp</varname>, comparison_fn_t <varname>compar</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>search.h</literal> (SVID):
<xref linkend="glibc-Tree-Search-Function"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>char * <command>ttyname</command> (int <varname>filedes</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>unistd.h</literal> (POSIX.1):
<xref linkend="glibc-Is-It-a-Terminal"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>int <command>ttyname_r</command> (int <varname>filedes</varname>, char *<varname>buf</varname>, size_t <varname>len</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>unistd.h</literal> (POSIX.1):
<xref linkend="glibc-Is-It-a-Terminal"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>void <command>twalk</command> (const void *<varname>root</varname>, __action_fn_t <varname>action</varname>)</literal>
    </glossterm>
    <glossdef>
     <para><literal>search.h</literal> (SVID):
<xref linkend="glibc-Tree-Search-Function"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>char * <command>tzname [2]</command></literal>
    </glossterm>
    <glossdef>
     <para><literal>time.h</literal> (POSIX.1):
<xref linkend="glibc-Time-Zone-Functions"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>int <command>TZNAME_MAX</command></literal>
    </glossterm>
    <glossdef>
     <para><literal>limits.h</literal> (POSIX.1):
<xref linkend="glibc-General-Limits"/>.
</para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>
     <literal>void <command>tzset</command> (void)</literal>
    </glossterm>
    <glossdef>
     <para><literal>time.h</literal> (POSIX.1):  <xref linkend="glibc-Time-Zone-Functions"/>.
</para>
    </glossdef>
   </glossentry>
  </glosslist>
 </section>
