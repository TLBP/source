<?xml version="1.0" encoding="UTF-8"?>

<!-- ********************************************************************
     $Id: appb-f.xml,v 1.2 2002/12/20 22:29:48 nilgun Exp $
******************************************************************** -->
<sect1 xml:id="glibc-Library-Summary-F"><title>F</title>
  <para><glosslist><glossentry><glossterm><literal>double <command>fabs</command> (double <varname>number</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Absolute-Value"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>float <command>fabsf</command> (float <varname>number</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Absolute-Value"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>long double <command>fabsl</command> (long double <varname>number</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Absolute-Value"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>size_t <command>__fbufsize</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio_ext.h</literal> (GNU):  <xref linkend="glibc-Controlling-Buffering"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fchdir</command> (int <varname>filedes</varname>)</literal></glossterm><glossdef><para><literal>unistd.h</literal> (XPG):  <xref linkend="glibc-Working-Directory"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fchmod</command> (int <varname>filedes</varname>, int <varname>mode</varname>)</literal></glossterm><glossdef><para><literal>sys/stat.h</literal> (BSD):  <xref linkend="glibc-Setting-Permissions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fchown</command> (int <varname>filedes</varname>, int <varname>owner</varname>, int <varname>group</varname>)</literal></glossterm><glossdef><para><literal>unistd.h</literal> (BSD):  <xref linkend="glibc-File-Owner"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fclean</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (GNU):  <xref linkend="glibc-Cleaning-Streams"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fclose</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-Closing-Streams"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fcloseall</command> (void)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (GNU):  <xref linkend="glibc-Closing-Streams"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fcntl</command> (int <varname>filedes</varname>, int <varname>command</varname>, â€¦)</literal></glossterm><glossdef><para><literal>fcntl.h</literal> (POSIX.1):  <xref linkend="glibc-Control-Operations"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>char * <command>fcvt</command> (double <varname>value</varname>, int <varname>ndigit</varname>, int *<varname>decpt</varname>, int *<varname>neg</varname>)</literal></glossterm><glossdef><para><literal>stdlib.h</literal> (SVID, Unix98):  <xref linkend="glibc-System-V-Number-Conversion"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fcvt_r</command> (double <varname>value</varname>, int <varname>ndigit</varname>, int *<varname>decpt</varname>, int *<varname>neg</varname>, char *<varname>buf</varname>, size_t <varname>len</varname>)</literal></glossterm><glossdef><para><literal>stdlib.h</literal> (SVID, Unix98):  <xref linkend="glibc-System-V-Number-Conversion"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fdatasync</command> (int <varname>fildes</varname>)</literal></glossterm><glossdef><para><literal>unistd.h</literal> (POSIX):  <xref linkend="glibc-Synchronizing-I-O"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>FD_CLOEXEC</command></literal></glossterm><glossdef><para><literal>fcntl.h</literal> (POSIX.1):  <xref linkend="glibc-Descriptor-Flags"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>void <command>FD_CLR</command> (int <varname>filedes</varname>, fd_set *<varname>set</varname>)</literal></glossterm><glossdef><para><literal>sys/types.h</literal> (BSD):  <xref linkend="glibc-Waiting-for-I-O"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>double <command>fdim</command> (double <varname>x</varname>, double <varname>y</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Misc-FP-Arithmetic"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>float <command>fdimf</command> (float <varname>x</varname>, float <varname>y</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Misc-FP-Arithmetic"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>long double <command>fdiml</command> (long double <varname>x</varname>, long double <varname>y</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Misc-FP-Arithmetic"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>FD_ISSET</command> (int <varname>filedes</varname>, fd_set *<varname>set</varname>)</literal></glossterm><glossdef><para><literal>sys/types.h</literal> (BSD):  <xref linkend="glibc-Waiting-for-I-O"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>FILE * <command>fdopen</command> (int <varname>filedes</varname>, const char *<varname>opentype</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (POSIX.1):  <xref linkend="glibc-Descriptors-and-Streams"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>DIR * </literal><command>fdopendir</command><literal> (int </literal><varname>fd</varname><literal>)</literal></glossterm><glossdef><para><literal>dirent.h</literal> (GNU):  <xref linkend="glibc-Opening-a-Directory"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>void <command>FD_SET</command> (int <varname>filedes</varname>, fd_set *<varname>set</varname>)</literal></glossterm><glossdef><para><literal>sys/types.h</literal> (BSD):  <xref linkend="glibc-Waiting-for-I-O"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>fd_set</command></glossterm><glossdef><para><literal>sys/types.h</literal> (BSD):  <xref linkend="glibc-Waiting-for-I-O"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>FD_SETSIZE</command></literal></glossterm><glossdef><para><literal>sys/types.h</literal> (BSD):  <xref linkend="glibc-Waiting-for-I-O"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>F_DUPFD</command></literal></glossterm><glossdef><para><literal>fcntl.h</literal> (POSIX.1):  <xref linkend="glibc-Duplicating-Descriptors"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>void <command>FD_ZERO</command> (fd_set *<varname>set</varname>)</literal></glossterm><glossdef><para><literal>sys/types.h</literal> (BSD):  <xref linkend="glibc-Waiting-for-I-O"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>feclearexcept</command> (int <varname>excepts</varname>)</literal></glossterm><glossdef><para><literal>fenv.h</literal> (ISO):  <xref linkend="glibc-Status-bit-operations"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fedisableexcept</command> (int <varname>excepts</varname>)</literal></glossterm><glossdef><para><literal>fenv.h</literal> (GNU):  <xref linkend="glibc-Control-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FE_DIVBYZERO</command></glossterm><glossdef><para><literal>fenv.h</literal> (ISO):  <xref linkend="glibc-Status-bit-operations"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FE_DOWNWARD</command></glossterm><glossdef><para><literal>fenv.h</literal> (ISO):  <xref linkend="glibc-Rounding"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>feenableexcept</command> (int <varname>excepts</varname>)</literal></glossterm><glossdef><para><literal>fenv.h</literal> (GNU):  <xref linkend="glibc-Control-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fegetenv</command> (fenv_t *<varname>envp</varname>)</literal></glossterm><glossdef><para><literal>fenv.h</literal> (ISO):  <xref linkend="glibc-Control-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fegetexcept</command> (int <varname>excepts</varname>)</literal></glossterm><glossdef><para><literal>fenv.h</literal> (GNU):  <xref linkend="glibc-Control-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fegetexceptflag</command> (fexcept_t *<varname>flagp</varname>, int <varname>excepts</varname>)</literal></glossterm><glossdef><para><literal>fenv.h</literal> (ISO):  <xref linkend="glibc-Status-bit-operations"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fegetround</command> (void)</literal></glossterm><glossdef><para><literal>fenv.h</literal> (ISO):  <xref linkend="glibc-Rounding"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>feholdexcept</command> (fenv_t *<varname>envp</varname>)</literal></glossterm><glossdef><para><literal>fenv.h</literal> (ISO):  <xref linkend="glibc-Control-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FE_INEXACT</command></glossterm><glossdef><para><literal>fenv.h</literal> (ISO):  <xref linkend="glibc-Status-bit-operations"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FE_INVALID</command></glossterm><glossdef><para><literal>fenv.h</literal> (ISO):  <xref linkend="glibc-Status-bit-operations"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>feof</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-EOF-and-Errors"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>feof_unlocked</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (GNU):  <xref linkend="glibc-EOF-and-Errors"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FE_OVERFLOW</command></glossterm><glossdef><para><literal>fenv.h</literal> (ISO):  <xref linkend="glibc-Status-bit-operations"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>feraiseexcept</command> (int <varname>excepts</varname>)</literal></glossterm><glossdef><para><literal>fenv.h</literal> (ISO):  <xref linkend="glibc-Status-bit-operations"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>ferror</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-EOF-and-Errors"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>ferror_unlocked</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (GNU):  <xref linkend="glibc-EOF-and-Errors"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fesetenv</command> (const fenv_t *<varname>envp</varname>)</literal></glossterm><glossdef><para><literal>fenv.h</literal> (ISO):  <xref linkend="glibc-Control-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fesetexceptflag</command> (const fexcept_t *<varname>flagp</varname>, int <varname>excepts</varname>)</literal></glossterm><glossdef><para><literal>fenv.h</literal> (ISO):  <xref linkend="glibc-Status-bit-operations"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fesetround</command> (int <varname>round</varname>)</literal></glossterm><glossdef><para><literal>fenv.h</literal> (ISO):  <xref linkend="glibc-Rounding"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fetestexcept</command> (int <varname>excepts</varname>)</literal></glossterm><glossdef><para><literal>fenv.h</literal> (ISO):  <xref linkend="glibc-Status-bit-operations"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FE_TONEAREST</command></glossterm><glossdef><para><literal>fenv.h</literal> (ISO):  <xref linkend="glibc-Rounding"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FE_TOWARDZERO</command></glossterm><glossdef><para><literal>fenv.h</literal> (ISO):  <xref linkend="glibc-Rounding"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FE_UNDERFLOW</command></glossterm><glossdef><para><literal>fenv.h</literal> (ISO):  <xref linkend="glibc-Status-bit-operations"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>feupdateenv</command> (const fenv_t *<varname>envp</varname>)</literal></glossterm><glossdef><para><literal>fenv.h</literal> (ISO):  <xref linkend="glibc-Control-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FE_UPWARD</command></glossterm><glossdef><para><literal>fenv.h</literal> (ISO):  <xref linkend="glibc-Rounding"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fflush</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-Flushing-Buffers"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fflush_unlocked</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (POSIX):  <xref linkend="glibc-Flushing-Buffers"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fgetc</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-Character-Input"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fgetc_unlocked</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (POSIX):  <xref linkend="glibc-Character-Input"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>F_GETFD</command></literal></glossterm><glossdef><para><literal>fcntl.h</literal> (POSIX.1):  <xref linkend="glibc-Descriptor-Flags"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>F_GETFL</command></literal></glossterm><glossdef><para><literal>fcntl.h</literal> (POSIX.1):  <xref linkend="glibc-Getting-File-Status-Flags"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>struct group * <command>fgetgrent</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>grp.h</literal> (SVID):  <xref linkend="glibc-Scanning-All-Groups"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fgetgrent_r</command> (FILE *<varname>stream</varname>, struct group *<varname>result_buf</varname>, char *<varname>buffer</varname>, size_t <varname>buflen</varname>, struct group **<varname>result</varname>)</literal></glossterm><glossdef><para><literal>grp.h</literal> (GNU):  <xref linkend="glibc-Scanning-All-Groups"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>F_GETLK</command></literal></glossterm><glossdef><para><literal>fcntl.h</literal> (POSIX.1):  <xref linkend="glibc-File-Locks"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>F_GETOWN</command></literal></glossterm><glossdef><para><literal>fcntl.h</literal> (BSD):  <xref linkend="glibc-Interrupt-Input"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fgetpos</command> (FILE *<varname>stream</varname>, fpos_t *<varname>position</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-Portable-Positioning"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fgetpos64</command> (FILE *<varname>stream</varname>, fpos64_t *<varname>position</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (Unix98):  <xref linkend="glibc-Portable-Positioning"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>struct passwd * <command>fgetpwent</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>pwd.h</literal> (SVID):  <xref linkend="glibc-Scanning-All-Users"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fgetpwent_r</command> (FILE *<varname>stream</varname>, struct passwd *<varname>result_buf</varname>, char *<varname>buffer</varname>, size_t <varname>buflen</varname>, struct passwd **<varname>result</varname>)</literal></glossterm><glossdef><para><literal>pwd.h</literal> (GNU):  <xref linkend="glibc-Scanning-All-Users"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>char * <command>fgets</command> (char *<varname>s</varname>, int <varname>count</varname>, FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-Line-Input"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>char * <command>fgets_unlocked</command> (char *<varname>s</varname>, int <varname>count</varname>, FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (GNU):  <xref linkend="glibc-Line-Input"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>wint_t <command>fgetwc</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>wchar.h</literal> (ISO):  <xref linkend="glibc-Character-Input"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>wint_t <command>fgetwc_unlocked</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>wchar.h</literal> (GNU):  <xref linkend="glibc-Character-Input"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>wchar_t * <command>fgetws</command> (wchar_t *<varname>ws</varname>, int <varname>count</varname>, FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>wchar.h</literal> (ISO):  <xref linkend="glibc-Line-Input"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>wchar_t * <command>fgetws_unlocked</command> (wchar_t *<varname>ws</varname>, int <varname>count</varname>, FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>wchar.h</literal> (GNU):  <xref linkend="glibc-Line-Input"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FILE</command></glossterm><glossdef><para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-Streams"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>FILENAME_MAX</command></literal></glossterm><glossdef><para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-Limits-for-Files"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fileno</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (POSIX.1):  <xref linkend="glibc-Descriptors-and-Streams"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fileno_unlocked</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (GNU):  <xref linkend="glibc-Descriptors-and-Streams"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>finite</command> (double <varname>x</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (BSD):  <xref linkend="glibc-Floating-Point-Classes"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>finitef</command> (float <varname>x</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (BSD):  <xref linkend="glibc-Floating-Point-Classes"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>finitel</command> (long double <varname>x</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (BSD):  <xref linkend="glibc-Floating-Point-Classes"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>__flbf</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio_ext.h</literal> (GNU):  <xref linkend="glibc-Controlling-Buffering"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>void <command>flockfile</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (POSIX):  <xref linkend="glibc-Streams-and-Threads"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>double <command>floor</command> (double <varname>x</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Rounding-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>float <command>floorf</command> (float <varname>x</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Rounding-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>long double <command>floorl</command> (long double <varname>x</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Rounding-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FLT_DIG</command></glossterm><glossdef><para><literal>float.h</literal> (ISO):  <xref linkend="glibc-Floating-Point-Parameters"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FLT_EPSILON</command></glossterm><glossdef><para><literal>float.h</literal> (ISO):  <xref linkend="glibc-Floating-Point-Parameters"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FLT_MANT_DIG</command></glossterm><glossdef><para><literal>float.h</literal> (ISO):  <xref linkend="glibc-Floating-Point-Parameters"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FLT_MAX</command></glossterm><glossdef><para><literal>float.h</literal> (ISO):  <xref linkend="glibc-Floating-Point-Parameters"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FLT_MAX_10_EXP</command></glossterm><glossdef><para><literal>float.h</literal> (ISO):  <xref linkend="glibc-Floating-Point-Parameters"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FLT_MAX_EXP</command></glossterm><glossdef><para><literal>float.h</literal> (ISO):  <xref linkend="glibc-Floating-Point-Parameters"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FLT_MIN</command></glossterm><glossdef><para><literal>float.h</literal> (ISO):  <xref linkend="glibc-Floating-Point-Parameters"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FLT_MIN_10_EXP</command></glossterm><glossdef><para><literal>float.h</literal> (ISO):  <xref linkend="glibc-Floating-Point-Parameters"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FLT_MIN_EXP</command></glossterm><glossdef><para><literal>float.h</literal> (ISO):  <xref linkend="glibc-Floating-Point-Parameters"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FLT_RADIX</command></glossterm><glossdef><para><literal>float.h</literal> (ISO):  <xref linkend="glibc-Floating-Point-Parameters"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FLT_ROUNDS</command></glossterm><glossdef><para><literal>float.h</literal> (ISO):  <xref linkend="glibc-Floating-Point-Parameters"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>void <command>_flushlbf</command> (void)</literal></glossterm><glossdef><para><literal>stdio_ext.h</literal> (GNU):  <xref linkend="glibc-Flushing-Buffers"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>tcflag_t <command>FLUSHO</command></literal></glossterm><glossdef><para><literal>termios.h</literal> (BSD):  <xref linkend="glibc-Local-Modes"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>double <command>fma</command> (double <varname>x</varname>, double <varname>y</varname>, double <varname>z</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Misc-FP-Arithmetic"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>float <command>fmaf</command> (float <varname>x</varname>, float <varname>y</varname>, float <varname>z</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Misc-FP-Arithmetic"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>long double <command>fmal</command> (long double <varname>x</varname>, long double <varname>y</varname>, long double <varname>z</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Misc-FP-Arithmetic"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>double <command>fmax</command> (double <varname>x</varname>, double <varname>y</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Misc-FP-Arithmetic"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>float <command>fmaxf</command> (float <varname>x</varname>, float <varname>y</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Misc-FP-Arithmetic"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>long double <command>fmaxl</command> (long double <varname>x</varname>, long double <varname>y</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Misc-FP-Arithmetic"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>FILE * <command>fmemopen</command> (void *<varname>buf</varname>, size_t <varname>size</varname>, const char *<varname>opentype</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (GNU):  <xref linkend="glibc-String-Streams"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>double <command>fmin</command> (double <varname>x</varname>, double <varname>y</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Misc-FP-Arithmetic"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>float <command>fminf</command> (float <varname>x</varname>, float <varname>y</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Misc-FP-Arithmetic"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>long double <command>fminl</command> (long double <varname>x</varname>, long double <varname>y</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Misc-FP-Arithmetic"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>double <command>fmod</command> (double <varname>numerator</varname>, double <varname>denominator</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Remainder-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>float <command>fmodf</command> (float <varname>numerator</varname>, float <varname>denominator</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Remainder-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>long double <command>fmodl</command> (long double <varname>numerator</varname>, long double <varname>denominator</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Remainder-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fmtmsg</command> (long int <varname>classification</varname>, const char *<varname>label</varname>, int <varname>severity</varname>, const char *<varname>text</varname>, const char *<varname>action</varname>, const char *<varname>tag</varname>)</literal></glossterm><glossdef><para><literal>fmtmsg.h</literal> (XPG):  <xref linkend="glibc-Printing-Formatted-Messages"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fnmatch</command> (const char *<varname>pattern</varname>, const char *<varname>string</varname>, int <varname>flags</varname>)</literal></glossterm><glossdef><para><literal>fnmatch.h</literal> (POSIX.2):  <xref linkend="glibc-Wildcard-Matching"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FNM_CASEFOLD</command></glossterm><glossdef><para><literal>fnmatch.h</literal> (GNU):  <xref linkend="glibc-Wildcard-Matching"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FNM_EXTMATCH</command></glossterm><glossdef><para><literal>fnmatch.h</literal> (GNU):  <xref linkend="glibc-Wildcard-Matching"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FNM_FILE_NAME</command></glossterm><glossdef><para><literal>fnmatch.h</literal> (GNU):  <xref linkend="glibc-Wildcard-Matching"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FNM_LEADING_DIR</command></glossterm><glossdef><para><literal>fnmatch.h</literal> (GNU):  <xref linkend="glibc-Wildcard-Matching"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FNM_NOESCAPE</command></glossterm><glossdef><para><literal>fnmatch.h</literal> (POSIX.2):  <xref linkend="glibc-Wildcard-Matching"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FNM_PATHNAME</command></glossterm><glossdef><para><literal>fnmatch.h</literal> (POSIX.2):  <xref linkend="glibc-Wildcard-Matching"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FNM_PERIOD</command></glossterm><glossdef><para><literal>fnmatch.h</literal> (POSIX.2):  <xref linkend="glibc-Wildcard-Matching"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>F_OK</command></literal></glossterm><glossdef><para><literal>unistd.h</literal> (POSIX.1):  <xref linkend="glibc-Testing-File-Access"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>FILE * <command>fopen</command> (const char *<varname>filename</varname>, const char *<varname>opentype</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-Opening-Streams"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>FILE * <command>fopen64</command> (const char *<varname>filename</varname>, const char *<varname>opentype</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (Unix98):  <xref linkend="glibc-Opening-Streams"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>FILE * <command>fopencookie</command> (void *<varname>cookie</varname>, const char *<varname>opentype</varname>, cookie_io_functions_t <varname>io-functions</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (GNU):  <xref linkend="glibc-Streams-and-Cookies"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>FOPEN_MAX</command></literal></glossterm><glossdef><para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-Opening-Streams"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>pid_t <command>fork</command> (void)</literal></glossterm><glossdef><para><literal>unistd.h</literal> (POSIX.1):  <xref linkend="glibc-Creating-a-Process"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>forkpty</command> (int *<varname>amaster</varname>, char *<varname>name</varname>, struct termios *<varname>termp</varname>, struct winsize *<varname>winp</varname>)</literal></glossterm><glossdef><para><literal>pty.h</literal> (BSD):  <xref linkend="glibc-Pseudo-Terminal-Pairs"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>long int <command>fpathconf</command> (int <varname>filedes</varname>, int <varname>parameter</varname>)</literal></glossterm><glossdef><para><literal>unistd.h</literal> (POSIX.1):  <xref linkend="glibc-Pathconf"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fpclassify</command> (
      <replaceable>float-type</replaceable><varname>x</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Floating-Point-Classes"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FPE_DECOVF_TRAP</command></glossterm><glossdef><para><literal>signal.h</literal> (BSD):  <xref linkend="glibc-Program-Error-Signals"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FPE_FLTDIV_FAULT</command></glossterm><glossdef><para><literal>signal.h</literal> (BSD):  <xref linkend="glibc-Program-Error-Signals"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FPE_FLTDIV_TRAP</command></glossterm><glossdef><para><literal>signal.h</literal> (BSD):  <xref linkend="glibc-Program-Error-Signals"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FPE_FLTOVF_FAULT</command></glossterm><glossdef><para><literal>signal.h</literal> (BSD):  <xref linkend="glibc-Program-Error-Signals"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FPE_FLTOVF_TRAP</command></glossterm><glossdef><para><literal>signal.h</literal> (BSD):  <xref linkend="glibc-Program-Error-Signals"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FPE_FLTUND_FAULT</command></glossterm><glossdef><para><literal>signal.h</literal> (BSD):  <xref linkend="glibc-Program-Error-Signals"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FPE_FLTUND_TRAP</command></glossterm><glossdef><para><literal>signal.h</literal> (BSD):  <xref linkend="glibc-Program-Error-Signals"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FPE_INTDIV_TRAP</command></glossterm><glossdef><para><literal>signal.h</literal> (BSD):  <xref linkend="glibc-Program-Error-Signals"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FPE_INTOVF_TRAP</command></glossterm><glossdef><para><literal>signal.h</literal> (BSD):  <xref linkend="glibc-Program-Error-Signals"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>size_t <command>__fpending</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio_ext.h</literal> (GNU):  <xref linkend="glibc-Controlling-Buffering"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>FPE_SUBRNG_TRAP</command></glossterm><glossdef><para><literal>signal.h</literal> (BSD):  <xref linkend="glibc-Program-Error-Signals"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>FP_ILOGB0</command></literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Exponents-and-Logarithms"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>FP_ILOGBNAN</command></literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Exponents-and-Logarithms"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>fpos64_t</command></glossterm><glossdef><para><literal>stdio.h</literal> (Unix98):  <xref linkend="glibc-Portable-Positioning"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>fpos_t</command></glossterm><glossdef><para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-Portable-Positioning"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fprintf</command> (FILE *<varname>stream</varname>, const char *<varname>template</varname>, â€¦)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-Formatted-Output-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>void <command>__fpurge</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio_ext.h</literal> (GNU):  <xref linkend="glibc-Flushing-Buffers"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fputc</command> (int <varname>c</varname>, FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-Simple-Output"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fputc_unlocked</command> (int <varname>c</varname>, FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (POSIX):  <xref linkend="glibc-Simple-Output"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fputs</command> (const char *<varname>s</varname>, FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-Simple-Output"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fputs_unlocked</command> (const char *<varname>s</varname>, FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (GNU):  <xref linkend="glibc-Simple-Output"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>wint_t <command>fputwc</command> (wchar_t <varname>wc</varname>, FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>wchar.h</literal> (ISO):  <xref linkend="glibc-Simple-Output"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>wint_t <command>fputwc_unlocked</command> (wint_t <varname>wc</varname>, FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>wchar.h</literal> (POSIX):  <xref linkend="glibc-Simple-Output"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fputws</command> (const wchar_t *<varname>ws</varname>, FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>wchar.h</literal> (ISO):  <xref linkend="glibc-Simple-Output"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fputws_unlocked</command> (const wchar_t *<varname>ws</varname>, FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>wchar.h</literal> (GNU):  <xref linkend="glibc-Simple-Output"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>F_RDLCK</command></glossterm><glossdef><para><literal>fcntl.h</literal> (POSIX.1):  <xref linkend="glibc-File-Locks"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>size_t <command>fread</command> (void *<varname>data</varname>, size_t <varname>size</varname>, size_t <varname>count</varname>, FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-Block-Input-Output"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>__freadable</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio_ext.h</literal> (GNU):  <xref linkend="glibc-Opening-Streams"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>__freading</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio_ext.h</literal> (GNU):  <xref linkend="glibc-Opening-Streams"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>size_t <command>fread_unlocked</command> (void *<varname>data</varname>, size_t <varname>size</varname>, size_t <varname>count</varname>, FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (GNU):  <xref linkend="glibc-Block-Input-Output"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>void <command>free</command> (void *<varname>ptr</varname>)</literal></glossterm><glossdef><para><literal>malloc.h</literal>, <literal>stdlib.h</literal> (ISO):  <xref linkend="glibc-Freeing-after-Malloc"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>__free_hook</command></glossterm><glossdef><para><literal>malloc.h</literal> (GNU):  <xref linkend="glibc-Hooks-for-Malloc"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>FILE * <command>freopen</command> (const char *<varname>filename</varname>, const char *<varname>opentype</varname>, FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-Opening-Streams"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>FILE * <command>freopen64</command> (const char *<varname>filename</varname>, const char *<varname>opentype</varname>, FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (Unix98):  <xref linkend="glibc-Opening-Streams"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>double <command>frexp</command> (double <varname>value</varname>, int *<varname>exponent</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Normalization-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>float <command>frexpf</command> (float <varname>value</varname>, int *<varname>exponent</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Normalization-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>long double <command>frexpl</command> (long double <varname>value</varname>, int *<varname>exponent</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Normalization-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fscanf</command> (FILE *<varname>stream</varname>, const char *<varname>template</varname>, â€¦)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-Formatted-Input-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fseek</command> (FILE *<varname>stream</varname>, long int <varname>offset</varname>, int <varname>whence</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-File-Positioning"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fseeko</command> (FILE *<varname>stream</varname>, off_t <varname>offset</varname>, int <varname>whence</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (Unix98):  <xref linkend="glibc-File-Positioning"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fseeko64</command> (FILE *<varname>stream</varname>, off64_t <varname>offset</varname>, int <varname>whence</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (Unix98):  <xref linkend="glibc-File-Positioning"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>F_SETFD</command></literal></glossterm><glossdef><para><literal>fcntl.h</literal> (POSIX.1):  <xref linkend="glibc-Descriptor-Flags"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>F_SETFL</command></literal></glossterm><glossdef><para><literal>fcntl.h</literal> (POSIX.1):  <xref linkend="glibc-Getting-File-Status-Flags"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>F_SETLK</command></literal></glossterm><glossdef><para><literal>fcntl.h</literal> (POSIX.1):  <xref linkend="glibc-File-Locks"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>F_SETLKW</command></literal></glossterm><glossdef><para><literal>fcntl.h</literal> (POSIX.1):  <xref linkend="glibc-File-Locks"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>__fsetlocking</command> (FILE *<varname>stream</varname>, int <varname>type</varname>)</literal></glossterm><glossdef><para><literal>stdio_ext.h</literal> (GNU):  <xref linkend="glibc-Streams-and-Threads"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>F_SETOWN</command></literal></glossterm><glossdef><para><literal>fcntl.h</literal> (BSD):  <xref linkend="glibc-Interrupt-Input"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fsetpos</command> (FILE *<varname>stream</varname>, const fpos_t *<varname>position</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-Portable-Positioning"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fsetpos64</command> (FILE *<varname>stream</varname>, const fpos64_t *<varname>position</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (Unix98):  <xref linkend="glibc-Portable-Positioning"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fstat</command> (int <varname>filedes</varname>, struct stat *<varname>buf</varname>)</literal></glossterm><glossdef><para><literal>sys/stat.h</literal> (POSIX.1):  <xref linkend="glibc-Reading-Attributes"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fstat64</command> (int <varname>filedes</varname>, struct stat64 *<varname>buf</varname>)</literal></glossterm><glossdef><para><literal>sys/stat.h</literal> (Unix98):  <xref linkend="glibc-Reading-Attributes"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fsync</command> (int <varname>fildes</varname>)</literal></glossterm><glossdef><para><literal>unistd.h</literal> (POSIX):  <xref linkend="glibc-Synchronizing-I-O"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>long int <command>ftell</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-File-Positioning"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>off_t <command>ftello</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (Unix98):  <xref linkend="glibc-File-Positioning"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>off64_t <command>ftello64</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (Unix98):  <xref linkend="glibc-File-Positioning"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>ftruncate</command> (int <varname>fd</varname>, off_t <varname>length</varname>)</literal></glossterm><glossdef><para><literal>unistd.h</literal> (POSIX):  <xref linkend="glibc-File-Size"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>ftruncate64</command> (int <varname>id</varname>, off64_t <varname>length</varname>)</literal></glossterm><glossdef><para><literal>unistd.h</literal> (Unix98):  <xref linkend="glibc-File-Size"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>ftrylockfile</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (POSIX):  <xref linkend="glibc-Streams-and-Threads"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>ftw</command> (const char *<varname>filename</varname>, __ftw_func_t <varname>func</varname>, int <varname>descriptors</varname>)</literal></glossterm><glossdef><para><literal>ftw.h</literal> (SVID):  <xref linkend="glibc-Working-with-Directory-Trees"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>ftw64</command> (const char *<varname>filename</varname>, __ftw64_func_t <varname>func</varname>, int <varname>descriptors</varname>)</literal></glossterm><glossdef><para><literal>ftw.h</literal> (Unix98):  <xref linkend="glibc-Working-with-Directory-Trees"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>__ftw64_func_t</command></glossterm><glossdef><para><literal>ftw.h</literal> (GNU):  <xref linkend="glibc-Working-with-Directory-Trees"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>__ftw_func_t</command>></glossterm><glossdef><para><literal>ftw.h</literal> (GNU):  <xref linkend="glibc-Working-with-Directory-Trees"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>F_UNLCK</command></glossterm><glossdef><para><literal>fcntl.h</literal> (POSIX.1):  <xref linkend="glibc-File-Locks"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>void <command>funlockfile</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (POSIX):  <xref linkend="glibc-Streams-and-Threads"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>futimes</command> (int <varname>fd</varname>, struct timeval <varname>tvp</varname>[2])</literal></glossterm><glossdef><para><literal>sys/time.h</literal> (BSD):  <xref linkend="glibc-File-Times"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fwide</command> (FILE *<varname>stream</varname>, int <varname>mode</varname>)</literal></glossterm><glossdef><para><literal>wchar.h</literal> (ISO):  <xref linkend="glibc-Streams-and-I18N"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fwprintf</command> (FILE *<varname>stream</varname>, const wchar_t *<varname>template</varname>, â€¦)</literal></glossterm><glossdef><para><literal>wchar.h</literal> (ISO):  <xref linkend="glibc-Formatted-Output-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>__fwritable</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio_ext.h</literal> (GNU):  <xref linkend="glibc-Opening-Streams"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>size_t <command>fwrite</command> (const void *<varname>data</varname>, size_t <varname>size</varname>, size_t <varname>count</varname>, FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-Block-Input-Output"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>size_t <command>fwrite_unlocked</command> (const void *<varname>data</varname>, size_t <varname>size</varname>, size_t <varname>count</varname>, FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (GNU):  <xref linkend="glibc-Block-Input-Output"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>__fwriting</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio_ext.h</literal> (GNU):  <xref linkend="glibc-Opening-Streams"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>F_WRLCK</command></glossterm><glossdef><para><literal>fcntl.h</literal> (POSIX.1):  <xref linkend="glibc-File-Locks"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>fwscanf</command> (FILE *<varname>stream</varname>, const wchar_t *<varname>template</varname>, â€¦)</literal></glossterm><glossdef><para><literal>wchar.h</literal> (ISO):  <xref linkend="glibc-Formatted-Input-Functions"/>.
     </para></glossdef></glossentry></glosslist>
  </para>
</sect1>
