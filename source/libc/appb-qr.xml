<?xml version="1.0" encoding="UTF-8"?>

<!-- ********************************************************************
     $Id: appb-qr.xml,v 1.2 2002/12/20 22:29:48 nilgun Exp $
******************************************************************** -->
<sect1 id="glibc-Library-Summary-Q"><title>Q</title>
  <para><glosslist><glossentry><glossterm><literal>char * <command>qecvt</command> (long double <varname>value</varname>, int <varname>ndigit</varname>, int *<varname>decpt</varname>, int *<varname>neg</varname>)</literal></glossterm><glossdef><para><literal>stdlib.h</literal> (GNU):  <xref linkend="glibc-System-V-Number-Conversion"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>qecvt_r</command> (long double <varname>value</varname>, int <varname>ndigit</varname>, int *<varname>decpt</varname>, int *<varname>neg</varname>, char *<varname>buf</varname>, size_t <varname>len</varname>)</literal></glossterm><glossdef><para><literal>stdlib.h</literal> (GNU):  <xref linkend="glibc-System-V-Number-Conversion"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>char * <command>qfcvt</command> (long double <varname>value</varname>, int <varname>ndigit</varname>, int *<varname>decpt</varname>, int *<varname>neg</varname>)</literal></glossterm><glossdef><para><literal>stdlib.h</literal> (GNU):  <xref linkend="glibc-System-V-Number-Conversion"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>qfcvt_r</command> (long double <varname>value</varname>, int <varname>ndigit</varname>, int *<varname>decpt</varname>, int *<varname>neg</varname>, char *<varname>buf</varname>, size_t <varname>len</varname>)</literal></glossterm><glossdef><para><literal>stdlib.h</literal> (GNU):  <xref linkend="glibc-System-V-Number-Conversion"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>char * <command>qgcvt</command> (long double <varname>value</varname>, int <varname>ndigit</varname>, char *<varname>buf</varname>)</literal></glossterm><glossdef><para><literal>stdlib.h</literal> (GNU):  <xref linkend="glibc-System-V-Number-Conversion"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>void <command>qsort</command> (void *<varname>array</varname>, size_t <varname>count</varname>, size_t <varname>size</varname>, comparison_fn_t <varname>compare</varname>)</literal></glossterm><glossdef><para><literal>stdlib.h</literal> (ISO):  <xref linkend="glibc-Array-Sort-Function"/>.
     </para></glossdef></glossentry></glosslist>
  </para>
</sect1>

<sect1 id="glibc-Library-Summary-R"><title>R</title>
  <para><glosslist><glossentry><glossterm><literal>int <command>raise</command> (int <varname>signum</varname>)</literal></glossterm><glossdef><para><literal>signal.h</literal> (ISO):  <xref linkend="glibc-Signaling-Yourself"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>rand</command> (void)</literal></glossterm><glossdef><para><literal>stdlib.h</literal> (ISO):  <xref linkend="glibc-ISO-Random"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>RAND_MAX</command></literal></glossterm><glossdef><para><literal>stdlib.h</literal> (ISO):  <xref linkend="glibc-ISO-Random"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>long int <command>random</command> (void)</literal></glossterm><glossdef><para><literal>stdlib.h</literal> (BSD):  <xref linkend="glibc-BSD-Random"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>random_r</command> (struct random_data *restrict <varname>buf</varname>, int32_t *restrict <varname>result</varname>)</literal></glossterm><glossdef><para><literal>stdlib.h</literal> (GNU):  <xref linkend="glibc-BSD-Random"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>rand_r</command> (unsigned int *<varname>seed</varname>)</literal></glossterm><glossdef><para><literal>stdlib.h</literal> (POSIX.1):  <xref linkend="glibc-ISO-Random"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>void * <command>rawmemchr</command> (const void *<varname>block</varname>, int <varname>c</varname>)</literal></glossterm><glossdef><para><literal>string.h</literal> (GNU):  <xref linkend="glibc-Search-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>ssize_t <command>read</command> (int <varname>filedes</varname>, void *<varname>buffer</varname>, size_t <varname>size</varname>)</literal></glossterm><glossdef><para><literal>unistd.h</literal> (POSIX.1):  <xref linkend="glibc-I-O-Primitives"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>struct dirent * <command>readdir</command> (DIR *<varname>dirstream</varname>)</literal></glossterm><glossdef><para><literal>dirent.h</literal> (POSIX.1):  <xref linkend="glibc-Reading-Closing-Directory"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>struct dirent64 * <command>readdir64</command> (DIR *<varname>dirstream</varname>)</literal></glossterm><glossdef><para><literal>dirent.h</literal> (LFS):  <xref linkend="glibc-Reading-Closing-Directory"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>readdir64_r</command> (DIR *<varname>dirstream</varname>, struct dirent64 *<varname>entry</varname>, struct dirent64 **<varname>result</varname>)</literal></glossterm><glossdef><para><literal>dirent.h</literal> (LFS):  <xref linkend="glibc-Reading-Closing-Directory"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>readdir_r</command> (DIR *<varname>dirstream</varname>, struct dirent *<varname>entry</varname>, struct dirent **<varname>result</varname>)</literal></glossterm><glossdef><para><literal>dirent.h</literal> (GNU):  <xref linkend="glibc-Reading-Closing-Directory"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>readlink</command> (const char *<varname>filename</varname>, char *<varname>buffer</varname>, size_t <varname>size</varname>)</literal></glossterm><glossdef><para><literal>unistd.h</literal> (BSD):  <xref linkend="glibc-Symbolic-Links"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>ssize_t <command>readv</command> (int <varname>filedes</varname>, const struct iovec *<varname>vector</varname>, int <varname>count</varname>)</literal></glossterm><glossdef><para><literal>sys/uio.h</literal> (BSD):  <xref linkend="glibc-Scatter-Gather"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>void * <command>realloc</command> (void *<varname>ptr</varname>, size_t <varname>newsize</varname>)</literal></glossterm><glossdef><para><literal>malloc.h</literal>, <literal>stdlib.h</literal> (ISO):  <xref linkend="glibc-Changing-Block-Size"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>__realloc_hook</command></glossterm><glossdef><para><literal>malloc.h</literal> (GNU):  <xref linkend="glibc-Hooks-for-Malloc"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>char * <command>realpath</command> (const char *restrict <varname>name</varname>, char *restrict <varname>resolved</varname>)</literal></glossterm><glossdef><para><literal>stdlib.h</literal> (XPG):  <xref linkend="glibc-Symbolic-Links"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>recv</command> (int <varname>socket</varname>, void *<varname>buffer</varname>, size_t <varname>size</varname>, int <varname>flags</varname>)</literal></glossterm><glossdef><para><literal>sys/socket.h</literal> (BSD):  <xref linkend="glibc-Receiving-Data"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>recvfrom</command> (int <varname>socket</varname>, void *<varname>buffer</varname>, size_t <varname>size</varname>, int <varname>flags</varname>, struct sockaddr *<varname>addr</varname>, socklen_t *<varname>length-ptr</varname>)</literal></glossterm><glossdef><para><literal>sys/socket.h</literal> (BSD):  <xref linkend="glibc-Receiving-Datagrams"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>recvmsg</command> (int <varname>socket</varname>, struct msghdr *<varname>message</varname>, int <varname>flags</varname>)</literal></glossterm><glossdef><para><literal>sys/socket.h</literal> (BSD):  <xref linkend="glibc-Receiving-Datagrams"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>RE_DUP_MAX</command></literal></glossterm><glossdef><para><literal>limits.h</literal> (POSIX.2):  <xref linkend="glibc-General-Limits"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>_REENTRANT</command></glossterm><glossdef><para>(GNU):  <xref linkend="glibc-Feature-Test-Macros"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>REG_BADBR</command></glossterm><glossdef><para><literal>regex.h</literal> (POSIX.2):  <xref linkend="glibc-POSIX-Regexp-Compilation"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>REG_BADPAT</command></glossterm><glossdef><para><literal>regex.h</literal> (POSIX.2):  <xref linkend="glibc-POSIX-Regexp-Compilation"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>REG_BADRPT</command></glossterm><glossdef><para><literal>regex.h</literal> (POSIX.2):  <xref linkend="glibc-POSIX-Regexp-Compilation"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>regcomp</command> (regex_t *restrict <varname>compiled</varname>, const char *restrict <varname>pattern</varname>, int <varname>cflags</varname>)</literal></glossterm><glossdef><para><literal>regex.h</literal> (POSIX.2):  <xref linkend="glibc-POSIX-Regexp-Compilation"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>REG_EBRACE</command></glossterm><glossdef><para><literal>regex.h</literal> (POSIX.2):  <xref linkend="glibc-POSIX-Regexp-Compilation"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>REG_EBRACK</command></glossterm><glossdef><para><literal>regex.h</literal> (POSIX.2):  <xref linkend="glibc-POSIX-Regexp-Compilation"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>REG_ECOLLATE</command></glossterm><glossdef><para><literal>regex.h</literal> (POSIX.2):  <xref linkend="glibc-POSIX-Regexp-Compilation"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>REG_ECTYPE</command></glossterm><glossdef><para><literal>regex.h</literal> (POSIX.2):  <xref linkend="glibc-POSIX-Regexp-Compilation"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>REG_EESCAPE</command></glossterm><glossdef><para><literal>regex.h</literal> (POSIX.2):  <xref linkend="glibc-POSIX-Regexp-Compilation"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>REG_EPAREN</command></glossterm><glossdef><para><literal>regex.h</literal> (POSIX.2):  <xref linkend="glibc-POSIX-Regexp-Compilation"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>REG_ERANGE</command></glossterm><glossdef><para><literal>regex.h</literal> (POSIX.2):  <xref linkend="glibc-POSIX-Regexp-Compilation"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>size_t <command>regerror</command> (int <varname>errcode</varname>, const regex_t *restrict <varname>compiled</varname>, char *restrict <varname>buffer</varname>, size_t <varname>length</varname>)</literal></glossterm><glossdef><para><literal>regex.h</literal> (POSIX.2):  <xref linkend="glibc-Regexp-Cleanup"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>REG_ESPACE</command></glossterm><glossdef><para><literal>regex.h</literal> (POSIX.2):  <xref linkend="glibc-Matching-POSIX-Regexps"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>REG_ESPACE</command></glossterm><glossdef><para><literal>regex.h</literal> (POSIX.2):  <xref linkend="glibc-POSIX-Regexp-Compilation"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>REG_ESUBREG</command></glossterm><glossdef><para><literal>regex.h</literal> (POSIX.2):  <xref linkend="glibc-POSIX-Regexp-Compilation"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>regexec</command> (const regex_t *restrict <varname>compiled</varname>, const char *restrict <varname>string</varname>, size_t <varname>nmatch</varname>, regmatch_t <varname>matchptr</varname>[restrict], int <varname>eflags</varname>)</literal></glossterm><glossdef><para><literal>regex.h</literal> (POSIX.2):  <xref linkend="glibc-Matching-POSIX-Regexps"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>regex_t</command></glossterm><glossdef><para><literal>regex.h</literal> (POSIX.2):  <xref linkend="glibc-POSIX-Regexp-Compilation"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>REG_EXTENDED</command></glossterm><glossdef><para><literal>regex.h</literal> (POSIX.2):  <xref linkend="glibc-Flags-for-POSIX-Regexps"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>void <command>regfree</command> (regex_t *<varname>compiled</varname>)</literal></glossterm><glossdef><para><literal>regex.h</literal> (POSIX.2):  <xref linkend="glibc-Regexp-Cleanup"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>REG_ICASE</command></glossterm><glossdef><para><literal>regex.h</literal> (POSIX.2):  <xref linkend="glibc-Flags-for-POSIX-Regexps"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>register_printf_function</command> (int <varname>spec</varname>, printf_function <varname>handler-function</varname>, printf_arginfo_function <varname>arginfo-function</varname>)</literal></glossterm><glossdef><para><literal>printf.h</literal> (GNU):  <xref linkend="glibc-Registering-New-Conversions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>regmatch_t</command></glossterm><glossdef><para><literal>regex.h</literal> (POSIX.2):  <xref linkend="glibc-Regexp-Subexpressions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>REG_NEWLINE</command></glossterm><glossdef><para><literal>regex.h</literal> (POSIX.2):  <xref linkend="glibc-Flags-for-POSIX-Regexps"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>REG_NOMATCH</command></glossterm><glossdef><para><literal>regex.h</literal> (POSIX.2):  <xref linkend="glibc-Matching-POSIX-Regexps"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>REG_NOSUB</command></glossterm><glossdef><para><literal>regex.h</literal> (POSIX.2):  <xref linkend="glibc-Flags-for-POSIX-Regexps"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>REG_NOTBOL</command></glossterm><glossdef><para><literal>regex.h</literal> (POSIX.2):  <xref linkend="glibc-Matching-POSIX-Regexps"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>REG_NOTEOL</command></glossterm><glossdef><para><literal>regex.h</literal> (POSIX.2):  <xref linkend="glibc-Matching-POSIX-Regexps"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>regoff_t</command></glossterm><glossdef><para><literal>regex.h</literal> (POSIX.2):  <xref linkend="glibc-Regexp-Subexpressions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>double <command>remainder</command> (double <varname>numerator</varname>, double <varname>denominator</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (BSD):  <xref linkend="glibc-Remainder-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>float <command>remainderf</command> (float <varname>numerator</varname>, float <varname>denominator</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (BSD):  <xref linkend="glibc-Remainder-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>long double <command>remainderl</command> (long double <varname>numerator</varname>, long double <varname>denominator</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (BSD):  <xref linkend="glibc-Remainder-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>remove</command> (const char *<varname>filename</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-Deleting-Files"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>rename</command> (const char *<varname>oldname</varname>, const char *<varname>newname</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-Renaming-Files"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>void <command>rewind</command> (FILE *<varname>stream</varname>)</literal></glossterm><glossdef><para><literal>stdio.h</literal> (ISO):  <xref linkend="glibc-File-Positioning"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>void <command>rewinddir</command> (DIR *<varname>dirstream</varname>)</literal></glossterm><glossdef><para><literal>dirent.h</literal> (POSIX.1):  <xref linkend="glibc-Random-Access-Directory"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>char * <command>rindex</command> (const char *<varname>string</varname>, int <varname>c</varname>)</literal></glossterm><glossdef><para><literal>string.h</literal> (BSD):  <xref linkend="glibc-Search-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>double <command>rint</command> (double <varname>x</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Rounding-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>float <command>rintf</command> (float <varname>x</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Rounding-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>long double <command>rintl</command> (long double <varname>x</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Rounding-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>RLIM_INFINITY</command></literal></glossterm><glossdef><para><literal>sys/resource.h</literal> (BSD):  <xref linkend="glibc-Limits-on-Resources"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>RLIMIT_AS</command></glossterm><glossdef><para><literal>sys/resource.h</literal> (Unix98):  <xref linkend="glibc-Limits-on-Resources"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>RLIMIT_CORE</command></glossterm><glossdef><para><literal>sys/resource.h</literal> (BSD):  <xref linkend="glibc-Limits-on-Resources"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>RLIMIT_CPU</command></glossterm><glossdef><para><literal>sys/resource.h</literal> (BSD):  <xref linkend="glibc-Limits-on-Resources"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>RLIMIT_DATA</command></glossterm><glossdef><para><literal>sys/resource.h</literal> (BSD):  <xref linkend="glibc-Limits-on-Resources"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>RLIMIT_FSIZE</command></glossterm><glossdef><para><literal>sys/resource.h</literal> (BSD):  <xref linkend="glibc-Limits-on-Resources"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>RLIMIT_MEMLOCK</command></glossterm><glossdef><para><literal>sys/resource.h</literal> (BSD):  <xref linkend="glibc-Limits-on-Resources"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>RLIMIT_NOFILE</command></glossterm><glossdef><para><literal>sys/resource.h</literal> (BSD):  <xref linkend="glibc-Limits-on-Resources"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>RLIMIT_NPROC</command></glossterm><glossdef><para><literal>sys/resource.h</literal> (BSD):  <xref linkend="glibc-Limits-on-Resources"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>RLIMIT_RSS</command></glossterm><glossdef><para><literal>sys/resource.h</literal> (BSD):  <xref linkend="glibc-Limits-on-Resources"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>RLIMIT_STACK</command></glossterm><glossdef><para><literal>sys/resource.h</literal> (BSD):  <xref linkend="glibc-Limits-on-Resources"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>RLIM_NLIMITS</command></glossterm><glossdef><para><literal>sys/resource.h</literal> (BSD):  <xref linkend="glibc-Limits-on-Resources"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>rmdir</command> (const char *<varname>filename</varname>)</literal></glossterm><glossdef><para><literal>unistd.h</literal> (POSIX.1):  <xref linkend="glibc-Deleting-Files"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>R_OK</command></literal></glossterm><glossdef><para><literal>unistd.h</literal> (POSIX.1):  <xref linkend="glibc-Testing-File-Access"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>double <command>round</command> (double <varname>x</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Rounding-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>float <command>roundf</command> (float <varname>x</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Rounding-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>long double <command>roundl</command> (long double <varname>x</varname>)</literal></glossterm><glossdef><para><literal>math.h</literal> (ISO):  <xref linkend="glibc-Rounding-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><literal>int <command>rpmatch</command> (const char *<varname>response</varname>)</literal></glossterm><glossdef><para><literal>stdlib.h</literal> (stdlib.h):  <xref linkend="glibc-Yes-or-No-Questions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>RUN_LVL</command></glossterm><glossdef><para><literal>utmp.h</literal> (SVID):  <xref linkend="glibc-Manipulating-the-Database"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>RUN_LVL</command></glossterm><glossdef><para><literal>utmpx.h</literal> (XPG4.2):  <xref linkend="glibc-XPG-Functions"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>RUSAGE_CHILDREN</command></glossterm><glossdef><para><literal>sys/resource.h</literal> (BSD):  <xref linkend="glibc-Resource-Usage"/>.
     </para></glossdef></glossentry><glossentry><glossterm><command>RUSAGE_SELF</command></glossterm><glossdef><para><literal>sys/resource.h</literal> (BSD):  <xref linkend="glibc-Resource-Usage"/>.
     </para></glossdef></glossentry></glosslist>
  </para>
</sect1>
