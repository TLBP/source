<?xml version="1.0" encoding="UTF-8"?>
<!--DOCTYPE article SYSTEM "../../docbook/dtd/docbookx.dtd"-->
<!-- ********************************************************************
     $Id: php-java.xml,v 1.4 2002/09/30 18:21:13 nilgun Exp $
     ******************************************************************** -->
<article xml:id="php-java" lang="tr">
  <info>
    <title>PHP4'e Java Modül Desteği NASIL</title>
    <authorgroup><author>
      <personname><firstname>Nilgün Belma</firstname>
       <surname>Bugüner</surname></personname>
     </author><author>
      <personname><firstname>Tolga</firstname>
       <surname>Korkunçkaya</surname></personname>
     </author></authorgroup>
     <pubdate>Nisan 2005</pubdate>
     <pubdate> </pubdate>
     <revhistory>
       <revision>
          <revnumber>1.1</revnumber>
          <date>Nisan 2005</date>
          <authorinitials>NBB</authorinitials>
          <revremark>Fedora Core 3 üzerinde kaynak paketten kurulumumun nasıl yapılacağı eklendi.</revremark>
       </revision><revision>
          <revnumber>1.0</revnumber>
          <date>Nisan 2005</date>
          <authorinitials>TK</authorinitials>
          <revremark>İlk sürüm (Debian kurulumu)</revremark>
       </revision>
    </revhistory>
    <abstract>
      <para>
PHP'ye belli bir uygulamanın desteğini vermek için, o uygulama için bir modül paketi varsa o paketi derleriz, yoksa PHP'nin bu uygulamaya desteğini sağlamak için PHP'yi yeniden derleriz. Bu belgede aslında, Java özelinde ikinci tür modül desteğinin nasıl verildiği anlatılmaktadır.
      </para>
    </abstract>
    <legalnotice><title>Yasal Açıklamalar</title>
      <para>
Bu belgenin, <emphasis>PHP4'e Java Modül Degteği NASIL</emphasis> 1.0 sürümünün <emphasis role="bold"> telif hakkı © 2005 <emphasis>Tolga Korkunçkaya</emphasis></emphasis> ve <emphasis role="bold"><emphasis>Nilgün Belma Bugüner</emphasis></emphasis>'e aittir. Bu belgeyi, Free Software Foundation tarafından yayınlanmış bulunan GNU Özgür Belgeleme Lisansının 1.1 ya da daha sonraki sürümünün koşullarına bağlı kalarak kopyalayabilir, dağıtabilir ve/veya değiştirebilirsiniz. Bu Lisansın bir kopyasını <link xlink:href="fdl.html">GNU Free Documentation License</link> başlıklı bölümde bulabilirsiniz.
    </para><para>
BU BELGE "ÜCRETSİZ" OLARAK RUHSATLANDIĞI İÇİN, İÇERDİĞİ BİLGİLER İÇİN İLGİLİ KANUNLARIN İZİN VERDİĞİ ÖLÇÜDE HERHANGİ BİR GARANTİ VERİLMEMEKTEDİR. AKSİ YAZILI OLARAK BELİRTİLMEDİĞİ MÜDDETÇE TELİF HAKKI SAHİPLERİ VE/VEYA BAŞKA ŞAHISLAR BELGEYİ "OLDUĞU GİBİ", AŞİKAR VEYA ZIMNEN, SATILABİLİRLİĞİ VEYA HERHANGİ BİR AMACA UYGUNLUĞU DA DAHİL OLMAK ÜZERE HİÇBİR GARANTİ VERMEKSİZİN DAĞITMAKTADIRLAR. BİLGİNİN KALİTESİ İLE İLGİLİ TÜM SORUNLAR SİZE AİTTİR. HERHANGİ BİR HATALI BİLGİDEN DOLAYI DOĞABİLECEK OLAN BÜTÜN SERVİS, TAMİR VEYA DÜZELTME MASRAFLARI SİZE AİTTİR.
    </para><para>
İLGİLİ KANUNUN İCBAR ETTİĞİ DURUMLAR VEYA YAZILI ANLAŞMA HARİCİNDE HERHANGİ BİR ŞEKİLDE TELİF HAKKI SAHİBİ VEYA YUKARIDA İZİN VERİLDİĞİ ŞEKİLDE BELGEYİ DEĞİŞTİREN VEYA YENİDEN DAĞITAN HERHANGİ BİR KİŞİ, BİLGİNİN KULLANIMI VEYA KULLANILAMAMASI (VEYA VERİ KAYBI OLUŞMASI, VERİNİN YANLIŞ HALE GELMESİ, SİZİN VEYA ÜÇÜNCÜ ŞAHISLARIN ZARARA UĞRAMASI VEYA BİLGİLERİN BAŞKA BİLGİLERLE UYUMSUZ OLMASI) YÜZÜNDEN OLUŞAN GENEL, ÖZEL, DOĞRUDAN YA DA DOLAYLI HERHANGİ BİR ZARARDAN, BÖYLE BİR TAZMİNAT TALEBİ TELİF HAKKI SAHİBİ VEYA İLGİLİ KİŞİYE BİLDİRİLMİŞ OLSA DAHİ, SORUMLU DEĞİLDİR.
    </para><para>
Tüm telif hakları aksi özellikle belirtilmediği sürece sahibine aittir. Belge içinde geçen herhangi bir terim, bir ticari isim ya da kuruma itibar kazandırma olarak algılanmamalıdır. Bir ürün ya da markanın kullanılmış olması ona onay verildiği anlamında görülmemelidir.
      </para>
    </legalnotice>
  </info>
<para role='only.html'>Ek - <link xlink:href="fdl.html">GNU Free Documentation License</link></para>
<sect1 xml:id="php-java_giris"><title>Giriş</title><para>
<link xlink:href="http://www.php.net/">PHP</link> her şeyden önce HTML içine gömülü sunucu taraflı bir betik dili olarak hayata başlamıştır ve hala birincil kullanım amacı budur.
  </para><para>
PHP, bilinen orjinal adıyla Personal Home Pages (Kişisel Ev Sayfaları), ilk olarak Rausmus Lerdford tarafından 1994 yazında oluşturuldu. PHP'yi kendi özgeçmişinin (CV) ziyaretçilerini takip edebilmenin bir yolu olarak yazmıştı. İlk sürümü 1995'in başlarında dağıtmaya başladı, zamanla Rausmus'un PHP'yi açık kaynak kodlu bir projeye dönüştürmesiyle insanlar hatalarını düzeltir oldular.
İlk sürüm çok basitti ve sayfaların artalanında çok kullanılan bazı araçlarla birkaç özel makroyu tanıyan basit bir çözümleyici içeriyordu.
  </para><para>
Çözümleyici 1995 ortalarında yeniden yazıldı ve PHP/FI sürüm 2 olarak yeniden adlandırıldı. Bu sürümdeki "FI", Form Interpreter (Form Yorumlayıcı) anlamına geliyordu ve Rasmus tarafından web sayfalarının büyüyen ihtiyaçlarını karşılamak için PHP'ye eklenmişti. mSQL desteği de bu sırada eklendi. PHP/FI'nin umulmadık şekilde büyümesi ile insanlar düzenli olarak kodlamaya katkıda bulunmaya başladılar.
  </para><para>
1997 ortalarında Zeev Suraski ve Andi Gutmans ana çözümleyiciyi yeniden yazdılar ve PHP, Rasmus'un projesi olmaktan çıkıp daha çok bir grubun projesi haline geldi. Bu, PHP3'ün temelini biçimlendirdi ve proje artık PHP: Hypertext Preprocessor adını aldı (kendi kendini üreten bir kısaltma olarak).
  </para><para>
Son sürüm (artık değil), yani PHP4,  <link xlink:href="http://www.zend.com/">Zend</link> motoru takviyeli olarak Suraski ve Gutmans tarafından yeniden yazılmıştır. PHP, şimdi projenin çeşitli bölümlerinde düzenli olarak çalışan ikiyüzün üzerinde destekçiye sahiptir. Muazzam miktarda üçüncü parti modül içermekte, bilinen tüm sunucuları desteklemekte ve yerleşik olarak MySQL ve ODBC desteği barındırmaktadır.
  </para><para>
PHP genel amaçlı bir dildir. Genellikle webde kullanmak için HTML içine gömülü bir betik dili olarak kullanılmaktaysa da, ayrıca kabuk betikleri yazmak için, hatta PHP-GTK ile olduğu gibi pencereli uygulamalar yazmak için de kullanılabilmektedir.
  </para><para>
PHP'nin açık kaynaklı doğasından dolayı, PHP'nin kendisiyle yapamadığınız birşey varsa, işlevselliğini arttıracak bir modül ya da C kodlu bir eklenti yazmaktan sizi alıkoyacak hiçbir şey yoktur; dolayısıyla, PHP ile ne isterseniz yapabilirsiniz. İyi belgelenmiş uygulama geliştirme arayüzü sayesinde bunu yapmak mümkündür.
  </para><para>
PHP4'e bir modül eklemek için birkaç yöntem vardır.
</para><para><itemizedlist><listitem>
Modül PHP paketinde yerleşik olarak varsa, PHP'yi bu modülü içerecek şekilde derlersiniz.
  </listitem><listitem>
Modülü birileri ayrı bir paket olarak yazmışsa, o paketi indirip derlersiniz.
  </listitem><listitem><para>
Bunların hiçbiri yoksa,
   </para><para><itemizedlist><listitem>
Bu modülü kendiniz yazarsınız.
     </listitem><listitem>
Bu mevcut bir uygulama ise, bu uygulamayı geliştirme kütüphanelerini içerecek şekilde sisteminize kurar sonra da PHP'yi bu uygulamanın modülünü içermek üzere yapılandırıp yeniden derlersiniz. Bu belgede bu işlemi Java için yapacağız.
</listitem></itemizedlist></para></listitem></itemizedlist>
</para></sect1>
<sect1 xml:id="php-java_java-kurulumu"><title>Java Kurulumu</title>
 <sect2 xml:id="php-java_java-kurulumu-fc3" chunkthis="1">
   <title>Fedora Core 3 için</title><para>
Sun/J2SDK Paketi indirilmelidir. <link xlink:href="http://java.sun.com"/> adresinden kendi kendini kuran (self-extracting) paketi (örn, <filename>j2sdk-1_4_2_08-linux-i586.bin</filename>, 35565 kB) indirin.
  </para><para>
Ardından sisteme root olarak girin ve <filename>.bin</filename> uzantılı dosyayı indirdiğiniz dizinde aşağıdaki komutları çalıştırıp ekrana gelen yönergeleri izleyin. Size Sun firmasının kullanıcı sözleşmesi gösterilecek, sayfanın sonuna gelinceye kadar space tuşuna basın ve sonra <literal>yes</literal> yazarak sözleşmeyi kabul ettiğinizi iletin.
  </para><para>
<screen># <command>chmod +x j2sdk-1_4_2_08-linux-i586.bin</command>
# <command>./j2sdk-1_4_2_08-linux-i586.bin</command>
</screen>
  </para><para>
Bu işlem sonunda aynı dizin altında <filename>j2sdk-1.4.2_08</filename> dizini altına paket açılmış olacak. Bu dizinin tam yolunun <filename>/usr/src/j2sdk-1.4.2_08</filename> olduğunu varsayıyorum. Siz aşağıdaki işlemlerde bunun yerine kendi dizin yolunuzu yazacaksınız.
  </para><para>
<screen># <command>cd /usr</command>
# <command>mkdir java</command>
# <command>cd java</command>
# <command>ln -s /usr/src/j2sdk-1.4.2_08</command>
</screen>
  </para><para>
<filename>/etc/profile</filename> dosyasına şu satırları ekleyin:
  </para><para>
<screen>JAVA_HOME=/usr/java/j2sdk1.4.2_08
JDK_HOME=$JAVA_HOME
PATH=$PATH:$JAVA_HOME/bin
export $JAVA_HOME $JDK_HOME $PATH
</screen>
  </para><para>
Bu işlemin ardından dosyayı çalıştırıp yaptığımız ayarların etkin olmasını sağlıyoruz:
  </para><para>
<screen># <command>. /etc/profile</command></screen>
  </para><para>
Şimdi kurulumuzu sınayalım:
  </para><para>
<screen># <command>java -version</command>
java version "1.4.2_08"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.2_08-b03)
Java HotSpot(TM) Client VM (build 1.4.2_08-b03, mixed mode)
</screen>
  </para><para>
Önemli bir ekleme daha yapalım. <filename>/etc/ld.so.conf</filename> dosyasını açıp aşağıdaki yolları dosyaya ekleyin. Hemen ardından <userinput>ldconfig -v</userinput> komutunu çalıştırıp yolların geçerli olmasını sağlamalısınız.
  </para><para>
<screen>/usr/java/j2sdk1.4.2_08/jre/lib/i386
/usr/java/j2sdk1.4.2_08/jre/lib/i386/client
/usr/java/j2sdk1.4.2_08/jre/lib/i386/server
</screen>
  </para><para>
PHP'nin Java modülü üç kütüphane dosyasını nedense standart kütüphane yollarında arıyor. Bu isteği yerine getirmek için dosyaları <filename>/usr/lib</filename> dizinine kopyalamak yeterli; siz isterseniz, sembolik bağ oluşturabilirsiniz:
  </para><para>
<screen># <command>cp /usr/java/j2sdk1.4.2_08/jre/lib/i386/libjava.so /usr/lib</command>
# <command>cp /usr/java/j2sdk1.4.2_08/jre/lib/i386/libverify.so /usr/libjava</command>
# <command>cp /usr/java/j2sdk1.4.2_08/jre/lib/i386/server/libjvm.so /usr/lib</command>
</screen>
  </para><para>ve bunu unutmuyoruz;</para><para>
<screen># <command>ldconfig -v</command></screen>
  </para><para>
Böylece Java kurulumunu tamamlamış olduk.
  </para></sect2><sect2 xml:id="php-java_java-kurulumu-debian" chunkthis="1"><title>Debian için</title><para>
Sun/J2SDK Paketi indirilmelidir. <link xlink:href="https://jsecom16d.sun.com/ECom/EComActionServlet/LegalPage:~:com.sun.sunit.sdlc.content.LegalWebPageInfo;jsessionid=5A97669E4BE2DFCA8F69AB1E25021B09">http://java.sun.com</link> adresinden kendi kendini kuran (self-extracting) paketi (örn, <filename>j2sdk-1_4_2_05-linux-i586.bin</filename>, 34.70 MB) indirin.
  </para><para>
<screen>$ <command>apt-get install java-package debhelper fakeroot</command></screen>
  </para><para><note><para>
Yukarıdaki paketleri yükleyebilmeniz için <filename>/etc/apt/sources.list</filename> dosyanızda <literal>non-free</literal> ve <literal>contrib</literal> bölümlerinin de olmasına dikkat edin. Örneğin:
  </para><para>
<screen>deb ftp://ftp.tr.debian.org/debian/ testing main non-free contrib
deb-src ftp://ftp.tr.debian.org/debian/ testing main non-free contrib
</screen>
  </para></note></para><para>
Ardından <filename>.bin</filename> uzantılı dosyayı indirdiğiniz dizinde aşağıdaki komutu çalıştırıp ekrana gelen yönergeleri izleyin. Size Sun firmasının kullanıcı sözleşmesi gösterilecek, sayfanın sonuna gelinceye kadar space tuşuna basın ve sonra <literal>yes</literal> yazarak sözleşmeyi kabul ettiğinizi iletin.
  </para><para>
<screen>$ <command>fakeroot make-jpkg j2sdk-1_4_2_05-linux-i586.bin</command></screen>
  </para><para>
Bu aşamada java deb paketi hazırlanmış olur. Aşağıdaki komut ile kurulumunu yapabilirsiniz.
  </para><para>
<screen>$ <command>dpkg -i sun-j2sdk1.4_1.4.2+05_i386.deb</command></screen>
Java Kurulumunu test edip görelim:
  </para><para>
<screen>$ <command>java -version</command>
java version "1.4.2_05"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.2_05-b04)
Java HotSpot(TM) Client VM (build 1.4.2_05-b04, mixed mode)
</screen>
  </para><para>
Önemli bir ekleme daha yapalım. <filename>/etc/ld.so.conf</filename> dosyasını açıp aşağıdaki yolları sisteme gösterelim. Hemen ardından <userinput>ldconfig -v</userinput> komutunu çalıştırıp yolların geçerli olmasını sağlamalısınız.
  </para><para>
<screen>/usr/lib/j2sdk1.4-sun/jre/lib/i386
/usr/lib/j2sdk1.4-sun/jre/lib/i386/client
/usr/lib/j2sdk1.4-sun/jre/lib/i386/server
</screen>
  </para></sect2></sect1>
  <sect1 xml:id="php-java_php-derleme"><title>PHP Paketinin Yapılandırılması</title>
   <sect2 xml:id="php-java_java-derleme-fc3" chunkthis="1">
    <title>Fedora Core 3 için</title><para>
Önce PHP4 kaynak paketlerini indirmeniz gerekiyor. Ben Fedora Core 3 kurmadan önce php-4.3.6 sürümünü indirmiştim. Yeni bir sürümünü indirmek yerine daha önce yapılandırıp kurduğum bu sürümü bu kez Java desteği vererek derleyeceğim. Siz daha yeni bir sürümle bunu yapabilirsiniz. Ancak dikkat edin. PHP5'in değil, PHP4'ün son sürümünü indirmelisiniz. Bu takdirde benim yaptıklarımı aynen uygulayabilirsiniz.
  </para><para>
<filename>php-4.3.6.tar.gz</filename> paketini indirip <filename>/usr/src/php-4.3.6</filename> dizini altına açtığınızı varsayıyorum. Sırf bu paket için değil, bir paketi derleyeceksem, paketin kök dizinine <filename>configme</filename> diye bir dosya açar, yapılandırma seçeneklerini bu dosyaya yazarım; size de öneririm, aynı uygulamanın yeni bir sürümünü derlerken amerikayı yeniden keşfetmek zorunda kalmazsınız. <filename>php-4.3.6</filename> için, <filename>configme</filename> dosyamın içeriği şöyle:
  </para><para>
<screen>./configure \
--prefix=/usr --with-apxs2 --with-config-file-path=/etc \
--with-exec-dir=/usr/bin --disable-static --disable-cgi \
--enable-cli --enable-bcmath --enable-calendar --enable-dba --enable-dbase \
--enable-dbx --enable-dio --enable-exif --enable-ftp \
--enable-gd-native-ttf --enable-mbstring --enable-memory-limit \
--enable-pcntl --enable-sigchild --enable-sockets --enable-sysvmsg \
--enable-sysvsem --enable-sysvshm --enable-ucd-snmp-hack --enable-xml \
--enable-wddx --enable-yp --enable-zend-multibyte --with-bz2=shared \
--with-curl=shared  --with-dom=shared --with-dom-xslt=shared \
--with-dom-exslt=shared --with-gd=shared --with-ttf=shared \
--with-gettext=shared --with-gmp=shared --with-hyperwave=shared \
--with-iconv --with-kerberos --with-imap-ssl --with-ldap  \
--with-libmbfl --with-mcrypt --with-mhash --with-mime-magic \
--with-mysql=/usr --with-mysql-sock=/usr --with-ncurses=shared \
--with-openssl=/usr --with-unixODBC=shared --with-pgsql=shared \
--with-pspell=shared --with-libedit=shared --with-readline=/usr \
--with-shmop=shared --with-snmp=shared --with-regex \
--with-xmlrpc=shared --with-zlib=shared \
--with-java=/usr/java/j2sdk1.4.2_08
</screen>
  </para><para>
Burada bizim için önemli olan son satır. Bu yapılandırma, devasa denebilecek bir <filename>libphp.so</filename> dosyası (6 MB) oluşturuyor. Siz daha az seçenekle derleyebilirsiniz.
  </para><para>
Ardından derleme ve kurulum işlemine başlıyoruz:
  </para><para>
<screen>$ <command>. ./configme</command>
  ...
$ <command>make</command>
  ...
$ <command>su -</command>
Password:
# <command>make install</command>
</screen>
  </para><para>
Yapılandırmada değişiklik yaparak paketi yeniden derlemek zorunda kalırsanız, <filename>config.cache</filename> dosyasını silmeyi unutmayın.
  </para><para>
Bu işlem bittikten sonra, <filename>/usr/lib/php</filename> dizinine geçip şu işlemleri yapıyoruz:
  </para><para>
<screen># <command>cp php_java.jar ./extensions/no-debug-non-zts-20020429</command>
# <command>cd extensions/no-debug-non-zts-20020429</command>
# <command>ln -s java.so libphp_java.so</command>
</screen>
  </para><para>
Bu işlemler yapılmazsa, yazdığınız kod çalışmayabilir (benimki çalışmamıştı).
  </para><para>
Şimdi <filename>/etc/php.ini</filename> dosyasında bazı değişiklikler yapacağız. <literal>include_path</literal> ve <literal>extension_dir</literal> satırlarını bulup bunların aşağıdaki gibi olmasını sağlayın:
  </para><para>
<screen>include_path = "/usr/lip/php"
extension_dir = /usr/lib/php/extensions/no-debug-non-zts-20020429
</screen>
  </para><para>
Java eklentisiyle ilgili yapılandırma bilgilerinin bulunduğu kısmı ise şöyle değiştirin:
  </para><para>
<screen>[Java]
java.class.path = /usr/lib/php/php_java.jar
java.library.path = /usr/lib/php/extensions/no-debug-non-zts-20020429
extension=java.so
</screen>
  </para><para>
Java destekli PHP kurulumu böylece bitti. Apache yeniden başlatıldığında değişiklikler etkin olacaktır:
  </para><para>
<screen># <command>service httpd restart</command>
httpd durduruluyor:                                        [  TAMAM  ]
httpd başlatılıyor:                                        [  TAMAM  ]
</screen>
  </para><para>
<filename>/var/www/info.php</filename> adlı bir dosya oluşturup içine aşağıdaki kodu yazıp <filename>http://localhost/info.php</filename> adresine bakarsanız, sayfanın ortalarında bir Java bölümü göreceksiniz.
  </para><para>
<screen>&lt;?php phpinfo(); ?></screen>
  </para><para>
<div style="padding-bottom:12px;"><h2 style="text-align: center">java</h2>
  <div style="overflow: auto;"><table border="1" cellpadding="3" style="border-collapse:collapse">
  <tbody><tr class="h"><th bgcolor="#8B89D6" align="center">Directive</th><th bgcolor="#8B89D6" align="center">Local Value</th><th bgcolor="#8B89D6" align="center">Master Value</th></tr>
  <tr><td class="e" bgcolor="#C0C0FF">java.class.path</td><td  bgcolor="#DEDEDE">/usr/lib/php/php_java.jar</td><td  bgcolor="#DEDEDE">/usr/lib/php/php_java.jar</td></tr>
  <tr><td class="e" bgcolor="#C0C0FF">java.home</td><td  bgcolor="#DEDEDE"><i>no value</i></td><td  bgcolor="#DEDEDE"><i>no value</i></td></tr>
  <tr><td class="e" bgcolor="#C0C0FF">java.library</td><td  bgcolor="#DEDEDE">/usr/java/j2sdk1.4.2_08/jre/lib/i386/libjava.so</td><td  bgcolor="#DEDEDE">/usr/java/j2sdk1.4.2_08/jre/lib/i386/libjava.so</td></tr>
  <tr><td class="e" bgcolor="#C0C0FF">java.library.path</td><td  bgcolor="#DEDEDE">/usr/lib/php/extensions/no-debug-non-zts-20020429</td><td  bgcolor="#DEDEDE">/usr/lib/php/extensions/no-debug-non-zts-20020429</td></tr>
  </tbody></table></div></div>
  </para></sect2>
  <sect2 xml:id="php-java_java-derleme-debian" chunkthis="1"><title>Debian için</title><para>
PHP4'ü yeniden paketlemeden önce sistemimizi buna hazır hale getirmemiz tabii en önemlisi PHP4 kaynak paketlerini indirmemiz gerekiyor. Bu aşamada yine debian paket yönetim sistemi bizi bu işten basitçe kurtarıyor.
  </para><para>
<screen>$ <command>cd /usr/local/src</command>
$ <command>apt-get build-dep php4</command>
$ <command>apt-get source php4</command>
</screen>
  </para><para>
<filename>/usr/local/src</filename> dizininde artık şu dosyalar (da) var: <filename>php4-4.3.10</filename>, <filename>php4_4.3.10-9.diff.gz</filename>, <filename>php4_4.3.10-9.dsc</filename> ve <filename>php4_4.3.10.orig.tar.gz</filename>.
  </para><para>
<filename>php4-4.3.10</filename> dizini altındaki debian dizininde sırasıyla şu değişiklikleri yapıyoruz.
  </para><para>
<command>Dosya: </command><filename>/usr/local/src/php4-4.3.10/debian/control</filename> Dosyanın en sonuna şu satırları ekleyin:
  </para><para>
<screen>Package: php4-java
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}, ${apache2:Depends},
php4-common (=${Source-Version})
Description: Java(TM) 2 Runtime Environment,
 Standard Edition Java Module for php4
    This package provides a module for Java(TM) 2 Runtime Environment
    support for php4 scripts.
.
    PHP4 is an HTML-embedded scripting language. Much of its syntax is
    borrowed from C, Java and Perl with a couple of unique PHP-specific
    features thrown in. The goal of the language is to allow web developers
    to write dynamically generated pages quickly.
.
Homepage: http://www.php.net/
</screen>
  </para><para>
<command>Dosya: </command><filename>/usr/local/src/php4-4.3.10/debian/rules</filename>  Dosyanın içinde <literal>COMMON_CONFIG=</literal> ile başlayan bölüme işaretli satırı ekleyin. <option>--with</option> ile baslayan satırlardan herhangi birisinin altına ekleyebilirsiniz.
  </para><para>
<screen>...
 --with-zip=/usr \
 --with-java=/usr/lib/j2sdk1.4-sun \
 --enable-dbx \
</screen>
  </para><para>
<command>Dosya: </command><filename>/usr/local/src/php4-4.3.10/debian/modules</filename>  Dosyanın en sonuna;
  </para><para>
<screen>...
xslt XSLT
sybase Sybase sybase_ct
java JAVA
</screen>
  </para><sect3><title>Paketlerin Oluşturulması</title><para>
Yeni deb paketimizi aşağıdaki komutla oluşturalım. (Ve hata olmaması için dua edelim.) Komutu çalıştırdığınızda "permission denied" hatası alırsanız geçici olarak <filename>/usr/local/src dizinini</filename> <literal><command>chown -R </command><emphasis>kullanıcı_adınız </emphasis>/usr/local/src</literal> ile giriş yapmış olduğunuz kullanıcıya verin. Daha sonra tekrar root kullanıcısına verirsiniz. Derleme işlemi bir süre daha devam edecektir.
  </para><para><note><para><option>-us -uc</option> seçenekleri oluşturulan paketleri şifreleyip imzalamanızı engeller.
  </para></note></para><para>
<screen>$ <command>dpkg-buildpackage -us -uc -rfakeroot</command></screen>
  </para><para>
Derleme işlemi tamamlandığında, <filename>/usr/local/src</filename> dizinine çıkın. root olarak veya root haklarınızı kullanarak (sudo) tüm php4 paketlerinizi yükleyin. <command>Unutmayın: </command>Bundan sonra tüm php paketleriniz için Debian ağacını değil kendi paketlerinizi kullanmalısınız. Özellikle de kendi <filename>php4-<emphasis>sürüm</emphasis>.deb</filename> paketi ve ek modül paketlerini kurmanız gerekecek. Bir kere bu işlemi becerdikten sonra güvenlik ve ek modül gereksinimlerinizde, PHP sürümünü yükseltmek için yine Debian ağacından kaynak paketi indirip sadece yukarıda özelleştirmiş olduğumuz <filename>rules, control</filename> ve <filename>modules</filename> dosyalarını ilgili dizine atıp derleyerek paketlerinizi yeniden oluşturmalısınız.
  </para><para>
<command>Hata var ise: </command> RedHat ve benzeri RPM tabanlı dağıtımlarda çoğunlukla hatanın temel sebebi geliştirme paketlerinin eksik yüklenmiş olmasıdır. Halbuki Debian sistemde yukarıda çalıştırdığımız komut (<userinput>apt-get build-dep php4</userinput>) eksik paket kalmasını engeller.
  </para><para><important xml:id="php-java_php-derleme-dikkat"><para>
Bir önemli hata sebebi ise, Java kurulumunda <userinput>ld</userinput> ile alakalı olarak bazı kütüphanelerin bulunamaması olabilmektedir. Özellikle tavsiyem her Java kurulumundan sonra Java kurulum dizinine geçilerek <userinput>ldd</userinput> ile aşağıdaki dosyaların kontrol edilmesidir. Örneğin, <userinput>ldd libjava.so, ldd libverify.so, ldd libzip.so</userinput> komutları nedense sürekli hata verir. Bu komutların çıktıları aşağıdaki gibi temiz olmalı ve hiç "Not Found" hatası alınmamalıdır. Aşağıda hatalı ve düzgün iki örnek verilmiştir. İlk örnekten de anlaşılacağı gibi ben her ihtimale karşın önceden <command>libjava.so, libjvm.so, libverify.so</command> dosyalarını <filename>/lib</filename> dizinine kopyalamıştım. Sembolik bağ da oluşturabilirsiniz. Ancak en önemlisi <filename>ld.so.conf</filename> dosyasının yukarıda anlatıldığı şekilde düzenlenmesi ve <userinput>ldconfig</userinput> komutunun çalıştırılmasıdır.
  </para><para>Başarılı örnek:</para><para>
<screen>
pokemon:/usr/lib/j2sdk1.4-sun/jre/lib/i386# <command>ldd libjava.so</command>
libjvm.so => /lib/libjvm.so (0x4002b000)
libverify.so => /lib/libverify.so (0x40455000)
libnsl.so.1 => /lib/tls/libnsl.so.1 (0x40467000)
libdl.so.2 => /lib/tls/libdl.so.2 (0x4047b000)
libc.so.6 => /lib/tls/libc.so.6 (0x4047e000
libpthread.so.0 => /lib/tls/libpthread.so.0 (0x405d4000)
/lib/ld-linux.so.2 => /lib/ld-linux.so.2 (0x80000000)
</screen>
  </para><para>Başarısız örnek:</para><para>
<screen>
pokemon:/usr/lib/j2sdk1.4-sun/jre/lib/i386# <command>ldd libjava.so</command>
libjvm.so => /lib/libjvm.so (0x4002b000)
<userinput>libverify.so => not found</userinput>
libnsl.so.1 => /lib/tls/libnsl.so.1 (0x40455000)
libdl.so.2 => /lib/tls/libdl.so.2 (0x40469000)
libc.so.6 => /lib/tls/libc.so.6 (0x4046c000)
libm.so.6 => /lib/tls/libm.so.6 (0x405a0000)
libpthread.so.0 => /lib/tls/libpthread.so.0 (0x405c2000)
/lib/ld-linux.so.2 => /lib/ld-linux.so.2 (0x80000000)
</screen></para></important>
  </para><para>
Başarılı bir derleme aşağıdaki gibi sonlanır ve <filename>/usr/local/src</filename> dizini altında bir sürü <filename>php-XXX.deb</filename> paketi oluşur.
  </para><para>
<screen>dh_lin
dh_compress -Xphp.ini
dh_fixperms
dh_installdeb
dh_gencontrol
dh_md5sums
dh_builddeb
dpkg-deb: building package `php4' in `../php4_4.3.10-9_all.deb'.
dpkg-deb: building package `php4-pear' in `../php4-pear_4.3.10-9_all.deb'.
dpkg-genchanges
dpkg-genchanges: not including original source code in upload
dpkg-buildpackage: binary and diff upload (original source NOT included)
</screen>
  </para><para>
Bende aşağıdaki paketler oluşturulmuş durumda:
  </para><para>
<screen>
pokemon:/usr/local/src# <command>ls -1</command>
caudium-php4_4.3.10-9_i386.deb
libapache2-mod-php4_4.3.10-9_i386.deb
libapache-mod-php4_4.3.10-9_i386.deb
php4-4.3.10
php4_4.3.10-9_all.deb
php4_4.3.10-9.diff.gz
php4_4.3.10-9.dsc
php4_4.3.10-9_i386.changes
php4_4.3.10.orig.tar.gz
php4-cgi_4.3.10-9_i386.deb
php4-cli_4.3.10-9_i386.deb
php4-common_4.3.10-9_i386.deb
php4-curl_4.3.10-9_i386.deb
php4-dev_4.3.10-9_i386.deb
php4-domxml_4.3.10-9_i386.deb
php4-gd_4.3.10-9_i386.debian
php4-imap_4.3.10-9_i386.deb
php4-java_4.3.10-9_i386.deb
php4-ldap_4.3.10-9_i386.deb
php4-mcal_4.3.10-9_i386.deb
php4-mhash_4.3.10-9_i386.deb
php4-mysql_4.3.10-9_i386.deb
php4-odbc_4.3.10-9_i386.deb
php4-pear_4.3.10-9_all.deb
php4-recode_4.3.10-9_i386.deb
php4-snmp_4.3.10-9_i386.deb
php4-sybase_4.3.10-9_i386.deb
php4-xslt_4.3.10-9_i386.deb
</screen>
 </para></sect3><sect3><title>Paketlerin Yüklenmesi</title><para>
<screen># <command>dpkg -i php4_4.3.10.deb php4-imap_4.3.10.deb php4-java_4.3.10.deb</command></screen>
  </para><para>
PHP'nin Java'yı görmesi için bazı işlemler yapıyoruz. <filename>/usr/lib/php4/20020429-zts/</filename> dizini altında <filename>java.so</filename> dosyası ile beraber ihtiyaç duyduğumuz için yüklediğimiz php modüllerine ait modül (<filename>*.so</filename>) dosyalarının olduğundan emin olalım. Ayrıca <filename>php_java.jar</filename> dosyasını da bu dizine kopyalamalıyız.
  </para><para>
<screen>cp /usr/local/src/php4-4.3.10/ext/java/php_java.jar /usr/lib/php4/20020429-zts</screen>
  </para><para>
<filename>php.ini</filename> dosyasında gerekli değişiklikleri yapalım. Ben sistemlerimde daha gelişmiş olan Apache2 kullandığım için <filename>/etc/php4/apache2/php.ini</filename> dosyasında değişiklik yapıyorum. Siz kendi apache sürümünüzü uygun <filename>php.ini</filename> dosyasını kullanın. Dosyadaki <command>[Java]</command> bölümünde aşağıdaki değişiklikleri yapın:
  </para><para>
<screen>[Java]
java.class.path = /usr/lib/php4/20020429-zts/php_java.ja
java.home = /usr/lib/j2sdk1.4-sun/jre
java.library = /usr/lib/j2sdk1.4-sun/jre/lib/i386/libjava.so
java.library.path = /usr/lib/php4/20020429-zts
</screen>
  </para><para>
Apache2 yeniden başlatıldığında değişiklikler devreye girecektir. <filename>/var/www/info.php</filename> adlı bir dosya oluşturup içine aşağıdaki kodu yazıp <filename>http://localhost/info.php</filename> adresine bakarsanız, sayfanın altlarında <command>Java</command> bölümünü göreceksiniz. Bitti mi? Az kaldı...
  </para><para>
<screen>&lt;?php phpinfo(); ?></screen>
  </para><para>
<div style="padding-bottom:12px;"><h2 style="text-align: center">java</h2>
  <div style="overflow: auto;"><table border="1" cellpadding="3" style="border-collapse:collapse">
  <tbody><tr class="h"><th bgcolor="#8B89D6" align="center">Directive</th><th bgcolor="#8B89D6" align="center">Local Value</th><th bgcolor="#8B89D6" align="center">Master Value</th></tr>
  <tr><td class="e" bgcolor="#C0C0FF">java.class.path</td><td  bgcolor="#DEDEDE">/usr/lib/php4/20020429-zts/php_java.jar</td><td  bgcolor="#DEDEDE">/usr/lib/php4/20020429-zts/php_java.jar</td></tr>
  <tr><td class="e" bgcolor="#C0C0FF">java.home</td><td  bgcolor="#DEDEDE">/usr/lib/j2sdk1.4-sun/jre</td><td  bgcolor="#DEDEDE">/usr/lib/j2sdk1.4-sun/jre</td></tr>
  <tr><td class="e" bgcolor="#C0C0FF">java.library</td><td  bgcolor="#DEDEDE">/usr/lib/j2sdk1.4-sun/jre/lib/i386/libjava.so</td><td  bgcolor="#DEDEDE">/usr/lib/j2sdk1.4-sun/jre/lib/i386/libjava.so</td></tr>
  <tr><td class="e" bgcolor="#C0C0FF">java.library.path</td><td  bgcolor="#DEDEDE">/usr/lib/php4/20020429-zts</td><td  bgcolor="#DEDEDE">/usr/lib/php4/20020429-zts</td></tr>
  </tbody></table></div></div>
</para></sect3></sect2></sect1><sect1 xml:id="php-java_php-deneme">
  <title>Java Destekli PHP Kurulumunun Sınanması</title><para>
Aşağıdaki kodu <filename>/var/www</filename> dizini altına <filename>java.php</filename> olarak kaydedin:
  </para><para>
<screen>&lt;?php
 $system = new Java("java.lang.System");
 print "Java version=".$system->getProperty("java.version")."&lt;br>";
 print "Java vendor=".$system->getProperty("java.vendor")."&lt;br>&lt;br>";
 print "OS=".$system->getProperty("os.name")." ".
 $system->getProperty("os.version")." on ".
 $system->getProperty("os.arch")."&lt;br>";

 $formatter = new Java("java.text.SimpleDateFormat",
 "EEEE, MMMM dd, yyyy 'at' hh:mm:ss a zzzz");
 print $formatter->format(new Java("java.util.Date"));
 ?>
</screen>
  </para><para>
Eğer dikkali iseniz ve hiçbir adımı atlamadıysanız, <filename>http://localhost/java.php</filename> adresine baktığınızda, aşağıdakine benzer bir çıktı alacaksınız:
   </para><para>
<screen>Java version=1.4.2_05
Java vendor=Sun Microsystems Inc.

OS=Linux 2.6.7-1-386 on i386
Saturday, April 16, 2005 at 4:21:56 AM Eastern European Summer Time
</screen>
</para></sect1>
</article>
