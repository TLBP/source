<?xml version="1.0" encoding="UTF-8"?>
<!--DOCTYPE article SYSTEM "../../docbook/dtd/docbookx.dtd"-->
<!-- ********************************************************************
     $Id: gdm-terminal.xml,v 1.2 2002/10/03 19:38:23 nilgun Exp $
     ******************************************************************** -->

<article xml:id="gdm-terminal" lang="tr">

  <info>

    <title>GDM ile X Terminali NASIL</title>
    <author>
     <personname><firstname>Nilgün Belma Bugüner</firstname>
    </author>
    <pubdate>24 Nisan 2006</pubdate>

     <!-- Most recent revision goes at the top; list in descending order -->
     <revhistory>
       <revision>
          <revnumber>1.2</revnumber>
          <date>24 Nisan 2006</date>
          <authorinitials>NBB</authorinitials>
          <revremark>Lisans değişikliği; Lisans artık GFDL değil, GPL; küçücük belgeye boyundan büyük lisans metni eklemenin alemi yok.</revremark>
       </revision><revision>
          <revnumber>1.1</revnumber>
          <date>12 Haziran 2004</date>
          <authorinitials>NBB</authorinitials>
          <revremark>Biraz daha ayrıntı.</revremark>
       </revision><revision>
          <revnumber>1.0</revnumber>
          <date>10 Haziran 2004</date>
          <authorinitials>NBB</authorinitials>
          <revremark>
             İlk sürüm
          </revremark>
       </revision>
     </revhistory>

     <!-- Provide a good abstract; a couple of sentences is sufficient -->
     <abstract>
        <para>
Bu belgede GDM yardımıyla eski, bir işe yaramaz denilen makinaların hızlı bir sunucudaki XFree86'yı kullandığında nasıl işe yarayacağı yap-işlet modeliyle anlatılmıştır. Daha iyisini yapmak, iyinin de iyisi mümkün.
        </para>
     </abstract>
     <legalnotice><title>Yasal Açıklamalar</title>
    <para>
Bu belgenin, <emphasis>GDM ile X Terminali NASIL</emphasis> 1.0 sürümünün <emphasis role="bold"> telif hakkı © 2004 <emphasis>Nilgün Belma Bugüner</emphasis></emphasis>'e aittir. Bu belgeyi, Free Software Foundation tarafından yayınlanmış bulunan <link linkend="gpl">GNU Genel Kamu Lisansı</link>nın 2. ya da daha sonraki sürümünün koşullarına bağlı kalarak kopyalayabilir, dağıtabilir ve/veya değiştirebilirsiniz. Bu Lisansın özgün kopyasını <link xlink:href="http://www.gnu.org/copyleft/gpl.html"/> adresinde bulabilirsiniz.
    </para><para>
BU BELGE "ÜCRETSİZ" OLARAK RUHSATLANDIĞI İÇİN, İÇERDİĞİ BİLGİLER İÇİN İLGİLİ KANUNLARIN İZİN VERDİĞİ ÖLÇÜDE HERHANGİ BİR GARANTİ VERİLMEMEKTEDİR. AKSİ YAZILI OLARAK BELİRTİLMEDİĞİ MÜDDETÇE TELİF HAKKI SAHİPLERİ VE/VEYA BAŞKA ŞAHISLAR BELGEYİ "OLDUĞU GİBİ", AŞİKAR VEYA ZIMNEN, SATILABİLİRLİĞİ VEYA HERHANGİ BİR AMACA UYGUNLUĞU DA DAHİL OLMAK ÜZERE HİÇBİR GARANTİ VERMEKSİZİN DAĞITMAKTADIRLAR. BİLGİNİN KALİTESİ İLE İLGİLİ TÜM SORUNLAR SİZE AİTTİR. HERHANGİ BİR HATALI BİLGİDEN DOLAYI DOĞABİLECEK OLAN BÜTÜN SERVİS, TAMİR VEYA DÜZELTME MASRAFLARI SİZE AİTTİR.
  </para>
  <para>
İLGİLİ KANUNUN İCBAR ETTİĞİ DURUMLAR VEYA YAZILI ANLAŞMA HARİCİNDE HERHANGİ BİR ŞEKİLDE TELİF HAKKI SAHİBİ VEYA YUKARIDA İZİN VERİLDİĞİ ŞEKİLDE BELGEYİ DEĞİŞTİREN VEYA YENİDEN DAĞITAN HERHANGİ BİR KİŞİ, BİLGİNİN KULLANIMI VEYA KULLANILAMAMASI (VEYA VERİ KAYBI OLUŞMASI, VERİNİN YANLIŞ HALE GELMESİ, SİZİN VEYA ÜÇÜNCÜ ŞAHISLARIN ZARARA UĞRAMASI VEYA BİLGİLERİN BAŞKA BİLGİLERLE UYUMSUZ OLMASI) YÜZÜNDEN OLUŞAN GENEL, ÖZEL, DOĞRUDAN YA DA DOLAYLI HERHANGİ BİR ZARARDAN, BÖYLE BİR TAZMİNAT TALEBİ TELİF HAKKI SAHİBİ VEYA İLGİLİ KİŞİYE BİLDİRİLMİŞ OLSA DAHİ, SORUMLU DEĞİLDİR.
  </para>
  <para>
Tüm telif hakları aksi özellikle belirtilmediği sürece sahibine aittir. Belge içinde geçen herhangi bir terim, bir ticari isim ya da kuruma itibar kazandırma olarak algılanmamalıdır. Bir ürün ya da markanın kullanılmış olması ona onay verildiği anlamında görülmemelidir.
    </para></legalnotice>
  </info>
<!-- Content follows...include introduction, license information, feedback -->
  <sect1 xml:id="gdm-terminal_nedir">
    <title>X Terminali Nedir?</title>
    <para>
Artık üzerinde başka bir iş yapılamayacak kadar zayıf kalmış olan eski PC'ler, eğer güçlü bir sunucu makinanız var ise, bir X terminali olarak kullanılabilir. Bu düzenekte, istemci makinanın ekranında, ana sunucu makinanın oturum açma ekranı görünür, kullanıcı ana sunucu makinada sisteme giriş yapar. İstemci makinada hiçbir kullanıcı işlemi yapılmaz, hatta syslog'u bile çalıştırmak gerekmez.
    </para><para>
X terminalinden önce terminal kavramı üzerinde biraz duralım. Telnet kullanmayı
bilirsiniz en azından. Telnet yapabilmek için önce bir terminal gerekir, buna uçbirim de deniyor; bir de telnet sunucusu olmalı. Her iki uçta da bu işlemi
yapacak aletlerin aynı olması gerekir. Bu aletin ismi linuxcada tty. Siz bir tty
çalıştırırsınız ve bu tty ile karşı makinadan bir tty istersiniz. X terminali için de böyle, Bir X çalıştırıp, karşı makinadan bir X istiyorsunuz. Burada kafa karıştıran, X'den bahsedilirken her iki makina için de isminin X sunucusu olması.
Aslına bakarsanız, ikiside bir diğerine göre sunucu :-). Bu onun doğasında var.
Dolayısıyla oturum isteğinde bulunulan sunucu, istemde bulunan istemci oluyor, ama tamamen göreceli. Sizin ne yapmak istediğinize bağlı.
    </para><para>
Bu işlem GDM ile oldukça kolaylaştırılmış. Bu belgeyi, eski makinamı bir X terminali olarak nasıl çalıştırım diye bir arayış içine girdiğimde uyguladığım çözümü sizlerle paylaşmak için yazdım. Adım adım anlatacağım, benim için
uğraştırıcı oldu ama artık çok kolay <literal>:-)</literal> (Colomb'un yumurtası)
    </para>
  </sect1>
  <sect1 xml:id="gdm-terminal_gereken">
    <title>Neler Gerekli</title>
    <para>
Nelerin gerektiği için benim örneğime bakalım, 2 makina var. Sunucu makinanın özellikleri şöyle: PIII/1GHz işlemci, 512MB bellek, 40GB sabit disk, 10/100 ağ kartı v.s. artı RH 9 kurulu. İstemci makina ise: PI/133MHz işlemci, 64MB bellek, 2GB sabit disk, 10/100 ağ kartı. Vesairesi yok, vesaireyi daha önce yeni makinaya aktarmıştım. İki makina bir ağ kablosu ile birbirine karttan karta bağlı.
    </para><para>
Elinizin altında bir Linux dağıtımının CD'leri olmalı, eski makinaya bir Linux kurmak lazım, çünkü. Bu işlem için yeni makinadaki CDROM'u eski makinaya taktım. Ben Fedora Core 1 dağıtımının CD'lerinden yararlandım. Kurulum sırasında özel kurulumu seçip, sadece GNOME kurdum. Gereksiz hiçbir şeyi kurmadım. Çünkü gereken herşey ana makinadan kullanılacak. 2GB sabit disk bile fazla geldi. Siz daha itinalı bir seçimle belki 1GB bir sabit disk bile kullanabilirsiniz. Belgeyi önce baştan sona okursanız, neler gerektiği hakkında daha ayrıntılı bir fikir edineceksiniz.
    </para><para>
Bütün bunlar sağlandıktan sonra artık sistemi yapılandırma işlemlerine  geçebiliriz. Yapılandırma işlemini 2 ana bölüme ayıracağız. Önce sunucuyu yapılandıracağız, sonra da istemciyi.
    </para>
  </sect1>
  <sect1 xml:id="gdm-terminal_sunucu">
    <title>Sunucu Yapılandırması</title>
    <para>
Sunucumda RH 9 kurulu olmasına rağmen saf bir RH 9 değil. Üzerinde pek çok paketi güncellemiştim. Bu nedenle kullandığım paket sürümlerini ayrıca belirteceğim. Bir sorunla karşılaşırsanız en azından bu sürümler çözüm olabilir. Güvenlik ile ilgili basit yapılandırmaları da yapacağız ama, eğer örütbağa bu makina ile bağlanıyorsanız güvenlik duvarınızı yapılandırmayı unutmayın. Çünkü makinanız bir sürü port dinleyecek, bunların örütbağdan değil sadece iç ağınızdan erişilebilir olmasını sağlamalısınız. Güvenlik duvarı yapılandırması bu belge kapsamında değil. Sunucuyu 3 adımda yapılandıracağız:
    </para><para>
    <variablelist><varlistentry><term>DHCPD yapılandırması</term>
      <listitem><para>
<userinput>dhcpd</userinput> için bir DNS kurmadım. Siz bu yöntemi büyük bir ağa uygulamak içn DNS kullanmak isterseniz sizin bileceğiniz birşey. Benim 2 makinalık bir ağ için DNS'ye ihtiyacım yoktu.
      </para><para>
Ağ yapılandırması:
      </para><para>
<screen><prompt>~> </prompt><userinput>cat /etc/sysconfig/network-scripts/ifcfg-eth0</userinput>
DEVICE=eth0
IPADDR=10.10.10.1
NETMASK=255.255.255.0
NETWORK=10.10.10.0
BROADCAST=10.10.10.255
ONBOOT=yes
BOOTPROTO=static
<prompt>~> </prompt><userinput>cat /etc/sysconfig/network</userinput>
NETWORKING=yes
HOSTNAME=nilgun.buguner.home
<prompt>~> </prompt><userinput>cat /etc/sysconfig/static-routes</userinput>
eth0 net 10.10.10.0 netmask 255.255.255.0 gw 10.10.10.254
<prompt>~> </prompt><userinput>cat /etc/sysconfig/hosts</userinput>
127.0.0.1       localhost localdomain
10.10.10.1      nilgun.buguner.home
10.10.10.100    belma.buguner.home
<prompt>~> </prompt><userinput>cat /etc/hosts.allow</userinput>
# Bu dosyada yerel ag hizmetlerinden hangi makinalarin
# faydalanabilecegi belirtilir.
#
ALL: .buguner.home
ALL: 127
</screen></para><para>
Makina isminin <literal>.home</literal> içermesi sizi şaşırtmasın, yerel ağlar için isim sınırlaması yoktur. <literal>:-)</literal>. Bakalım makinada <userinput>dhcpd</userinput> namına ne kuruluymuş:
      </para><para>
<screen><prompt>~> </prompt><userinput>rpm -qa | grep dhcp</userinput>
dhcp-3.0pl2-6.16
dhcp-devel-3.0pl2-6.16
</screen>
      </para><para>
<userinput>dhcpd</userinput> yapılandırma dosyası <filename>/etc/dhcpd.conf</filename><footnote>
    <para>
Bir ağda, sadece X terminallerinin, mac adreslerine göre sabit adres değil, rasgele adres almasını sağlayabilirsiniz (mac adresi toplamak zor iştir). Bunun için DHCP sunucusu olarak çalışan makinanın <filename>/etc/dhcp.conf</filename> dosyasına aşağıdaki gibi bir kayıt girebilir,
    </para><para>
<screen>
class "X-Terminal" {
        match if option dhcp-client-identifier = "x-terminal";
}
</screen>
    </para><para>hatta bu sınıfın üyelerine belli bir adres bloğunu  ayırabilir,</para><para>
<screen>
option vendor-class-identifier

  pool {
        allow members of "X-Terminal";
        range 10.10.10.128 10.10.10.253;
  }
</screen>
    </para><para>ve istemci makinanın <filename>/etc/dhclient.conf</filename> dosyasına ise aşağıdakini,</para><para>
<screen>
interface "eth0" {
        send dhcp-client-identifier "x-terminal";
}
</screen>
    </para><para>yazabilirsiniz. <literal>"x-terminal"</literal> yerine her iki dosyada aynı olmak üzere sizce uygun başka bir şey de yazabilirsiniz. Bu çözümü gönderen Deniz Akkuş'a teşekkürler.
    </para></footnote>:
      </para><para>
<screen><prompt>~> </prompt><userinput>cat /etc/dhcpd.conf</userinput>
allow booting;
allow bootp;
ddns-update-style none;

# Standart yapilandirma yonergeleri...
option domain-name "buguner.home";

max-lease-time 120;
default-lease-time 120;

subnet 10.10.10.0 netmask 255.255.255.0 {
}
group {
  server-name "nilgun.buguner.home";
  get-lease-hostnames true;
  use-host-decl-names on;
# istemci makina bilgileri; makinanin ismi: belma
  host belma {
# bu adres, istemci makinadaki ag kartinin ethernet adresi
    hardware ethernet 00:80:ad:77:72:7c;
# sabit bir adres veriyoruz. Kimden bahsettigimizi bilelim.
    fixed-address 10.10.10.100;
  }
}
</screen>
      </para><para>
Şimdi <userinput>dhcpd</userinput>'yi başlatalım ve bakalım çalışıyor mu?
       </para><para>
<screen><prompt>~> </prompt><userinput>/sbin/service dhcpd start</userinput>
dhcpd başlatılıyor:                                              [  TAMAM  ]
<prompt>~> </prompt><userinput>netstat -Nlp | grep dhcp</userinput>
udp   0    0 0.0.0.0:bootps      0.0.0.0:*                1181/dhcpd
raw   0    0 0.0.0.0:icmp        0.0.0.0:*       7        1181/dhcpd
</screen>
       </para><para>
Çalışıyormuş <literal>:-)</literal>. Çalışma seviyenizde başlatılan hizmetlere <userinput>dhcpd</userinput>'yi eklemeyi unutmayın.
      </para></listitem>
    </varlistentry><varlistentry><term>XFS yapılandırması</term>
      <listitem><para>
<userinput>xfs</userinput>, X Pencere Sisteminin yazıtipi sunucusudur (XFS - X Font Server). İstemci makinaya X yazıtiplerini kurmayacağız, tabii <userinput>xfs</userinput>'i de kurmayacağız. İstemci makinanın X Pencere Sistemi sunucu makinadaki <userinput>xfs</userinput> sunucusunu kullanacak.  Bunun için bu makinadaki <userinput>xfs</userinput> sunucusunu dinlemeye almamız lazım. Hemen yapalım:
       </para><para>
<filename>/etc/X11/fs/config</filename> dosyasının en alt satırına gidin,
       </para><para>
<screen># don't listen to TCP ports by default for security reasons
no-listen = tcp
</screen>
       </para><para>
son satırı iptal edeceğiz ki, <userinput>xfs</userinput> ağdan gelen istekleri dinlesin:
       </para><para>
<screen># don't listen to TCP ports by default for security reasons
# no-listen = tcp
</screen>
       </para><para>
Eğer <userinput>xfs</userinput>'i kullanmıyorsanız başlatın, ben kullanıyordum, yeniden başlatıyorum ve dinlemeye geçmiş mi bakıyorum:
       </para><para>
<screen><prompt>~> </prompt><userinput>/sbin/service xfs restart</userinput>
xfs yeniden başlatılıyor:
xfs durduruluyor:                                                [  TAMAM  ]
xfs başlatılıyor:                                                [  TAMAM  ]
<prompt>~> </prompt><userinput>netstat -Npl | grep xfs</userinput>
tcp   0    0 0.0.0.0:xfs         0.0.0.0:*       LISTEN   1249/xfs
unix  2    [ ACC ]     STREAM    LISTENING        9433    1249/xfs ¬
/tmp/.font-unix/fs7100
</screen>
       </para><para>
Bu da tamamdııır. Çalışma seviyenizde başlatılan hizmetlere <userinput>xfs</userinput>'i eklemeyi unutmayın. Bu arada unutmadan belirteyim, makinada <filename>x-4.3.0</filename> kurulu.
      </para></listitem>
    </varlistentry><varlistentry><term>GDM yapılandırması</term>
      <listitem><para>
Geldik işin en canalıcı kısmına... <userinput>gdm</userinput>, <userinput>xdm</userinput>'yi kullanmaz. Bu bakımdan <filename>/etc/X11/xdm</filename>
dizinindeki dosyalarda daha önce <userinput>xdm</userinput> için bazı değişiklikler yaptınızsa onları
öntanımlı durumlarına getirin. Oradaki dosyalara dokunmayacağız.
       </para><para>
Kullandığım <userinput>gdm</userinput> sürümü <literal>2.6.0.2</literal> (güncel sürüm, kaynak paketinden kurdum). <userinput>gdm</userinput> yapılandırmasını uzun uzadıya anlatmayacağım, merak ediyorsanız, belgelerini okuyun. Sadece <filename>/etc/X11/gdm/gdm.conf</filename> dosyasının <filename>/etc/X11/gdm/factory-gdm.conf</filename> dosyasına göre fark dosyasını veriyorum. Bu fark dosyasına bakarak <filename>/etc/X11/gdm/gdm.conf</filename> dosyanızı düzeltin:
       </para><para>
<screen><prompt>/etc/X11/gdm> </prompt><userinput>diff -u factory-gdm.conf gdm.conf > gdm.conf.diff</userinput>
<prompt>/etc/X11/gdm> </prompt><userinput>cat gdm.conf.diff</userinput>
--- factory-gdm.conf    2004-06-07 07:35:12.000000000 +0300
+++ gdm.conf    2004-06-08 17:41:14.000000000 +0300
@@ -46,10 +46,12 @@
 # The greeter for local (non-xdmcp) logins. Change gdmlogin to gdmgreeter
 # to get the new graphical greeter.
 #Greeter=/usr/bin/gdmlogin
+Greeter=/usr/bin/gdmgreeter

 # The greeter for xdmcp logins, usually you want a less graphically
 # intensive greeter here so it's better to leave this with gdmlogin
 #RemoteGreeter=/usr/bin/gdmlogin
+RemoteGreeter=/usr/bin/gdmgreeter

 # Launch the greeter with an additional list of colon seperated gtk
 # modules. This is useful for enabling additional feature support
@@ -111,7 +113,7 @@
 # for backwards compatibility reasons with 2.4.4.x
 #SessionDesktopDir=/etc/X11/sessions/:/etc/X11/dm/Sessions/:/usr/share/gdm/¬
  BuiltInSessions/:/usr/share/xsessions/
 # This is the default .desktop session. One of the ones in SessionDesktopDir
-#DefaultSession=gnome.desktop
+DefaultSession=kde.desktop
 # Better leave this blank and HOME will be used.  You can use syntax ~/
 # below to indicate home directory of the user.  You can also set this to
 # something like /tmp if you don't want the authorizations to be in home
 # directories.
@@ -135,8 +137,8 @@
 # Automatic VT allocation.  Right now only works on Linux.  This way
 # we force X to use specific vts.  turn VTAllocation to false if this
 # is causing problems.
-#FirstVT=7
-#VTAllocation=true
+FirstVT=7
+VTAllocation=true
 # Should double login be treated with a warning (and possibility to change
 # vts on linux systems for console logins)
 #DoubleLoginWarning=true
@@ -179,7 +181,7 @@
 # Note: Anytime we find a -query or -indirect on the command line we do
 # not add a "-nolisten tcp", as then the query just wouldn't work, so
 # this setting only affects truly local sessions.
-#DisallowTCP=true
+DisallowTCP=false
 # By default never place cookies if we "detect" NFS.  We detect NFS
 # by detecting "root-squashing".  It seems bad practice to place
 # cookies on things that go over the network by default and thus we
@@ -199,7 +201,7 @@
 # allow local access is another alternative but not the safest.
 # Firewalling port 177 is the safest if you wish to have xdmcp on.
 # Read the manual for more notes on the security of XDMCP.
-Enable=false
+Enable=true
 # Honour indirect queries, we run a chooser for these, and then redirect
 # the user to the chosen host.  Otherwise we just log the user in locally.
 #HonorIndirect=true
@@ -313,6 +315,7 @@
 #BackgroundImage=
 #BackgroundScaleToFit=true
 #BackgroundColor=#76848F
+BackgroundColor=#a3bbce
 # XDMCP session should only get a color, this is the sanest setting since
 # you don't want to take up too much bandwidth
 #BackgroundRemoteOnlyColor=true
@@ -333,6 +336,7 @@
 #ShowLastSession=true
 # Always use 24 hour clock no matter what the locale.
 #Use24Clock=false
+Use24Clock=true
 # Use circles in the password field.  Looks kind of cool actually,
 # but only works with certain fonts.
 #UseCirclesInEntry=false
@@ -406,7 +410,7 @@
 #
 # If you wish to run the XDMCP chooser on the local display use the
 # following line
-#0=Chooser
+0=Chooser

 ## Note:
 # is your X server not listening to TCP requests?  Perhaps you should look
</screen>
       </para><para>
Son satırdaki <literal>0=Chooser</literal> gerekli değil, istemci makinanın <userinput>gdm</userinput> yapılandırması olmuş mu diye bakmak isterseniz faydalı, o da kendini sunucu zannediyor çünkü. Yapılandırmalar bittikten sonra isterseniz denemek için ona bağlanabilirsiniz <literal>:-)</literal>
       </para><para>
Şimdi sıra <filename>/etc/inittab</filename> dosyasında. Bu dosyayı da düzenledikten sonra sistemi yeniden başlatacaksınız. Dosyada iki satır önemli,
bu iki satırı bulup onları aşağıdaki gibi değiştirin:
       </para><para>
<screen>
id:5:initdefault:

...

x:5:respawn:/usr/bin/gdm
</screen>
       </para><para>
<userinput>gdm</userinput> bu makinada artalanda bir sunucu olarak çalışacağından alışılmış olan <option>-nodaemon</option> seçeneğini kullanmıyoruz.
      </para></listitem>
    </varlistentry></variablelist></para><para>
Sistemi yeniden başlattığınızda doğrudan X sunucusundan oturum açıyor olacaksınız. Şimdiye dek X sunucusu ağdan gelecek istekleri beklemiyorsa artık bekliyor olacak. <userinput>gdm</userinput>'de 177/udp'yi dinliyor olacak. <userinput>nmap</userinput> ile bakarsanız aşağıdakine benzer bir çıktı alacaksınız:
    </para><para>
<screen><prompt>~> </prompt><userinput>nmap -sTU 127.0.0.1</userinput>

Starting nmap V. 3.00 ( www.insecure.org/nmap/ )
Interesting ports on localhost (127.0.0.1):
(The 3044 ports scanned but not shown below are in state: closed)
Port       State       Service
67/udp     open        dhcpserver
177/udp    open        xdmcp
6000/tcp   open        X11
7100/tcp   open        font-service

Nmap run completed -- 1 IP address (1 host up) scanned in 9 seconds
</screen>
    </para><para>
Burada tekrarlıyorum: <command>Güvenlik duvarınızı yapılandırmadan bu makina ile örütbağa çıkmayın! Açık portlarınız var.</command>
    </para>
  </sect1><sect1 xml:id="gdm-terminal_istemci">
    <title>İstemci Yapılandırması</title>
    <para>
Başta da belirttiğim gibi istemci makinaya gerekli olanların dışında birşey kurmadım, çünkü sistemin 2 GB'lık sabit diske sığması gerekiyordu. Özel kurulumu seçip sadece X ve GNOME kurulumu yapın, ağ yapılandırmasında IP'nin DHCP üzerinden alınmasını sağlayın ve makinaya ismini verin (Benimki <literal>belma.buguner.home</literal>). Bu makina için güvenlik duvarı olmayacak.
Kurulum sırasında dikkat edin. Yoksa sunucu makinaya bağlanamazsınız.
   </para><para>
Eğer sistem X sunucusu ile açılmaya ayarlanmışsa ve yazıtiplerini de yüklemediyseniz açılmayacaktır. X açılmayacak, hata verecek ve konsola düşeceksiniz.
   </para><para>
Burada ağ yapılandırmasını, sunucu için yaptığım gibi anlatmayacağım. Kurulum bitip sistem açıldığında IP adresi olarak
sunucudan <literal>10.10.10.100</literal> adresini alacak. <userinput>ifconfig</userinput> komutu ile ağ yapılandırmanızı görebilirsiniz. Gerekli değil ama, <userinput>nmap 10.10.10.1</userinput> ile de sunucu makinada bir port taraması yapıp, iki makinanın birbirini görüp görmediğine bakabilirsiniz.
    </para><para>
Bir DNS sunucumuz olmadığından sunucu makinanın ismini istemci makinaya öğretmemiz lazım. Bunun için, <filename>/etc/hosts</filename> dosyasını düzenlememiz gerekli.
    </para><para>
<screen><prompt>~> </prompt><userinput>cat /etc/hosts</userinput>
# Do not remove the following line, or various yazılıms
# that require network functionality will fail.
127.0.0.1       localhost.localdomain localhost
10.10.10.1      nilgun.buguner.home
10.10.10.100    belma.buguner.home
</screen>
    </para><para>
XF86Config dosyası kurulum sırasında yapılandırılmış olmalı. Dosya üzerinde tek bir satırda değişiklik yapacağız ve X sunucusu <userinput>xfs</userinput> sunucusunu bulabilecek. <filename>/etc/X11/XF86Config</filename> dosyasını bir metin düzenleyici ile açın ve <literal>FontPath</literal> satırını bulup, satırı aşağıdaki gibi düzenleyin:
    </para><para>
<screen>        FontPath    "tcp/10.10.10.1:7100"</screen>
    </para><para>
Burada <literal>10.10.10.1</literal> sunucu makinamızın adresi. Sizinki farklıysa onu yazın. Artık X sunucunuz açılacaktır. Diğer işlemlere geçmeden önce deneyin.
<userinput>startx</userinput> ile X'i başlatabilirsiniz. GNOME'un açılma hızını belleğinize kaydedin, yapılandırmanız bitip, sunucu makinaya bağlandığınızda KDE açılacak ve buna rağmen hız farkını farkedeceksiniz <literal>:-)</literal> (Dikkat, istemci makinaya KDE kurmadım; KDE, sunucu makinada kurulu. Böylece ne yaptığımızdan %100 emin oluyoruz.)
    </para><para>
X oturumunun çalıştığını gördükten sonra artık <userinput>gdm</userinput>'yi yapılandırabiliriz. Yöntem aynı; bir fark dosyası veriyorum, siz bu dosyaya bakarak kendi dosyanızı düzenliyorsunuz.
    </para><para>
<screen><prompt>/etc/X11/gdm> </prompt><userinput>diff -u factory-gdm.conf gdm.conf > gdm.conf.diff</userinput>
<prompt>/etc/X11/gdm> </prompt><userinput>cat gdm.conf.diff</userinput>
--- factory-gdm.conf    2004-06-07 07:07:44.000000000 +0300
+++ gdm.conf    2004-06-10 01:08:33.000000000 +0300
@@ -46,10 +46,12 @@
 # The greeter for local (non-xdmcp) logins.  Change gdmlogin to gdmgreeter to
 # get the new graphical greeter.
 #Greeter=/usr/bin/gdmlogin
+Greeter=/usr/bin/gdmgreeter

 # The greeter for xdmcp logins, usually you want a less graphically intensive
 # greeter here so it's better to leave this with gdmlogin
 #RemoteGreeter=/usr/bin/gdmlogin
+RemoteGreeter=/usr/bin/gdmgreeter

 # Launch the greeter with an additional list of colon seperated gtk
 # modules. This is useful for enabling additional feature support
@@ -199,7 +201,7 @@
 # allow local access is another alternative but not the safest.
 # Firewalling port 177 is the safest if you wish to have xdmcp on.
 # Read the manual for more notes on the security of XDMCP.
-Enable=false
+Enable=true
 # Honour indirect queries, we run a chooser for these, and then redirect
 # the user to the chosen host.  Otherwise we just log the user in locally.
 #HonorIndirect=true
@@ -333,6 +335,7 @@
 #ShowLastSession=true
 # Always use 24 hour clock no matter what the locale.
 #Use24Clock=false
+Use24Clock=true
 # Use circles in the password field.  Looks kind of cool actually,
 # but only works with certain fonts.
 #UseCirclesInEntry=false
@@ -389,7 +392,7 @@
 # and they will always be started.  Each line must start with a unique
 # number and that will be the display number of that server.  Usually just
 # the 0 server is used.
-0=Standard
+#0=Standard
 #1=Standard
 # Note the VTAllocation and FirstVT keys on linux.  Don't add any vt&lt;number>
 # arguments if VTAllocation is on, and set FirstVT to be the first vt
@@ -400,9 +403,9 @@
 # send patches.  X servers will just not get any extra arguments then.
 #
 # If you want to run an X terminal you could add an X server such as this
-#0=Terminal -query serverhostname
+0=Terminal -query nilgun.buguner.home
 # or for a chooser (optionally serverhostname could be localhost)
-#0=Terminal -indirect serverhostname
+0=Terminal -indirect nilgun.buguner.home
 #
 # If you wish to run the XDMCP chooser on the local display use the following
 # line
</screen>
    </para><para>
Şimdi sıra <filename>/etc/inittab</filename> dosyasında. Bu dosyayı da düzenledikten sonra sistemi yeniden başlatacaksınız. Dosyada iki satır önemli,
bu iki satırı bulup onları aşağıdaki gibi düzenleyin:
       </para><para>
<screen>
id:5:initdefault:

...

x:5:respawn:/usr/bin/gdm -nodaemon
</screen>
       </para><para>veya:</para><para>
<screen>
id:5:initdefault:

...

x:5:respawn:/usr/X11R6/bin/X -query nilgun.buguner.home
</screen>
     </para><para>
Artık hazırsınız. Sistemi yeniden başlatın. Doğrudan, hiçbir ek işlem yapmadan sunucu makinaya bağlanacaksınız. Sunucu makinada oturum açarken sunucu makinada geçerli bir kullanıcı adı ve parolası belirtmeyi unutmayın. İstemci makinada geçerli kullanıcı ismini ve parolasını orada kullanamazsınız.
    </para><para>
    </para>
  </sect1>
  <sect1 xml:id="gdm-terminal_sonuc">
    <title>Sonuç</title>
    <para>
Bu belge hemencecik birşeyler yapıp bir X terminali çalıştırmak için yeterlidir.
(Belge böyle bir çalışmanın ürünüdür.) İhtiyaçlarınıza uygun bir yapılandırma için farklı çözümler geliştirilebilir. Bu ihtiyaçların bir kısmına çözüm olarak geliştirilmiş projeler de var. Geliştirilecek başka projeler de olabilir, böyle bir projeyi neden siz başlatmayasınız... Çeşitli ihtiyaçlar ve bir kaç örnek:
    </para><para><itemizedlist>
    <listitem>
Diskli bir makinayi X terminali haline getirmek. Bunu anlattım.
    </listitem><listitem>
Disksiz bir makinayı, yerel işlem de yapabilir şekilde kullanabilmek. Bunun bir projesi var: <link xlink:href="http://www.ltsp.org">LTSP</link>.
    </listitem><listitem>
Disksiz bir makinayı yerel işlem yapamaz şekilde kullanmak. Bunun bir projesi var: <link xlink:href="http://pxes.sourceforge.net">PXES</link>.
    </listitem><listitem>
Disk yerine yerel depo olarak başka şeyler kullanmak, flash vs. gibi. Hazır terminaller örneğin.
    </listitem><listitem>
Mevcut bir ağı, örneğin bir windows ağının sadece sunucusunu Linux (ve samba) ile değiştirip, ağın tamamını, "gerektiği anda" sunucuda bir uygulama çalıştırıp X terminalleri ağına dönüştürmek. Böyle birşey okullara lazım <literal>:-)</literal>
    </listitem></itemizedlist></para><para>
Hatırlatma: Dosyalarınızı yapılandırırken makina isimleri olarak <literal>nilgun.buguner.home</literal> ve <literal>belma.buguner.home</literal> isimleri yerine kendinize özgü isimler kullanmayı unutmayın.
    </para><para>
Hayırlı olsun.
  </para></sect1>
</article>


