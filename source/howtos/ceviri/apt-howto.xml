<?xml version="1.0" encoding="UTF-8"?>
<!--DOCTYPE article SYSTEM "../../docbook/dtd/docbookx.dtd"-->
<!-- ********************************************************************
       ceviri/apt-howto.xml
     ******************************************************************** -->
<article xml:id="apt-howto" xmlns="http://docbook.org/ns/docbook"
 version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:lang="tr">
 <info>
  <!-- Use "HOWTO", "mini HOWTO", "FAQ" in title, if appropriate -->
  <title>APT NASIL</title>
  <authorgroup>
   <author>
    <personname>Gustavo Noronha Silva</personname>
   </author>
   <author role="translator">
    <personname>Murat Demirten</personname>
   </author>
   <author role="update">
    <personname>Oğuz Yarımtepe</personname>
   </author>
  </authorgroup>
  <pubdate>Ocak 2006</pubdate>
  <!-- Most recent revision goes at the top; list in descending order -->
  <revhistory>
   <title>Bu çevirinin sürüm bilgileri:</title>
   <revision>
    <revnumber>1.8.12</revnumber>
    <date>Nisan 2006</date>
    <authorinitials>NBB</authorinitials>
    <revremark>Çevirinin lisansı özgün belgenin lisansı ile aynı (GPL) yapıldı: <link xlink:href="http://cvs.debian.org/ddp/manuals.sgml/apt-howto/apt-howto.tr.sgml?rev=1.8&amp;root=debian-doc&amp;view=log"/></revremark>
   </revision>
   <revision>
    <revnumber>1.8.11</revnumber>
    <date>Ocak 2006</date>
    <authorinitials>OY</authorinitials>
    <revremark>Özgün belgenin 1.8.11 sürümüne güncellendi.</revremark>
   </revision>
   <revision>
    <revnumber>1.8.3</revnumber>
    <date>Aralık 2002</date>
    <authorinitials>MD</authorinitials>
    <revremark>İlk çeviri.</revremark>
   </revision>
  </revhistory>
  <revhistory>
   <title>Özgün belgenin sürüm bilgileri:</title>
   <revision>
    <revnumber>1.8.11</revnumber>
    <date>Ağustos 2005</date>
    <authorinitials>GNS</authorinitials>
   </revision>
  </revhistory>
  <!-- Provide a good abstract; a couple of sentences is sufficient -->
  <abstract>
   <para>
Bu belge Debian paket yönetim uygulaması APT hakkında genel kullanım bilgileri vermeyi amaçlamaktadır. APT'nin amacı Debian kullanıcılarının hayatını kolaylaştırmak ve sistemin yönetiminin daha iyi, anlaşılır şekilde yapılabilmesini sağlamaktır. APT Debian dağıtımı olarak kullanıcıları daha çok desteklemek amacıyla, Debian projesi için geliştirilmiştir.
   </para>
  </abstract>
  <legalnotice>
   <title>Yasal Açıklamalar</title>
   <para>
Bu belge çevirisinin, <emphasis>APT NASIL</emphasis>,
1.8.11 sürümünün <emphasis role="bold"> telif hakkı © 2006 <emphasis>Oğuz Yarımtepe</emphasis></emphasis>'ye,
1.8.3 sürümünün çevirisinin <emphasis role="bold"> telif hakkı © 2003 <emphasis>Murat Demirten</emphasis></emphasis>'e
ve özgün belgenin <emphasis role="bold"> telif hakkı © 2002 <emphasis>Gustavo Noronha Silva</emphasis></emphasis>'ya aittir. Bu çeviriyi, Özgür Yazılım Vakfı tarafından yayınlanmış bulunan <link xlink:href="&gnu-licences;#GPL">GNU Genel Kamu Lisansı</link>nın 2. ya da daha sonraki sürümünün koşullarına bağlı kalarak kopyalayabilir, dağıtabilir ve/veya değiştirebilirsiniz. Bu Lisansın özgün kopyasını <link xlink:href="&gnu-licences;#GPL"/> adresinde bulabilirsiniz.
  </para>
   <para>
BU BELGE "ÜCRETSİZ" OLARAK RUHSATLANDIĞI İÇİN, İÇERDİĞİ BİLGİLER İÇİN İLGİLİ KANUNLARIN İZİN VERDİĞİ ÖLÇÜDE HERHANGİ BİR GARANTİ VERİLMEMEKTEDİR. AKSİ YAZILI OLARAK BELİRTİLMEDİĞİ MÜDDETÇE TELİF HAKKI SAHİPLERİ VE/VEYA BAŞKA ŞAHISLAR BELGEYİ "OLDUĞU GİBİ", AŞİKAR VEYA ZIMNEN, SATILABİLİRLİĞİ VEYA HERHANGİ BİR AMACA UYGUNLUĞU DA DAHİL OLMAK ÜZERE HİÇBİR GARANTİ VERMEKSİZİN DAĞITMAKTADIRLAR. BİLGİNİN KALİTESİ İLE İLGİLİ TÜM SORUNLAR SİZE AİTTİR. HERHANGİ BİR HATALI BİLGİDEN DOLAYI DOĞABİLECEK OLAN BÜTÜN SERVİS, TAMİR VEYA DÜZELTME MASRAFLARI SİZE AİTTİR.
  </para>
   <para>
İLGİLİ KANUNUN İCBAR ETTİĞİ DURUMLAR VEYA YAZILI ANLAŞMA HARİCİNDE HERHANGİ BİR ŞEKİLDE TELİF HAKKI SAHİBİ VEYA YUKARIDA İZİN VERİLDİĞİ ŞEKİLDE BELGEYİ DEĞİŞTİREN VEYA YENİDEN DAĞITAN HERHANGİ BİR KİŞİ, BİLGİNİN KULLANIMI VEYA KULLANILAMAMASI (VEYA VERİ KAYBI OLUŞMASI, VERİNİN YANLIŞ HALE GELMESİ, SİZİN VEYA ÜÇÜNCÜ ŞAHISLARIN ZARARA UĞRAMASI VEYA BİLGİLERİN BAŞKA BİLGİLERLE UYUMSUZ OLMASI) YÜZÜNDEN OLUŞAN GENEL, ÖZEL, DOĞRUDAN YA DA DOLAYLI HERHANGİ BİR ZARARDAN, BÖYLE BİR TAZMİNAT TALEBİ TELİF HAKKI SAHİBİ VEYA İLGİLİ KİŞİYE BİLDİRİLMİŞ OLSA DAHİ, SORUMLU DEĞİLDİR.
  </para>
   <para>
Tüm telif hakları aksi özellikle belirtilmediği sürece sahibine aittir. Belge içinde geçen herhangi bir terim, bir ticari isim ya da kuruma itibar kazandırma olarak algılanmamalıdır. Bir ürün ya da markanın kullanılmış olması ona onay verildiği anlamında görülmemelidir.
  </para>
  </legalnotice>
 </info>
 <!-- Content follows...include introduction, license information, feedback -->
 <sect1 xml:id="apt-howto_intro">
  <title>Başlarken</title>
  <para>
Önce <filename>.tar.gz</filename> vardı. Kullanıcılar GNU/Linux sistemlerinde kullandıkları her programı derlemek zorundaydılar. Debian geliştirimi sırasında, kurulu paketlerin yönetimini sağlayacak bir sistemin zorunluluğu hemen görüldü. Bu amaçla geliştirilen sisteme <literal>dpkg</literal> adı verildi. Sonuçta GNU/Linux dünyası, Red Hat'in kendi paket yönetim sistemini geliştirmesinden biraz önce, <literal>dpkg</literal> ile tanıştı.
    </para>
  <para>
Hemen ardından GNU/Linux sisteminin geliştiricilerinin kafasında yeni bir ikilem oluştu. Paketlerin hızlı, pratik ve verimli bir yöntemle kurulabilmesini, paket bağımlılıkları yönetimi ve paket güncellemeleri sırasında yapılandırma dosyalarının güncellenmesini sağlayacak bir araca ihtiyaç vardı. Gene Debian projesi kapsamında ilk ürün ortaya çıktı: APT (Advanced Packaging Tool - Gelişmiş Paket Yönetim Aracı). APT daha sonra Connectiva tarafından RPM paketler ile kullanılmak üzere port edildi ve bazı dağıtımlar tarafından da kullanılmaya başlandı.
    </para>
  <para>
Bu belgede Connectiva APT uyarlaması olan <command>apt-rpm</command>'den bahsedilmemekle birlikte, belgeye eklenti amacıyla bu konuda da bir şeyler gönderebilirsiniz.
    </para>
  <para>
Bu belge bir sonraki Debian sürümü olacak <literal>Sarge</literal> temel alınarak yazılmıştır.
    </para>
 </sect1>
 <sect1 xml:id="apt-howto_basico">
  <title>Temel Yapılandırma</title>
  <sect2 xml:id="apt-howto_sources.list">
   <title>/etc/apt/sources.list dosyası</title>
   <para>
APT, paketlerin bulunduğu kaynaklara nasıl erişebileceğinin bilgisini <filename>/etc/apt/sources.list</filename> dosyasında saklar.
      </para>
   <para>
Dosya içindeki girdilerin biçimi aşağıdaki gibidir:
      </para>
   <para>
    <screen>
deb http://site.http.org/debian sürüm bölüm1 bölüm2 bölüm3
deb-src http://site.http.org/debian sürüm bölüm1 bölüm2 bölüm3
</screen>
   </para>
   <para>
Elbette yukarıda verdiğimiz örnek kullanılabilir değildir. Her satırın ilk kelimesi mutlaka <literal>deb</literal> veya <literal>deb-src</literal> olmak zorundadır. Bu ifadeler arşivin türünü belirler: derlenmiş ve kullanıma hazır duruma getirilmiş, çalıştırılabilir paketler (<literal>deb</literal>) veya programın asıl kaynak kodu + Debian kontrol dosyası (<literal>.dsc</literal>) ve programı `debianlaştırmak' için gerekli değişiklikleri içeren <literal>diff.gz</literal>.
      </para>
   <para>
Öntanımlı Debian <filename>sources.list</filename> dosyasının biçimi genellikle aşağıdaki gibi olacaktır:
      </para>
<screen># See sources.list(5) for more information, especialy
# Remember that you can only use http, ftp or file URIs
# CDROMs are managed through the apt-cdrom tool.
<userinput>deb http://http.us.debian.org/debian stable main contrib non-free</userinput>
<userinput>deb http://non-us.debian.org/debian-non-US stable/non-US main contrib non-free</userinput>
<userinput>deb http://security.debian.org stable/updates main contrib non-free</userinput>

# Uncomment if you want the apt-get source function to work
#deb-src http://http.us.debian.org/debian stable main contrib non-free
#deb-src http://non-us.debian.org/debian-non-US stable non-US
</screen>
   <para>
En temel Debian kurulumu için ihtiyaç duyulan satırlar bunlardır. Birinci <literal>deb</literal> satırı resmi Debian arşivini gösterirken, ikincisi ABD dışı arşivini ve üçüncüsü ise Debian güvenlik güncellemelerini içeren arşivi göstermektedir.
      </para>
   <para>
Sondaki iki satır yorum haline getirilmiş olup (satır başındaki <literal>#</literal> karakteri ile) <command>apt-get</command> tarafından yoksayılmaktadır. Buradaki <literal>deb-src</literal>
 satırları Debian kaynak paketlerini göstermektedirler. Eğer sıklıkla program kaynak kodlarını test veya yeniden derleme amaçlı olarak indiriyorsanız satırları aktif hale getirmelisiniz.
      </para>
   <para><filename>/etc/apt/sources.list</filename> dosyası çeşitli tiplerde satırlar içerebilir. APT uygulaması <literal>http</literal>, <literal>ftp</literal>, <literal>file</literal> (yerel dosyalar, örneğin bağlı durumdaki bir ISO9660 dosya sistemi) ve <literal>ssh</literal> arşiv türlerini tanıyabilmektedir.
      </para>
   <para><filename>/etc/apt/sources.list</filename> dosyasında değişiklik yaptıktan sonra <command>apt-get update</command> komutunu çalıştırmayı unutmayınız. Bu komutla APT'nin dosyada belirtmiş olduğunuz arşivlerdeki güncel paket listesini edinmesini sağlamış olursunuz.
      </para>
  </sect2>
  <sect2 xml:id="apt-howto_dpkg-scanpackages">
   <title>APT'nin yerel olarak kullanımı</title>
   <para>
Bazen APT tarafından kurulmasını istediğiniz onlarca paketiniz olabilir. Bunların hepsini birden sisteminizdeki kopyasından kurulumunu isterseniz aşağıdaki adımları izlemelisiniz.
      </para>
   <para>
Öncelikle bir dizin oluşturup içerisinde sizdeki <filename>.deb</filename> paketlerini atınız. Örneğin:
      </para>
<screen># mkdir /root/debs</screen>
   <para>
Paketlerin <filename>control</filename> dosyalarında belirtilen tanımlamalarının üzerine kendi tanımlamalarınızı <literal>override</literal> dosyası kullanarak yapabilirsiniz. Bu dosya içerisinde paketle birlikte gelen bazı seçenekleri aşağıdaki gibi tanımlayabilirsiniz:
      </para>
   <para>
    <varname>paket öncelik bölüm</varname>
   </para>
   <para><varname>paket</varname>, paketin ismini belirtir; <varname>öncelik</varname> değeri sırasıyla düşük, orta ve yüksek anlamında <literal>low</literal>, <literal>medium</literal> ve <literal>high</literal> olabilir; <varname>bölüm</varname> ise paketin ait olduğu bölümü gösterir. Dosya adının mutlaka böyle olması gerekmez, başka bir dosya kullanıp <command>dpkg-scanpackages</command>'a değiştirge olarak verebilirsiniz. Eğer bir <literal>override</literal> dosyası yazmak istemiyorsanız <command>dpkg-scanpackages</command> programını çağırırken <filename>/dev/null</filename>'u kullanabilirsiniz.
      </para>
   <para>
Halen <filename>/root</filename> dizini içerisindeyken aşağıdaki komutu çalıştırın:
      </para>
<screen># dpkg-scanpackages debs <emphasis>dosya</emphasis> | gzip &gt; debs/Packages.gz</screen>
   <para>
Yukarıdaki satırda <varname>dosya</varname> olarak girilen dosya, <literal>override</literal> dosyasıdır. Bu komut APT tarafından kullanılmak üzere, paketler hakkında çeşitli bilgiler içeren <filename>Packages.gz</filename> dosyasını üretir. Paketleri kullanmak için son olarak aşağıdaki satırı <filename>sources.list</filename> dosyanıza ekleyin:
      </para>
<screen>deb file:/root debs/</screen>
   <para>
Bu eklentiden sonra artık APT uygulamasını yeni arşivinizle birlikte kullanabilirsiniz. Ayrıca isterseniz kaynak paketler için de yerel bir arşiv oluşturabilirsiniz. Bunun için izlemeniz gereken yol yukarıdaki ile hemen hemen aynıdır. Dikkat etmeniz gereken nokta, <filename>.orig.tar.gz</filename>, <filename>.dsc</filename> ve <filename>.diff.gz</filename> dosyalarını da dizin içerisine kopyalamanız ve <filename>Packages.gz</filename> dosyası yerine <filename>Sources.gz</filename> dosyasını oluşturmanız gerektiğidir. Kullanacağınız program ise <command>dpkg-scansources</command> olacaktır.
      </para>
<screen> # dpkg-scansources debs | gzip &gt; debs/Sources.gz</screen>
   <para>
Dikkat ettiyseniz <command>dpkg-scansources</command> uygulaması değiştirge olarak bir <filename>override</filename> dosyasına ihtiyaç duymamaktadır. <filename>sources.list</filename> dosyanıza eklemeniz gereken satır ise aşağıdadır:
      </para>
<screen>deb-src file:/root debs/</screen>
  </sect2>
  <sect2 xml:id="apt-howto_netselect">
   <title>sources.list dosyası için en iyi yansıya karar verme</title>
   <subtitle>netselect, netselect-apt</subtitle>
   <para>
Yeni Debian kullanıcılarının kararsız oldukları noktalardan biri <filename>sources.list</filename> dosyasına hangi Debian yansısını eklemeleri gerektiğidir. En iyi yansıya karar vermek için pek çok yöntem mevcuttur. Deneyimli kullanıcılar bir betik programı yazarak yansılar ile aradaki iletişim hızını ölçebilirler. Bu işi sizin için büyük ölçüde yapacak bir paket mevcuttur: <command>netselect</command>.
      </para>
   <para><command>netselect</command> paketini bildiğimiz yöntemle kuralım:
      </para>
<screen># apt-get install netselect</screen>
   <para>
Değiştirge vermeden programı çalıştırdığımızda bir yardım sayfası gözükecektir. Programı birbirinden boşluk karakteri ile ayrılmış yansı adresleriyle çalıştırırsanız geriye bir skor ve yansı adresi döndürecektir. Buradaki değer yaklaşık olarak <command>ping</command> zamanı,ilgili yansıya kaç adımda ulaşılabilindiği bilgisini dikkate alır ve yaklaşık indirme zamanıyla ters orantılıdır (yanı, en düşüğü en iyisidir). Geri dönen alan adı en düşük skora sahip olandır. Eğer değiştirge olarak verdiğiniz tüm yansılara ait skorları görmek isterseniz programı <option>-vv</option> seçeneği ile çalıştırabilirsiniz.
      </para>
<screen># netselect ftp.debian.org http.us.debian.org ftp.at.debian.org download.unesp.br ftp.debian.org.br
 365 ftp.debian.org.br
#</screen>
   <para>
Bu çıktının anlamı, <command>netselect</command> programına değiştirge olarak verdiğimiz yansılar arasından en uygununun <literal>ftp.debian.org.br</literal> olduğu ve bu yansı için elde edilen skor değerinin 365 olduğudur. (Bu değer herkes için farklı olacaktır!).
      </para>
   <para>
Şimdi <command>netselect</command> tarafından en hızlı olarak belirtilen yansıyı <filename>/etc/apt/sources.list</filename> dosyanıza (bkz. <xref linkend="apt-howto_sources.list"/>) ekleyebilir ve ardından <xref linkend="apt-howto_apt-get"/> bölümündeki yönergeleri takip edebilirsiniz.
      </para>
   <para>
    <note>
     <para>
Debian tam yansı listesine <link xlink:href="http://www.debian.org/mirror/mirrors_full"/> adresinden erişebilirsiniz.
        </para>
    </note>
   </para>
   <para>
0.3.ds1 sürümünden itibaren <command>netselect</command> paketi <command>netselect-apt</command> betiğini de içermektedir. Bu betik yukarıdaki işlemleri otomatik olarak yapmaktadır. Dağıtım olarak ne kullanmak istediğinizi belirtmeniz durumunda (öntanımlı olarak kararlı) yansılar arasından sizin için en iyileri seçilecek ve bu karar doğrultusunda en iyi <literal>main</literal> ve <literal>non-US</literal> yansıları ile <filename>sources.list</filename> dosyanız oluşturulacaktır. Aşağıdaki örnek kullanım ile kararlı dağıtım için bir <filename>sources.list</filename> dosyası üretilmektedir:
      </para>
<screen># ls sources.list
ls: sources.list: Böyle bir dosya ya da dizin yok
# netselect-apt stable
      <emphasis>(...) Bir miktar bekliyoruz</emphasis>
# ls -l sources.list
sources.list
#</screen>
    <warning>
     <para><filename>sources.list</filename> dosyası bulunduğunuz dizin altında oluşturulacaktır. Bu dosyayı kullanmak istiyorsanız <filename>/etc/apt</filename> dizini altına taşımalısınız.
        </para>
    </warning>
   <para>
Ardından <xref linkend="apt-howto_apt-get"/> bölümündeki yönergeleri izleyebilirsiniz.
      </para>
  </sect2>
  <sect2 xml:id="apt-howto_cdrom">
   <title>sources.list dosyasına CD-ROM ekleme</title>
   <para>
Eğer paketlerin kurulumu veya güncellemesi için halihazırda elinizde bulunan bir CD-ROM'u kullanmak istiyorsanız bunu <filename>sources.list</filename> dosyanıza eklemelisiniz. Bunun için CD-ROM'u takıp <command>apt-cdrom</command> programını aşağıdaki gibi çalıştırın:
  </para>
<screen># apt-cdrom add</screen>
   <para>
CD-ROM bağlanacak ve eğer geçerli bir Debian CD'si ise üzerindeki paketlere ait bilgiler okunacaktır. Eğer CD-ROM ayarlamalarınız biraz standart dışı ise aşağıdaki seçenekleri de kullanabilirsiniz:
   </para>
<literallayout>-h           - bu yardım iletisini gösterir
-d DİZİN     - DİZİN ile CD-ROM'un bağlanacağı yer belirtilir
-r           - Tanınmış bir CD-ROM'u yeniden adlandırır
-m           - Bağlama işlemini gerçekleştirir
-f           - Hızlı kip, paket dosyaları kontrol edilmez
-a           - Tarama kipi ile
</literallayout>
   <para/>
<screen>># apt-cdrom -d /home/kov/mycdrom add</screen>
   <para>
Ayrıca <filename>sources.list</filename> dosyanıza eklemeden CD-ROM'u tanıma işlemini yapabilirsiniz:
   </para>
<screen># apt-cdrom ident</screen>
   <para>
    <note>
     <para><command>apt-cdrom</command> CD-ROM aygıtınıza ait ayarların <filename>/etc/fstab</filename> dosyasında düzgün olarak yapılmış olduğu durumda çalışacaktır.
        </para>
    </note>
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="apt-howto_apt-get">
  <title>Paketlerin yönetimi</title>
  <sect2 xml:id="apt-howto_update">
   <title>Paket listesini güncelleme</title>
   <para>
Paket yönetim sistemi kurulu paketler, kurulu olmayan paketler, kurulabilir paketler vb. hakkında bilgileri kendi özel veritabanında tutmaktadır. <command>apt-get</command> programı bu veritabanını kullanarak istenilen paketin nasıl kurulacağını, başka hangi paketlerin daha kurulması gerektiğini öğrenir.
      </para>
   <para>
Bu listeyi güncellemek için <command>apt-get update</command> komutunu kullanmalısınız. Bu komut <filename>/etc/apt/sources.list</filename> dosyanıza bakar ve belirtilen arşivlerden güncel paket listesini indirir; ayrıntılı bilgi için bkz. <xref linkend="apt-howto_sources.list"/>.
      </para>
   <para>
Paket güncellemeleri ve güvenlikle ilgili güncellemelerden sizin ve sisteminizin haberdar olabilmesi için bu komutu düzenli aralıklarla çalıştırmakta fayda vardır.
      </para>
  </sect2>
  <sect2 xml:id="apt-howto_install">
   <title>Paket kurma</title>
   <para>
Sonunda sabırsızlıkla beklediğiniz bölüme geldik! Artık <filename>sources.list</filename> dosyanız hazır ve paket listeniz güncel durumda. Tek yapmanız gereken kuracağınız paketi belirtmek.
      </para>
<screen># apt-get install xchat</screen>
   <para>
APT hemen kendi veritabanını tarayarak bu paketin en son sürümünü bulacak ve <filename>sources.list</filename> dosyanızda belirtilen arşivden indirmeye başlayacaktır. Bu paketin başka paketlere de bağımlı olması durumunda - ki örneğimizde de öyle - aynı adımları bağımlılık yaratan paketler için de yapacaktır. Aşağıdaki örneğe bakınız:
      </para>
<screen># apt-get install nautilus
Reading Package Lists... Done
Building Dependency Tree... Done
The following extra packages will be installed:
  bonobo libmedusa0 libnautilus0
The following NEW packages will be installed:
  bonobo libmedusa0 libnautilus0 nautilus
0 packages upgraded, 4 newly installed, 0 to remove and 1  not upgraded.
Need to get 8329kB of archives. After unpacking 17.2MB will be used.
Do you want to continue? [Y/n]
</screen>
   <para>
    <command>nautilus</command> paketi bazı kütüphane paketlerine bağımlı durumdadır. Eğer bağımlılık yaratan paketleri de komutumuza eklemiş olsaydık APT devam etmek istiyor musunuz? sorusunu sormayacak ve hemen paketleri indirmeye başlayacaktı.
   </para>
   <para>
Bunun anlamı APT'nin sadece komut satırında belirtilmeyen ancak gereken paketleri de kurmak istediği zaman onay isteyeceğidir.
   </para>
   <para>
Aşağıdaki <command>apt-get</command> seçenekleri işinize yarayabilir:
   </para>
<literallayout>-h    Bu yardım iletisini gösterir.
-d    Sadece indirir, kurulum yapılmaz
-f    Bütünlük kontrolü başarısız olsa da devam etmeye çalışır
-s    Hiçbir eylem yapmaz, sadece olayı simüle eder
-y    Tüm sorulara Evet cevabı verildiği varsayılır
-u    İşlem sonucunda güncellenecek olan paketleri listeler
</literallayout>
   <para>
Birden fazla paket kurulmak üzere tek satırda seçim yapılabilir. Gerekli paketler indirilir ve <filename>/var/cache/apt/archives</filename> dizini altına ilerideki kurulumlarda da kullanılmak üzere kaydedilir.
      </para>
   <para>
Aynı komut satırında kaldırılmasını istediğiniz paketleri de belirtebilirsiniz. Bunun için kaldırmak istediğiniz paketin isminin sonuna bir <literal>-</literal> karakteri ekleyerek yazmanız yeterli:
      </para>
<screen># apt-get install nautilus gnome-panel-
Reading Package Lists... Done
Building Dependency Tree... Done
The following extra packages will be installed:
  bonobo libmedusa0 libnautilus0
The following packages will be REMOVED:
  gnome-applets gnome-panel gnome-panel-data gnome-session
The following NEW packages will be installed:
  bonobo libmedusa0 libnautilus0 nautilus
0 packages upgraded, 4 newly installed, 4 to remove and 1  not upgraded.
Need to get 8329kB of archives. After unpacking 2594kB will be used.
Do you want to continue? [Y/n]
</screen>
   <para>
Paket kaldırmayla ilgili bilgiler için <xref linkend="apt-howto_remove"/> bölümüne bakınız.
      </para>
   <para>
Eğer herhangi bir şekilde kurulu bir paketin dosyalarına zarar verdiyseniz veya sadece kurulu bir paketin yeniden indirilip tekrar kurulmasını istiyorsanız  <option>--reinstall</option> seçeneğini örnekteki gibi kullanmalısınız.
      </para>
<screen># apt-get --reinstall install gdm
Reading Package Lists... Done
Building Dependency Tree... Done
0 packages upgraded, 0 newly installed, 1 reinstalled, 0 to remove and 1  not upgraded.
Need to get 0B/182kB of archives. After unpacking 0B will be used.
Do you want to continue? [Y/n]
</screen>
  </sect2>
  <sect2 xml:id="apt-howto_remove">
   <title>Paket kaldırma</title>
   <para>
Bir paketi artık kullanmak istemiyorsanız APT ile sisteminizden paketi kaldırabilirsiniz. Bunun için <command>apt-get remove package</command> komutunu vermeniz yeterli olacaktır. Örneğin:
      </para>
<screen># apt-get remove gnome-panel
Reading Package Lists... Done
Building Dependency Tree... Done
The following packages will be REMOVED:
  gnome-applets gnome-panel gnome-panel-data gnome-session
0 packages upgraded, 0 newly installed, 4 to remove and 1  not upgraded.
Need to get 0B of archives. After unpacking 14.6MB will be freed.
Do you want to continue? [Y/n]
</screen>
   <para>
Yukarıda da görüldüğü üzere APT kaldırılan pakete bağımlı olan paketler üzerinde de işlem yapmaktadır. Yukarıdaki soruyu onayladığınızda listelenen tüm paketler kaldırılacaktır. APT kullanarak bir paketi, o pakete bağımlı olan diğer paketleri kaldırmadan kaldırmanın :) bir yolu yoktur.
      </para>
   <para><command>apt-get</command>'in yukarıdaki gibi çalıştırılması sonrasında listelenen paketler sistemden kaldırılacak ancak paketlere ait yapılandırma dosyaları -eğer varsa- sistemde kalacaktır. Yapılandırma dosyaları ile birlikte paketleri tamamen kaldırmak için aşağıdaki komutu çalıştırın:
      </para>
<screen># apt-get --purge remove gnome-panel
Reading Package Lists... Done
Building Dependency Tree... Done
The following packages will be REMOVED:
  gnome-applets* gnome-panel* gnome-panel-data* gnome-session*
0 packages upgraded, 0 newly installed, 4 to remove and 1  not upgraded.
Need to get 0B of archives. After unpacking 14.6MB will be freed.
Do you want to continue? [Y/n]
</screen>
   <para>
Burada isminden sonra <literal>*</literal> karakteri olan paketlere ait yapılandırma dosyalarının da kaldırılacağını anlıyoruz.
      </para>
   <para>
Kurulum <command>install</command> yönteminde olduğu gibi kaldırma <command>remove</command> işleminde de aynı satırda kurmak istediğiniz paketleri belirtebilirsiniz. Bunun için kurulmasını istediğiniz paketin sonuna <literal>+</literal> karakteri eklemeniz gereklidir:
      </para>
<screen># apt-get --purge remove gnome-panel nautilus+
Reading Package Lists... Done
Building Dependency Tree... Done
The following extra packages will be installed:
  bonobo libmedusa0 libnautilus0 nautilus
The following packages will be REMOVED:
  gnome-applets* gnome-panel* gnome-panel-data* gnome-session*
The following NEW packages will be installed:
  bonobo libmedusa0 libnautilus0 nautilus
0 packages upgraded, 4 newly installed, 4 to remove and 1  not upgraded.
Need to get 8329kB of archives. After unpacking 2594kB will be used.
Do you want to continue? [Y/n]
</screen>
   <para><command>apt-get</command>, burada kaldırma işleminin yanı sıra kurulmasını istediğimiz paketi ve gerektirdiği diğer paketlerle birlikte listeler.
   </para>
  </sect2>
  <sect2 xml:id="apt-howto_upgrade">
   <title>Paket güncelleme</title>
   <para>
Paket güncellemeleri APT'nin çok başarılı olduğu bir işlemdir. Tek bir <command>apt-get upgrade</command> komutu ile tüm paketlerin güncellenmesi sağlanabilmektedir. Bu komutu kullandığınız dağıtımdaki programların güncel sürümlerine sisteminizi yükseltmek veya tümüyle yeni bir Debian sürümüne yükseltme yapmak amacıyla kullanabilirsiniz. Dağıtım yükseltmeleri için önerilen yol <command>apt-get dist-upgrade</command> ile yapılmasıdır; ayrıntılar için <xref linkend="apt-howto_dist-upgrade"/> kısmına bakınız.
      </para>
   <para>
Bu komutun <option>-u</option> seçeneği ile çalıştırılması oldukça yararlıdır. Bu seçeneklerin kullanımıyla APT güncellenecek paketleri listeler. APT paketlerin en son sürümlerini indirecek ve gereken sırada kurulumu gerçekleştirecektir. Böylesi bir güncelleme yapmadan önce <command>apt-get update</command> komutu ile paket listenizi de güncellemeniz önemlidir. Aşağıdaki örneğe bakalım:
      </para>
<screen># apt-get -u upgrade
Reading Package Lists... Done
Building Dependency Tree... Done
The following packages have been kept back
  cpp gcc lilo
The following packages will be upgraded
  adduser ae apt autoconf debhelper dpkg-dev esound esound-common ftp indent
  ipchains isapnptools libaudiofile-dev libaudiofile0 libesd0 libesd0-dev
  libgtk1.2 libgtk1.2-dev liblockfile1 libnewt0 liborbit-dev liborbit0
  libstdc++2.10-glibc2.2 libtiff3g libtiff3g-dev modconf orbit procps psmisc
29 packages upgraded, 0 newly installed, 0 to remove and 3 not upgraded.
Need to get 5055B/5055kB of archives. After unpacking 1161kB will be used.
Do you want to continue? [Y/n]
</screen>
   <para>
İşlem oldukça basittir. İlk bir kaç satırda <command>apt-get</command> bazı paketlerin sistemde tutulmaya devam edileceğini (kept back) söylemektedir. Bunun anlamı, listelenen programların yeni sürümleri olmasına rağmen herhangi bir nedenden ötürü sisteminize kurulamayacak olmasıdır. Büyük olasılıkla ilgili paketler, paket listenizde yer almayan paketlerin veya paket sürümlerinin kurulmasını gerektirmekte, bu işlem yapılamayacağı için de paketler güncellenmemektedir. İkinci olasılık, paketin yeni sürümünün sisteminizde daha önce olmayan yeni bir pakete bağımlı olmadır.
      </para>
   <para>
Birinci senaryo için kesin bir çözüm yoktur. İkinci durumda problem yaratan paketi <command>apt-get install</command> komutu ile kurarak sorunu çözebilirsiniz. Daha temiz bir yöntem ise <command>dist-upgrade</command> kullanmaktır, bu sayede sistemde daha önce olmayan yeni paketler de kurulacaktır, bkz. <xref linkend="apt-howto_dist-upgrade"/>.
      </para>
  </sect2>
  <sect2 xml:id="apt-howto_dist-upgrade">
   <title>Yeni bir sürüme güncelleme</title>
   <para>
APT'nin bu özelliği sayesinde bir defada tüm sisteminizi yeni bir Debian sürümüne ister Internet üzerinden isterse varolan bir CD üzerinden (bu CD, satın alınmış veya Internet üzerinden indirilmiş bir ISO görütüsünden elde edilmiş olabilir) yükseltebilirsiniz.
      </para>
   <para>
Ayrıca kurulu paketler arasındaki paket bağımlılıklarında değişmeler olduğunda kullanılır. <command>apt-get upgrade</command> ile yapılan güncellemelerde bu tür paketlere dokunulmaz.
      </para>
   <para>
Örnek olarak, kararlı Debian dağıtımının 0 sürümünü kullandığınızı düşünün ve 3. sürümü içeren bir CD edinmiş olun. APT'yi kullanarak sisteminizi bu CD üzerinden yeni sürüme güncelleyebilirsiniz. Bunu yapmak için öncelikle <command>apt-cdrom</command> ile (bkz. <xref linkend="apt-howto_cdrom"/>) ile CD'yi <filename>/etc/apt/sources.list</filename> dosyanıza ekleyin ve ardından <command>apt-get dist-upgrade</command> komutunu çalıştırın.
      </para>
   <para>
Unutmayın, APT her zaman paketin güncel sürümünü arar. Eğer <filename>/etc/apt/sources.list</filename> dosyanızda belirtilen arşivlerde bir paketin CD üzerindekinden daha yeni bir sürümü var ise güncelleme sırasında bu sürüm kullanılacaktır.
      </para>
   <para><xref linkend="apt-howto_upgrade"/> bölümündeki örneğimizde bazı paketlerin güncelleme sırasında korunduğunu (kept back) görmüştük. Bu problemi şimdi <command>dist-upgrade</command> ile çözebiliriz:
      </para>
<screen># apt-get -u dist-upgrade
Reading Package Lists... Done
Building Dependency Tree... Done
Calculating Upgrade... Done
The following NEW packages will be installed:
  cpp-2.95 cron exim gcc-2.95 libident libopenldap-runtime libopenldap1
  libpcre2 logrotate mailx
The following packages have been kept back
  lilo
The following packages will be upgraded
  adduser ae apt autoconf cpp debhelper dpkg-dev esound esound-common ftp gcc
  indent ipchains isapnptools libaudiofile-dev libaudiofile0 libesd0
  libesd0-dev libgtk1.2 libgtk1.2-dev liblockfile1 libnewt0 liborbit-dev
  liborbit0 libstdc++2.10-glibc2.2 libtiff3g libtiff3g-dev modconf orbit
  procps psmisc
31 packages upgraded, 10 newly installed, 0 to remove and 1 not upgraded.
Need to get 0B/7098kB of archives. After unpacking 3118kB will be used.
Do you want to continue? [Y/n]
</screen>
   <para>
Görüldüğü gibi paketler hem güncellenecek hem de yeni bağımlılıklar için yeni paketler de kurulacaktır. Ancak <command>lilo</command> paketi halen sistemde korunmaya devam etmektedir (kept back). Muhtemelen bağımlılık dışında daha ciddi bir problemi vardır. Problemin ne olduğunu aşağıdaki komutla görebiliriz:
      </para>
<screen># apt-get -u install lilo
Reading Package Lists... Done
Building Dependency Tree... Done
The following extra packages will be installed:
  cron debconf exim libident libopenldap-runtime libopenldap1 libpcre2
  logrotate mailx
The following packages will be REMOVED:
  debconf-tiny
The following NEW packages will be installed:
  cron debconf exim libident libopenldap-runtime libopenldap1 libpcre2
  logrotate mailx
The following packages will be upgraded
  lilo
1 packages upgraded, 9 newly installed, 1 to remove and 31 not upgraded.
Need to get 225kB/1179kB of archives. After unpacking 2659kB will be used.
Do you want to continue? [Y/n]
</screen>
   <para>
Yukarıdaki belirtildiği üzere, <command>lilo</command> paketi <command>debconf-tiny</command> paketi ile yeni oluşan bir çakışmaya sahiptir. Bunun anlamı, <command>debconf-tiny</command> paketi kaldırılmadan <command>lilo</command> paketinin yüklenemeyeceği ve güncellenemeyeceğidir.
      </para>
   <para>
Korunan veya kaldırılan paketlerle ilgili daha ayrıntılı bilgi almak için komutu aşağıdaki gibi kullanabilirsiniz:
      </para>
<screen># apt-get -o Debug::pkgProblemResolver=yes dist-upgrade
Reading Package Lists... Done
Building Dependency Tree... Done
Calculating Upgrade... Starting
Starting 2
Investigating python1.5
Package python1.5 has broken dep on python1.5-base
  Considering python1.5-base 0 as a solution to python1.5 0
  Holding Back python1.5 rather than change python1.5-base
Investigating python1.5-dev
Package python1.5-dev has broken dep on python1.5
  Considering python1.5 0 as a solution to python1.5-dev 0
  Holding Back python1.5-dev rather than change python1.5
 Try to Re-Instate python1.5-dev
Done
Done
The following packages have been kept back
  gs python1.5-dev
0 packages upgraded, 0 newly installed, 0 to remove and 2  not upgraded.
</screen>
   <para>
Burada açıkça görüldüğü gibi <filename>python1.5-dev</filename> paketi kurulamayacaktır çünkü <filename>python1.5</filename> paketine bağımlıdır. <filename>python1.5</filename> kurulamadığı için <filename>python1.5-dev</filename> paketi de kurulamamaktadır.
   </para>
  </sect2>
  <sect2 xml:id="apt-howto_clean">
   <title>Kullanılmayan paket dosyalarını temizleme</title>
   <subtitle>apt-get clean ve autoclean</subtitle>
   <para>
Bir paket kuracağınız zaman APT gerekli dosyaları <filename>/etc/apt/sources.list</filename> dosyanızda belirtilen konaklardan alır ve yerel bir dizin (<filename>/var/cache/apt/archives/</filename>) altında saklar. Ardından kurulumu buradaki dosyalar üzerinden gerçekleştirir, bkz. <xref linkend="apt-howto_install"/>.
      </para>
   <para>
Zamanla dosyaların tutulduğu yerel dizinin boyutları artmaya ve gereksiz yer kaplamaya başlar. APT bu dizini temizlemek için komutlar içerir: <command>apt-get</command>'in <command>clean</command> ve <command>autoclean</command> komutları.
      </para>
   <para><command>apt-get clean</command> kilit dosyaları haricinde <filename>/var/cache/apt/archives/</filename> ve <filename>/var/cache/apt/archives/partial/</filename> dizinlerideki tüm dosyları siler. Sonuç olarak, eğer bir paketi yeniden kurmak isterseniz (<option>--reinstall</option> seçeneği ile) APT gerekli dosyalara artık sahip olmadığından, yeninden indirecektir.
      </para>
   <para><command>apt-get autoclean</command> ise sadece artık indirilmesi mümkün olmayan dosyaları siler.
      </para>
   <para>
Aşağıdaki örnek <command>apt-get autoclean</command> özelliğinin nasıl çalıştığını gösteriyor:
      </para>
<screen># ls /var/cache/apt/archives/logrotate* /var/cache/apt/archives/gpm*
logrotate_3.5.9-7_i386.deb
logrotate_3.5.9-8_i386.deb
gpm_1.19.6-11_i386.deb
</screen>
   <para><filename>/var/cache/apt/archives</filename> altında <filename>logrotate</filename> paketi için 2 dosya ve <filename>gpm</filename> paketi için de bir 1 dosya bulunmaktadır.
      </para>
<screen># apt-show-versions -p logrotate
logrotate/stable uptodate 3.5.9-8
# apt-show-versions -p gpm
gpm/stable upgradeable from 1.19.6-11 to 1.19.6-12
</screen>
   <para><command>apt-show-versions</command> çıktısına baktığımızda <filename>logrotate_3.5.9-8_i386.deb</filename> dosyasının <filename>logrotate</filename> paketi için güncel sürüm olduğunu görüyoruz. Bu durumda <filename>logrotate_3.5.9-7_i386.deb</filename> dosyası hiç bir işe yaramamaktadır. Ayrıca <filename>gpm_1.19.6-11_i386.deb</filename> dosyası da, indirilebilecek daha güncel bir sürümü olduğu için işe yaramamaktadır.
      </para>
<screen># apt-get autoclean
Reading Package Lists... Done
Building Dependency Tree... Done
Del gpm 1.19.6-11 [145kB]
Del logrotate 3.5.9-7 [26.5kB]
</screen>
   <para>
Sonuçta, <command>apt-get autoclean</command> ile sadece eski ve işe yaramayacak dosyaların kaldırılmasını sağlamış olduk, bkz. <xref linkend="apt-howto_apt-show-versions"/>.
      </para>
  </sect2>
  <sect2 xml:id="apt-howto_dselect-upgrade">
   <title>APT ile dselect kullanımı</title>
   <para><command>dselect</command> kurulum için Debian paketlerini seçebileceğiniz bir programdır. Kullanımı oldukça karışık ve sıkıcıdır, fakat biraz pratikle konsol tabanlı ncurses kütüphanesi üzerinde çalışan arayüzüne alışılabilir.
      </para>
   <para><command>dselect</command>'in özelliklerinden biri, Debian paketlerinin "şiddetle önerilen" ve "tavsiye edilen" paketlere ait bilgileri işleyebilmesidir ("recommending" ve "suggesting"). Programı çalıştırmak için root iken  <command>dselect</command>'i çalıştırın. Erişim yöntemleri menüsünden <literal>apt</literal> seçimini yapın. Mutlaka gerekli olmamakla birlikte, eğer bir CDROM kullanmıyor ve paket indirmek istiyorsanız erişim yöntemi olarak <literal>apt</literal> kullanmalısınız.
      </para>
   <para><command>dselect</command> kullanımı hakkında ayrıntılı bilgi almak isterseniz <command>dselect</command> belgelerinin bulunduğu <link xlink:href="http://www.debian.org/doc/"/> adresini ziyaret edebilirsiniz.
      </para>
   <para><command>dselect</command> ile seçimlerinizi yaptıktan sonra, aşağıdaki komutu çalıştırın:
      </para>
<screen># apt-get -u dselect-upgrade</screen>
   <para/>
<screen># apt-get -u dselect-upgrade
Reading Package Lists... Done
Building Dependency Tree... Done
The following packages will be REMOVED:
  lbxproxy
The following NEW packages will be installed:
  bonobo console-tools-libs cpp-3.0 enscript expat fingerd gcc-3.0
  gcc-3.0-base icepref klogd libdigest-md5-perl libfnlib0 libft-perl
  libgc5-dev libgcc300 libhtml-clean-perl libltdl0-dev libsasl-modules
  libstdc++3.0 metamail nethack proftpd-doc psfontmgr python-newt talk tidy
  util-linux-locales vacation xbill xplanet-images
The following packages will be upgraded
  debian-policy
1 packages upgraded, 30 newly installed, 1 to remove and 0  not upgraded.
Need to get 7140kB of archives. After unpacking 16.3MB will be used.
Do you want to continue? [Y/n]
</screen>
   <para>
Şimdi bu ekran çıktısını aynı sistemdeki <command>apt-get dist-upgrade</command> çıktısı ile karşılaştıralım:
      </para>
<screen># apt-get -u dist-upgrade
Reading Package Lists... Done
Building Dependency Tree... Done
Calculating Upgrade... Done
The following packages will be upgraded
  debian-policy
1 packages upgraded, 0 newly installed, 0 to remove and 0  not upgraded.
Need to get 421kB of archives. After unpacking 25.6kB will be freed.
Do you want to continue? [Y/n]
</screen>
   <para>
Görüldüğü gibi <command>dselect</command> ile yapılan güncellemede yukarıdaki listede olmayan paketler de yüklenmek üzere seçilmiştir. Çünkü güncellenecek olan paketlerin "şiddetle önerilen" ve "tavsiye edilen" paketler alanları da incelenmiş, bu paketler listeye dahil edilmiştir. <command>dselect</command>, APT ile birlikte kullanıldığında oldukça güçlü bir araçtır.
      </para>
  </sect2>
  <sect2 xml:id="apt-howto_default-version">
   <title>Karışık bir sistem nasıl kurulur?</title>
   <para>
Kullanıcılar bazen bir Debian sürümünü temel sistem olarak kullanırken bir veya birkaç paketini diğer sürümlerden kullanmak isterler.
      </para>
   <para>
Ana Debian sürümünü belirtmek için aşağıdaki satırı <filename>/etc/apt/apt.conf</filename> (eğer yoksa oluşturun) dosyanıza ekleyin:
      </para>
<screen>APT::Default-Release "<emphasis>sürüm</emphasis>";</screen>
   <para>
Buradaki <replaceable>sürüm</replaceable> kısmı ana sürüm olarak kullanmak istediğiniz sürüm adıdır. Kullanabileceğinz sürümler <literal>stable</literal>, <literal>testing</literal> ve <literal>unstable</literal>'dır. Diğer bir sürümden paket yüklemek için APT'yi şu şekilde kullanın:
   </para>
<screen># apt-get -t <emphasis>sürüm</emphasis> install <emphasis>paket_adı</emphasis></screen>
   <para>
Bu şekilde çalıştırabilmek için <filename>/etc/apt/sources.list</filename> dosyasında paketi istediğiniz sürümle ilgili en az bir APT kaynak girdisi olmalı ve paket kaynaktan indirilebilir olmalıdır
   </para>
   <para>
Paketin belli bir sürümünü kullanmak isterseyebilirsiniz:
      </para>
<screen># apt-get install <emphasis>paket_adı</emphasis>=<emphasis>sürüm</emphasis></screen>
   <para>
Örneğin aşağıdaki örnekte <literal>nautilus</literal> paketinin <literal>2.2.4-1</literal> sürümü kurulmaktadır:
      </para>
<screen># apt-get install nautilus=2.2.4-1</screen>
    <warning>
     <para>
Debian `unstable' (kararsız) sürümü Debian paketlerinin en yeni sürümlerinin konulduğu sürümdür. Bu sürümde paketlerle ilgili birkaç paketi veya tüm sistemi etkileyebilecek en küçüğünden en tehlikeli değişikliklere kadar değişmeler olur. Bu yüzden de dağıtımın bu sürümü tecrübesiz veya sistemde kararlılık bekleyen kullanıcılar tarafından <literal>kullanılmamalıdır.</literal>
              </para>
     <para>
`testing' (deneme) sürümü de `unstable' sürümünden daha iyi sayılmaz, çünkü güvenlik güncellemelerini zamanında kabul etmemektedir. Sunucular ve diğer üretim sistemleri için kararlı sürüm kullanılmalıdır.
      </para>
    </warning>
  </sect2>
  <sect2 xml:id="apt-howto_apt-show-versions">
   <title>Sadece belirli bir Debian versiyonuna sahip paketleri güncelleme</title>
   <para><command>apt-show-versions</command> programı, karışık bir sistem kullanan kullanıcıların sistemlerini güncellemelerinde daha güvenli bir ortam sunar. Örneğin aşağıdaki gibi sadece sisteminizdeki <literal>unstable</literal> paketleri güncelleyebilirsiniz:
      </para>
<screen># apt-get install `apt-show-versions -u -b | grep unstable | cut -d ' ' -f 1`</screen>
  </sect2>
  <sect2 xml:id="apt-howto_pin">
   <title>Belirli bir sürüme sahip paketlerin kurulu olarak kalmasını sağlama</title>
   <subtitle>ileri düzey</subtitle>
   <para>
Bazen bir paketteki bazı kısımları değiştirmeniz gerekibilir ve bunun için de zamanınızolmayabilir veya bu değişikleri programın yeni sürümüne yansıtmnak istemiyorolabilirsiniz. Örneğin sisteminizi Debian 3.0 dağıtımına güncellemiş fakat belirli bir paketin Debian 2.2 dağıtımındaki halini kullanmaya devam etmek isteyebilirsiniz. Bu problemi çözmek için paketlerinizi <command>pin</command>'leyebilirsiniz.
      </para>
   <para>
Bu özelliği kullanmak oldukça kolaydır, tek yapmanız gereken <filename>/etc/apt/preferences</filename> dosyasını düzenlemekten ibaret.
      </para>
   <para>
Dosyanın biçemi şu şekildedir:
      </para>
<screen>Package: &lt;paket_adı&gt;
Pin: &lt;pin tanımlaması&gt;
Priority: &lt;pin önceliği&gt;
</screen>
   <para>
Örnek olarak, <filename>sylpheed</filename> paketinin 0.4.99 sürümünü korumak isterseniz aşağıdaki kaydı buraya ekleyebilirsiniz:
      </para>
<screen>Package: sylpheed
Pin: version 0.4.99*
</screen>
   <para>
Buradaki <literal>*</literal> kullanımına dikkat! Bu karakter ile girdiğimiz <command>pin</command> değerinin tüm 0.4.99 ile başlayan sürümler için geçerli olduğunu belirtebiliyoruz. Bu sayede program sürümünün yanı sıra paketin Debian sürümünün değişmesi durumunda da koyduğunuz kurallar geçerli olur, örneğin 0.4.99-1 sürümü ile 0.4.99-10 sürümü.
      </para>
   <para>
Pin önceliği "Packages:" ve "Pin:" satırlarına karşılık gelen paketlerin yüklenip yüklenmeyeceğine karar verilmede kullanılır. Yüksek öncelik değeri paketin yüklenmesini sağlar. <literal>apt_preferences(7)</literal> kılavuzunu detaylar için okuyabilirsiniz. Bir kaç örnek değeri yukarıdaki örnek için açıklayalım:
      </para>
   <para>1001</para>
   <para>
Sylpheed 0.4.99 sürümü apt kullanımı ile başka sürümlerle değiştirilemeyecektir. Daha yüksek sürümleri edinilebilri olsa da apt kullanımında sadece 0.4.99 sürümü kurulacaktır. Bir paketin eski sürümleri ile değiştirilebilir olmasını <command>pin</command> değerleri de gözönüne alınarak sağlamak için ("downgradable") öncelik değeri 1000'den büyük hale getirilmelidir.
      </para>
   <para>1000</para>
   <para>
Etkisi 1001 önceliği ile aynıdır. Farkı ise 0.4.99 sürümünden daha düşük bir sürüme indirmeye (downgrade) izin verilmeyecek olmasıdır.
      </para>
   <para>990</para>
   <para>
0.4.99 sürümü sadece "APT::Default-Release" değişkeninde belirtilen tercih edilen sürümde daha yeni bir sürümde paket olması durumunda var olanla değiştirilecektir. bknz. <xref linkend="apt-howto_default-version"/>
      </para>
   <para>500</para>
   <para>
Herhangi bir sürümdeki sylpheed 0.4.99 sürümünden daha büyük sürüm numarasına sahip olan paket tercih edilen paket olacaktır. Düşük sürüm numaraları içinse 0.4.99 geçerliliğini koruyacaktır
      </para>
   <para>100</para>
   <para>
Herhangi bir sürümdeki sylpheed 0.4.99 sürümünden daha büyük sürüm numarasına sahip olan paket tercih edilen paket olacaktır. 0.4.99 sürümü eğer başka herhangi bir sürümü kurulmadıysa yüklenecektir. Bu öncelik değeri yüklü paketler için kullanılır.
      </para>
   <para>-1</para>
   <para>
Negatif öncelik değerleri de kullanılabilir. Bu kullanım ile 0.4.99 sürümünün yüklenmesi tamamen önlenmiş olur.
      </para>
   <para>
Bir <command>pin</command> değeri paketin "Debian dağıtımı"na, "sürümü"ne ve "adı"na göre verilebilir.
      </para>
   <para>
Yukarıda gördüğümüz gibi pin değeri vermede sürüm numaraları ve özel karakterler kullanılır.
      </para>
   <para><literal>Sürüme</literal> pin değeri verme işlemi APT'nin kullandığı arşivlerdeki veya CD'deki <filename>Release</filename> dosyası ile ilişkilidir. Eğer kullandığınız arşivler <filename>Release</filename> dosyasını sağlamıyorsa bu özellik kullanılamaz. <filename>Release</filename> dosyanızın içeriğini <filename>/var/lib/apt/lists/</filename> dizini altından görebilirsiniz. Sürüm için kullanılabilecek seçenekler <literal>a</literal> (arşiv), <literal>c</literal> (components - bölüm), <literal>v</literal> (version - sürüm), <literal>o</literal> (origin - kaynak) ve <literal>l</literal> (label - etiket) tir.
</para>
   <para>Bir örnek:</para>
<screen>Package: *
Pin: release v=2.2*,a=stable,c=main,o=Debian,l=Debian
Priority: 1001
</screen>
   <para>
Bu örnekte Debian 2.2* dağıtımlarını (2.2r2, 2.2r3 vb. - bu seçim ile güvenlik yamaları ve önemli güncellemeler dahil edilmiş oldu), kararlı (<literal>stable</literal>) arşivi, <literal>main</literal> bölümü (<literal>contrib</literal> veya <literal>non-free</literal> de olabilirdi), kaynak ve etiket olarak Debian'ı seçtik. Kaynak (<option>o=</option>) <filename>Release</filename> dosyasını kimin ürettiğini belirtir, etiket (<option>l=</option>) ise dağıtımın ismidir (Debian dağıtımı için etiket Debian iken Progeny için Progeny'dir). Örnek bir <filename>Release</filename> dosyasının içeriği aşağıdadır:
      </para>
<screen>$ cat /var/lib/apt/lists/ ftp.debian.org.br_debian_dists_potato_main_binary-i386_Release
Archive: stable
Version: 2.2r3
Component: main
Origin: Debian
Label: Debian
Architecture: i386
</screen>
  </sect2>
 </sect1>
 <sect1 xml:id="apt-howto_helpers">
  <title>Yardımcı araçlar</title>
  <sect2 xml:id="apt-howto_equivs">
   <title>Kendi derlediğim paketleri nasıl kuracağım?</title>
   <subtitle>equivs</subtitle>
   <para>
Bazen bir programın belirli bir sürümünü kullanmak zorunda kalabiliriz. Bu sürüme ait bir Debian paketi mevcut değil ise, programı kaynak kodundan derleyerek kendimiz kurarız. Fakat paket yönetim sistemi bu durumda şaşırabilir. Mesela kullandığınız eposta sunucu yazılımının yeni bir sürümünü derlediğinizi düşünün. Burada problem yok, ancak pek çok Debian paketi sistemde bir MTA (Mail Transport Agent) yazılımı olmasını gerektirir. Eposta sunucunuzu kendiniz derleyerek kurduğunuz için paket yönetim sistemi bundan haberdar değildir ve bağımlılık hataları oluşur.
      </para>
   <para>
Burada <command>equivs</command> paketi devreye girmektedir. Paketi kurmak için aynı isimli paketi sisteminize kurmalısınız. Bu program ile boş bir paket yaratıp, bağımlılık problemlerini çözebilir ve paket yönetim sisteminin içini rahatlatabilirsiniz.
      </para>
   <para>
Başlamadan önce hatırlatmak isteriz ki, Debian için zaten paketi hazırlanmış bir programı farklı derleme seçenekleriyle derlemenin daha güvenli ve uygun yolları vardır. Eğer ne yaptığınızı tam olarak bilmiyorsanız <command>equivs</command> kullanmayınız. Ayrıntılı bilgi için bkz. <xref linkend="apt-howto_sourcehandling"/>.
      </para>
   <para>
MTA örneğimize kaldığımız yerden devam edelim. Yeni derlemiş olduğunuz <filename>postfix</filename> paketini sisteminize kurdunuz ve ardından <filename>mutt</filename> paketini kurmak istediniz. Fakat <filename>mutt</filename> paketinin başka bir MTA kurulmasını gerektirdiğini gördünüz ama zaten sisteminizde bir MTA var!
      </para>
   <para>
Herhangi bir dizine geçip (örneğin <filename>/tmp</filename>) aşağıdaki komutu çalıştırın:
      </para>
<screen>$ equivs-control <emphasis>isim</emphasis></screen>
   <para><varname>isim</varname> değerini oluşturmak istediğiniz <filename>control</filename> dosyasının adı ile değiştiriniz. Ardından dosya aşağıdaki şekilde oluşturulacaktır:
      </para>
<screen>Section: misc
Priority: optional
Standards-Version: 3.0.1

Package: &lt;enter package name; defaults to equivs-dummy&gt;
Version: &lt;enter version here; defaults to 1.0&gt;
Maintainer: &lt;your name and email address; defaults to username&gt;
Pre-Depends: &lt;packages&gt;
Depends: &lt;packages&gt;
Recommends: &lt;packages&gt;
Suggests: &lt;package&gt;
Provides: &lt;(virtual)package&gt;
Architecture: all
Copyright: &lt;copyright file; defaults to GPL2&gt;
Changelog: &lt;changelog file; defaults to a generic changelog&gt;
Readme: &lt;README.Debian file; defaults to a generic one&gt;
Extra-Files: &lt;additional files for the doc directory, commaseperated&gt;
Description: &lt;short description; defaults to some wise words&gt;
 long description and info
 .
 second paragraph
</screen>
   <para>
Bu dosyayı kendi isteğimize göre değiştirebiliriz. Tüm alanları açıklamaya şimdilik burada gerek yok, hemen amacımızı gerçekleştirelim:
      </para>
<screen>Section: misc
Priority: optional
Standards-Version: 3.0.1

Package: mta-local
Provides: mail-transport-agent
</screen>
   <para>
Evet, hepsi bundan ibaret. <filename>mutt</filename> paketi sistemde <literal>mail-transport-agent</literal> paketi olmasını gerektirir. Bu sanal bir pakettir ve tüm MTA'lar tarafından sağlanır. Aynı davranış için paket ismi olarak doğrudan <literal>mail-transport-agent</literal> seçebilirdik, ancak sanal paket kavramını ve <literal>Provides</literal> alanını kullanarak bunu gerçekleştirdik.
      </para>
   <para>
Şimdi yapmanız gereken paketi oluşturmaktır:
      </para>
<screen># equivs-build paket_ismi
dh_testdir
touch build-stamp
dh_testdir
dh_testroot
dh_clean -k
# Add here commands to install the package into debian/tmp.
touch install-stamp
dh_testdir
dh_testroot
dh_installdocs
dh_installchangelogs
dh_compress
dh_fixperms
dh_installdeb
dh_gencontrol
dh_md5sums
dh_builddeb
dpkg-deb: building package `paket_ismi' in `../paket_ismi_1.0_all.deb'.

The package has been created.
Attention, the package has been created in the current directory,
</screen>
   <para>
Ve sonra üretilen <literal>.deb</literal> paketini sisteminize kurmalısınız.
      </para>
   <para>
Gördüğünüz gibi <command>equivs</command> programının kullanılabileceği pek çok durum vardır. Örneğin <literal>favorilerim</literal> adlı bir paket oluşturabilir ve bu paketin sıklıkla kullandığınız paketlere bağımlı olmasını sağlayabilirsiniz (<literal>Depends</literal> alanı ile). Ardından bu paketi sisteminize kurup, bağımlılık verdiğiniz diğer tüm paketlerin de kurulmasını sağlamış olursunuz.
      </para>
   <para>
Örnek <literal>control</literal> dosyaları için <filename>/usr/share/doc/equivs/examples</filename> dizini altına bakabilirsiniz.
      </para>
  </sect2>
  <sect2 xml:id="apt-howto_localepurge">
   <title>Kullanılmayan yerelleştirme dosyalarını kaldırma</title>
   <subtitle>localepurge</subtitle>
   <para>
Çoğu Debian kullanıcısı sadece bir tip yerel dosyası kullanır. Örneğin bir Türk genellikle <literal>tr_TR</literal> yerelini kullanır ve hemen hiç bir zaman <literal>es</literal> kullanma ihtiyacı hissetmez.
      </para>
   <para><filename>localepurge</filename> paketi bu kullanıcılar için oldukça faydalıdır. Kullanmadığınız yerellerin sisteminizden kaldırılmasını ve yenilerinin de kurulmamasını sağlayarak disk üzerinde size yer kazandırır. Yapmanız gerekeni biliyorsunuz: <command>apt-get install localepurge</command>.
      </para>
   <para>
Paketin ayarlamaları oldukça kolaydır, <command>debconf</command> tarafından ilgili sorular size yöneltilecektir. Ancak ilk soruya cevap verirken dikkatli olun, yanlış bir seçim sonucu kullandığınız yerel dosyalarının silinmesine neden olabilirsiniz. Bu durumda tek çözüm, ilgili yerel dosyalarını içeren paketleri sisteminize yeniden kurmak olacaktır.
      </para>
  </sect2>
  <sect2 xml:id="apt-howto_helper-show-versions">
   <title>Güncellenebilir paketleri nasıl öğrenebilirim?</title>
   <para><command>apt-show-versions</command> programı sisteminizde güncellenmeye müsait olan paketler hakkında faydalı bilgiler sunar. <option>-u</option> seçeneği ile güncellenebilir paketlerin listesini alabilirsiniz:
      </para>
<screen>$ apt-show-versions -u
libeel0/unstable upgradeable from 1.0.2-5 to 1.0.2-7
libeel-data/unstable upgradeable from 1.0.2-5 to 1.0.2-7
</screen>
  </sect2>
 </sect1>
 <sect1 xml:id="apt-howto_search">
  <title>Paketler hakkında bilgi toplama</title>
  <para>
Paketler hakkında bilgi toplamak için APT sisteminin üzerinde çalışan programlar bulunmaktadır. Bu bilgiler sisteme kurulabilen paket listesi, yüklenmiş paketlerin listesi, paketin hangi bölüme ait olduğu, önceliği ve açıklaması vb. olabilir.
    </para>
  <para>
Fakat burada amacımız APT ile aynı bilgilere nasıl erişebileceğinizi sizlere anlatmaktır. Mesela, kurmak istediğiniz programın paket adını nasıl öğrenebiliriz?
    </para>
  <para>
Bu amaç için birkaç yardımcı araca sahibiz. Önce <command>apt-cache</command> ile başlayalım. Bu program APT sistemi tarafından kendi özel veritabanını yönetmede kullanılır. Şimdi pratik kullanımda uygulanmasına geçelim.
    </para>
  <sect2 xml:id="apt-howto_cache">
   <title>Paket isimlerini keşfetme</title>
   <para>
Örneğin, eski iyi günleri hatırladınız, Atari 2600 günlerinizi... Ve bir Atari emülator programı kurmak için APT'yi kullanmak istiyorsunuz ancak kurmanız gereken paketin ismini bilmiyorsunuz. Yapmanız gereken:
      </para>
<screen># apt-cache search atari
atari-fdisk-cross - Partition editor for Atari (running on non-Atari)
circuslinux - The clowns are trying to pop balloons to score points!
madbomber - A Kaboom! clone
tcs - Character set translator.
atari800 - Atari emulator for svgalib/X/curses
stella - Atari 2600 Emulator for X windows
xmess-x - X binaries for Multi-Emulator Super System
</screen>
   <para>
Gördüğünüz gibi arama sonucumuzda birkaç paket kısa açıklamalarıyla birlikte listelendi. Herhangi biri hakkında daha ayrıntılı bilgi almak istersek kullanacağımız komut:
      </para>
<screen># apt-cache show stella
Package: stella
Priority: extra
Section: non-free/otherosfs
Installed-Size: 830
Maintainer: Tom Lear &lt;tom@trap.mtview.ca.us&gt;
Architecture: i386
Version: 1.1-2
Depends: libc6 (&gt;= 2.1), libstdc++2.10, xlib6g (&gt;= 3.3.5-1)
Filename: dists/potato/non-free/binary-i386/otherosfs/stella_1.1-2.deb
Size: 483430
MD5sum: 11b3e86a41a60fa1c4b334dd96c1d4b5
Description: Atari 2600 Emulator for X windows
 Stella is a portable emulator of the old Atari 2600 video-game console
 written in C++.  You can play most Atari 2600 games with it.  The latest
 news, code and binaries for Stella can be found at:
 http://www4.ncsu.edu/~bwmott/2600
</screen>
   <para>
Bu defaki ekran çıktısında paket hakkında daha ayrıntılı bilgi var ve bu bilgiler doğrultusunda paketi kurmak isteyip istemediğimize karar verebiliriz. Eğer paket sisteminizde kurulu fakat yeni bir sürümü mevcut ise, her iki sürüm hakkındaki bilgiler listelenecektir.
      </para>
<screen># apt-cache show lilo
Package: lilo
Priority: important
Section: base
Installed-Size: 271
Maintainer: Russell Coker &lt;russell@coker.com.au&gt;
Architecture: i386
Version: 1:21.7-3
Depends: libc6 (&gt;= 2.2.1-2), debconf (&gt;=0.2.26), logrotate
Suggests: lilo-doc
Conflicts: manpages (&lt;&lt;1.29-3)
Filename: pool/main/l/lilo/lilo_21.7-3_i386.deb
Size: 143052
MD5sum: 63fe29b5317fe34ed8ec3ae955f8270e
Description: LInux LOader - The Classic OS loader can load Linux and others
 This Package contains lilo (the installer) and boot-record-images to
 install Linux, OS/2, DOS and generic Boot Sectors of other OSes.
 .
 You can use Lilo to manage your Master Boot Record (with a simple text screen)
 or call Lilo from other Boot-Loaders to jump-start the Linux kernel.

Package: lilo
Status: install ok installed
Priority: important
Section: base
Installed-Size: 190
Maintainer: Vincent Renardias &lt;vincent@debian.org&gt;
Version: 1:21.4.3-2
Depends: libc6 (&gt;= 2.1.2)
Recommends: mbr
Suggests: lilo-doc
Description: LInux LOader - The Classic OS loader can load Linux and others
 This Package contains lilo (the installer) and boot-record-images to
 install Linux, OS/2, DOS and generic Boot Sectors of other OSes.
 .
 You can use Lilo to manage your Master Boot Record (with a simple text screen)
 or call Lilo from other Boot-Loaders to jump-start the Linux kernel.
</screen>
   <para>
Burada ilk sırada yeni sürüme ait bilgiler, ikinci sırada ise zaten sisteminizde kurulu olan sürüme ait bilgiler listelenir. Bir paket hakkında daha genel bilgi edinmek için aşağıdaki komutu kullanabilirsiniz:
      </para>
<screen># apt-cache showpkg penguin-command
Package: penguin-command
Versions:
1.4.5-1(/var/lib/apt/lists/download.sourceforge.net_debian_dists_unstable_main_binary-i386_Packages)(/var/lib/dpkg/status)

Reverse Depends:
Dependencies:
1.4.5-1 - libc6 (2 2.2.1-2) libpng2 (0 (null)) libsdl-mixer1.1 (2 1.1.0) libsdl1.1 (0 (null)) zlib1g (2 1:1.1.3)
Provides:
1.4.5-1 -
Reverse Provides:
</screen>
   <para>
Bir paketin bağımlı olduğu paketlerin listesini almak için:
      </para>
<screen># apt-cache depends penguin-command
penguin-command
  Depends: libc6
  Depends: libpng2
  Depends: libsdl-mixer1.1
  Depends: libsdl1.1
  Depends: zlib1g
</screen>
   <para>
Özetle, aradığımız paket adını bulmak için bir kaç silaha sahibiz.
      </para>
  </sect2>
  <sect2 xml:id="apt-howto_dpkg-search">
   <title>Paket adlarını bulmak için dpkg kullanma</title>
   <para>
Paket adını bulmada diğer bir yöntem de o paket tarafından kullanıldığını bildiğiniz bir dosyadan hareket etmektir. Örneğin belirli bir <literal>".h"</literal> dosyasını içerdiğini bildiğiniz paketin ismini aşağıdaki gibi bulabilirsiniz:
      </para>
<screen># dpkg -S stdio.h
libc6-dev: /usr/include/stdio.h
libc6-dev: /usr/include/bits/stdio.h
perl: /usr/lib/perl/5.6.0/CORE/nostdio.h
</screen>
   <para>veya:</para>
<screen># dpkg -S /usr/include/stdio.h
libc6-dev: /usr/include/stdio.h
</screen>
   <para>
Eğer sisteminize kurulu bir paketin tam ismini öğrenmek isterseniz aşağıdaki komut işinizi görecektir:
      </para>
<screen># dpkg -l | grep mozilla
ii  mozilla-browse 0.9.6-7        Mozilla Web Browser
</screen>
   <para>
Bu komut paket isimlerini belirli bir uzunluktan sonra kesmektedir. Yukarıdaki örnekte paketin tam ismi <literal>mozilla-browser</literal>'dır. Bu problemi gidermek için <literal>COLUMNS</literal> çevresel değişkenini aşağıdaki gibi ayarlamalısınız:
      </para>
<screen>[kov]@[couve]$ COLUMNS=132 dpkg -l | grep mozilla
ii  mozilla-browser             0.9.6-7                     Mozilla Web Browser
- core and browser
</screen>
   <para>
veya açıklamasından yola çıkarak paket adını elde edebilirsiniz:
      </para>
<screen># apt-cache search "Mozilla Web Browser"
mozilla-browser - Mozilla Web Browser
</screen>
  </sect2>
  <sect2 xml:id="apt-howto_auto-apt">
   <title>Programları anında kurma</title>
   <para>
Bir program derliyorsunuz ve aniden bir hata oluştu! Çünkü program sisteminizde olmayan bir <literal>.h</literal> dosyasına ihtiyaç duyuyor. <command>auto-apt</command> programı sizi bu senaryolardan kurtaracaktır. Gerektiğinde ilgili paketi kurmak isteyip istemediğinizi soracak, derleme işlemini durduracak ve programı çekip kurduktan sonra derleme işleminin devam etmesini sağlayacaktır.
      </para>
   <para>
Peki nasıl yapacaksınız:
      </para>
<screen># auto-apt run <emphasis>komut</emphasis></screen>
   <para>
Burada <varname>komut</varname> yerine derleme için kullanacağınız komutu yazmalısınız.
      </para>
<screen># auto-apt run ./configure</screen>
   <para>
Ardından gerekli paketleri kurmak isteyip istemediğinizi soracak, <command>apt-get</command>'i çağırarak kurulumları otomatik olarak gerçekleştirecektir. Eğer bir X sunucusu üzerinde çalışıyorsanız, varsayılan metin arayüzü grafik bir arayüzle otomatik olarak değiştirilecektir.
      </para>
   <para><command>auto-apt</command> programı verimli çalışabilmek için kendi özel veritabanını tutar. Bu veritabanının güncel tutulması programın beklenilen davranışı gösterebilmesi açısından önemlidir. Veritabanını güncellemek için <command>auto-apt update</command>, <command>auto-apt updatedb</command> ve <command>auto-apt update-local</command> komutlarını çalıştırmalısınız.
      </para>
  </sect2>
  <sect2 xml:id="apt-howto_apt-file">
   <title>Bir dosyanın hangi pakete ait olduğunu bulma</title>
   <para>
Bir paketi kurdunuz ancak <command>apt-cache</command> ile nasıl çağıracağınızı bilmiyorsunuz. Fakat programın dosya adını biliyorsunuz veya paketten çıkan başka herhangi bir dosyanın adını bilmektesiniz. Bu durumda <command>apt-file</command> programı ile paket adını bulabilirsiniz:
      </para>
<screen>$ apt-file search <emphasis>dosya_adı</emphasis></screen>
   <para>
Bu komut aynı <command>dpkg -S</command> gibi çalışır ancak ayrıca verdiğiniz dosyayı içermesine rağmen sisteminizden sonradan kaldırılmış olan paketleri de listeler. Bu komut ayrıca bir derleme sırasında ihtiyaç duyulan dosyaları içeren paketleri bulmak için de kullanılabilir. Fakat bu tür sorunlar için <command>auto-apt</command> kullanmak daha iyi bir yöntemdir. Detaylar için bkz. <xref linkend="apt-howto_auto-apt"/>.
      </para>
   <para>
Bir paketin içeriğini aşağıdaki komutla listeleyebilirsiniz:
      </para>
<screen>$ apt-file list <emphasis>paket_adı</emphasis></screen>
   <para><command>apt-file</command> tüm paketler hakkında içerdikleri dosyalara ilişkin kayıtları tutar. Aynı <command>auto-apt</command>'de olduğu gibi bu veritabanının da zamanla güncellenmesi gereklidir:
      </para>
<screen># apt-file update</screen>
   <para>
Öntanımlı olarak <command>apt-file</command> <command>auto-apt</command> ile aynı kaynağı kullanır, bkz. <xref linkend="apt-howto_auto-apt"/>.
      </para>
  </sect2>
  <sect2 xml:id="apt-howto_apt-listchanges">
   <title>Paketlerdeki değişikliklerden haberdar olma</title>
   <para>
Sisteminize kurulan her paket kendi belge dizini altına (<literal>/usr/share/doc/paket_adı</literal>) <literal>changelog.Debian.gz</literal> adlı bir dosya atar. Bu dosyada ilk sürümden son sürüme kadar paket üzerinde yapılan değişiklikler belirtilir. Bu dosyayı <command>zless</command> ile okuyabilirsiniz, ancak tüm paketleri bu şekilde takip etmek epey güç bir uğraştır.
       </para>
   <para>
Bu işi otomatik hale getirmek için yardımcı bir araç mevcuttur: <command>apt-listchanges</command>. Programı kullanmak için önce <filename>apt-listchanges</filename> paketini sisteminize kurmalısınız. Kurulum esnasında <command>Debconf</command> tarafından sorulan soruları istediğiniz gibi yanıtlayabilirsiniz.
      </para>
   <para>
İlk soru <filename>apt-listchanges</filename>'in paketlerdeki değişiklikleri nasıl göstereceğine karar vermeniz gereken kısımdır. Değişikliklerin kendinize elektronik posta olarak iletilmesini seçebilirsiniz, otomatik güncellemelerde bu faydalı olabilir veya bir <command>less</command> gibi bir sayfalama aracı ile güncellemelere devam etmeden önce değişikliklere bir göz atmak isteyebilirsiniz Eğer <filename>apt-listchanges</filename>'in güncellemeler sırasında otomatik olarak çalışmasını istemiyorsanız <literal>none</literal> seçeneğini seçin.
      </para>
   <para><filename>apt-listchanges</filename> yüklendikten sonra paketler apt ile indirildikten sonra (veya bir CD veya bağlanmış aygıttan alındıktan sonra), paketleri yüklemeden önce bu paketlerde yapılmış değişiklikleri listeleyecektir.
      </para>
  </sect2>
 </sect1>
 <sect1 xml:id="apt-howto_sourcehandling">
  <title>Kaynak paketlerle çalışma</title>
  <sect2 xml:id="apt-howto_source">
   <title>Kaynak paketleri indirme</title>
   <para>
Özgür yazılım dünyasında kaynak kodlar üzerinde çalışma, hata bulma ve düzeltme oldukça yaygındır. Bunu yapabilmek için programın kaynak kodlarını indirmeniz gereklidir. APT sistemi, dağıtım içerisinde yer alan paketlerin kaynak kodlarını, <literal>.deb</literal> paketi oluşturulabilmesi için yapılan değişiklikleri de içerecek şekilde indirmenizi sağlayacak komutlara sahiptir.
      </para>
   <para>
Debian kaynak paketlerinin kullanılmasının gerektiği diğer bir durum ise, belirli bir paketin güncel sürümünü, <literal>unstable</literal> sürümünü örneğin, <literal>stable</literal> sürümü için yeniden hazırlamak istediğiniz durumdur. Bir paketi <literal>stable</literal> dağıtım için oluşturduğunuzda bağımlılıklar da <literal>stable</literal> dağıtıma göre düzenlenir.
      </para>
   <para>
Bunun için <filename>/etc/apt/sources.list</filename> dosyanızda unstable sürümle ilgili <command>deb-src</command> satırlarının bulunması gereklidir. Ayrıntı için bkz. <xref linkend="apt-howto_sources.list"/>.
      </para>
   <para>
Bir kaynak paketi indirmek için aşağıdaki komutu kullanınız:
      </para>
<screen># apt-get source <emphasis>paket_adı</emphasis></screen>
   <para>
Bu komut üç dosyanın indirilmesini sağlayacaktır: bir <literal>.orig.tar.gz</literal>, bir <literal>.dsc</literal> ve bir de <literal>.diff.gz</literal>. Eğer paket Debian'a özgü ise, son iki dosya indirilmez ve dosya adı büyük olasılıkla <literal>orig</literal> önekini içermez.
      </para>
   <para><literal>.dsc</literal> dosyası <command>dpkg-source</command> tarafından kaynak paketi <varname>paket_adı-sürüm</varname> dizini altına açmak için kullanılır. İndirilen her bir debian kaynak paketi açıldıktan sonra, <literal>debian</literal> adında bir dizin içerir. Bu dizinde <literal>.deb</literal> paketini oluşturmak için yapılan tüm değişiklikler bulunmaktadır.
      </para>
   <para>
Kaynak paket indirildikten hemen sonra <literal>.deb</literal> paketinin oluşturulmasını istiyorsanız <command>auto-build</command> komutu işinize yarayacaktır. Bunun için komutu <option>-b</option> seçeneği ile aşağıdaki gibi kullanmalısınız:
      </para>
<screen># apt-get -b source <emphasis>paket_adı</emphasis></screen>
   <para>
Eğer indirdikten hemen sonra yerine daha ileriki zamanlarda <literal>.deb</literal> paketini oluşturmak isterseniz aşağıdaki komut bunu yapabilirsiniz:
      </para>
<screen># dpkg-buildpackage -rfakeroot -uc -b</screen>
   <para>
Bu komutu kaynak paketin açıldığı dizin içerisindeyken çalıştırmalısınız. İşlem sonunda üretilen paketi aşağıdaki gibi sisteminize kurabilirsiniz:
      </para>
<screen># dpkg -i paket.deb</screen>
   <para><command>apt-get</command>'in <literal>source</literal> yöntemi ile diğerleri arasında birtakım farklar bulunmaktadır. Burada paketin indirilebilmesi için root kullanıcısı olunmasına gerek yoktur, indirilen paketler o an bulunulan dizin içerisine açılırlar.
     </para>
  </sect2>
  <sect2 xml:id="apt-howto_build-dep">
   <title>Kaynak paketleri derlemek için gerekli paketler</title>
   <para>
Doğal olarak derleyeceğiniz programın ihtiyaç duyduğu kütüphanelerin sisteminizde bulunması zorunludur. Tüm kaynak paketler <literal>debian/control</literal> dosyalarında <literal>Build-Depends:</literal> adlı bir alana sahiptir, bu alanda paketin kaynak kodundan derlenebilmesi için ihtiyaç duyduğu paketler belirtilir.
     </para>
   <para>
APT bu paketleri kolayca indirmek ve kurmak için gerekli komuta sahiptir. <command>apt-get build-dep paket_adı</command> komutu ile derlemek istediğiniz paketin <literal>Build-Depends</literal> alanında belirtilen paketlerin sisteminize kurulması sağlanır.
     </para>
   <para>
<screen># apt-get build-dep gmc
Reading Package Lists... Done
Building Dependency Tree... Done
The following NEW packages will be installed:
  comerr-dev e2fslibs-dev gdk-imlib-dev imlib-progs libgnome-dev libgnorba-dev
  libgpmg1-dev
0 packages upgraded, 7 newly installed, 0 to remove and 1  not upgraded.
Need to get 1069kB of archives. After unpacking 3514kB will be used.
Do you want to continue? [Y/n]
</screen>
   </para>
   <para>
Burada <literal>gmc</literal> paketinin kaynak halinden derlenebilmesi için gerekli paketler sisteme kurulmaktadır. Bu komutun kaynak paketi indirmediğini unutmayın, kaynak paketi <command>apt-get source</command> ile ayrıca indirmelisiniz.
      </para>
   <para>
Eğer amacınız belirli bir kaynak paketi derleyebilmek için gereken paketlerin listesini almak ise bunun için <command>apt-cache show</command> türevi bir komut kullanılır, bkz. <xref linkend="apt-howto_search"/>. Bu araç <literal>Build-Depends</literal> satırında yazan bilgiler yanında başka bilgiler de göstermektedir.
      </para>
   <para>
<screen>#apt-cache showsrc <emphasis>paket_adı</emphasis></screen>
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="apt-howto_erros">
  <title>Hatalarla başa çıkma</title>
  <sect2 xml:id="apt-howto_erros-comuns">
   <title>Genel hatalar</title>
   <para>
Hatalı durumlar her zaman olabilir, hataların çoğu basit bir şekilde düzeltilebilecek türdendir. Aşağıda sıklıkla karşılaşılan hatalar ve çözüm yöntemlerinin bir listesi verilmiştir:
      </para>
    <itemizedlist>
     <listitem>
      <para>
Eğer <command>apt-get install paket_adı</command> komutunun ardından aşağıdaki gibi bir çıktı aldıysanız:
          </para>
<screen>Reading Package Lists... Done
Building Dependency Tree... Done
W: Couldn't stat source package list 'http://people.debian.org unstable/ Packages' (/var/state/apt/lists/people.debian.org_%7ekov_debian_unstable_Packages) - stat (2 No such file or directory)
W: You may want to run apt-get update to correct these missing files
E: Couldn't find package penguineyes
</screen>
      <para><literal>/etc/apt/sources.list</literal> dosyasında yaptığınız son değişiklikten sonra <command>apt-get update</command> komutunu çalıştırmayı unutmuşsunuz demektir.
          </para>
     </listitem>
     <listitem>
      <para>
Eğer hata aşağıdakine benzer ise:
          </para>
<screen>E: Could not open lock file /var/lib/dpkg/lock - open (13 Permission denied)
E: Unable to lock the administration directory (/var/lib/dpkg/), are you root?
</screen>
      <para><command>apt-get</command>'in <literal>source</literal> dışında bir yöntemini normal kullanıcı haklarıyla kullanmaya çalışıyorsunuzdur.
          </para>
      <para>
Benzer bir hatayı, aynı anda birden fazla <command>apt-get</command> programını çalıştırmanız durumunda ya da <command>dpkg</command> programı işlem yaparken APT kullanmaya çalışmanız durumunda alabilirsiniz. Aynı anda kullanılabilecek tek yöntem
 <literal>source</literal>'tır.
          </para>
     </listitem>
     <listitem>
      <para>
Eğer kurulum işleminiz herhangi bir nedenle yarıda kesilmiş ve ardından hiç bir paketi kurma ve kaldırma işlemi yapamaz duruma gelmişseniz, aşağıdaki komutlarla APT'nin gerekli düzeltmeleri yapmasını sağlayabilirsiniz:
          </para>
<screen># apt-get -f install
# dpkg --configure -a</screen>
      <para>
Ve tekrar deneyin. Bazen yukarıdaki komutlardan ikincisini birden fazla defa tekrarlamanız gerekebilir. <literal>unstable</literal> dağıtımı kullanmaya başlayacak olan kullanıcıların öğrenmesi gereken ilk ders budur.
          </para>
     </listitem>
     <listitem>
      <para>
Eğer <command>apt-get update</command> kullanımı sırasında <literal>"E: Dynamic MMap ran out of room"</literal> şeklinde bir hata ile karşılaşırsanız <filename>/etc/apt/apt.conf</filename> dosyasına şu satırı ekleyin:
          </para>
<screen>APT::Cache-Limit 10000000;</screen>
     </listitem>
    </itemizedlist>
  </sect2>
  <sect2 xml:id="apt-howto_help">
   <title>Nereden yardım bulabilirim?</title>
   <para>
Debian paket yönetim sistemi hakkındaki ayrıntılı belgeleri inceleyebilirsiniz. Programların <literal>--help</literal> ve kılavuz (man) sayfaları da oldukça yararlı bilgiler içerir. Ayrıca <literal>/usr/share/doc</literal> dizini altındaki her programa ait belgeleri inceleyebilirsiniz, APT için bu dizin <literal>/usr/share/doc/apt</literal>'dir.
      </para>
   <para>
Eğer aradığınız sorunun cevabını bu belgelerde de bulamazsanız cevabı Debian eposta listelerinde aramalısınız. Debian listeleri hakkında ayrıntılı bilgilere <link xlink:href="http://www.debian.org/"/> adresinden ulaşabilirsiniz.
      </para>
   <para>
Belirttiğimiz listeler Debian kullanıcıları içindir, diğer dağıtımları kullananlar, dağıtımlarının eposta listelerinde kendilerine uygun cevapları bulabilirler.
      </para>
  </sect2>
 </sect1>
 <sect1 xml:id="apt-howto_distros">
  <title>Hangi Linux dağıtımları APT destekliyor?</title>
  <para>
Aşağıda APT'yi destekleyen dağıtımların bir listesi yer almaktadır:
  </para>
   <simplelist>
    <member>
Debian GNU/Linux (<link xlink:href="http://www.debian.org/"/>) - APT'nin geliştiriminin yapıldığı ve devam ettiği dağıtımdır.
    </member>
    <member>
Conectiva (<link xlink:href="http://www.conectiva.com.br/"/>) - APT sisteminin RPM ile kullanılabilmesi için çalışan ilk dağıtımdır.
    </member>
    <member>
Libranet (<link xlink:href="http://www.libranet.com/"/>)
    </member>
    <member>
Mandrake (<link xlink:href="http://www.mandriva.com/"/>)
    </member>
    <member>
PLD (<link xlink:href="http://www.pld.org.pl/"/>)
    </member>
    <member>
Vine (<link xlink:href="http://www.vinelinux.org/"/>)
    </member>
    <member>
APT4RPM (<link xlink:href="http://apt4rpm.sf.net/"/>)
    </member>
    <member>
Alt Linux (<link xlink:href="http://www.altlinux.ru/"/>)
    </member>
    <member>
Red Hat (<link xlink:href="http://www.redhat.com/"/>)
    </member>
    <member>
Sun Solaris (<link xlink:href="http://www.sun.com/"/>)
    </member>
    <member>
SuSE (<link xlink:href="http://www.suse.de/"/>)
    </member>
    <member>
Yellow Dog Linux (<link xlink:href="http://www.yellowdoglinux.com/"/>)
    </member>
    <member>
Pardus  (<link xlink:href="http://www.pardus.org.tr/"/>)
    </member>
   </simplelist>
 </sect1>
 <sect1 xml:id="apt-howto_agradecimentos">
  <title>Teşekkürler</title>
  <para>
Debian-BR ve Debian projesindeki arkadaşlarıma, desteklerini esirgemedikleri için teşekkürlerimi sunuyorum.
  </para>
  <para>
Ayrıca projemize ve benzer özgür projelere destek veren CIPSGA'ya teşekkür ediyorum.
  </para>
  <para>
Ve özel teşekkürler:
  </para>
  <para>
Yooseong Yang 
  </para>
  <para>
Michael Bramer
  </para>
  <para>
Bryan Stillwell 
  </para>
  <para>
Pawel Tecza
  </para>
  <para>
Hugo Mora 
  </para>
  <para>
Luca Monducci 
  </para>
  <para>
Tomohiro KUBOTA
  </para>
  <para>
Pablo Lorenzzoni 
  </para>
  <para>
Steve Langasek
  </para>
  <para>
Arnaldo Carvalho de Melo
    </para>
  <para>
Erik Rossen
  </para>
  <para>
Ross Boylan 
  </para>
  <para>
Matt Kraai
  </para>
  <para>
Aaron M. Ucko 
  </para>
  <para>
Jon Åslund
  </para>
 </sect1>
 <sect1 xml:id="apt-howto_novas">
  <title>Bu belgenin yeni sürümleri</title>
  <para>
Bu belge <link xlink:href="http://www.debian-br.org/">Debian-BR</link> projesi kapsamında üretilmiş olup, herkesin Debian kullanımına yardımcı olmak amacıyla oluşturulmuştur.
  </para>
  <para>
Belgenin yeni sürümlerine her zaman Debian Belgelendirme Projesi sayfalarından erişebilirsiniz: <link xlink:href="http://www.debian.org/doc/ddp">http://www.debian.org/doc/ddp</link>.
  </para>
 </sect1>
</article>
