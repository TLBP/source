<?xml version="1.0" encoding="UTF-8"?>
<!--DOCTYPE chapter SYSTEM "../docbook/dtd/docbookx.dtd"-->
<!-- ********************************************************************
     $Id: belge-NASIL.xml,v 1.4 2002/11/25 23:31:04 nilgun Exp $
     ******************************************************************** -->

<article id="xmldoc-howto" lang="tr">
  <title>Linux Belgeleri NASIL</title>
  <articleinfo>

    <!-- Use "HOWTO", "mini HOWTO", "FAQ" in title, if appropriate -->
    <author>
       <firstname>Nilgün Belma</firstname>
       <surname>Bugüner</surname>
       <affiliation>
          <email>&nilgun.buguner;</email>
       </affiliation>
     </author>
     <pubdate>16 Kasım 2002</pubdate>
     <revhistory>
       <revision>
          <revnumber>0.3</revnumber>
          <date>16 Kasım 2002</date>
          <authorinitials>NBB</authorinitials>
          <revremark>
            Kate ile belgeler.dtd.xml dosyasının kullanımı ve CVS kullanım bilgileri
            eklendi.
          </revremark>
        </revision>
        <revision></revision>
       <revision>
          <revnumber>0.2</revnumber>
          <date>5 Haziran 2002</date>
          <authorinitials>NBB</authorinitials>
          <revremark>
            Belge, Belgelendirme Çalışma Grubu Elkitabı içine yerleştirildi ve
            içeriğinde bazı değişiklikler yapıldı.
          </revremark>
        </revision>
        <revision></revision>
        <revision>
          <revnumber>0.1</revnumber>
          <date>8 Mayıs 2002</date>
          <authorinitials>NBB</authorinitials>
          <revremark>
            Bu belge, Linux Belgelendirme Çalışma Grubu üyelerinin sitemizde
            yayınlanmak üzere nasıl belge hazırlaması gerektiği hakkında bilgi
            vermek üzere hazırlanmıştır.
          </revremark>
       </revision>
     </revhistory>
     <abstract>
        <para>
          Bu belgede Docbook belgeleri hakkında bir ön bilgi verilecek,
          sitemizin belge sunum sisteminin özellikleri ve bu özelliklere
          uygun belgelerin nasıl hazırlanacağı anlatılacaktır.
        </para>
     </abstract>

  </articleinfo>
<!-- Content follows...include introduction, license information, feedback -->

  <sect1 id="xmldoc-howto_intro">
    <title>Giriş</title>
    <para>
      Web sayfası hazırlamış olanlar XML yapısına kolayca uyum sağlayabilir.
      Tipik bir HTML kodu aşağıdaki gibidir.
    </para>
<programlisting>
  &lt;html>
    &lt;head>
      &lt;title>Başlık&lt;/title>
    &lt;/head>
    &lt;body>
      &lt;h3>Sayfam&lt;/h3>
      &lt;p>Sayfam güzeldir.&lt;/p>
    &lt;/body>
  &lt;/html>
</programlisting>
    <para>
      Şimdi bu sayfayı bir de XML ile yazalım:
    </para>
<programlisting>
  &lt;article>
    &lt;articleinfo>
      &lt;title>Başlık&lt;/title>
    &lt;articleinfo>
    &lt;sect1>
      &lt;title>Sayfam&lt;/title>
      &lt;para>
        Sayfam güzeldir.
      &lt;/para>
    &lt;/sect1>
  &lt;/article>
</programlisting>
    <para>
      Yapıları ne kadar benziyor değil mi?
    </para>
    <para>
      Diyebilirsiniz ki, HTML biliyorum, ben sayfayı HTML ile yazayım, bitsin,
      gitsin. O zaman hazırladığınız belgeyi sadece web tarayıcınızla
      okuyabilirsiniz. Halbuki XML ile yazdığınız bir belge HTML'ye
      dönüştürülebildiği gibi, TXT, PDF, vb. belge biçemlerine dönüştürülebilir
      ortak bir yapı sunar. Bir HTML sayfa tek bir sayfadır ama Docbook olarak
      hazırlanmış bir belge ile değil kitap, bir kitaplık yazabilirsiniz.
      Ve hatta tek bir komutla bu kitaplıktan yüzlerce HTML sayfası
      üretebilirsiniz. Üstelik HTML çıktısını beğenmezeniz görüntüsünü
      değiştirmek için HTML dosyayı yeniden yazmak gibi dertlerle de
      uğraşmazsınız. Ayrıca, bir sürü belge biçemi bilmek zorunda da
      değilsiniz. Hiç çıktının görünümü ile uğraşmadan kendinizi sadece bu
      belgelerle aktaracağınız bilginin üretilmesine verebilirsiniz.
      Sitemizdeki belgeler, tabii bu belge ve sözlük bu sistemle
      üretilmiştir.
    </para>
  </sect1>
  <sect1 id="xmldoc-howto_prep">
    <title>Bir Belge Hazırlamaya Başlamadan Önce</title>
    <para>
      Önce sisteminizde tam bir Türkçe desteği olmalı. Bunun nasıl yapılacağı
      kitaplığımızdaki <link linkend="turkish-howto"
      >Türkçe-NASIL</link> belgesinden öğrenebilirsiniz.
    </para>
    <para>
      Belgeleri hazırlayabilmek için basit bir metin düzenleyici yeterli.
      Gedit, Emacs, Kwrite ya da Kate işinizi görür. Ben Kate kullanmayı tercih
      ediyorum, çok sayıda belge ile çalışabilme ve XML dosyaların yazımını
      kontrol etme ve dosyanın karakter kodlamasını değiştirebilme özelliği
      bana çekici geliyor.
    </para>
    <para>
      Kate kullanmayı tercih etmemin başlıca sebebi XML dosyaları yazmak
      için bir eklentiye sahip olması. Kate'in bu eklentisi ile birlikte
      kullanmak üzere sitemizin DTD'sini bir sıkıştırılmış bir dosya olarak
      dağıtıyoruz.
      Kate'in bu eklentisinin ve belgeler.dtd.xml dosyasının nasıl kullanılacağını
      <xref linkend="xmldoc-howto_processor"/> bölümünde anlatacağım.
    </para>
    <para>
      Bir Docbook kılavuzuna ihtiyacınız olacak. Benim bir belge hazırlarken
      faydalandığım kılavuzu <ulink url="http://docbook.org/tdg/">
      docbook.org</ulink>'dan alabilirsiniz. İsmi 'Docbook: Definitive Guide'
    </para>
    <para>
      Bir XML dosyası yazacak araçlarımız artık var. Yazdığımız belgenin
      derlenmesi lazım ki, bir yerde hata yapmış mıyız bilelim. Bir HTML
      çıktısını da görmek istersiniz değil mi? O halde belgemizi derlemek
      için bazı programlara, yardımcı kodlara ihtiyacımız olacak.
    </para>
    <para>
      Docbook kodunu oluşturan eleman ve parametrelerin birbirleriyle ilişkilerinin
      düzenlendiği bir kod tanımlarına (XML-DTD), HTML koda dönüşümün nasıl
      yapılacağını belirleyebileceğimiz bir dönüşüm diline (XSL) ve tüm
      bunları harmanlayıp HTML kodunu üretecek bir yardımcı programa (xsltproc)
      ihtiyacımız olacak. Bu araçlar hemen her Linux dağıtımda zaten bulunuyor.
      Docbook'un standart elemanları dışında elemanlar kullanmazsanız ve görsel
      olarak farklı bir şey istemiyorsanız XSL dönüşümlerini yapacak kodlar da
      hazır olarak var. Bu kitaplığı hazırlarken kullandığım paketleri sizler de
      kullanırsanız, bir uyumsuzluk sorunu yaşamayız. Ayrıca sorunlarınızı
      ilettiğinizde aynı paketleri kullandığımızdan anlaşmak da kolay olur.
    </para>
    <para>
      Şimdi bu paketlerin hangileri olduğuna nereden alınabileceğine ve
      dosya sisteminizde bulunabilecekleri yerlere bakalım.
    </para>
    <para>
      Bu paketler ve sürümleri benim kullandıklarım, sanırım daha üst sürümleri
      de sorun çıkarmaz.
    </para>
    <para>
      <ulink url="http://www.oasis-open.org/docbook/xml/4.1.2/docbkx412.zip">
      <command>xml-dtd-4.1.2</command></ulink>: <ulink url="file:/usr/share/sgml/docbook/"
      >/usr/share/docbook/xml-dtd-4.1.2</ulink><sbr/>
      <ulink url="http://prdownloads.sourceforge.net/docbook/docbook-xsl-1.49.tar.gz">
      <command>xsl-stylesheets-1.49</command></ulink>:
      <ulink url="file:/usr/share/sgml/docbook/"
      >/usr/share/docbook/xsl-stylesheets-1.49</ulink>
    </para>
    <para>
      Bu paketler derlenmeden kullanılıyor. İndirip paketi açmanız yeterli.
      RPM'leri de var. Ancak bu paketleri indirip kurmak yerine size daha
      iyi bir önerim var. Web sitemizin kaynak kodlarını biliyorsunuz
      dağıtıyoruz. Anonim CVS erişimi ile tüm kaynak kodlarımızı alabilirsiniz.
      İçinde Docbook-XML-DTD ve Docbook-XSL zaten var. Bu paket üzerinde
      çalışırsanız sayfaları sitemizdeki gibi
      göreceksiniz. Çünkü Docbook-XSL içindeki kod özelleştirilmiştir.
      Ama aşağıdaki iki paket sisteminizde kurulu olmalı yoksa paket içeriğinden
      HTML dosyaları üretemezsiniz.
    </para>
    <para>
      <ulink url="ftp://fr.rpmfind.net/linux/gnome.org/pre-gnome2/sources/">
      libxslt-1.0.13</ulink><sbr/>
      <ulink url="ftp://fr.rpmfind.net/linux/gnome.org/pre-gnome2/sources/">
      libxml2-2.4.17</ulink>
    </para>
    <para>
      Bu iki paket ise Gnome'un standart paketleri ve derlenmeleri
      gerekiyor. Derlemek yerine RPM paketlerinden kurmayı da tercih
      edebilirsiniz.
    </para>
    <para>
      Tüm temel gereksinimlerimizi karşıladığımıza göre belge hazırlama
      ortamımıza son rötuşları yapalım. Ev dizininizde çalışmalarınızı
      tutabileceğiniz bir dizin oluşturun. Örneğin: <filename>
      /home/nilgun/belgeler </filename> dizine geçin. Internet'e bağlı değilseniz
      bağlanın ve konsolda (ya da xterm'de):
    </para>
<screen>
cvs -d:pserver:anonymous@belgeler.cvs.sourceforge.net:/cvsroot/belgeler login
</screen><para>
      yazdıktan sonra sizden parola istenecek. Birşey yazmadan &lt;Enter>
      tuşuna basın ve:
    </para>
<screen>
cvs -z3 -d:pserver:anonymous@belgeler.cvs.sourceforge.net:/cvsroot/belgeler \
co -P sitesrc
</screen><para>
      komutunu verin. Kısa bir süre sonra dosyalar makinanıza akmaya
      başlayacak. İşlem tamamlandığında bulunduğunuz dizinin içinde bir dizin,
      <literal>sitesrc</literal> dizinini göreceksiniz. Bu dizini çalışma dizininiz
      olarak kullanmayın. Bu dizini örneğimizdeki <filename>
      /home/nilgun/belgeler </filename> dizini altında <literal>source</literal>
      ismiyle kopyalayın. Böylece içeriği aynı olan iki dizin elde etmiş olacaksınız.
      Şimdi diyeceksiniz ki, ikisi de aynıysa neden bunu yaptık. sitesrc dizininin
      içeriğini arasıra güncelleyebilirsiniz. Eğer bu dizini çalışma dizininiz
      olarak kullanırsanız, bir cvs güncellemesi sırasında bizim yaptıklarımız,
      sizin yaptıklarınızın üzerine yazılıp çalışmanızı kaybetmenize sebep
      olacaktır.
    </para>
    <para>
      Siz şimdi "bu güncelemenin nasıl yapılacağını da söyle de bu iş tamam olsun"
      diyececeksiniz. :-)
    </para>
    <para>
      Güncelleme yapmak için <literal>sitesrc</literal> dizinine geçin ve
    </para>
<screen>
cvs -z3 update
</screen><para>
      komutunu girin. Gördüğünüz gibi güncelleme işlemi ilk verdiklerimiz kadar
      karmaşık değil. Tek koşul bu komutu <literal>sitesrc</literal> altında
      değiştirmeden tuttuğumuz dizin içindeyken kullanmaktır.
    </para>
    <para>
      Ancak hiç olmazsa ayda bir kere, sitesrc dizininin bulunduğu dizinde
      bu dizini ilk olarak indirdiğimiz yukarıdaki uzun komutları kullanarak da
      güncellemeniz gereklidir.
    </para>
    <para>
      Bu güncellemeler farklıdır. Uzun komutla yapılan yeni dizinleri de kopyalar.
      Kısa komutla yapılan güncelleme ise sadece mevcut dizinleri günceller.
    </para>
    <para>
      sitesrc/docbook dizini altındaki iki dizin Docbook-XML-DTD ve Docbook-XSL
      kodlarını barındırır. Diğer dizinler ise sitemizi oluşturan XML taslaklar
      ile kitaplığımızın uygun şekilde oluşmasını sağlayan kodları içerir.
    </para>
    <para>
      Bu erişim yöntemi sadece CVS deposundaki dosyaları makinanıza indirmek
      için kullanılabilir. CVS depomuzla etkileşimli çalışmak için yapılması
      gereken işlemler farklıdır. CVS yazılımının belgelerini okuyarak, veya
      kitaplığımızdaki <link linkend="cvs-acikkod-nasil">CVS ile
      Açık Kod Yazılım Geliştirme</link> NASIL belgesinden bu bilgileri
      edinebilirsiniz.
    </para>
  </sect1>

  <sect1 id="xmldoc-howto_struct">
    <title>Bir XML Dosyasının Yapıtaşları</title>
    <para>
      XML, HTML gibi bir biçimleme dili değildir. Sadece veriyi kullanım amacına
      uygun olarak etiketlemek için kullanılan bir dildir. Zaten isminin
      açılımı da Genişletilebilir Etiketleme Dili'dir. XML dosyaları HTML,
      salt metin ya da PDF biçemli dosyalar haline getirmek için bir biçimleme
      dili olan XSL kullanılır. XML hakkında burada dolaylı olarak yüzeysel bazı
      bilgiler bulacaksınız. Daha fazla bilgi edinmek isterseniz, aşağıdaki
      belgeleri okumanızı öneririm:
    </para>
      <itemizedlist>
        <listitem>
          <simpara>
            <ulink url="../recs/xml/">Genişletilebilir İmlenim Dili (XML) 1.0</ulink>
          </simpara>
        </listitem>
        <listitem>
          <simpara>
            <ulink url="../recs/xml-names">XML 1.0'da İsim-alanları</ulink>
          </simpara>
        </listitem>
        <listitem>
          <simpara>
            <ulink url="../recs/xml-infoset">XML Bilgi Kümesi</ulink>
          </simpara>
        </listitem>
      </itemizedlist>
    <para>
      Örnek bir XML belgesini Ekler bölümünde bulabilirsiniz:
      <link linkend="xmldoc-howto_appendix">Sample-HOWTO.xml</link>
    </para>
    <sect2 id="xmldoc-howto_struct-tags">
      <title>Etiketler</title>
      <para>
        XML dilinin olmazsa olmaz bazı özellikleri var. HTML ve benzeri etiketli
        dillerde olduğu gibi metin etiketler arasında veriliyor.<sbr/>
        <literal>&lt;title>bir konu başlığı&lt;title></literal> gibi. Ancak bu
        etiketleme de dikkat edeceğiniz bazı kurallar var:
       </para>
        <itemizedlist>
          <listitem>
            <para>
              Etiket isimleri daima &lt; ve &gt; karakterleri arasında olmalı.
            </para>
          </listitem>
          <listitem>
            <para>
              Etiket ve değişken isimleri daima bir harfle başlamalıdır.
            </para>
          </listitem>
          <listitem>
            <para>
              Kullandığımız XML-Docbook için etiket ismi sadece küçük harflerden
              oluşmaktadır. SGL ve HTML için etiket ismini oluşturan harflerin
              büyüklüğünün önemi yoksa da XML için harf büyüklüğü önemlidir.
              Bu bakımdan standart olmamakla beraber etiket isimlerinde sadece
              küçük harf kullanma alışkanlığı edinmeniz yararlı olacaktır.
              XML'deki bu özellik temel aldığı kodlamadan kaynaklanmaktadır.
              UTF-8 ve UTF-16.
            </para>
          </listitem>
          <listitem>
            <para>
              Bir etiket tanımında, içinde veri içermesi öngörülmüşse, bir açılış
              etiketini daima bir kapanış etiketi izlemeli. Yukarıdaki
              <literal>&lt;title></literal> etiketi gibi. HTML ve SGML'deki bazı
              durumlarda bitiş etiketi verilmeyebilirse de XML için bitiş
              etiketleri zorunludur.
            </para>
          </listitem>
          <listitem>
            <para>
              Etiket sadece bir işlem gerçekleştirmek içinse kapanış etiketi
              kullanılmaz. Örnek: <literal>&lt;sbr/></literal> Bu etiket, Docbook'ta
              kendinden sonra gelen metni satırbaşından başlatmak için kullanılır.
            </para>
          </listitem>
          <listitem>
            <para>
              Bir etiketin bitiş belirleyicisi <emphasis role="bold">/</emphasis>
              karakteridir. Bir veriyi sarmalayan etiketlerde, bu im, etiket isminin
              başına, işlem etiketlerinde sona konur.
            </para>
          </listitem>
          <listitem>
            <para>
              Dosya içinde etiketler haricinde &lt; karakteri kullanılmaz. Bu imi
              kullanmanız gerekiyorsa <literal>&amp;lt;</literal> ile
              belirtmelisiniz.
            </para>
            <para>
              <literal>&amp; </literal> karakterini de yazamazsınız. Bu im XML
              için &lt; gibi bir dil öğesidir. <literal>&amp;lt;</literal>'nin
              yazıldığı gibi görünmesi için <literal>&amp;amp;lt;</literal>
              yazmalısınız.
            </para>
          </listitem>
        </itemizedlist>
    </sect2>
    <sect2 id="xmldoc-howto_struct-comments">
      <title>Açıklamalar, Yorumlar</title>
      <para>
        Programlama dillerinde açıklama ve yorum satırları nasıl bir kurala
        bağlıysa, XML için de kurallar vardır. Bu kural HTML'deki ile aynıdır.
        Bir açıklama <literal>&lt;!-- </literal> ile başlar ve
        <literal>--></literal> ile biter. Bu dizgecikler açıklamaların başlangıç
        ve bitiş etiketleri gibi düşünülmelidir. Yani her başlangıç etiketi
        için bir bitiş etiketi olmalıdır. Bu, bir yorum içinde, bitiş etiketi
        olmayan bir başlangıç etiketinin bulunamayacağı anlamına gelir. Bu
        kurala uyan her türlü açıklama ve yorum dosyanın herhangi bir yerinde
        kullanılabilir. Açıklama ve yorumlar XML dosyanın derlenmesi sırasında
        derleyici tarafından yorumlanmazlar.
      </para>
    </sect2>
    <sect2 id="xmldoc-howto_struct-prolog">
      <title>İlk satır ve Belge Türünün Belirtilmesi</title>
      <para>
        Belgeler sitemizi oluşturan temel dosya olan <filename>belgeler.xml</filename>
        dosyasını inceleyerek bir belge nasıl hazırlanır öğrenirken
        sitemizin yapısı hakkında da fikir edinebileceksiniz.
        <filename>belgeler.xml</filename> dosyasının ilk satırlarından başlayalım:
      </para><informalexample>
<screen>
&lt;?xml version="1.0" encoding="UTF-8"?>                                <co id="xmldoc-howto.r1"/>
&lt;!DOCTYPE set PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"           <co id="xmldoc-howto.r2"/>
    "docbook/dtd/docbookx.dtd" [                                      <co id="xmldoc-howto.r3"/>
  &lt;!ENTITY howtos.xml SYSTEM "source/howtos/howtos.xml">              <co id="xmldoc-howto.r4"/>
    &lt;!--   Türkçe  -->                                                <co id="xmldoc-howto.r5"/>
    &lt;!ENTITY belge-NASIL.xml SYSTEM "source/howtos/belge-NASIL.xml">
  &lt;!ENTITY apps.xml SYSTEM "source/apps/apps.xml">
    &lt;!ENTITY iptables-usage.xml SYSTEM "source/apps/iptables-usage.xml">

  &lt;!ENTITY others.xml SYSTEM "source/others/others.xml">
    &lt;!ENTITY lgpl.xml SYSTEM "source/others/lgpl.xml">
    &lt;!ENTITY gpl.xml SYSTEM "source/others/gpl.xml">
]>
</screen>
          <para>
            Bu satırlar pek sık karşılaşmayacağınız karmaşıklığa sahip,
            ama gözünüz korkmasın, onları da ben yazdım. Bildiklerimi şu
            an sizinle paylaşmaya devam ediyorum.
          </para>
          <calloutlist>
            <callout arearefs="xmldoc-howto.r1">
              <para>
                Bu satır, dosyanın bir <literal>XML</literal> dosyası
                olduğunu, <literal>1.0</literal> sürümüne göre yazıldığını,
                ve dosyadaki karakter kodlamasının <literal>UTF-8</literal>
                olduğunu belirtiyor. Bir XML dosya için en azından<literal>
                &lt;?xml version="1.0"?></literal> satırı bulunmalıdır.
                XML'in güncel sürümü <literal>1.0</literal>'dır. Bu değer
                değiştirilirse dosya işlenmeyebilir.
            </para>
            <para>
              Satırın <literal>encoding</literal> parçası dosya içeriği işlenirken
              önem kazanır. Dosyada, belirtilen karakter kodlamasında bulunmayan
              bir karaktere ya da karakter dizisine rastlandığında hata
              üretilecektir. Burada belirtilen kodlama türü, çıktının kodlama
              türü değil, başlığı barındıran dosyanın karakter kodlamasıdır.
            </para>
            <para>
              XML bildiriminin yapıldığı <literal>&lt;?</literal> ve
              <literal>?></literal> etiketleri XML'de işlem komutlarının
              etiketleridir. İşlem komutları başlangıç etiketine bitişik
              yazılırlar. Burada <literal>&lt;?xml</literal> bir işlem
              komutudur.
            </para>
            <para>
              XML bildirim satırında kullanılabilecek diğer parametrelerden
              burada bahsedilmeyecektir. Onları, <link linkend="xmldoc-howto_struct">
              bölüm başında</link> isimlerini ve bağlarını verdiğim belgelerde
              bulabilirsiniz.
            </para>
            </callout>
            <callout arearefs="xmldoc-howto.r2">
              <para>
                Bu satır ve devamındaki satırlarda, dosyada işlenen belgenin
                türü, belgeyi oluşturan etiketlerin tanımlandığı paketin
                ismi ve sürümü, nerede bulunabileceği, belgeyi oluşturan
                ek dosyalar varsa bunların tanımları gibi bilgiler belirtilir.
                Bu tanımların başlangıç etiketi <literal>&lt;!DOCTYPE</literal>
                ve bitiş etiketi > karakteridir. İçindeki herşey başlangıç etiketi
                olan etiketin parametreleri olarak belirli bir biçemde verilmek
                zorundadır.
              </para>
              <para>
                <literal>&lt;!DOCTYPE</literal> bildirimindeki ilk parameter
                olarak görünen <literal>set</literal> Docbook'un belge türü elemanlarından
                biridir. <literal>set</literal> elemanı bir kitaplar kümesi
                içerebilir. Bizim belgeler sitemiz de bir miktar kitap içeriyor.
                Bu alanda belirtilebilecek diğer belge türü elemanları, book, part,
                article article, vs. olabilir. Docbook'un elemanları ilerde
                tanıtılacaktır.
              </para>
              <para>
                Hemen ardından gelen <literal>PUBLIC</literal> bir tanımlayıcıdır.
                Belirtilmesi isteğe bağlıdır. Kendinden sonra gelen dizge ile
                belgede kullanılan eleman ve parametrelerin hangi DTD ile
                ilişkili olduğunu belirtmekte kullanılır.
                Burada <literal>&lt;!DOCTYPE</literal> bildiriminin burada
                kullanılmamış olan özelliklerinden bahsedilmeyecektir. Bu
                bilgileri <ulink url="http://docbook.org/tdg/en/tdg-en-html-2.0.4.zip">
                Docbook Guide</ulink>'da bulabilirsiniz.
              </para>
            </callout>
            <callout arearefs="xmldoc-howto.r3">
              <para>
                Bu satır, <literal>&lt;!DOCTYPE</literal> bildiriminde bulunması
                zorunlu olan sistem tanımlayıcıdır. Burada, belgenin oluşturulmasında
                kullanlan DTD'nin adresi verilmelidir. Bu adres bir URL olabildiği
                gibi burada olduğu gibi bir sistem dizini de olabilir. Hemen
                ardından gelen [ ]'ler içindeki bölüm aşağıda anlatılmıştır.
              </para>
            </callout>
            <callout arearefs="xmldoc-howto.r4">
              <para>
                <literal>&lt;!ENTITY</literal> bildirimiyle belgemizi
                oluşturan diğer dosyaları tanıtıyoruz. Bunun için bir
                değişken ismi ve <literal>SYSTEM</literal> belirteciyle de
                dosyanın bulunduğu yeri belirtiyoruz. Belittiğimiz değişken
                isimlerini dosya içinde diğer dosyaların bağlanacağı noktalarda
                başına bir <literal>&#x0026;</literal> ve sonuna da bir
                <literal>;</literal> getirerek kullanıyoruz. <filename>
                belgeler.xml</filename> dosyasının sonundaki gibi:
              </para>
<screen>
&#x0026;howtos.xml;
&#x0026;apps.xml;
&#x0026;others.xml;
&lt;/set>
</screen></callout>
            <callout arearefs="xmldoc-howto.r5">
              <para>
                Bu satır bir açıklama satırıdır. Bilgi vermek amacıyla
                kullanılmıştır. Dosyanın derlenmesi sırasında bu ve benzeri
                satırlar yorumlanmazlar.
              </para>
            </callout>
          </calloutlist>
        </informalexample>
      <para>
        <literal>&lt;!DOCTYPE</literal> bildirimi ek dosyalarda belirtilmez.
        Diğer dosyaları incelerseniz, bu dosyalarda bu satırların yorumlanmaması
        için açıklama elemanları ile sarmalanmış olduklarını göreceksiniz.
        İptal edildiği halde dosya içinde bulunmalarının sebebi bu dosyalar
        bağımsız olarak işlendiğinde bu bildirimlerin tekrar etkin kılınarak
        kullanılabilmeleri içindir.
      </para>
    </sect2>
  </sect1>
  <sect1 id="xmldoc-howto_categories">
    <title>Docbook Elemanları</title>
    <para>
      Docbook elemanlarını her biri diğerlerini içeren 8 grupta inceleyebiliriz:
    </para>
      <orderedlist>
        <listitem>
          <para>
            <emphasis role="bold">Kitaplıklar (set)</emphasis>
          </para>
          <para>
            Bir <sgmltag>set</sgmltag> elemanı en azından bir
            <sgmltag>book</sgmltag> içerir. Sitemizin kitaplık bölümü
            bir miktar <sgmltag>book</sgmltag>'tan oluşan bir <sgmltag>set</sgmltag>'tir
          </para>
        </listitem>
        <listitem>
          <para>
            <emphasis role="bold">Kitaplar (<sgmltag>book</sgmltag>)</emphasis>
          </para>
          <para>
            Bir <sgmltag>book</sgmltag> genellikle en üst seviye elemandır.
            Bir kitap serisi planlamadığınız sürece en tepe Docbook elemanıdır.
            Aşağıdaki elemanların bir karışımından oluşur.
          </para>
            <variablelist>
              <varlistentry>
                <term>Adama Bölümü (<sgmltag>dedication</sgmltag>)</term>
                <listitem>
                  <para>
                    Genellikle kitabın en başında yer alır.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>Gezinme Elemanları</term>
                <listitem>
                  <para>
                    İçindekiler (<sgmltag>toc</sgmltag>), Çizelge ve Şekil Listeleri
                    (<sgmltag>lot</sgmltag>), Fihrist (<sgmltag>index</sgmltag>)
                    gibi kitap bölümleridir.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>Oylumlar</term>
                <listitem>
                  <para>
                    Bir kitabın üst seviye hiyerarşik parçalarıdır.
                    (<sgmltag>part</sgmltag> ve <sgmltag>reference</sgmltag>)
                    Ancak bir kitap bu elemanlar olmadan da oluşturulabilir.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>Kısımlar</term>
                <listitem>
                  <para>
                    Oylumların ya da kitabın alt kısmı olarak kullanılabilen
                    <sgmltag>chapter</sgmltag> etiketi ile tanımlanan kitap
                    bölümleridir.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>Bölümler</term>
                <listitem>
                  <para>
                    Bu kitabın içindeki belgeleri oluşturan parçalar (<sgmltag>article</sgmltag>
                    ve <sgmltag>sect1</sgmltag>)
                    bu bölümlere iyi bir örnektir. Her <sgmltag>article</sgmltag> çok sayıda
                    alt bölüm (<sgmltag>sect1</sgmltag>, <sgmltag>section</sgmltag>) içerebilir.
                    </para><warning><para>
                      <sgmltag>article</sgmltag> ve <sgmltag>chapter</sgmltag> etiketleri
                      eşdeğer etiketlerdir. Yani bir <sgmltag>article</sgmltag>,
                      bir <sgmltag>chapter</sgmltag> içinde bulunamaz.
                    </para></warning>
                </listitem>
              </varlistentry>
            </variablelist>
        </listitem>
        <listitem>
          <para>
            <emphasis role="bold">Oylumlar (<sgmltag>part</sgmltag>)</emphasis>
          </para>
          <para>
            Kitapların alt bölümü olarak yukarıda bahsedildi.
          </para>
        </listitem>
        <listitem>
          <para>
            <emphasis role="bold">Kısımlar (<sgmltag>chapter</sgmltag>)</emphasis>
          </para>
          <para>
            Kitapların alt bölümü olarak yukarıda bahsedildi.
          </para>
        </listitem>
        <listitem>
          <para>
            <emphasis role="bold">Bölümler (<sgmltag>article</sgmltag>, <sgmltag>sect1</sgmltag>)</emphasis>
          </para>
          <para>
            Kitapların alt bölümü olarak yukarıda bahsedildi.
          </para>
        </listitem>
        <listitem>
          <para>
            <emphasis role="bold">Alt Bölümler (<sgmltag>section</sgmltag>)</emphasis>
          </para>
          <para>
            Docbook'ta alt bölümleri oluşturan elemanlar çok çeşitlidir:
          </para>
            <variablelist>
              <varlistentry>
                <term><sgmltag>sect1...sect5</sgmltag> Elemanları</term>
                <listitem>
                  <para>
                    Bunlar hemen tüm belgelerde sıklıkla kullanılan numaralı
                    bölüm elemanlardır. <sgmltag>sect1</sgmltag>'den başlayarak iç içe
                    5 seviyeli bölümleme yapılabilir.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><sgmltag>section</sgmltag> Elemanları</term>
                <listitem>
                  <para>
                    <sgmltag>section</sgmltag> elemanlarının sect* elemanlarından farkı
                    sonsuz iç içelikte bölümleme yapılabilmesidir.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><sgmltag>simplesection</sgmltag> Elemanı</term>
                <listitem>
                  <para>
                    Genellikle diğer sect* elemanlarının içinde yer alır.
                    <sgmltag>simplesect</sgmltag> elemanının altına başka
                    sect* elemanı yerleştirilemez. Bu bakımdan sonlandırıcı
                    sect* elemanı gibi görev yapar.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><sgmltag>bridgehead</sgmltag> Elemanı</term>
                <listitem>
                  <para>
                    Sadece bir bölüm başlığı üretir.
                 </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><sgmltag>refsect1...refsect3</sgmltag> Elemanları</term>
                <listitem>
                  <para>
                    Bu elemanlar sadece <sgmltag>refentry</sgmltag> elemanlarının
                    içinde bulunabilir. sect* elemanları gibidir, ama sadece 3
                    seviyeli bölümleme yapılabilir.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><sgmltag>glossdiv, bibliodiv</sgmltag> ve <sgmltag>indexdiv</sgmltag> Elemanları</term>
                <listitem>
                  <para>
                    Sözcük dağarcığı (<sgmltag>glossdiv</sgmltag>), kaynakça
                    (<sgmltag>bibliodiv</sgmltag>) ve fihrist
                    (<sgmltag>indexdiv</sgmltag>) bölümlerini oluşturmakta
                    kullanılırlar. sect* elemanlarının tersine bunlar iç içe
                    seviyeli olamazlar.
                  </para>
                </listitem>
              </varlistentry>
            </variablelist>
        </listitem>
        <listitem>
          <para>
            <emphasis role="bold">Ön bilgi elemanları</emphasis>
          </para>
          <para>
            <sgmltag>bookinfo, partinfo, articleinfo</sgmltag> gibi önbilgi
            verme bölümleridir.
            Bu bölümlerde başlık, yazara ilişkin bilgiler, sürümlerin gelişimi
            belge hakkında özet bilgi, içindekiler, anahtar sözcükler gibi
            bilgiler verilir.
          </para>
        </listitem>
        <listitem>
          <para>
            <emphasis role="bold">Blok elemanları</emphasis>
          </para>
          <para>
            Blok elemanlarına en iyi örnek paragraflardır (<sgmltag>para</sgmltag>).
            Listeler tablolar, şekiller ve resimlerde blok elemanlarıdır.
          </para>
            <variablelist>
              <varlistentry>
                <term>Listeler</term>
                <listitem>
                  <para>
                    Docbook'ta 7 tane liste elemanı vardır.
                  </para>
                    <variablelist>
                      <varlistentry>
                        <term><sgmltag>calloutlist</sgmltag></term>
                        <listitem>
                          <para>
                            Genellikle bir program ya da ekran görüntüsü üzerinde
                            bilgi vermek için kullanılır. Bir önceki bölümde
                            XML dosyasının ilk satırlarını incelerken bu elemandan
                            faydalanmıştım.
                          </para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term><sgmltag>glosslist</sgmltag></term>
                        <listitem>
                          <para>
                            Sözcük dağarcığındaki terimler ve tanımları için
                            kullanılır.
                          </para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term><sgmltag>itemizedlist</sgmltag></term>
                        <listitem>
                          <para>
                            Sıra numarasız imli listeler için kullanılır.
                          </para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term><sgmltag>orderedlist</sgmltag></term>
                        <listitem>
                          <para>
                            Sıra numaralı listeler için kullanılır. Bu bölümdeki
                            1 den 8 e kadar giden liste gibi.
                          </para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term><sgmltag>segmentedlist</sgmltag></term>
                        <listitem>
                          <para>
                            Öğelerinin isimlerinin tekrarlandığı listeler için
                            kullanılır.
                          </para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term><sgmltag>simplelist</sgmltag></term>
                        <listitem>
                          <para>
                            Öğelerinin sıra numarası almadığı imsiz bir liste
                            türüdür. Öğeleri satır ve sütunlar halinde
                            düzenlenebilir.
                          </para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term><sgmltag>variablelist</sgmltag></term>
                        <listitem>
                          <para>
                            Parametre, seçenek açıklamaları türünden listelerde
                            kullanılır. Burada 7 liste elemanını tanıttığım liste
                            böyle bir listedir.
                          </para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>Dikkat Çekme Elemanları</term>
                <listitem>
                  <para>
                    Docbook'ta 5 tür dikkat çekme elemanı vardır: <sgmltag>caution,
                    important, note, tip, warning</sgmltag>
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>Paragrafların içinde kullanılan elemanlar</term>
                <listitem>
                  <para>
                    HTML'deki &lt;BR> elemanının Docbook'da ki karşılığı
                    &lt;sbr/> en basit örnek olarak verilebilir.<sbr/>
                    Başlıcaları:
                  </para>
                    <variablelist>
                      <varlistentry>
                        <term><sgmltag>address</sgmltag></term>
                        <listitem>
                          <para>
                            Posta adreslerini belirtirken kullanılır. Satır içi
                            kullanımda ise isim ve adresleri etiketlemek için
                            kullanılır.
                          </para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term><sgmltag>literallayout</sgmltag></term>
                        <listitem>
                          <para>
                            İçerdiği metne sabit yazı tipi uygular ama
                            <sgmltag>programlisting</sgmltag> ve
                            <sgmltag>screen</sgmltag> gibi belli bir zemin rengi
                            yoktur. Boşluklar korunduğundan ASCII-art gösterimler
                            için faydalıdır. (Bu standart uygulama değildir.
                            Bu kitaplık için xsl dönüşümü yapılırken elemana
                            bu özellik verilmiştir.)
                          </para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term><sgmltag>programlisting</sgmltag> ve <sgmltag>screen</sgmltag></term>
                        <listitem>
                          <para>
                            Program listeleri, konsol çıktıları vb. metinlerin
                            oldukları gibi görünmesini sağlayan bloklama
                            elemanlarıdır. Bu kitaplık için özelleştirilmiş ve
                            zemin rengi atanmıştır. İçeriğine sabit genişlikli
                            yazı tipi uygular.
                          </para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term><sgmltag>screenshot</sgmltag></term>
                        <listitem>
                          <para>
                            Grafik ekran görüntüleri için kullanılır.
                          </para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term><sgmltag>synopsys</sgmltag></term>
                        <listitem>
                          <para>
                            Komut ve işlev bildirimlerini belirlemek için kullanılır.
                          </para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>Örnekler, Şekiller ve Tablolar</term>
                <listitem>
                  <para>
                    Örnekler için <sgmltag>example</sgmltag> ve
                    <sgmltag>informalexample</sgmltag>, şekiller için
                    <sgmltag>figure</sgmltag> ve <sgmltag>informalfigure</sgmltag>,
                    tablolar için <sgmltag>table</sgmltag>, ve
                    <sgmltag>informaltable</sgmltag> elemanları kullanılabilir.
                    informal* elemanları türlerinin başlıksız olanlarıdır.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>Paragraflar</term>
                <listitem>
                  <para>
                    Hemen her elemanın içinde yer alabilen blok elemanlarıdır.
                    <sgmltag>para, formalpara, simplepara</sgmltag> gibi farklı
                    amaçlara yönelik türleri vardır. <sgmltag>formapara</sgmltag>
                    elemanı başlıklı bir paragraf türü belirtir.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>İfadeler</term>
                <listitem>
                  <para>
                    Matematiksel ifadelerin gösterilmesinde kullanılır.
                    <sgmltag>equation</sgmltag> ve <sgmltag>informalequation</sgmltag>
                    elemanları blok, <sgmltag>inlineequation</sgmltag>
                    ise satır içi kullanım elemanlarıdır.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>Resimler</term>
                <listitem>
                  <para>
                    Resimler için kullanılabilecek elemanlar <sgmltag>figure</sgmltag>
                    ve <sgmltag>screenshot</sgmltag> elemanlarıdır. Satır içi kullanım
                    için <sgmltag>inlinegraphic</sgmltag> elemanı kullanılır. Ayrıca
                    video, ses, resim ve metin veriler için <sgmltag>mediaobject</sgmltag>,
                    satır içi kullanımda <sgmltag>inlinemediaobject</sgmltag> elemanları
                    kullanılabilir.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>Soru-Cevap Elemanları</term>
                <listitem>
                  <para>
                    Sıkça Sorulan Sorular bölümlerini oluşturmak için <sgmltag>qandaset</sgmltag>,
                    <sgmltag>question, answer</sgmltag> elemanları kullanılabilir.
                  </para>
                </listitem>
              </varlistentry>
            </variablelist>
        </listitem>
        <listitem>
          <para>
            <emphasis role="bold">İç elemanlar</emphasis>
          </para>
          <para>
            Bunlar bölümler ve paragraflar içinde yer alan bağ, karakter
            biçimleme, uyarı vb. elemanlarıdır. Burada çok sık kullanılan
            bazı elemanlar tanıtılmıştır.
          </para>
            <variablelist>
              <varlistentry>
                <term><sgmltag>abbrev</sgmltag></term>
                <listitem>
                  <para>
                    Bir kısaltmayı etiketler. Kısaltmayı bir nokta izler.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><sgmltag>acronym</sgmltag></term>
                <listitem>
                  <para>
                    Bir deyim ya da ismin baş harfleriyle oluşturulan bir
                    kısaltmanın anlatımı için kullanılır.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><sgmltag>emphasis</sgmltag></term>
                <listitem>
                  <para>
                    Etiketlediği metnin eğik karakterlerle gösterileceğini
                    belirtmek için kullanılır. Bu kitap için özelleştirilerek,
                    <literal>role</literal> parametresi
                    ile bu etikete kalın karakter gösterimi de eklenmiştir:
                    <literal>&lt;emphasis role="bold"></literal>. Hem kalın hem
                    eğik istenirse elemanlar birbirinin içinde kullanılmalıdır.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><sgmltag>footnote</sgmltag></term>
                <listitem>
                  <para>
                    Dipnotlar için kullanılır.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><sgmltag>trademark</sgmltag></term>
                <listitem>
                  <para>
                    Bir ticari markayı etiketlemekte kullanılır.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><sgmltag>link</sgmltag></term>
                <listitem>
                  <para>
                    Belge içi çapraz bağlar için kullanılır. Bağ hedefi olan
                    elemanın <literal>id</literal> parametresi,
                    <literal>linkend</literal> parametresine belirtilir.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><sgmltag>ulink</sgmltag></term>
                <listitem>
                  <para>
                    Dış hedefler için bağ belirtir. Hedefin adres bir URL olarak
                    <literal>url</literal> parametresinde belirtilir.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><sgmltag>literal</sgmltag></term>
                <listitem>
                  <para>
                    Satır içinde özgün hali korunması ve vurgulanması gereken
                    metin parçaları için kullanılır.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><sgmltag>sgmltag</sgmltag></term>
                <listitem>
                  <para>
                    Metin içinde geçen etiket isimlerini etiketlemede kullanılır.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><sgmltag>replaceable</sgmltag></term>
                <listitem>
                  <para>
                    Metin içinde kullanıcının değiştirmesi beklenen ya da
                    istenen metin parçalarını etiketlemekte kullanılır.
                  </para>
                </listitem>
              </varlistentry>
            </variablelist>
        </listitem>
      </orderedlist>
    <para>
      Bu bölümde bahsettiğim elemanlar Docbook'un 300'den fazla eleman içerdiği
      gözönüne alındığında çok azdır. Ama en çok kullanılanlardan bahsetmeye
      çalıştım. Buradaki bilgiler tek başlarına bir belge yazmak için yeterli
      değildir. Burada sadece Docbook Guide'ın Docbook oluşturulması ile ilgili
      bölümünü kısmen çevirdim, kısmen de ben bir şeyler kattım. Docbook Guide,
      her eleman için bu sayfa gibi birer sayfa içeriyor. Bu bakımdan belge
      hazırlayacaksanız bu kılavuz daima farenizin imlecinin altında bulunmalıdır.
      Ya da hazır bir belgenin sadece çevirisiyle ilgilenmelisiniz.
    </para>
  </sect1>
  <sect1 id="xmldoc-howto_processor">
    <title>Hata Ayıklama</title>
    <para>
      Hata ayıklamaktansa hatasız yazmayı tercih etmelisiniz. Bu Kate kullanınca
      hiç zor değil. Kate XML dosyaları yazmak için bir eklenti içeriyor. Bu
      eklenti sayesinde etiketleri yazmak zorunda kalmıyorum, basitçe bir
      menüden seçiyorum. Dolayısıyla dosyada bir hata olmuyor. Bu özelliğinden
      yararlanabilmek için kullanılan DTD'nin Kate'e tanıtılması gerekiyor.
      Sitemizin DTD'sini Kate ile kullanılabilecek biçeme dönüştürdüm.
      Bu dosyayı proje sayfamıza indirilebilirsiniz:
      <ulink url="https://sourceforge.net/projects/belgeler/">belgeler.dtd.xml-1.0.bz2</ulink>
       (19kB). Belgeler-DTD, ihtiyaçlar doğrultusunda geliştirilmektedir. Bu bakımdan
      yeni sürümler hakkında otomatik olarak bilgilendirilmek isterseniz, paket
      bağının yanındaki küçük zarfa tıklayın ve istenen bilgileri verin.
    </para>
    <para>
      Bu dosyayı Kate ile nasıl kullanacağız?
    </para>
    <para>
      Önce Red Hat dağıtımını kullandığımı belirtmeliyim. Çünkü bu dosyayı
      kopyalayacağınız yer sizin dağıtımınızda farklı bir yerde olabilir.
      Bunzip2 ile önce dosyayı açın, yaklaşık 1.1 MB.lık bir  dosya oluşacak.
      Bu dosyayı (belgeler.dtd.xml) <literal>/usr/share/apps/katexmltools/</literal>
      dizinine kopyalayın.
    </para>
    <para>
Kate'i çalıştırın. Menüsünden sırayla <literal>Ayarlar -> Kate Programını  Yapılandır -> Eklentiler</literal> üzerinden <literal>Kate XML Tamamlama</literal> seçeneğini işaretleyin. Menü çubuğundan <literal>XML -> Meta DTD Ata ...</literal> seçerek açılan dosya yükleme penceresinden  <literal>belgeler.dtd.xml</literal> dosyasını seçin.  Kısa sürede Kate bu dosyayı yükleyecek.
    </para><para>
Ne zaman bir etikete ihtiyacınız olursa yapacağınız şey <literal>ctrl+enter</literal> veya <literal>%lt;</literal> tuşlamak olacak. Etiketleri kullandıkça, açılan DTD menüsünün içeriğinin değiştiğini farkedeceksiniz. Bu DTD'nin bir özelliğidir. Etiketler, bir diğerinin yorum aralığında farklı etiketler kabul eder. Bu özellik sayesinde yazdığınız XML dosya, DTD'ye uyumlu olur ve derleme sırasında hata vermez. Ayrıca, imleç bir etiketin yorum alanında değil de etiketin içindeyken menü isterseniz bu kez etiketle birlikte kullanılabilecek parametrelerin listesini alacaksınız.
    </para>
    <para>
Kate'i bu eklentisi ile kullandığınızda tamamen hatasız bir dosya üreteceğinizi sanmayın. İnsanız, mutlaka bir yerde hata yaparız. Bu bakımdan okumayı burada bırakmayıp belgenin devamını okuyun.
    </para>
    <para>
Belgemizi hazırlarken ve/veya hazırladıktan sonra hataları ayıklamamız ve sunuma hazırlamamız lazım. Bunun için, konsolda basit bir komut yazıyoruz:
    </para>
<screen>$ xsltproc -o index.html belgem.xsl belgem.xml</screen>
    <para>
      Burada ilk parametre olan <literal>-o</literal> ile belgemizin HTML
      çıktısının ismini belirtiyoruz: <literal>index.html</literal>. Sıradaki
      parametre hazırladığımız belgenin HTML olarak derlenmesini sağlayan XSL
      dönüşüm betiği, son parametre de hazırladığımız dosyadır. Bu komutu
      çalıştırdığınızda <literal>belgem.xml</literal> hatasızsa bir  dizi HTML
      dosya üretilecektir. Komut, dosyaların hepsinin aynı dizinde olduğu
      varsayılarak hazırlanmıştır. Her terim için göreli dizin isimleri
      belirtebilirsiniz.
    </para>
    <para>
      <literal>belgem.xsl</literal> dosyası için şu kod işinizi görecektir:
    </para>
<screen>
&lt;?xml version='1.0' encoding="UTF-8"?&gt;
&lt;xsl:stylesheet
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"  version='1.0'&gt;
  &lt;xsl:import
    href="docbook/xsl/html/chunk.xsl"/&gt;

  &lt;xsl:param name="chunk.sections" select="'1'"/&gt;
  &lt;xsl:param name="chunk.first.sections" select="1"/&gt;
  &lt;xsl:param name="chunk.section.depth" select="1"/&gt;
  &lt;xsl:param name="root.filename"/&gt;

  &lt;xsl:param name="html.stylesheet" select="'../belgelerim.css'"/&gt;

  &lt;xsl:param name="admon.graphics.path"&gt;../images/xsl/&lt;/xsl:param&gt;
  &lt;xsl:param name="callout.graphics.path" select="'../images/xsl/callouts/'"/&gt;
  &lt;xsl:param name="navig.graphics.path"&gt;../images/xsl/&lt;/xsl:param&gt;
&lt;/xsl:stylesheet&gt;
</screen>
    <para>
      Kullandığımız komut derleme sırasında dosyada bir hata olduğunda
      bir sürü hata üretir. İlk belirtilen hatayı giderdikten sonra
      komutu tekrar çalıştırın. Diğer hatalar, dosya ardışık işlendiği
      için ardışık üretilen hatalardır. Daima ilk hatayı gidererek
      kısa sürede sonuca ulaşırsınız. Dosyayı yazarken hep
      derlenebilecek şekilde yazmanızı ve yazdıkça hatalar bakımından
      denetlemenizi öneririm. Böylece hatayı hep son yazdığınız kısımlarda
      arama lüksünüz olur. Aksi takdirde hatayı bulmak çok güç olabilir.
    </para>
    <para>
      Belgeleri istenen biçemde biçimlemekte kullanılan XSL dili hakkında
      burada bilgi verilmeyecektir. Bu dil hakkında fikir edinmek için
      xsl-stylesheet belgelerine ve koduna bakabilir, daha ayrıntılı bilgi
      edinmek için aşağıdaki adresleri ziyaret edebilirsiniz:
    </para>
    <para>
      <ulink url="../recs/xslt">XSL Dönüşümleri (XSLT) Sürüm 1.0</ulink><sbr/>
      <ulink url="../recs/xml-stylesheet">Biçembentlerin XML Belgelerle İlişkilendirilmesi</ulink><sbr/>
      <ulink url="../recs/xpath">XML Adresleme Dili (XPath) 1.0</ulink>
    </para>
    <para>
      Belgeleri, SGML araçları ile denetlemenizi önermeyeceğim. Diğer
      belge biçemlerini elde ederken SGML araçlarını kullanmadığımız için
      belge taslaklarında SGML uyumluluğu aranmamaktadır. XML uyumluluğu
      yeterlidir. (XML, SGML'nin alt kümesi olarak tasarlanmışsa da SGML araçları XML belgeler için yeterli olamamaktadır; bu durum standardın değil, araçların yetersizliğinden kaynaklanmaktadır.)
    </para>
    <para>
      Bu belgenin oluşturulmasında faydalanılan tüm kaynaklar belge içinde
      yeri geldikçe belirtilmiştir.
    </para>
  </sect1>
</article>

