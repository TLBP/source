<?xml version="1.0" encoding="UTF-8"?>
<!--DOCTYPE article SYSTEM "../docbook/dtd/belgeler.dtd" [
<!ENTITY % belgeler.dtd SYSTEM "../belgeler.dtd">
]-->
<article xml:id="xmldoc-howto" xmlns="http://docbook.org/ns/docbook"
 xmlns:xl="http://www.w3.org/1999/xlink" version="5.0" xml:lang="tr">
 <info>
  <title>Linux Belgeleri NASIL</title>
  <authorgroup>
   <author>
    <personname>Nilgün Belma Bugüner</personname>
   </author>
  </authorgroup>
  <pubdate>16 Kasım 2002</pubdate>
  <revhistory>
   <revision>
    <revnumber>0.4</revnumber>
    <date>10 Eylül 2021</date>
    <authorinitials>NBB</authorinitials>
    <revremark>
     Aradan geçen yıllarda çok şey değişti. Artık iso-8859-9 yok. Herkes
     UTF-8 kullanıyor. O eski uyum sorunları kalmadı. RedHat kullanmayı
     bıraktım, artık Debian kullanıyorum. Pardus çıktı. Sonradan Debian
     tabanlı oldu. Docbook DTD'nin 5. sürümü çıktı. CVS tarihe karıştı.
     Artık Git kullanıyoruz. Sayamadığım pek çok güzel şey gerçekleşti.
     Örneğin artık bir bilişim sözlüğüne ihtiyacımız kalmadı.
     20 yıl önce tartışmalı olan terimleri şimdi herkes tartışmasız
     kullanıyor. Bu değişiklikleri belgelere yansıtırken bu belgeyi de
     güncellememek olmazdı.
    </revremark>
   </revision>
   <revision>
    <revnumber>0.3</revnumber>
    <date>16 Kasım 2002</date>
    <authorinitials>NBB</authorinitials>
    <revremark>
      Kate ile belgeler.dtd.xml dosyasının kullanımı ve CVS kullanım
      bilgileri eklendi.
    </revremark>
   </revision>
   <revision>
    <revnumber>0.2</revnumber>
    <date>5 Haziran 2002</date>
    <authorinitials>NBB</authorinitials>
    <revremark>
      Belge, Belgelendirme Çalışma Grubu Elkitabı içine yerleştirildi ve
      içeriğinde bazı değişiklikler yapıldı.
    </revremark>
   </revision>
   <revision>
    <revnumber>0.1</revnumber>
    <date>8 Mayıs 2002</date>
    <authorinitials>NBB</authorinitials>
    <revremark>
      Bu belge, Linux Belgelendirme Çalışma Grubu üyelerinin sitemizde
      yayınlanmak üzere nasıl belge hazırlaması gerektiği hakkında bilgi
      vermek üzere hazırlanmıştır.
    </revremark>
   </revision>
  </revhistory>
  <abstract>
   <para>
    Bu belgede Docbook belgeleri hakkında bir ön bilgi verilecek,
    sitemizin belge sunum sisteminin özellikleri ve bu özelliklere
    uygun belgelerin nasıl hazırlanacağı anlatılacaktır.
   </para>
  </abstract>
 </info>

 <sect1 xml:id="xmldoc-howto_intro">
  <title>Giriş</title>
  <para>
   Web sayfası hazırlamış olanlar XML yapısına kolayca uyum sağlayabilir.
   Tipik bir HTML kodu aşağıdaki gibidir.
  </para>
<screen>
<![CDATA[
  <html>
    <head>
      <title>Başlık</title>
    </head>
    <body>
      <h3>Sayfam</h3>
      <p>Sayfam güzeldir.</p>
    </body>
  </html>
]]>
</screen>
  <para>
   Şimdi bu sayfayı bir de XML ile yazalım:
  </para>
<screen>
<![CDATA[
  <article>
    <info>
      <title>Başlık</title>
    <info>
    <sect1>
      <title>Sayfam</title>
      <para>
        Sayfam güzeldir.
      </para>
    </sect1>
  </article>
]]>
</screen>
  <para>
    Yapıları ne kadar benziyor değil mi?
  </para>
  <para>
    Diyebilirsiniz ki, HTML biliyorum, ben sayfayı HTML ile yazayım, bitsin,
    gitsin. O zaman hazırladığınız belgeyi sadece web tarayıcınızla
    okuyabilirsiniz. Halbuki XML ile yazdığınız bir belge HTML'ye
    dönüştürülebildiği gibi, TXT, PDF, vb. belge biçemlerine dönüştürülebilir
    ortak bir yapı sunar. Bir HTML sayfa tek bir sayfadır ama Docbook olarak
    hazırlanmış bir belge ile değil kitap, bir kitaplık yazabilirsiniz.
    Ve hatta tek bir komutla bu kitaplıktan yüzlerce HTML sayfası
    üretebilirsiniz. Üstelik HTML çıktısını beğenmezeniz görüntüsünü
    değiştirmek için HTML dosyayı yeniden yazmak gibi dertlerle de
    uğraşmazsınız. Ayrıca, bir sürü belge biçemi bilmek zorunda da
    değilsiniz. Hiç çıktının görünümü ile uğraşmadan kendinizi sadece bu
    belgelerle aktaracağınız bilginin üretilmesine verebilirsiniz.
    Sitemizdeki belgeler, tabii bu belge bu sistemle üretilmiştir.
  </para>
 </sect1>

 <sect1 xml:id="xmldoc-howto_prep">
  <title>Bir Belge Hazırlamaya Başlamadan Önce</title>
  <para>
   Önce sisteminizde tam bir Türkçe desteği olmalı. Artık bu bir sorun
   olmaktan çıktı. Hemen her dağıtım eksiksiz denebilecek Türkçe desteği
   ile geliyor.
  </para>
  <para>
   Belgeleri hazırlayabilmek için basit bir metin düzenleyici yeterli.
   Gedit, Emacs, Kwrite ya da Kate işinizi görür. Ben Kate kullanmayı tercih
   ediyorum, çok sayıda belge ile çalışabilme ve XML dosyaların yazımını
   kontrol etme ve dosyanın karakter kodlamasını değiştirebilme özelliği
   bana çekici geliyor.
  </para>
  <para>
   <!-- dtdparse kurmak için: apt install libsgml-dtdparse-perl -->
   Kate kullanmayı tercih etmemin başlıca sebebi XML dosyaları yazmak
   için bir eklentiye sahip olması. Kate'in bu eklentisini kullanmak için
   hazırladığım <filename>dtd4kate.xml</filename> dosyasını
   <filename>/docbook/dtd/</filename> dizininde bulabilirsiniz. Açılış
   etiketi seçmek için <literal>&lt;</literal> veya
   <literal>Ctrl + Enter</literal>, etiketi kapatmak için
   <literal>&lt;/</literal> veya <literal>Ctrl + &lt;</literal>, öznitelik
   girmek için <literal>boşluk</literal> tuşuna basmak gerekiyor. Arasıra
   komut satırından <command>xmllint</command> çalıştırıp hata ayıklaması
   yapabilirsiniz. Emacs'ın desteği daha iyi ama Emacs, GTK uygulamasında
   bile hala komut yazmamızı bekliyor. Emacs'a komut yazamaya alışkınsanız,
   onu kullanın. Hatalarınızı kırmızı renkte gösteriyor. Ancak, Emacs
   bunun için özel bir eklenti (<link
   xl:href="http://www.thaiopensource.com/nxml-mode/">nXML-mode</link>)
   ve Docbook 5'in DTD değil RNC dosyasını istiyor.
  </para>
  <para>
   XML belgeyi doğrulamak için yeni araçlar gerekiyor.
   <package>jing</package> ve <package>trang</package> paketleri Debian
   deposunda var. <command>trang</command> komutuna muhtemelen ihtiyacınız
   olmayacak ama <command>jing</command> komutunun gereksinim duyduğu
   araçları nedense <package>trang</package> paketine koymuşlar.
  </para>
  <para>
   Bir Docbook kılavuzuna ihtiyacınız olacak. Benim bir belge hazırlarken
   faydalandığım kılavuzu
   <link xl:href="https://tdg.docbook.org/tdg/5.0/docbook.html">
   docbook.org</link>'dan alabilirsiniz. İsmi 'Docbook 5: Definitive Guide'
  </para>
  <para>
   Bir XML dosyası yazacak araçlarımız artık var. Yazdığımız belgenin
   derlenmesi lazım ki, bir yerde hata yapmış mıyız bilelim. Bir HTML
   çıktısını da görmek istersiniz değil mi? O halde belgemizi derlemek
   için bazı yazılımlara, yardımcı kodlara ihtiyacımız olacak.
  </para>
  <para>
   Docbook kodunu oluşturan eleman ve bağımsız değişkenlerin birbirleriyle
   ilişkilerinin düzenlendiği kod tanımlarına (XML-DTD), HTML koda dönüşümün
   nasıl yapılacağını belirleyebileceğimiz bir dönüşüm diline (XSLT) ve tüm
   bunları harmanlayıp HTML kodunu üretecek bir yardımcı yazılıma (xsltproc)
   ihtiyacımız olacak. Bu araçlar hemen her Linux dağıtımda zaten bulunuyor.
   Docbook'un standart elemanları dışında elemanlar kullanmazsanız ve görsel
   olarak farklı bir şey istemiyorsanız XSL dönüşümlerini yapacak kodlar da
   hazır olarak var. Bu kitaplığı hazırlarken kullandığım paketleri sizler de
   kullanırsanız, bir uyumsuzluk sorunu yaşamayız. Ayrıca sorunlarınızı
   ilettiğinizde aynı paketleri kullandığımızdan anlaşmak da kolay olur.
  </para>
  <para>
   Şimdi bu paketlerin hangileri olduğuna nereden alınabileceğine ve
   dosya sisteminizde bulunabilecekleri yerlere bakalım.
  </para>
  <para>
   Bu paketler ve sürümleri benim kullandıklarım, sanırım daha üst sürümleri
   de sorun çıkarmaz.
  </para>
  <simplelist>
   <member><emphasis>docbook5-xml</emphasis>:
   <filename>/usr/share/xml/docbook/schema</filename> (Debian)</member>
   <member><emphasis>docbook-xsl-ns-1.79</emphasis>:
    <filename>/usr/share/xml/docbook/stylesheet</filename> (Debian)</member>
  </simplelist>
  <para>
   Bu paketler derlenmeden kullanılıyor. İndirip paketi açmanız yeterli.
   Ancak bu paketleri indirip kurmak yerine size daha iyi bir önerim var.
   Sitemizin kaynak kodlarını biliyorsunuz dağıtıyoruz. Git depomuzdan tüm
   kaynak kodlarımızı alabilirsiniz. İçinde Docbook-XML-DTD ve Docbook-XSL
   zaten var. Bu paket üzerinde çalışırsanız sayfaları sitemizdeki gibi
   göreceksiniz. Çünkü Docbook-XSL kodunu özelleştirmeden kullanmak olası
   değil. Ama aşağıdaki paketler de sisteminizde kurulu olmalı yoksa paket
   içeriğinden HTML dosyaları üretemezsiniz.
  </para>
  <screen>
$ sudo apt-get install libxlt1.1 xsltproc libxml2 libxml2-utils
  </screen>
  <para>
   Bu paketler Pardus'un standart paketleri ve derlenmeleri gerekmiyor.
  </para>
  <para>
   Tüm temel gereksinimlerimizi karşıladığımıza göre belge hazırlama
   ortamımıza son rötuşları yapalım. Ev dizininizde çalışmalarınızı
   tutabileceğiniz bir dizin oluşturun. Örneğin: <filename>
   /home/nilgun/belgeler </filename> dizine geçin. Internet'e bağlı
   değilseniz bağlanın ve konsolda (ya da xterm'de):
  </para>
  <screen>
git clone git@github.com:belgeler-org/source.git
  </screen>
  <para>
   komutunu verin. Kısa bir süre sonra dosyalar makinanıza akmaya
   başlayacak. İşlem tamamlandığında bulunduğunuz dizinin içinde bir dizin,
   <literal>source</literal> dizinini göreceksiniz. Bu dizini çalışma
   dizininiz olarak kullanmayın. Bu dizini örneğimizdeki <filename>
   /home/nilgun/belgeler </filename> dizini altında
   <literal>sitesrc</literal> ismiyle kopyalayın. Böylece içeriği aynı olan
   iki dizin elde etmiş olacaksınız. Şimdi diyeceksiniz ki, ikisi de aynıysa
   neden bunu yaptık. <literal>source</literal> dizininin içeriğini arasıra
   güncelleyebilirsiniz. Eğer bu dizini çalışma dizininiz
   olarak kullanırsanız, bir güncelleme sırasında bizim yaptıklarımız ile
   sizin yaptıklarınızın çakışacak ve git hata verecektir.
  </para>
  <para>
   Siz şimdi "bu güncelemenin nasıl yapılacağını da söyle de bu iş tamam
   olsun" diyececeksiniz. :-)
  </para>
  <para>
   Güncelleme yapmak için <literal>source</literal> dizinine geçin ve
  </para>
<screen>
git pull
</screen>
  <para>
   komutunu girin. Gördüğünüz gibi güncelleme işlemi ilk verdiklerimiz kadar
   karmaşık değil. Tek koşul bu komutu <literal>source</literal> altında
   değiştirmeden tuttuğumuz dizin içindeyken kullanmaktır.
  </para>
  <para>
   <literal>sitesrc/docbook</literal> dizini altındaki iki dizin
   Docbook-XML-DTD ve Docbook-XSL kodlarını barındırır. Diğer dizinler ise
   sitemizi oluşturan XML taslaklar ile kitaplığımızın uygun şekilde
   oluşmasını sağlayan kodları içerir.
  </para>
 </sect1>

 <sect1 xml:id="xmldoc-howto_struct">
  <title>Bir XML Dosyasının Yapıtaşları</title>
  <para>
   XML, HTML gibi bir biçimleme dili değildir. Sadece veriyi kullanım
   amacına uygun olarak etiketlemek için kullanılan bir dildir. Zaten
   isminin açılımı da Genişletilebilir Etiketleme Dili'dir. XML dosyaları
   HTML, salt metin ya da PDF biçemli dosyalar haline getirmek için bir
   biçimleme dili olan XSLT kullanılır. XML hakkında burada dolaylı olarak
   yüzeysel bazı bilgiler bulacaksınız. Daha fazla bilgi edinmek
   isterseniz, aşağıdaki belgeleri okumanızı öneririm:
  </para>
  <itemizedlist>
   <listitem>
    <simpara>
     <link xl:href="../recs/xml/">Genişletilebilir İmlenim Dili (XML) 1.0</link>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link xl:href="../recs/xml-names/">XML 1.0'da İsim-alanları</link>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link xl:href="../recs/xml-infoset/">XML Bilgi Kümesi</link>
    </simpara>
   </listitem>
  </itemizedlist>
  <para>
   Örnek bir XML belgesini Ekler bölümünde bulabilirsiniz:
   <link xl:href="xmldoc-howto_appendix.html">Sample-HOWTO.xml</link>
  </para>

  <sect2 xml:id="xmldoc-howto_struct-tags">
   <title>Etiketler</title>
   <para>
    XML dilinin olmazsa olmaz bazı özellikleri var. HTML ve benzeri etiketli
    dillerde olduğu gibi metin etiketler arasında veriliyor.
    <literal>&lt;title>bir konu başlığı&lt;title></literal> gibi. Ancak bu
    etiketleme de dikkat edeceğiniz bazı kurallar var:
   </para>
   <itemizedlist>
     <listitem>
       <para>
        Etiket isimleri daima &lt; ve &gt; karakterleri arasında olmalı.
       </para>
     </listitem>
     <listitem>
       <para>
        Etiket ve değişken isimleri daima bir harfle başlamalıdır.
       </para>
     </listitem>
     <listitem>
       <para>
        Kullandığımız XML-Docbook için etiket ismi sadece küçük harflerden
        oluşmaktadır. SGL ve HTML için etiket ismini oluşturan harflerin
        büyüklüğünün önemi yoksa da XML için harf büyüklüğü önemlidir.
        Bu bakımdan standart olmamakla beraber etiket isimlerinde sadece
        küçük harf kullanma alışkanlığı edinmeniz yararlı olacaktır.
        XML'deki bu özellik temel aldığı kodlamadan kaynaklanmaktadır.
        UTF-8 ve UTF-16.
       </para>
     </listitem>
     <listitem>
       <para>
        Bir etiket tanımında, içinde veri içermesi öngörülmüşse, bir
        açılış etiketini daima bir kapanış etiketi izlemeli. Yukarıdaki
        <literal>&lt;title></literal> etiketi gibi. HTML ve SGML'deki bazı
        durumlarda kapanış etiketi verilmeyebilirse de XML için kapanış
        etiketi zorunludur.
       </para>
     </listitem>
     <listitem>
       <para>
        Etiket sadece bir işlem gerçekleştirmek içinse kapanış etiketi
        kullanılmayabilir. Örnek: <literal>&lt;entry/></literal> Bu
        etiket, Docbook'ta tablolarda kullanılır ve bazen içi boş
        bırakılır, bu durumda açılış ve kapanış etiketleri yerine bu kısa
        gösterim kullanılabilir.
       </para>
     </listitem>
     <listitem>
       <para>
        Bir etiketin kapanış belirleyicisi
        <emphasis role="bold">/</emphasis> karakteridir. Bir veriyi
        sarmalayan etiketlerde, bu im, kapanış etiketinde ismin
        başına, işlem etiketlerinde ise ismin sonuna konur.
       </para>
     </listitem>
     <listitem>
       <para>
        Dosya içinde etiketler haricinde &lt; karakteri kullanılmaz.
        Bu imi kullanmanız gerekiyorsa <literal>&amp;lt;</literal> ile
        belirtmelisiniz.
       </para>
       <para>
        <literal>&amp;</literal> karakterini de yazamazsınız. Bu im XML
        için &lt; gibi bir dil öğesidir. <literal>&amp;lt;</literal>'nin
        yazıldığı gibi görünmesi için <literal>&amp;amp;lt;</literal>
        yazmalısınız.
       </para>
     </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="xmldoc-howto_struct-comments">
   <title>Açıklamalar, Yorumlar</title>
   <para>
    Programlama dillerinde açıklama ve yorum satırları nasıl bir kurala
    bağlıysa, XML için de kurallar vardır. Bu kural HTML'deki ile aynıdır.
    Bir açıklama <literal>&lt;!-- </literal> ile başlar ve
    <literal>--></literal> ile biter. Bu dizgecikler açıklamaların
    başlangıç ve bitiş etiketleri gibi düşünülmelidir. Yani her başlangıç
    etiketi için bir bitiş etiketi olmalıdır. Bu, bir yorum içinde, bitiş
    etiketi olmayan bir başlangıç etiketinin bulunamayacağı anlamına gelir.
    Bu kurala uyan her türlü açıklama ve yorum dosyanın herhangi bir
    yerinde kullanılabilir. Açıklama ve yorumlar XML dosyanın derlenmesi
    sırasında derleyici tarafından yorumlanmaz.
   </para>
  </sect2>

  <sect2 xml:id="xmldoc-howto_struct-prolog">
   <title>İlk satır ve Belge Türünün Belirtilmesi</title>
   <para>
    Belgeler sitemizi oluşturan temel dosya olan
    <filename>belgeler.xml</filename>
    dosyasını inceleyerek bir belge nasıl hazırlanır öğrenirken
    sitemizin yapısı hakkında da fikir edinebileceksiniz.
    <filename>belgeler.xml</filename> dosyasının ilk satırlarından
    başlayalım:
   </para>
   <informalexample>
<screen>
&lt;?xml version="1.0" encoding="UTF-8"?>                      <co xml:id="xmldoc-howto.r1"/>
&lt;!DOCTYPE set SYSTEM "docbook/dtd5/docbook.dtd" [           <co xml:id="xmldoc-howto.r2"/>
  &lt;!ENTITY howtos.xml SYSTEM "source/howtos/howtos.xml">    <co xml:id="xmldoc-howto.r3"/>
    &lt;!--   Türkçe  -->                                      <co xml:id="xmldoc-howto.r4"/>
    &lt;!ENTITY xmldoc-howto  SYSTEM "workgroup/belge-NASIL.xml">
    &lt;!ENTITY samplehowto   SYSTEM "workgroup/ek-Sample-HOWTO.xml">
    &lt;!ENTITY workgroup.xml SYSTEM "workgroup/workgroup.xml">

    &lt;!ENTITY gfdl.xml SYSTEM "howtos/fgtk/gfdl.xml">
    &lt;!ENTITY lgpl.xml SYSTEM "howtos/fgtk/lgpl.xml">
    &lt;!ENTITY gpl.xml  SYSTEM "howtos/fgtk/gpl.xml">
]>
</screen>
    <para>
     Bu satırlar pek sık karşılaşmayacağınız karmaşıklığa sahip,
     ama gözünüz korkmasın, onları da ben yazdım. Bildiklerimi şu
     an sizinle paylaşmaya devam ediyorum. (Dosya içeriği zamanla
     büyüdü. Buradaki, olası bir erken dönem sürümün içeriğidir.
     Güncel dosya source dizini altında bulunmaktadır.)
    </para>
    <calloutlist>
     <callout arearefs="xmldoc-howto.r1">
      <para>
       Bu satır, dosyanın bir <literal>XML</literal> dosyası
       olduğunu, <literal>1.0</literal> sürümüne göre yazıldığını,
       ve dosyadaki karakter kodlamasının <literal>UTF-8</literal>
       olduğunu belirtiyor. Bir XML dosya için en azından<literal>
       &lt;?xml version="1.0"?></literal> satırı bulunmalıdır.
       XML'in güncel sürümü <literal>1.0</literal>'dır. Bu değer
       değiştirilirse dosya işlenmeyebilir.
      </para>
      <para>
       Satırın <literal>encoding</literal> parçası dosya içeriği işlenirken
       önem kazanır. Dosyada, belirtilen karakter kodlamasında bulunmayan
       bir karaktere ya da karakter dizisine rastlandığında hata
       üretilecektir. Burada belirtilen kodlama türü, çıktının kodlama
       türü değil, başlığı barındıran dosyanın karakter kodlamasıdır.
      </para>
      <para>
       XML bildiriminin yapıldığı <literal>&lt;?</literal> ve
       <literal>?></literal> etiketleri XML'de işlem komutlarının
       etiketleridir. İşlem komutları başlangıç etiketine bitişik
       yazılırlar. Burada <literal>&lt;?xml</literal> bir işlem
       komutudur.
      </para>
      <para>
       XML bildirim satırında kullanılabilecek diğer bağımsız değişkenlerden
       burada bahsedilmeyecektir. Onları,
       <link linkend="xmldoc-howto_struct">bölüm başında</link> isimlerini
       ve bağlarını verdiğim belgelerde bulabilirsiniz.
      </para>
     </callout>
     <callout arearefs="xmldoc-howto.r2">
      <para>
       Bu satır ve devamındaki satırlarda, dosyada işlenen belgenin
       türü, belgeyi oluşturan etiketlerin tanımlandığı paketin
       ismi ve sürümü, nerede bulunabileceği, belgeyi oluşturan
       ek dosyalar varsa bunların tanımları gibi bilgiler belirtilir.
       Bu tanımların başlangıç etiketi <literal>&lt;!DOCTYPE</literal>
       ve bitiş etiketi > karakteridir. İçindeki herşey başlangıç etiketi
       olan etiketin bağımsız değişkenleri olarak belirli bir biçemde verilmek
       zorundadır.
      </para>
      <para>
       <literal>&lt;!DOCTYPE</literal> bildirimindeki ilk parameter
       olarak görünen <literal>set</literal> Docbook'un belge türü
       elemanlarından biridir. <literal>set</literal> elemanı bir kitaplar
       kümesi içerebilir. Bizim belgeler sitemiz de bir miktar kitap
       içeriyor. Bu alanda belirtilebilecek diğer belge türü elemanları,
       book, part, article, vs. olabilir. Buraya kök belge elemanı yazılır.
       Basit bir makale için set yerine article yazılabilir. Docbook'un
       elemanları ilerde tanıtılacaktır.
      </para>
      <para>
       Hemen ardından, <literal>&lt;!DOCTYPE</literal> bildiriminde bulunması
       zorunlu olan sistem tanımlayıcısı gelmektedir. Burada, belgenin
       oluşturulmasında kullanılan DTD'nin adresi verilmelidir. Bu adres bir
       URL olabildiği gibi burada olduğu gibi bir sistem dizini de olabilir.
       Hemen ardından gelen [ ]'ler içindeki bölüm aşağıda anlatılmıştır.
      </para>
     </callout>
     <callout arearefs="xmldoc-howto.r3">
      <para>
       <literal>&lt;!ENTITY</literal> bildirimiyle belgemizi
       oluşturan diğer dosyaları tanıtıyoruz. Bunun için bir
       değişken ismi ve <literal>SYSTEM</literal> belirteciyle de
       dosyanın bulunduğu yeri belirtiyoruz. Belittiğimiz değişken
       isimlerini dosya içinde diğer dosyaların bağlanacağı noktalarda
       başına bir <literal>&#x0026;</literal> ve sonuna da bir
       <literal>;</literal> getirerek kullanıyoruz. <filename>
       belgeler-ortak.xml</filename> dosyasındaki gibi:
      </para>
<screen>
<![CDATA[
  &workgroup.xml;
  &sss.xml;
  &howtos.xml;
  &manpages.xml;
]]>
</screen>
     </callout>
     <callout arearefs="xmldoc-howto.r4">
      <para>
       Bu satır bir açıklama satırıdır. Bilgi vermek amacıyla
       kullanılmıştır. Dosyanın derlenmesi sırasında bu ve benzeri
       satırlar yorumlanmazlar.
      </para>
     </callout>
    </calloutlist>
   </informalexample>
   <para>
    <literal>&lt;!DOCTYPE</literal> bildirimi ek dosyalarda belirtilmez.
    Diğer dosyaları incelerseniz, bu dosyalarda bu satırların yorumlanmaması
    için açıklama elemanları ile sarmalanmış olduklarını göreceksiniz.
    İptal edildiği halde dosya içinde bulunmalarının sebebi bu dosyalar
    bağımsız olarak işlendiğinde bu bildirimlerin tekrar etkin kılınarak
    kullanılabilmeleri içindir.
   </para>
  </sect2>
 </sect1>

 <sect1 xml:id="xmldoc-howto_categories">
  <title>Docbook Elemanları</title>
  <para>
   Docbook elemanlarını her biri diğerlerini içeren 8 grupta inceleyebiliriz:
  </para>
    <orderedlist>
      <listitem>
        <para>
          <emphasis role="bold">Kitaplıklar (set)</emphasis>
        </para>
        <para>
          Bir <tag>set</tag> elemanı en azından bir
          <tag>book</tag> içerir. Sitemizin kitaplık bölümü
          bir miktar <tag>book</tag>'tan oluşan bir <tag>set</tag>'tir
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">Kitaplar (<tag>book</tag>)</emphasis>
        </para>
        <para>
          Bir <tag>book</tag> genellikle en üst seviye elemandır.
          Bir kitap serisi planlamadığınız sürece en tepe Docbook elemanıdır.
          Aşağıdaki elemanların bir karışımından oluşur.
        </para>
          <variablelist>
            <varlistentry>
              <term>Adama Bölümü (<tag>dedication</tag>)</term>
              <listitem>
                <para>
                  Genellikle kitabın en başında yer alır.
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Gezinme Elemanları</term>
              <listitem>
                <para>
                  İçindekiler (<tag>toc</tag>), Çizelge ve Şekil Listeleri
                  (<tag>lot</tag>), Fihrist (<tag>index</tag>)
                  gibi kitap bölümleridir.
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Oylumlar</term>
              <listitem>
                <para>
                  Bir kitabın üst seviye hiyerarşik parçalarıdır.
                  (<tag>part</tag> ve <tag>reference</tag>)
                  Ancak bir kitap bu elemanlar olmadan da oluşturulabilir.
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Kısımlar</term>
              <listitem>
                <para>
                  Oylumların ya da kitabın alt kısmı olarak kullanılabilen
                  <tag>chapter</tag> etiketi ile tanımlanan kitap
                  bölümleridir.
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Bölümler</term>
              <listitem>
                <para>
                  Bu kitabın içindeki belgeleri oluşturan parçalar (<tag>article</tag>
                  ve <tag>sect1</tag>)
                  bu bölümlere iyi bir örnektir. Her <tag>article</tag> çok sayıda
                  alt bölüm (<tag>sect1</tag>, <tag>section</tag>) içerebilir.
                  </para><warning><para>
                    <tag>article</tag> ve <tag>chapter</tag> etiketleri
                    eşdeğer etiketlerdir. Yani bir <tag>article</tag>,
                    bir <tag>chapter</tag> içinde bulunamaz.
                  </para></warning>
              </listitem>
            </varlistentry>
       </variablelist>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">Oylumlar (<tag>part</tag>)</emphasis>
        </para>
        <para>
          Kitapların alt bölümü olarak yukarıda bahsedildi.
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">Kısımlar (<tag>chapter</tag>)</emphasis>
        </para>
        <para>
          Kitapların alt bölümü olarak yukarıda bahsedildi.
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">Bölümler (<tag>article</tag>, <tag>sect1</tag>)</emphasis>
        </para>
        <para>
          Kitapların alt bölümü olarak yukarıda bahsedildi.
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">Alt Bölümler (<tag>section</tag>)</emphasis>
        </para>
        <para>
          Docbook'ta alt bölümleri oluşturan elemanlar çok çeşitlidir:
        </para>
          <variablelist>
            <varlistentry>
              <term><tag>sect1...sect5</tag> Elemanları</term>
              <listitem>
                <para>
                  Bunlar hemen tüm belgelerde sıklıkla kullanılan numaralı
                  bölüm elemanlardır. <tag>sect1</tag>'den başlayarak iç içe
                  5 seviyeli bölümleme yapılabilir.
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term><tag>section</tag> Elemanları</term>
              <listitem>
                <para>
                  <tag>section</tag> elemanlarının sect* elemanlarından farkı
                  sonsuz iç içelikte bölümleme yapılabilmesidir.
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term><tag>simplesection</tag> Elemanı</term>
              <listitem>
                <para>
                  Genellikle diğer sect* elemanlarının içinde yer alır.
                  <tag>simplesect</tag> elemanının altına başka
                  sect* elemanı yerleştirilemez. Bu bakımdan sonlandırıcı
                  sect* elemanı gibi görev yapar.
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term><tag>bridgehead</tag> Elemanı</term>
              <listitem>
                <para>
                  Sadece bir bölüm başlığı üretir.
               </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term><tag>refsect1...refsect3</tag> Elemanları</term>
              <listitem>
                <para>
                  Bu elemanlar sadece <tag>refentry</tag> elemanlarının
                  içinde bulunabilir. sect* elemanları gibidir, ama sadece 3
                  seviyeli bölümleme yapılabilir.
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term><tag>glossdiv, bibliodiv</tag> ve <tag>indexdiv</tag> Elemanları</term>
              <listitem>
                <para>
                  Sözcük dağarcığı (<tag>glossdiv</tag>), kaynakça
                  (<tag>bibliodiv</tag>) ve fihrist
                  (<tag>indexdiv</tag>) bölümlerini oluşturmakta
                  kullanılırlar. sect* elemanlarının tersine bunlar iç içe
                  seviyeli olamazlar.
                </para>
              </listitem>
            </varlistentry>
          </variablelist>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">Ön bilgi elemanları</emphasis>
        </para>
        <para>
          <tag>bookinfo, partinfo, articleinfo</tag> gibi önbilgi
          verme bölümleridir.
          Bu bölümlerde başlık, yazara ilişkin bilgiler, sürümlerin gelişimi
          belge hakkında özet bilgi, içindekiler, anahtar sözcükler gibi
          bilgiler verilir.
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">Blok elemanları</emphasis>
        </para>
        <para>
          Blok elemanlarına en iyi örnek paragraflardır (<tag>para</tag>).
          Listeler tablolar, şekiller ve resimlerde blok elemanlarıdır.
        </para>
    <variablelist>
      <varlistentry>
        <term>Listeler</term>
        <listitem>
          <para>
            Docbook'ta 7 tane liste elemanı vardır.
          </para>
            <variablelist>
              <varlistentry>
                <term><tag>calloutlist</tag></term>
                <listitem>
                  <para>
                    Genellikle bir yazılım ya da ekran görüntüsü üzerinde
                    bilgi vermek için kullanılır. Bir önceki bölümde
                    XML dosyasının ilk satırlarını incelerken bu elemandan
                    faydalanmıştım.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><tag>glosslist</tag></term>
                <listitem>
                  <para>
                    Sözcük dağarcığındaki terimler ve tanımları için
                    kullanılır.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><tag>itemizedlist</tag></term>
                <listitem>
                  <para>
                    Sıra numarasız imli listeler için kullanılır.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><tag>orderedlist</tag></term>
                <listitem>
                  <para>
                    Sıra numaralı listeler için kullanılır. Bu bölümdeki
                    1 den 8 e kadar giden liste gibi.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><tag>segmentedlist</tag></term>
                <listitem>
                  <para>
                    Öğelerinin isimlerinin tekrarlandığı listeler için
                    kullanılır.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><tag>simplelist</tag></term>
                <listitem>
                  <para>
                    Öğelerinin sıra numarası almadığı imsiz bir liste
                    türüdür. Öğeleri satır ve sütunlar halinde
                    düzenlenebilir.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><tag>variablelist</tag></term>
                <listitem>
                  <para>
                    Bağımsız değişken, seçenek açıklamaları türünden listelerde
                    kullanılır. Burada 7 liste elemanını tanıttığım liste
                    böyle bir listedir.
                  </para>
                </listitem>
              </varlistentry>
            </variablelist>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Dikkat Çekme Elemanları</term>
        <listitem>
          <para>
            Docbook'ta 5 tür dikkat çekme elemanı vardır: <tag>caution,
            important, note, tip, warning</tag>
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Paragrafların içinde kullanılan elemanlar</term>
        <listitem>
          <para>
            151 farklı eleman kullanılabiliyor. Başlıcaları:
          </para>
            <variablelist>
              <varlistentry>
                <term><tag>address</tag></term>
                <listitem>
                  <para>
                    Posta adreslerini belirtirken kullanılır. Satır içi
                    kullanımda ise isim ve adresleri etiketlemek için
                    kullanılır.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><tag>literallayout</tag></term>
                <listitem>
                  <para>
                    İçerdiği metne sabit yazı tipi uygular ama
                    <tag>programlisting</tag> ve
                    <tag>screen</tag> gibi belli bir zemin rengi
                    yoktur. Boşluklar korunduğundan ASCII-art gösterimler
                    için faydalıdır. (Bu standart uygulama değildir.
                    Bu kitaplık için xsl dönüşümü yapılırken elemana
                    bu özellik verilmiştir.)
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><tag>programlisting</tag> ve <tag>screen</tag></term>
                <listitem>
                  <para>
                    Program listeleri, konsol çıktıları vb. metinlerin
                    oldukları gibi görünmesini sağlayan bloklama
                    elemanlarıdır. Bu kitaplık için özelleştirilmiş ve
                    zemin rengi atanmıştır. İçeriğine sabit genişlikli
                    yazı tipi uygular.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><tag>inlinemediaobject</tag></term>
                <listitem>
                  <para>
                    Grafik ekran görüntüleri için kullanılır.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><tag>cmdsynopsis</tag></term>
                <listitem>
                  <para>
                    Komut ve işlev bildirimlerini belirlemek için kullanılır.
                  </para>
         </listitem>
        </varlistentry>
       </variablelist>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Örnekler, Şekiller ve Tablolar</term>
      <listitem>
       <para>
        Örnekler için <tag>example</tag> ve <tag>informalexample</tag>,
        şekiller için <tag>figure</tag> ve <tag>informalfigure</tag>,
        tablolar için <tag>table</tag>, ve <tag>informaltable</tag>
        elemanları kullanılabilir. informal* elemanları türlerinin başlıksız
        olanlarıdır.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Paragraflar</term>
      <listitem>
       <para>
        Hemen her elemanın içinde yer alabilen blok elemanlarıdır.
        <tag>para, formalpara, simpara</tag> gibi farklı amaçlara yönelik
        türleri vardır. <tag>formalpara</tag> elemanı başlıklı bir paragraf
        türü belirtir.
       </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>İfadeler</term>
     <listitem>
      <para>
       Matematiksel ifadelerin gösterilmesinde kullanılır.
       <tag>equation</tag> ve <tag>informalequation</tag> elemanları blok,
       <tag>inlineequation</tag> ise satır içi kullanım elemanlarıdır.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Resimler</term>
      <listitem>
       <para>
        Resimler için kullanılabilecek elemanlar <tag>mediaobject</tag>
        ve <tag>screenshot</tag> elemanlarıdır. Satır içi kullanım
        için <tag>inlinemediaobject</tag> elemanı kullanılır. Ayrıca
        video, ses, resim ve metin veriler için <tag>mediaobject</tag>,
        satır içi kullanımda <tag>inlinemediaobject</tag> elemanları
        kullanılabilir.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Soru-Cevap Elemanları</term>
      <listitem>
       <para>
        Sıkça Sorulan Sorular bölümlerini oluşturmak için
        <tag>qandaset, question, answer</tag> elemanları kullanılabilir.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </listitem>
   <listitem>
    <para>
     <emphasis role="bold">İç elemanlar</emphasis>
    </para>
    <para>
     Bunlar bölümler ve paragraflar içinde yer alan bağ, karakter
     biçimleme, uyarı vb. elemanlarıdır. Burada çok sık kullanılan
     bazı elemanlar tanıtılmıştır.
    </para>
    <variablelist>
     <varlistentry>
      <term><tag>abbrev</tag></term>
      <listitem>
       <para>
        Bir kısaltmayı etiketler. Kısaltmayı bir nokta izler.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><tag>acronym</tag></term>
      <listitem>
       <para>
        Bir deyim ya da ismin baş harfleriyle oluşturulan bir
        kısaltmanın anlatımı için kullanılır.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><tag>emphasis</tag></term>
      <listitem>
       <para>
        Etiketlediği metnin eğik karakterlerle gösterileceğini
        belirtmek için kullanılır. Bu kitap için özelleştirilerek,
        <literal>role</literal> bağımsız değişkeni
        ile bu etikete kalın karakter gösterimi de eklenmiştir:
        <literal>&lt;emphasis role="bold"></literal>. Hem kalın hem
        eğik istenirse elemanlar birbirinin içinde kullanılmalıdır.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><tag>footnote</tag></term>
      <listitem>
       <para>
        Dipnotlar için kullanılır.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><tag>trademark</tag></term>
      <listitem>
       <para>
        Bir ticari markayı etiketlemekte kullanılır.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><tag>xref</tag></term>
      <listitem>
       <para>
        Belge içi çapraz bağlar için kullanılır. Bağ hedefi olan
        elemanın <literal>id</literal> bağımsız değişkeni,
        <literal>linkend</literal> bağımsız değişkenine belirtilir.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><tag>link</tag></term>
      <listitem>
       <para>
        Dış hedefler için bağ belirtir. Hedefin adres bir URL olarak
        <literal>xl:href</literal> bağımsız değişkeninde belirtilir.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><tag>literal</tag></term>
      <listitem>
       <para>
        Satır içinde özgün hali korunması ve vurgulanması gereken
        metin parçaları için kullanılır.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><tag>tag</tag></term>
      <listitem>
       <para>
        Metin içinde geçen etiket isimlerini etiketlemede kullanılır.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><tag>replaceable</tag></term>
      <listitem>
       <para>
        Metin içinde kullanıcının değiştirmesi beklenen ya da
        istenen metin parçalarını etiketlemekte kullanılır.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </listitem>
  </orderedlist>
  <para>
    Bu bölümde bahsettiğim elemanlar Docbook'un 300'den fazla eleman içerdiği
    gözönüne alındığında çok azdır. Ama en çok kullanılanlardan bahsetmeye
    çalıştım. Buradaki bilgiler tek başlarına bir belge yazmak için yeterli
    değildir. Burada sadece Docbook Guide'ın Docbook oluşturulması ile ilgili
    bölümünü kısmen çevirdim, kısmen de ben bir şeyler kattım. Docbook Guide,
    her eleman için bu sayfa gibi birer sayfa içeriyor. Bu bakımdan belge
    hazırlayacaksanız bu kılavuz daima farenizin imlecinin altında bulunmalıdır.
    Ya da hazır bir belgenin sadece çevirisiyle ilgilenmelisiniz.
  </para>
 </sect1>
 <sect1 xml:id="xmldoc-howto_processor">
    <title>Hata Ayıklama</title>
    <para>
      Hata ayıklamaktansa hatasız yazmayı tercih etmelisiniz. Bu Kate kullanınca
      hiç zor değil. Kate XML dosyaları yazmak için bir eklenti içeriyor. Bu
      eklenti sayesinde etiketleri yazmak zorunda kalmıyorum, basitçe bir
      menüden seçiyorum. Dolayısıyla dosyada bir hata olmuyor. Bu özelliğinden
      yararlanabilmek için kullanılan DTD'nin Kate'e tanıtılması gerekiyor.
      Kate'in bu eklentisini kullanmak için hazırladığım
      <filename>dtd4kate.xml</filename> dosyasını
      <filename>/docbook/dtd/</filename> dizininde bulabilirsiniz. Açılış
      etiketi seçmek için <literal>&lt;</literal> veya
      <literal>Ctrl + Enter</literal>, etiketi kapatmak için
      <literal>&lt;/</literal> veya <literal>Ctrl + &lt;</literal>, öznitelik
      girmek için <literal>boşluk</literal> tuşuna basmak gerekiyor. Arasıra
      komut satırından <command>xmllint</command> çalıştırıp hata ayıklaması
      yapabilirsiniz.
    </para>
    <para>
      Bu dosyayı Kate ile nasıl kullanacağız?
    </para>
    <para>
     "XML" menüsü altında "Meta DTD Ata... " seçeneğinden dosyayı
     yükleyebilirsiniz. İşlem belgeye özeldir. Bu işlemi her belge için ayrı
     ayrı yapmak gerekiyor.
    </para>
    <para>
     Ne zaman bir etikete ihtiyacınız olursa yapacağınız şey
     <literal>ctrl+enter</literal> veya <literal>%lt;</literal> tuşlamak
     olacak. Etiketleri kullandıkça, açılan DTD menüsünün içeriğinin
     değiştiğini farkedeceksiniz. Bu DTD'nin bir özelliğidir. Etiketler, bir
     diğerinin yorum aralığında farklı etiketler kabul eder. Bu özellik
     sayesinde yazdığınız XML dosya, DTD'ye uyumlu olur ve derleme sırasında
     hata vermez. Ayrıca, imleç bir etiketin yorum alanında değil de etiketin
     içindeyken menü isterseniz bu kez etiketle birlikte kullanılabilecek
     bağımsız değişkenlerin listesini alacaksınız.
    </para>
    <para>
     Kate'i bu eklentisi ile kullandığınızda tamamen hatasız bir dosya
     üreteceğinizi sanmayın. İnsanız, mutlaka bir yerde hata yaparız. Bu
     bakımdan okumayı burada bırakmayıp belgenin devamını okuyun.
    </para>
    <para>
     Belgemizi hazırlarken ve/veya hazırladıktan sonra hataları ayıklamamız
     ve sunuma hazırlamamız lazım. Bunun için, konsolda basit bir komut
     yazıyoruz:
    </para>
<screen>$ xsltproc -o index.html belgem.xsl belgem.xml</screen>
    <para>
      Burada ilk bağımsız değişken olan <literal>-o</literal> ile belgemizin HTML
      çıktısının ismini belirtiyoruz: <literal>index.html</literal>. Sıradaki
      bağımsız değişken hazırladığımız belgenin HTML olarak derlenmesini sağlayan XSL
      dönüşüm betiği, son bağımsız değişken de hazırladığımız dosyadır. Bu komutu
      çalıştırdığınızda <literal>belgem.xml</literal> hatasızsa bir  dizi HTML
      dosya üretilecektir. Komut, dosyaların hepsinin aynı dizinde olduğu
      varsayılarak hazırlanmıştır. Her terim için göreli dizin isimleri
      belirtebilirsiniz.
    </para>
    <para>
      <literal>belgem.xsl</literal> dosyası için şu kod işinizi görecektir:
    </para>
<screen>
&lt;?xml version='1.0' encoding="UTF-8"?&gt;
&lt;xsl:stylesheet
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"  version='1.0'&gt;
  &lt;xsl:import
    href="docbook/xsl/html/chunk.xsl"/&gt;

  &lt;xsl:param name="chunk.sections" select="'1'"/&gt;
  &lt;xsl:param name="chunk.first.sections" select="1"/&gt;
  &lt;xsl:param name="chunk.section.depth" select="1"/&gt;
  &lt;xsl:param name="root.filename"/&gt;

  &lt;xsl:param name="html.stylesheet" select="'../belgelerim.css'"/&gt;

  &lt;xsl:param name="admon.graphics.path"&gt;../images/xsl/&lt;/xsl:param&gt;
  &lt;xsl:param name="callout.graphics.path" select="'../images/xsl/callouts/'"/&gt;
  &lt;xsl:param name="navig.graphics.path"&gt;../images/xsl/&lt;/xsl:param&gt;
&lt;/xsl:stylesheet&gt;
</screen>
    <para>
      Kullandığımız komut derleme sırasında dosyada bir hata olduğunda
      bir sürü hata üretir. İlk belirtilen hatayı giderdikten sonra
      komutu tekrar çalıştırın. Diğer hatalar, dosya ardışık işlendiği
      için ardışık üretilen hatalardır. Daima ilk hatayı gidererek
      kısa sürede sonuca ulaşırsınız. Dosyayı yazarken hep
      derlenebilecek şekilde yazmanızı ve yazdıkça hatalar bakımından
      denetlemenizi öneririm. Böylece hatayı hep son yazdığınız kısımlarda
      arama lüksünüz olur. Aksi takdirde hatayı bulmak çok güç olabilir.
    </para>
    <para>
      Belgeleri istenen biçemde biçimlemekte kullanılan XSL dili hakkında
      burada bilgi verilmeyecektir. Bu dil hakkında fikir edinmek için
      xsl-stylesheet belgelerine ve koduna bakabilir, daha ayrıntılı bilgi
      edinmek için aşağıdaki adresleri ziyaret edebilirsiniz:
    </para>
    <simplelist>
     <member><link xl:href="../recs/xslt">XSL Dönüşümleri (XSLT) Sürüm 1.0</link></member>
      <member><link xl:href="../recs/xml-stylesheet">Biçembentlerin XML Belgelerle İlişkilendirilmesi</link></member>
      <member><link xl:href="../recs/xpath">XML Adresleme Dili (XPath) 1.0</link></member>
    </simplelist>
    <para>
      Belgeleri, SGML araçları ile denetlemenizi önermeyeceğim. Diğer
      belge biçemlerini elde ederken SGML araçlarını kullanmadığımız için
      belge taslaklarında SGML uyumluluğu aranmamaktadır. XML uyumluluğu
      yeterlidir. (XML, SGML'nin alt kümesi olarak tasarlanmışsa da SGML araçları XML belgeler için yeterli olamamaktadır; bu durum standardın değil, araçların yetersizliğinden kaynaklanmaktadır.)
    </para>
    <para>
      Bu belgenin oluşturulmasında faydalanılan tüm kaynaklar belge içinde
      yeri geldikçe belirtilmiştir.
    </para>
  </sect1>
</article>

