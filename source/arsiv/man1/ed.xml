<?xml version="1.0" encoding="UTF-8"?>
<!-- ********************************************************************
     $Id: ed.xml,v 1.3 2002/09/30 18:10:37 nilgun Exp $
     ******************************************************************** -->

<sect1 id="archive-man-1-ed">
  <sect1info>
    <title>ed(1)</title>
  </sect1info>
<div>

<h2>KOMUT</h2>
<p>ed, red - metin düzenleyici</p>

<h2>KULLANIM</h2>
<p>ed [-] [-Gs] [-p <em>dizge</em>] [<em>dosya</em>]</p>
<p>red [-] [-Gs] [-p <em>dizge</em>] [<em>dosya</em>]</p>

<h2>AÇIKLAMA</h2>
<p><b>ed</b>
cumlelerden olusmus yazilim editorudur.
Yazi dosyalarini olusturmak,duzenlemek,
islemler gerceklestirmek icin kullanilir.
<b>red kisitlanmis bir</b> <b>ed</b>: editorudur.
Sadece akici dizinler icerisinde dosyalari
islemeye yarar.Kabuk komutlari bu editor
icnde calistirilamaz.Eger bir <em>dosya</em>nin cagrilmasi gerekiyorsa o
<em>dosya</em> editor icine kopyalanmalidir.
degisiklikler bu kopyalamalarla gerceklestirilir
fakat bunlar dogrudan <em>dosya</em> uzerine islemez.
<b>ed</b>, editorunden cikarken <em>`w'</em>
komutu unutuldugunda dosya uzerinde yapilan degisiklikler kaydedilmez.
</p><p>
Dosya olusturulurken iki ayri mod kullanilabilir.
<em>komut</em> ve <em>input</em>.
Ilki <b>ed</b> komut modunda.
Bu modda komutlar calisabilir,islem yapilabilinir
standart editor dosyalarindan okuma yoluyla yapilir.
Tipik bir komuta soyle bir ornek verilebilir.
</p>
<dl compact="compact">
<dt>,s/<em>old</em>/<em>new</em>/g</dt>
<dd><p>Hangi sey butun bilgilerini yer degistirebilir.
<em>old</em> ile <em>new</em>.
yerlestirme komutu mesela <em>`a'</em> (ekleme), <em>`i'</em> (yerlestirme) veya
<em>`c'</em> (degistirme), verildiginde, <b>ed</b>
input komutuna girer.  Bu dosyaya birseyler eklemenin
birincil anlamini tasir. Bu modda komutlar yoktur;
Aslinda,bu genellestirilmis  bilgiler editore dogrudan
yazma ile olusturulmustur.  Cumleler <em>newline</em>
karakterler iceren yazilimlardan olusmus olur.
Yerlestirme modu periyodik olarak
(<em>.</em>) karakterinin yerlestirilmesi ile baglantilidir.
</p><p>
Butun <b>ed</b> komutlari ya butun cumle uzerinden veya sira
sira cumleler icin olusturulmus komutlardan olusur.
mesela <em>`d'</em> komutu cumleyi siler; <em>`m'</em>
komutu satiri tasir.
Tabiki satirlarin bir bolumunde bu tip islemler yapmak yukaridaki komutlarla
mumkundur. <em>`s'</em> komutu bir kerede tum cumleye uygulanabilir.
Genel olarak, <b>ed</b> komutlari 0 veya bir cok satir adresinden olusur. Komutlari bir karakterle izlemek veya bağımsız değişkenler eklemek mumkundur.
Komut soyle bir cumleye sahip olabilir.
</p><p>
<em>[address [,address]]komut[parameters]</em>
</p><p>
Adreslerle satir veya satir parcalarinin hangi komutlarla etkilendigi
gosterilir.Verilen komuta karsilik eger bir kac adres verilmisse
bu yanlis adresten kaynaklanmis olabilir.
</p></dd></dl>
<h3>SEÇENEKLER</h3>

<dl compact="compact">
<dt>-G</dt>
<dd>Arka plan guc uygunlugu.  Su komutlarla etkilesir.
<em>`G'</em>, <em>`V'</em>, <em>`f'</em>, <em>`l'</em>, <em>`m'</em>, <em>`t'</em>, ve <em>`!!'</em>.</dd>

<dt>-s</dt>
<dd>Teshis bastirma. Eger <b>ed</b>'s standart dosyasindan alinmis yazi varsa kullanilmalidir.</dd>

<dt>-p<em> dizge</em></dt>
<dd>komut imlecini belirtir.  Bir buton gibi acilip,kapanir <em>`P'</em>
komutu ile.</dd>

<dt><em>dosya</em></dt>
<dd>Daha sonra okuyabilmek icin dosyaya bir ad verilmesi gerekir.  Eger
<em>dosya</em> bir on ekle belirtecle belirtilmisse (!)
bir kabuk komutu gibi algilanir. calistirilabilinir <em>dosya</em> via.
<em>sh</em>(1). adiyla olusur. Eger dosya adi (\) ile baslarsa
o dosya adi bang ile okunur. Eger <em>dosya</em> adinin basina herhangi bir ek getirilmesse yanlis dosya adi diye mesajlar gelebilir.</dd>
</dl>

<h3>SATIR ADRESLEME</h3>
<p>
Adres editor icindeki cumle sayisini gosterir.
<b>ed</b> <em>current address</em> temeli ile kurulur.
komutlarla desteklenir. Eger hicbir adres belirtilmemisse yanlis adres
verilir.Dosya ilk okundugunda,akici adres dosyanin son satirina gore
duzenlenir. Genel olarak akici adres son satir ile belirlenir ve bir
komut ile etkilenir.
</p><p>
Satir adresi altindaki satirla iliski icindedir. Bir numara siralamasina gore
kurulmustur.Bu kurulum isaret,birlestirme imleri icerebilir.
ornek olarak(<em>+</em>, <em>-</em> ve <em>^</em>) ve bosluk.
Adresler soldan saga dogru okunur ve degerleri diger adreslerle alakalidir.
</p><p>
Bu kurala uymayan bir adres vardir <em>0</em> (sifir).
Bunun anlami "ilk cumleden once demektir."
</p><p>
Iki adres birbirinden ancak ya virgul yada noktali virgul ile ayrilabilir.
Birinci adresin degeri ikinci adresin degerini asamaz.
Eger bir sirada sadece bir adres verilmisse ikinci verilen adres verilen
adres uzerine kurulur.
Eger bir <em>n-</em>tuple verildigi yerde <em>n &gt; 2,</em> ise
<em>n-</em>tuple. icinde uygun olan son iki adres belirir.
Eger sadece bir adres bekleniyorsa son iki adres kullanilir.
</p><p>
Icinde virgul bulunduran her satir ondan sonra gelen dizgiyle alakalidir.
Noktali virgul ile ayrilmis olanlarda ilk dizgi digerinin kurulmasi ile
alakalidir ve ikinci dizgi ilkiyle alakali olarak kesilir.
</p><p>
Asagidaki adres sembolleri tanidik.
</p>
<dl compact="compact">
<dt>.</dt>
<dd>Dosya icindeki adres.<p/></dd>

<dt>$</dt>
<dd>Dosya icindeki son satir.<p/></dd>

<dt>n</dt>
<dd><em>n</em>th, satir <em>n</em> siralamada bir numara <em>[0,$].</em><p/></dd>

<dt>-^</dt>
<dd>onceki satir bu suna esittir <em>-1</em>
ve  belki birikmis etkilerle belirtilir.<p/></dd>

<dt>-<em>n</em></dt>
<dd><em>n</em>ci onceki satir, <em>n</em>
nerede negatif olmayan bir sayi.<p/></dd>

<dt>+</dt>
<dd>sonraki dizi. Bu suna esittir.
<em>+1</em> ve belki birikmis etkilerle belirtilir.<p/></dd>

<dt>+<em>n</em></dt>
<dd>bosluk <em>n</em> <em>n</em>'inci bir sonraki dizgi <em>n</em> negatif olmayan sayi <em>boşluk</em> bir numara ile izlenir. <em>n</em> su sekilde gosterilir. <em>+n</em>.<p/></dd>

<dt>,</dt>
<dd>Yazilimda ilk dizgi son dizgiye dogru   adres sirasi su sekilde
<em>1,$.</em><p/></dd>

<dt>;</dt>
<dd>Yazilimda belirtilen dizgiden  son dizgiye dogru  adres
sirasi su sekilde <em>.,$.</em><p/></dd>

<dt>/<em>re/</em></dt>
<dd>Gelecek dizginin icerdigi deyim <em>re</em>.
Kusatma yukaridan baslar asagiya dogru devam eder.Eger gerekliyse
// son arastirmayi tekrarlar.<p/></dd>

<dt>?<em>re?</em></dt>
<dd>Bir onceki dizginin icerdigi terim <em>re</em>.
Kusatma asagidan baslar yukariya dogru devam eder.Eger gerekliyse
?? son arastirmayi tekrarlar.<p/></dd>

<dt>'<em>lc</em></dt>
<dd>Dizgi oncelikle <em>`k'</em> isareti ile imlenmisse,
<em>lc</em> kucuk harfte yazim saglar.<p/></dd>
</dl>

<h3>DÜZENLİ İFADELER</h3>
<p/>
Düzenli ifadeler renk gibi ton secimlerinde de kullanilir.
mesela <b>ed</b> komutu
<p/>
<dl compact="compact">
<dd>g/<em>dizge</em>/</dd>
</dl><p/>
butun dizgiyi <em>dizge</em>. icericek sekilde duzenler.
Düzenli ifadeler <em>`s'</em>
komutuyla birliktede kullanilir yeni ile eskinin yeri degistirmek icin.
<p/>
Bunlara ek olarak regular expressions
dizgelerinin siniflandirilmasini da
sunabilir. Strings boylece uygun olan bir deyimle
eslenir.Eger mumkunse karsilastirmadan sonra
birinin secilmesiyle uzun olanin atlanmasina
yerine digerinin gecmesine olanak saglar.
<p/>
Asagidaki semboller duzenli islemlerde kullanilir.
<p/>
<dl compact="compact">
<dt>c</dt>
<dd>Hicbir <em>c</em>
su isaretlerle kullanilmaz`{', '}', `(', `)', `&lt;' and `&gt;',
kendisi ile eslenir.<p/></dd>

<dt>\<em>c</em></dt>
<dd>ters bolu cizgisi ile birlikte <em>c</em> karakternin
`{', '}', `(', `)', `&lt;', `&gt;',
`b', 'B', `w', `W', `+' ve `?'bunlardan
kurtulmasini saglar. kendisiyle eslenirler.<p/></dd>

<dt>.</dt>
<dd>Herhangi bir seyi digeri ile karsilastirma<p/></dd>

<dt><em>[karakter-sınıfı]</em></dt>
<dd><em>karakter-sınıfı</em> icinde bir seyleri karsilastirmak icin
<em>karakter-sınıfı</em>, bir ilk karakter icermelidir.
Dizgi karakterleri sonlarina bir`-', e.g., `a-z' kucuk harf iceren
imlemelerle biterler. asagidaki bazi belirtimlerde
<em>karakter-sınıfı</em> icinde kullanilir.<p/>
<pre>
  [:alnum:]  [:cntrl:]  [:lower:]  [:space:]
  [:alpha:]  [:digit:]  [:print:]  [:upper:]
  [:blank:]  [:graph:]  [:punct:]  [:xdigit:]
</pre>
<p>Eger `-' <em>karakter-sınıfı</em>'nın <em>son</em> veya <em>ilk</em> karakteri <em>ise</em> kendisi ile eslenir. <em>karakter-sınıfı</em>
icindeki diger karakterler kendileri ile eslenir.
</p><p>
<em>karakter-sınıfı</em>'nın gosterim sekli:
</p>
<pre>
  [.<em>col-elm</em>.]
</pre><p>veya</p><pre>
  [=<em>col-elm</em>=]
</pre><p>
Nerede <em>col-elm</em> bir <em>collating element</em> tarafindan
<em>locale</em>(5)'e gore yorumlanmis. (dogrudan desteklenmemis.).
<em>regex</em>(3)'i daha iyi bilgi almak icin gorun.</p></dd>

<dt>[^<em>karakter-sınıfı</em>]</dt>
<dd>Tek karakterleri karsilastirmak, diger yeni dizgilerden farkli olarak,
<em>karakter-sınıfı</em> icinde degildir.
<em>karakter-sınıfı</em> yukardaki tarif edilmistir.<p/></dd>

<dt>^</dt>
<dd>Eger `^' deyimin ilk ifadesi ise, Baslangic dizgisine doner
diyilse kendi kendiyle eslenir.<p/></dd>

<dt>$</dt>
<dd>Eger `$' deyimin son karakteri ise, son satira gider diyilse kendi kendiyle eslenir. <p/></dd>

<dt>\(<em>re</em>\)</dt>
<dd>(belki gecersiz) sayilan bir deyimi tanimlar. <em>re</em>.
Deyim yeniden duzenlenebilir. Su `\<em>n</em>'formda sona eklenen yapiyla,
<em>n</em> nerede kullaniliyorsa [1,9] sira icinde, <em>n</em>th
sira icinde islemi genisletip yapar. Ornek gosterirsek `\(a.c\)\1' sekilde
verilen ifadenin sonucu `abcabc' olur `abcadc' sekilde olmaz
deyimin eksik olan kismi belirli bir siraya gore tamamlanir.
<p/></dd>

<dt>*</dt>
<dd>Tek bir karakteri veya duzenli deyimi eslemez veya cogu kez esler.
Eger '*'deyimin veya yapinin ilk karakteri ise,kendisiyle eslenmesini
saglar.Mesela`b*'`abbb' dizdisinin basinda kullanilirsa dizginin
`bbb'na karsit  olan 'a' kaybedilir.<p/></dd>

<dt>\{<em>n,m</em>\}</dt>
<dt>\{<em>n,</em>\}</dt>
<dt>\{<em>n</em>\}</dt>
<dd>Tek karakterleri,deyimleri veya ekleri en azindan
<em>n</em> en fazla <em>m</em> kere karsilastirilip eslenmesini saglar.
Eger <em>m</em> yok edilirse o zaman en azindan <em>n</em>
kere eslenmesini saglar. Eger virgul de yok edilmisse o zaman tam olarak
<em>n</em> kere eslenmeyi saglar.Eger bu formlardan herhangi birine deyim
yerlestirilirse, harfi harfine basim saglanir ornek verirsek
(i.e.,soyle bir deyim verilmesi `\{2\}' `{2}'ile eslenmeyi saglar,ve bunun gibi).
<p/></dd>

<dt>\&lt;</dt>
<dt>\&gt;</dt>
<dd>(\&lt;)ile baslayan veya (\&gt;)ile bitenler arasina deyimler <em>word</em>, veya buna benzer seyler koymak,ASCII karakterler icinde alphanumeric karakterlerin sonuclari altlarina gelecek sekilde yazilir. su sekilde(_).
<p/></dd>
</dl>
<p>Asagidaki komutlar ile olusturulanlardir.
<b>ed</b> soz diziminden ayir edilmesini saglar.
</p>
<dl compact="compact">
<dt>\`</dt>
<dt>\'</dt>
<dd>Sartsiz bir sekilde baslangic(\`) veya son (\') seklindedir.
<p/></dd>

<dt>\?</dt>
<dd>Genellikle su sekilde karsilastirilir ve kullanilir.
verilen komut  `a[bd]\?c'ise `abc', `adc' ve `ac' ile eslestirir.  Eger deyimin  basinda \? kullanilirsa, `?' harfi harfine karsilastirilir.<p/></dd>

<dt>\+</dt>
<dd>Verilenlerle deyimlerin veya karakterlerin bir kez veya birkac kez
eslenmesini saglar.Mesela `a+' kisa yoldan `aa*'.Eger \+ a'nin,deyimin
veya verinin  basina yerlestirilirse gercek `+'ile eslenir.<p/></dd>

<dt>\b</dt>
<dd>Kelimelerin baslangic veya sonunun eslestirilmesi saglanir.
Boylece su sekildeki yazim `\bhello\b' suna esit olur`\&lt;hello\&gt;'.
Fakat, `\b\b' gecerli bir deyimdir. `\&lt;\&gt;' olmamasina ramen.<p/></dd>

<dt>\B</dt>
<dd>kelimeicerisindeki ( gecersiz dizinlerin ) eslestirilmesini
saglar.<p/></dd>

<dt>\w</dt>
<dd>Kelime icerisindeki herhangi bir karakterin
karsilastirilmasini saglar.<p/></dd>

<dt>\W</dt>
<dd>icinde kelime olmayan karakterlerin karsilastirilmasini saglar.<p/></dd>
</dl>

<h3>KOMUTLAR</h3>
<p>Butun <b>ed</b> komutlari istenilen bağımsız değişkenleri alarak degisik anlamlara burunebilir. Eger komut bağımsız değişkenleri bir kac kez kullanilmissa, son satir haric
digerleri (\)ile bitirilmelidir.
</p><p>
Genel olarak, cogunlukla her komut bir satir ile izlenir.
Fakat, bazi komutlar son bir ek kabul ederler,bunlardan bazilari
<em>`p'</em> (cikti), <em>`l'</em> (listeleme) veya <em>`n'</em>
(birer birer sayma), son satiri komut izleyecek sekilde cikartmak icin kullanilir.
</p><p>
Islemi kesmek icin (genel olarak ^C) kullanilir devam eden islemi keser
ve editorde komut moduna gecer.
</p><p>
<b>ed</b> Su sekilde izlenen komutlari kabul eder.
Eger komutlar parantezler icinde bir birleriyle eslenmeden kullanilmaya
kalkilirsa yanlis adresler ve uygulamalar verir.
</p>
<dl compact="compact">
<dt>(.)a</dt>
<dd>Adres satirindan sonra verilen bolumun eklenmesini saglar,belki adres 0
da olabilir.Bolum yerlestirme moduna getirilir.Akici adres son satirin
girilmesiyle kurulur.<p/></dd>

<dt>(.,.)c</dt>
<dd>Dizginin bellekteki yerinin degistirilmesi saglanir.Adres satiri bellekten
silinir ve verilen bolum o yere eklenir.Bolum yerlestirme modu ile girilir.
Akici adres son satirin girilmesi ile kurulur.<p/></dd>

<dt>(.,.)d</dt>
<dd>Bellekten  verilen adres satirinin silinmesi saglanir.Eger silinen
satirdan sonra satir varsa akici adres bu satira gore kurulur.Diger
sekilde akici adres silinen satirdan onceki satira gore kurulumu saglar.
<p/></dd>

<dt>e <em>dosya</em></dt>
<dd>Duzen <em>dosya</em>, default dosya adi olarak kurulur.
Eger <em>dosya</em> ozel digilse,default dosyaadi kullanilir.
Yeni dosya okunmadan once satirlarin bellekteki
yeri silinir.Akici adres son satira gore kurulur.<p/></dd>

<dt>e <em>!komut</em></dt>
<dd>standart ciktisi olan  <em>`!komut'</em>, (gor !<em>komut</em> asagidaki) duzenler. default dosyaadi degistirilmedi.
<p><em>komut</em>ciktisi okunmadan once satirlar silinir.
Akici adres son satirin okunmasiyla duzenlenir.</p></dd>

<dt>E <em>dosya</em></dt>
<dd>sartsizca <em>dosya</em> düzenlenir. Bu <em>e</em> komutuyla benzerdir,
sadece su acidan farklidir degisiklikler uyari vermeden uzerine
kaydedilir.Akici adres son satirin girilmesiyle kurulur.<p/></dd>

<dt>f <em>dosya</em></dt>
<dd>default dosyadi dosyaya kurulur
<em>dosya</em>. Eger <em>dosya</em> ozelligi belirtilmemisse,  default dosyaadi kurtulussuz basilir.<p/></dd>

<dt>(1,$)g<em>/re/komut-listesi</em></dt>
<dd><em>komut-listesi</em>'ne basvurmakla birlikte her satir verilen
<em>re</em> ile <em>eslestirilir.</em>
<p/>
<em>komut-listesi</em> isleme sokulmadan once gecerli olan satir eslenir.
<p/>
<em>`g'</em> komutunun sonunda dosya <em>komut-listesi</em> ile <em>etkilenerek</em> kurulur.
<p/>
<em>komut-listesi</em> icindeki her komut sonuncusu haric (\) ile ayrilmalidir.
<em>`g'</em>, <em>`G'</em>, <em>`v'</em> ve <em>`V'</em> komutları haric diger komutlar enter ile izlenmeli. <em>komut-listesi</em> <em>`p'</em> komutuyla benzerdir.<p/></dd>

<dt>(1,$)G<em>/re/</em></dt>
<dd>Satirlari duzenleyerek <em>re</em> ile karsilastirir. Her karsilastirilan satir goruntulenir. satirlar kaydedilir ve kullanicinin belirtmesiyle
<em>komut-listesi</em> goruntulenir. <em>`G'</em> komutunun sonunda son satirinda <em>komut-listesi</em> ile <em>etkilenmesiyle</em> islem biter.<p/>
<em>komut-listesi</em> formati ile <em>`g'</em> komutu benzerdir. Burada yalnizca gecersiz olan komut atlanir. tek bir '&amp;' gecerli olan son islemin tekrarlanmasini saglar. <p/></dd>

<dt>H</dt>
<dd>Hatalarin aciklanmasi yapilir.
Hatalarin aciklanmasi belirli bir deger degildir.
ed yazilarinin bu komutla baslamasi onerilir.<p/></dd>

<dt>h</dt>
<dd>son hatanin aciklamasini yapar.<p/></dd>

<dt>(.)i</dt>
<dd>Kaydetmeden once ekleme yapilmasi saglanir.
yazi yerlestirme moduna gecer.
Son satirin girilmesi ile kaydetme islemi yapilir.<p/></dd>

<dt>(.,.+1)j</dt>
<dd>Satirlara ekleme yapar.Satirlar silinir ve satirlar
eklenen kismi icerir. Sonucta adres son satira gore kurulur.<p/></dd>

<dt>(.)k<em>lc</em></dt>
<dd>Satirlari kucuk harflerle belirler. <em>lc</em>.  Su sekilde belirlenir. <em>'lc</em> (i.e., a .I lc ile tekil aktarimlar belirlenir) sonra gelen komutlar icinde.Belirleme satir degistilmeden veya silinmeden degistirilmez.<p/></dd>

<dt>(.,.)l</dt>
<dd>Hizli bir sekilde satirlar goz onunden gecirilir.
Eger engellenirse <b>ed</b> yeni bir karakter girene kadar her sayfa sonunda bekler. Son satirin girilmesiyle akici adres kurulur.<p/></dd>

<dt>(.,.)m(.)</dt>
<dd>Satirlarin yer degistirmesini saglar.
Sag el yerlestirme uygulandiktan sonra satirlar
yer degistirmeye baslar.Satir adresi <em>0</em> (sifir).da olabilir.
Son satirin da yer degistirmesiyle islem tamamlanir.<p/></dd>
<dt>(.,.)n</dt>
<dd>Satir numaralarini onlarla birlikte basar.
Son satirin girilmesiyle dosya kurulur.<p/></dd>
<dt>(.,.)p</dt>
<dd>Satirlarin goruntulenmesini saglar.Eger kullanici tarafindan
durdurma islemi kullaniliyorsa <b>ed</b> her sayfa sonunda ilerlemek icin  enter islemini bekliyecektir. Son satirn girilmesiyle dosya kurulur. <p/></dd>

<dt>P</dt>
<dd>Komut imlecini acar ve kapar. Eger ozel olarak belitilmemisse kendi belirledigi deger <em>-p dizge</em>, dir yani kapalidir.<p/></dd>

<dt>q</dt><dd>ed editorunden cikar.<p/></dd>

<dt>Q</dt><dd>Ed yazilimindan sartsiz cikar.
<em>q</em>komutuyla benzerdir. Eger degisiklikler kaydedilmemisse
uyari yapilmadan degisiklikler keybedilir.<p/></dd>

<dt>($)r <em>dosya</em></dt>
<dd><em>dosya</em> okur.Eger <em>dosya</em> dosyaya bir ad belirtilmemisse belirlenmis ad dosya icin kullanilir. Eger belirli bir isimde yoksa komut satirinda ozaman <em>dosya</em>. ya bir ad belirtilir yoksa belirli ad degismez.
Son satirin okunmasiyla adres tamamlanir.<p/></dd>

<dt>($)r <em>!komut</em></dt>
<dd>Okuma islemi standart veri dosyalarinin alinmasindan sonra yapilir.
<em>`!komut'</em>, (yukardaki !<em>komut</em>
Belirli dosya adi degistirilmez.<p/></dd>

<dt>(.,.)s<em>/re/değiştirilecek-dizge/</em></dt>
<dt>(.,.)s<em>/re/değiştirilecek-dizge/</em>g</dt>
<dt>(.,.)s<em>/re/değiştirilecek-dizge/n</em></dt>
<dd><em>re</em> ile karsilastirma yapilarak
<em>değiştirilecek-dizge</em> yer degistirilir.
Belirli olarak sadece ilk karsilastirmanin yeri degistirilir.
Eger <em>`g'</em> (genel) son eki verilirse, her karsilastirma yer degistirir.
<em>`n'</em> son eki verilirse nerde verildigine bagli olarak
<em>n</em> pozitif bir sayi olmak uzere sadece <em>n</em>'inci
karsilastirmanin yer degistirmesine
sebep olur.Eger yerlestirilecek yer belirtilmemisse hata mesaji ile
karsilasilir. son satirin da etkilenmesiyle islem biter.
<em>re</em> ve <em>değiştirilecek-dizge</em>
ile bos olan satirlar yok edilebilir.
(yukardaki <em>`s'</em> komutunu gorun.)
Eger son bir veya iki bosluk yok edilirse son satir bundan etkilenir
ve son satir ek olarak <em>`p'</em> ile belirtildigi sekilde goruntulenir.
<p/>
<em>değiştirilecek-dizge</em> icinde beklenmeyen '&amp;' kullanilmasiyla
akici bolgeyle yer degistirme yapilir.
<em>`\m'</em>, kullanimiyla <em>m</em>'in nerede kullanildigina bagli olarak
numara dizgisi [1,9] icinde olarak, <em>m</em>'inci numara ile isaretli bolge
yer degistirir.
Eger <em>değiştirilecek-dizge</em> tek bir `%' karakteri icerirse,
<em>değiştirilecek-dizge</em> bir onceki yer degistirme kullanilir.
<em>değiştirilecek-dizge</em> ile bos bir satir eklenmek isteniyorsa bu
(\)ile saglanir.<p/></dd>

<dt>(.,.)s</dt>
<dd>Son yer degistirmeyi tekrarlar <em>`s'</em> komutunun bu formu
ekler alarak duzenlenir.
<em>`n'</em> veya <em>`r'</em>, <em>`g'</em> ve <em>`p'</em>
ile cesitli kombinasyonlari sayesinde duzenlenir.
<em>`n'</em> verilmisse,sadece <em>n</em>'inci
karsilastirma yer degistirir.
<em>`r'</em> eki son arastirma deyimi son yerlestirme yerine kullanilir.
<em>`g'</em> son yerlestirmenin yerel son ekini gosterir.
<em>`p'</em> son yerlestirmenin ekini goruntuler.<p/></dd>

<dt>(.,.)t(.)</dt>
<dd>Adreslenen satırları sağ taraftaki, adresi <em>0</em> (sıfır) olabilen hedef adresin ardına kopyalar. Adres, son kopyalanan satıra ayarlanır.<p/></dd>

<dt>u</dt>
<dd>Bu komuttan once verilen komutun tekrarlanmasi saglanir.
Genel komutlar <em>`g'</em>, <em>`G'</em>, <em>`v'</em>, ve <em>`V'</em>.
tek bir undo ile muamele edilebilir. <em>`u'</em> kendisinin tersidir.
<p/></dd>

<dt>(1,$)v<em>/re/komut-listesi</em></dt>
<dd><em>komut-listesi</em> e basvurur deyimle her satirin karsilastirilmamasi icin. <em>re</em>. <em>`g'</em> komutuyla benzerdir.<p/></dd>

<dt>(1,$)V<em>/re/</em></dt>
<dd>Kesin olarak deyimin karsilastirilmamasi icin duzenler.
<em>re.</em> <em>`G'</em> komutuyla benzerdir.<p/></dd>

<dt>(1,$)w <em>dosya</em></dt>
<dd>Satilarin dosyaya kaydedilmesini saglar.
<em>dosya</em> icindeki onceki bilgiler uyari yapilmadan kaybedilecektir. Eger
bir öntanımlı dosya ismi yoksa, öntanımlı dosya ismi <em>dosya</em> olur, aksi takdirde bir değişiklik olmaz.  Dosya ismi belirtilmemişse öntanımlı dosya ismi kullanılır. Belirli adres degistirilmez.<p/></dd>

<dt>(1,$)wq <em>dosya</em></dt>
<dd>Satirlarin <em>dosya</em>, icine yazilmasini saglar ve
daha sonra <em>`q'</em> komutunu isleme sokar.<p/></dd>

<dt>(1,$)w <em>!komut</em></dt>
<dd>Standart veri dosyasina satirlarin yazilmasini saglar.
<em>`!komut'</em>, (yukardaki !<em>komut</em> komutunu gorun).
Belirli dosya adi ve adres degistirilmez.<p/></dd>

<dt>(1,$)W <em>dosya</em></dt>
<dd><em>dosya</em> sonuna <em>ekleme</em> yapilmasini <em>saglar</em>.
<em>`w'</em> komutuyla ayni gorevi gorur,onceki dosyanin
icerigi degistirilmeden ekleme saglanir. Satirlar degistirilmez.<p/></dd>

<dt>(.)x</dt>
<dd>Verilen bir satirdan sonraya kopyalama yapilir.
Son satirin kopyalanmasiyla kaydedilir.<p/></dd>

<dt>(.,.)y</dt>
<dd>Isaretlenen bolumun kopyalanmasi yapilir.
Sonradan gelen su komutlarla uzerine yazim islemi yapilir.
<em>`y'</em>, <em>`s'</em>, <em>`j'</em>, <em>`d'</em> veya <em>`c'</em>
komutlari ile. Satir adresleri degistirilmez.<p/></dd>

<dt>(.+1)z<em>n</em></dt>
<dd>Bir kerede <em>n.</em> satiri belirler. Eger <em>n</em>
ozel olarak belirtilmezse,belirli olan pencere degeri kullanilir.
Son satirin girilmesiyle adres belirlenir.<p/></dd>

<dt>!<em>komut</em></dt>
<dd><em>komut</em> <em>sh</em>(1) komutunu <em>calistirir.</em>
<em>komut</em>'un ilk karakteri `!', ise text icindeki bir onceki
<em>`!komut'</em>.komutuyla<em>yer</em> degistirir.
<b>ed</b> (\) <em>komut</em>uyla baslayanlari isleme sokmaz.
<em>`%'</em> ile belirli dosyadaki yer degistirlir.
Kabuk calistirilma moduna donduruldugunde,  `!' isareti standart veri dosyasina yazilir. Adres degistirilmez.<p/></dd>

<dt>(.,.)#</dt>
<dd>Su sekilde komutla baslamak;Satirin geri kalan
kismi yeni satira kadar yok edilir.
Eger satir icinde noktali virgul varsa bu isarete kadar olan kisim yok
edilir.<p/></dd>

<dt>($)=</dt>
<dd>satir sayisinin goruntulenmesini saglar.<p/></dd>

<dt>(.+1)newline</dt>
<dd>adres satirini goruntuler ve akici adresi bu satira gore duzenler.<p/></dd>
</dl>

<h2>DOSYALAR</h2>
<dl compact="compact">
<dt>/tmp/ed.*</dt>
<dd>Tampon dosya</dd>

<dt>ed.hup</dt>
<dd>dosyasi <b>ed</b> icerigini iceren kesilme islemi oldugunda kullanilan dosyadir.<p/></dd>
</dl>

<h2>İLGİLİ BELGELER</h2>

<p/>
<em>vi</em>(1), <em>sed</em>(1),
<em>regex</em>(3), <em>sh</em>(1).
<p/>
USD:12-13
<p/>
B. W. Kernighan and P. J. Plauger, <em>Software Tools in Pascal</em>,
Addison-Wesley, 1981.
<p/>

<h2>SINIRLAMALAR</h2>
<p/>
<b>ed</b> islem <em>dosya</em>sinda (\)islemin kesilmesini saglar.
<p/>
Eger text(non-binary) dosya ise yeni satir karakterleri ile ayrilamaz,
sonra <b>ed</b> okuma/yazma dosyasi uzerine ekleme yapar. Eger binary dosyasi ise, <b>ed</b> okuma/yazma uzerine yeni satir eklemez.
<p/>
Her satir icin ust limit: 4 ints
<p/>

<h2>HATALAR</h2>
<p/>
Bir hata gozuktugu zaman
<b>ed</b> bunu veri dosyasina yazar ve bu var olur. diger bir sekilde
bir`?' isareti gozukur ve arkasindan komut moduna
gecilir.Son hatanin nedeninin aciklanmasi isteniyorsa
<em>`h'</em> (yardim) komutu verilerek yapilir.
<p/>
<b>ed</b> editorunden yapilan degisikler kaydedilmden cikiliyorsa
komutun bir kez daha tekrari sorulur. Eger komut ikinci kez girilirse basarilir fakat yapilan degisiklikler kaybedilir.
<p/>
<b>ed</b> 0 ile cikma eger hata yoksa olur; diger sekilde &gt;0.
<p/>
</div></sect1>
