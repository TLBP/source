<?xml version="1.0" encoding="UTF-8"?>
<!-- ********************************************************************
     $Id: expr.xml,v 1.3 2002/09/30 18:10:37 nilgun Exp $
     ******************************************************************** -->

<sect1 id="archive-man-1-expr">
  <sect1info>
    <title>expr(1)</title>
  </sect1info>
<div>

<h2>KOMUT</h2>
<p/>
expr - Ifadeleri degerlendirir.

<h2>KULLANIM</h2>
<p/>
<b>expr</b>

expression...
<br/>

<b>expr</b>

{--help,--version}
<br/>


<h2>AÇIKLAMA</h2>
<p/>
Bu kilavuz sayfasi
<b>expr</b>'in GNU surumunu anlatir.
<b>expr</b>

bir ifadeyi degerlendirir ve sonucu standart cikista(ekran) yazar. Ifadenin
her isareti degisik bir arguman olmak zorundadir. Operandlar sayi yada
katar olabilir. <b>expr</b> icin katarlar quoted degildirler ve onlari kabuktan
korumak icin quote etmek gerekebilir.
<b>expr</b>

operand olarak gozuken her seyi yapilacak isleme gore tam sayi yada katar
olmaya zorlar.
<p/>

Oncelik sirasina gore operatorler soyledir:
<dl compact="compact">
<dt><em>|</em></dt><dd>
Ilk argumani sifir yada hic ise ilk argumanini, degilse ikinci argumanini
verir. Bu bilinen &quot;veya&quot; operatorudur.
<p/></dd>
<dt><em>&amp;</em></dt><dd>
Ilk argumani sifir yada hic ise ilk argumanini, degilse sifir verir.
<p/></dd>
<dt><em>&lt;</em>  <em>&lt;=</em>  <em>=</em>  <em>==</em>  <em>!=</em>  <em>&gt;=</em>  <em>&gt;</em></dt><dd>
Argumanlarini karsilastirir. Iliski dogru ise 1, degilse 0 degerini verir.
(<em>==</em> ile  <em>=</em> esittir.)
<b>expr</b> iki argumani da sayi gibi almaya ve sayisal bir karsilastirma
yapmaya calisir. Eger basaramazsa lexicografic karsilastirma yapar.
<p/></dd>
<dt><em>+</em>  <em>-</em></dt><dd>
Aritmetik islemler yapar .Iki arguman da sayi olmaya zorlanir. Eger bu
yapilamazsa hata meydana gelir.
<p/></dd>
<dt><em>*</em>  <em>/</em>  <em>%</em></dt><dd>
Aritmetik islemler yapar(% isareti C de oldugu gibi hatirlatma
operatorudur). Iki arguman da sayi olmaya zorlanir; eger bu yapilamazsa hata
olusur.
<p/></dd>
<dt><em>:</em></dt><dd>
Model benzerligi yapar . Argumanlari katara zorlanirlar ve ikinci argumani
duzgun ifade gibi gorulur(basinda ^ bulunan). Birinci arguman bu duzenli
ifadeye uydurulur. Eger benzetme basarili olursa ve katarin bir parcasi
<br/> '\)' ve '\(' icinde kalirsa, bu parca <em>:</em> ifadesinin degeridir. Yoksa,
uyan karakterlerin sayisi olan bir tamsayi gonderilir. Eger benzetme
basarisiz olursa, <em>:</em> operatoru '\)' ve '\(' kullaniliyorsa hiclik
dizisini, yoksa 0 degerini gonderir. Sadece bir '\)' ve '\(' cifti
kullanilabilir.
<p/></dd></dl>
<p/>
Toplamada asagidaki anahtar kelimeler tanimlidir:
<dl compact="compact">
  <dt><b>match</b><em> string regex</em></dt><dd>
Ornek benzetmenin degisik bir yoludur. ``<em>string</em> <b>:</b> <em>regex</em>''
ile aynidir.
<p/></dd>
  <dt><b>substr</b><em> katar konum uzunluk </em></dt><dd>
<em>katar</em>'den  <em>konum</em>'dan baslayarak en fazla <em>uzunluk</em> kadar bir parca cikarilmasidir. Eger <em>konum</em> veya <em>uzunluk</em> degerlerinden biri negatif ise veya numerik degil ise hiclik degeri verir.
<p/></dd>
  <dt><b>index</b><em> katar karakter_sinifi</em></dt><dd>
<em>katar</em>'de <em>karakter_sinifi</em>'ndaki ilk karakterin bulundugu yeri
verir. <em>karakter_sinifi</em>'ndaki karakterler <em>katar</em>'de yoksa 0 degeri verir. <p/></dd>
  <dt><b>length</b><em> katar</em></dt><dd>
<br/> <em>katar</em>'nin uzunlugunu verir.
<p/></dd></dl>
<p/>

Parantezler alisilmis sekilde gruplama yapmak icin kullanilir. Anahtar
kelimeler katar olarak kullanilamazar.

<h3>SEÇENEKLER</h3>
<p/>
<br/> GNU
<b>expr</b>

sadece bir argumanla cagirildiginda asagidaki secenekler gecerlidir:
<dl compact="compact">
<dt><em>--help</em></dt>

<dd>
Ekranda kullanimla ilgili bir mesaj verir ve basarili bir cikis kodu ile
cikar.
<p/></dd><dt><em>--version</em></dt>

<dd>
Ekranda surumle ilgili bilgi verir ve basarili bir cikis kodu ile
cikar.
<p/></dd></dl>

<h2>ÖRNEKLER</h2>

<p/>

Kabuk degiskenine 1 eklemek icin
<em>a</em>:

<dl compact="compact">
<dd>
a=`expr $a + 1`
<p/></dd></dl>
<p/>

Asagidaki ifade dosya adinin
<em>a</em>

degiskeninde saklanan kisminin dizin olmayan kismini yazdirmada kullanilabilir.
(a'daki degisken  `/' i icermeyebilir.):
<dl compact="compact">
<dd>
expr $a : '.*/\(.*\)' '|' $a
<p/></dd></dl>
<p/>

Quoted kabuk metakarakterlerine dikkat edin.
<p/>


<h2>ÇIKIŞ KODLARI</h2>
<p/>
<b>expr</b>
asagidaki cikis kodlarini verir:
<p/>

Ifade sifir veya hiclik degilse 0,
<br/>

ifade sifir veya hiclik ise 1,
<br/>

gecersiz ifade ise 2.
<p/>

</div></sect1>
