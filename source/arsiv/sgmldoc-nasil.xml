<?xml version="1.0" encoding="UTF-8"?>

<!--DOCTYPE article SYSTEM "../docbook/dtd/docbookx.dtd"-->
<!-- ********************************************************************
     $Id: sgmldoc-nasil.xml,v 1.2 2002/09/18 20:11:34 nilgun Exp $
     ******************************************************************** -->

<article id="archive-sgmldoc-nasil">
  <articleinfo>
    <title>Linuxdoc SGML NASIL</title>
    <author role="translator">
      <firstname>Görkem Çetin</firstname>
    </author>
    <author>
      <firstname>Matt Welsh</firstname>
   </author>
    <pubdate>Çeviri: v1.0, 25 Ocak 1997</pubdate>
  </articleinfo>
<div>

<pre>

Bu dokümanın amacı kullanıcılara SGML-tabanlı bir yazı formatı olan ve
LaTeX, düz metin ve HTML çıktı alabilmeyi sağlayan linux-doc yapısı
hakkında bilgi vermektedir.


</pre><h3> Giriş</h3><pre>

Linuxdoc-sgml , genel kullanımdan çok Linux HOWTO, FAQ ve LDP (Linux
Documentation Project) belgelerinin oluşturulmasına yönelik geliştirilmiş
bir yazım formatıdır. Bu yüzden atası olan DTD formatından biçimsel olarak
uzaklaşarak pek çok özelliği kırpılmıştır. linuxdoc-sgml 'nin amacı
çeşitli kullanıcılar tarafından hazırlanan linux belgelerinin tek yapıda
ve tek görünüşte formatlanabilmesidir.

Şimdiye kadar Linux dokümanları hep ASCII metin dosyası yapısında
hazırlanıyordu. Bu sistemin en büyük özelliklerinden biri de tek kaynak
dosya hazırlanarak diğer formatların bu dosya yardımıyla
çevrilebilmesidir. SGML'nin tanıdığı dosya yapılarından biri olan LaTex,
hoş görünümlü yazıcı çıktılarının alınmasına izin verir. Kullanıcı
açısından getirilen en önemli yenilik, birkaç komutun yardımıyla ve
kolayca birden fazla dosya yapısının üretilebiliyor olmasıdır.

Bu doküman, linuxdoc-sgml DTD kullanılarak hazırlanmıştır. SGML
dosyalarının hazırlanabilmesi için en gerekli temel komutları anlatır.


</pre><h3> SGML</h3><pre>

SGML (Standard Generalized Markup Language) sistemi, bir formattan
diğerine çeviri yapabilmek için özellikle hazırlanmıştır. SGML altında
dokümanın yapısı, tipi belirtilebilir. Bunun için DTD (Document Type
Definition)  kullanılır. Bir DTD çeşidi, Linux HOWTO ve diğer dokümanların
hazırlandığı linuxdoc-sgml yapısı, bir diğeri de QWERTZ'dir. SGML
standardı, DTD yapısının kitap, makale ve diğer genel doküman tiplerini
hazırlamasına izin verir.


</pre><h3> Dokümanların hazırlanması</h3><pre>

DTD yapısının ne olduğunu ve nasıl çalıştığını bilmenize gerek yoktur.
DTD, hazırladığınız bir dokümanın nasıl formatlanması gerektiğini veya
yazıcı çıktısının nasıl göründüğü ile ilgilenmez. Sadece dokümanı
oluşturan ara bölümlerin veya başlıkların varlığıyla ilgilenir.

SGML, kaynak dokümanını diğer bir formata (örneğin LaTeX veya nroff)
çevirmek için sırayla sgmls ve sgmlsasp programlarını kullanır.  sgmlsasp
görevini yapınca orjinal SGML dosyasına eş bir LaTeX dosyanız olacaktır.


</pre><h3> Kurulumdan önce</h3><pre>

linuxdoc-sgml.tar.gz dosyası: SGML dokümanı yazmak ve bunları LaTeX, nroff
ve HTML dosya yapılarına çevirmek için tüm ihtiyaçları karşılayan bir yazılım
arşivine sahiptir. Bu dosyaya ek olarak aşağıdaki paketlerin biri veya her
ikisinin de sistemde kurulmuş olması gerekir.

groff: 1.08 veya 1.09 sürümü gereklidir. linuxdoc-sgml.tar.gz daha eski
sürümlerle birlikte çalışmayacaktır. groff'un ELF çalıştırılabilir dosyası
ftp://ftp.metu.edu.tr/pub/linux/sunsite/utils/text adresinden temin
edilebilir.

TeX ve LaTeX: Hemen her yerde bulunabilen bu dosyaların kurulumu sorun
yaratmayacaktır. Bu paket, SGML dosyasını LaTeX formatına çevirmek
isterseniz gerekli olur. ftp://ftp.metu.edu.tr/pub/linux/sunsite/apps/tex
adresinden temin edilebilir.


</pre><h3> Kuruluma giriş</h3><pre>

linuxdoc-sgml paketinin sisteme kurulması için sırayla şu işlemlerin
yapılması gereklidir:

Önce, linuxdoc-sgml.tar.gz dosyasını istediğiniz bir yere açın.
Bulunduğunuz dizin altında SGML dosyalarının tutulduğu linuxdoc-sgml
isminde başka bir dizin daha açılacaktır. Buradaki dosyaları başka bir
yere hareket ettirmediğiniz sürece dosyayı nereye açtığınız önemli
değildir.

sgmls ve diğer programları derleyin. Bunun için dizini altında, şu komutları
sırayla çalıştırmalısınız :

$ make config.h
$ make
$ make install
$ make install.man

Derleme işleminden sonra sgmls, sgmlsasp ve rast dosyaları dizini altına
kopyalanacaklardır. Paketten çıkan format, qroff ve qtex yardımcı
programlarını PATH değişkeninin gösterdiği bir dizine kopyalayın veya
bunların dizinini PATH değişkenine ekleyin.

Eğer yukarıdaki komutların işleyişinde sorun çıkarsa, sgmls-1.1 dizini
altındaki Makefile dosyasına göz atın. Özellikle vfork sistem
fonksiyonunun bulunduğu satırda, eğer sisteminiz vfork yerine fork
destekliyorsa problem olabilir.

Gereken tüm man dosyaları da linuxdoc-sgml/man dizini altına
yerleştirilecektir. Bu dosyaları /usr/man dizinine kopyalayabilirsiniz.

linuxdoc-sgml/bin dizinindeki format, qroff ve qtex dosyalarında bulunan
LINUXDOC kabuk değişkeninin değerini, linuxdoc-sgml dizinini gösterecek
şekilde değiştirin.

html-fix dizini altında, şu komutları çalıştırın:

$ make
$ make install

Bu iki make komutu, HTML çevirisi için gerekli olan fixref ve html2html
dosyalarını yaratıp bin dizini altına kopyalayacaktır.

Kurulum hatasız tamamlanmış ise linuxdoc sistemini kullanabilecek duruma
gelmişsiniz demektir.


</pre><h3> Deneme :-)</h3><pre>

format ve qtex programları bir SGML dosyasını alır ve istenilen
formata çevirir. qroff ise nroff yardımıyla çıktıyı işler.

Örnek olarak elimizde deneme.sgml isimli bir dosya olsun. Bunu önce LaTeX,
sonra da dvips yardımıyla PostScript'e çevirmek için :

$ format -T latex deneme.sgml | qtex > dnm.ps

komutu kullanılabilir. veya qtex'in -d opsiyonu ile DVI
dosyasını yaratabilirsiniz:

$ format -T latex deneme | qtex -d > dnm.dvi

Düz metin dosya çıktısı almak için :

$ format -T ascii deneme > dnm.txt

veya

$ format -T nroff deneme | qroff > dnm.txt

komutları kullanılabilir. HTML yapısında dosya elde etmek için de

$ format -T htmlx deneme.sgml > dnm.html

komutunu kullanabilirsiniz. Bu komutun ardından dosyadaki her bölüm için
deneme.html, deneme-1.html, deneme-2.html gibi dosyalar
oluşacaktır. WWW programını deneme.html dosyasını çalıştıracak şekilde
başlatın.

Sadece oluşabilecek hataları görmek için şu komuttan yararlanın:

$ format -T nroff deneme > /dev/null


</pre><h3> linuxdoc-sgml ile birkaç örnek </h3><pre>

linuxdoc DTD yardımıyla dosya hazırlanması gayet kolaydır. SGML örneği
olması açısından example.sgml dosyasına gözatın. Bu dosyayı bastırırsanız
elinizin altında her an bir kaynak bulunacaktır.


</pre><h3> Temel komutlar (belirteçler)</h3><pre>

Bir belitrteç, &lt;..> harf dizeleri ile başlayıp biten SGML komutlarıdır.
Her belirteç, başlık, paragraf, liste veya bunlara benzer SGML
elemanlarına işaret eder.

Örnek olarak, koyu yazıyüzleri oluşturabilmek için

&lt;bf> .... &lt;/bf>

kullanılır. &lt;bf> , koyu stile geçiş için, &lt;/bf> koyu stilden çıkış için
kullanılır. Daha kısa bir formada yazmak isterseniz, şu belirteci
yazın:

&lt;bf/bu satır, koyu basılacaktır.../

Koyu yazılması istenen tüm kelimeler bölü işareti arasına alınmıştır. Bu
formatın kullanılması durumunda UNIX dosya isimlerindeki gibi içinde bölü
işareti olan kelimelerden sakınmalıdır.

Bazı durumlarda, belirtecin sonunu gösteren kapama belirteci kullanılmayabilir.
Başlığı belirtmek için kapama belirtecine (&lt;/>) gerek yoktur.
Genel olarak bu gibi küçük detaylarla ilgilenmeyin. example.sgml dosyasındaki
gibi bir yapıyı baz alarak her türlü dokümanı rahatlıkla yazabilirsiniz.


</pre><h3> Özel karakterler</h3><pre>

Küçüktür (&lt;) ve büyüktür (>) işaretlerinin yanısıra birkaç özel karakter
SGML dosyasındaki belirteç yapısında kullanıldıklarından dosya içinde
özel olarak belirtilmeleri gerekir. Bir satırda örneğindeki gibi özel
işaret kullanabilmek için &amp;lt; yazmalısınız.

Genel olarak, &amp; karakteri ile başlayan herşey makro kapsamına
girer. Bir makro, özel karakterleri göstermek için kullanılır.


</pre><h3> Yazım formatını korumak</h3><pre>

Yazım formatını (kullanılan TAB, boşluklar) aynen korumak ve metnin yazıldığı
gibi yazıcıdan çıkmasını sağlamak için &lt;verb> belirteci kullanılır.
Aşağıda bu belirtecin kullanımına bir örnek verilmiştir:

&lt;verb>
verb belirtecinin kullanımına örnek...
&lt;/verb>

code belirteci verb belirteci ile hemen hemen aynı özellikleri
taşır. Tek farkı arada kalan metnin üst ve altına yatay çizgi çeker.


</pre><h3> Genel doküman yapısı</h3><pre>

Detaylara girmeden önce bir dokümanın nasıl başlaması gerektiğini
görelim. doc dizini altında yeralan example.sgml örneği
başlangıçta fikir vermesi açısından idealdir.


</pre><h3> Giriş</h3><pre>

Burada başlık ve doküman tipi bilgisi verilir. Örnek bir Linux-HOWTO
dokümanı aşağıdaki şekilde başlayabilir.

&lt;tscreen>&lt;verb>
&lt;!doctype linuxdoc system>

&lt;article>

&lt;title>Linux Karnıyarık-NASIL&lt;/title>
&lt;author> Görkem Çetin&lt;/author>, &lt;tt/e077245@orca.cc.metu.edu.tr/
&lt;date> Sürüm1.0, 26.1.1997 &lt;/date>

&lt;abstract>
Bu makalede dünyaca tanınan Türk mutfağının bol proteinli, fosfat bağlayıcı
ve besleyici yemeği olan Karnıyarık'ın Linux yardımıyla pişirilmesi
anlatılacaktır.
&lt;/abstract>

&lt;toc>
&lt;/verb>&lt;/tscreen>

Yazılacak olan dokümanların giriş sırası yukarıdaki gibi olmalıdır. İlk
satır, SGML sgmlsasp programına bu dosyanın linuxdoc DTD yapısında
olduğunu söyler. &lt;doctype> belirteci ise dosyanın `article'
(kısa yazı) stilinde yazılacağının bilgisini verir. `article' yerine
`book' (kitap) veya `report' (rapor) da yazarak denemeler yapabilirsiniz.

Sürüm numarası ve dokümanın yazım ve son güncellenme tarihi (date), başlık
(title) ve yazar (author) bilgileri de yazıya başlamadan önce verilir.

abstract yardımıyla dokümanın en üstüne bilgilendirici birkaç satır
koyabilir, toc ile içindekiler kısmını oluşturabilirsiniz.

Başlık ve paragraflar

Linuxdoc-sgml ile hiyerarşik sırada toplam beş ayrı başlık tanımlanabilir.
Aşağıda yeralan belirteçler ile başlıklarınızı kontrol altına alabilirsiniz:

sect : Birinci başlık (1, 2 gibi)
sect1: İkinci başlık (1.1, 1.2 gibi)
sect2: Üçüncü başlık (1.1.4 , 2.1.2 gibi)
sect3: Dördüncü başlık
sect4: Beşinci başlık


sect (veya sect1, sect2.. ) belirtecinin ardından başlığın ismi
yazılır. Başlık girişinden sonra o başlık altında görünmesi istenen
paragraflar yazılır. Bir defalık olmak üzere, her başlığın altındaki
paragraf belirteci ile başlar:

&lt;tscreen>&lt;verb>
&lt;sect>Giriş

&lt;tt/linuxdoc-sgml/ , genel kullanımdan çok Linux HOWTO, FAQ ve LDP
(Linux Documentation Project) belgelerinin oluşturulmasına yönelik
geliştirilmiş bir yazım formatıdır.
....
&lt;/verb> &lt;/screen>

Biten ilk paragrafın ardından yeni bir paragrafa başlanabilir.
&lt;p> belirtecini her paragraf başında kullanmaya gerek yoktur.

&lt;tscreen>&lt;verb>
Bu da ikinci paragraf
&lt;/verb>&lt;/tscreen>


</pre><h3> Dokümanın bitirilmesi</h3><pre>

Dokümanın sonunda, bittiğini belirtmek için şunları yazmalısınız:

&lt;/article>


</pre><h3> URL kullanımı</h3><pre>

WWW altında kullanılan html dosyalarının en önemli özelliklerinden biri
URL bağlantılarıdır. linuxdoc-sgml ile hazırlanan dosyaları html'e
çevirirken URL girişlerine (ftp, gopher, www, mail gibi) bağlantı verilmesi
sağlanabilir. Örneğin:

&lt;tscreen>&lt;verb>
Linux-NASIL Türkçe dokümanları
&lt;url url="http://cclub.metu.edu.tr/tr-ldp"
name="Türkçe Linux Doküman Projesi Ana Sayfası">
adresinden temin edilebilir.
&lt;/verb>&lt;/tscreen>

url belirteci ile tanımlanan ana URL kaynağına, kaynak dosyadan HTML
formatlı dosya oluşturulurken bağlantı verilir. name belirtecinin
kullanımı şart değildir.


</pre><h3> Fontlar</h3><pre>

linuxdoc-sgml, LaTeX tarafından desteklenen tüm fontları tanır.
Yukarıda tanımlanan tt belirteci sabit boşluklu 'daktilo' fontlarını
basar. Bu karakterler yardımıyla sunucu, dizin veya dosya isimleri yazılabilir.
Örnek olarak:

&lt;tt>http://linux.org.tr&lt;/tt> makinasında Linux çalışır.

Diğer yazı karakterlerinde, koyu yazı için bf, eğik yazı
için em kullanabilirsiniz. Bunların dışında pekçok yazı karakteri
olmasına rağmen örneğin HTML bunları desteklemeyebilir. Kalın, daktilo
ve eğik yazı ile gayet hoş görünümlü dokümanlar hazırlanabilir.


</pre><h3> Listeler</h3><pre>

linuxdoc-sgml, üç farklı liste türünü destekler. Bunlar:

itemize : Temel listeler
enum    : Numaralı listeler
descrip : Tanım paragrafı

Temel (itemize) ve numaralı (enum) listelerde yeralan
elemanlar item belirteci ile , tanım paragraflarındaki elemanlar
ise tag belirteci ile başlamalıdır. Örneğin,

&lt;itemize>
&lt;item>Bakırköy
&lt;item>Taksim
&lt;/itemize>

Aşağıdaki görüntüyü verir:

  * Bakırköy
  * Taksim

Aynı örnek, numaralı listelerde (enum) yapılırsa,

&lt;enum>
&lt;item>Bakırköy
&lt;item>Taksim
&lt;/enum>

Listeler ardışıl kullanılabilirler ve bir listenin içinde başka tür bir
liste bulunabilir.

Tanım paragrafları, (descrip) diğer liste türlerinden biraz
bağımsızdır. Nadiren kullanılır.

&lt;descrip>
&lt;tag/Windows./ Evdeki pencere. Açık kaldığında cereyan yapar.
&lt;tag/DOS./ Windows'un selefi. Hayati durumlarda işe yarayabilir.
&lt;/descrip>

Ekrandaki görüntüsü :

Windows.
     Evdeki pencere. Açık kaldığında cereyan yapar.
DOS.
     Windows'un selefi. Hayati durumlarda işe yarayabilir.


</pre><h3> Son bir söz</h3><pre>

linuxdoc-sgml paketini Linux Kullanıcıları Grubu ftp adresinden
(ftp://ftp.linux.org.tr) temin edebilirsiniz. Kullanımları kısıtlı
olduğu için yukarıda sözü geçen belirteçlerin dışında kalan birkaç komuttan
(tablo, matematik formüller, resimler) hiç söz etmedik. Bunlar hakkında
daha geniş bilgi dizini altındaki QWERTZ User's Guide dosyasında bulunabilir.

</pre></div></article>
