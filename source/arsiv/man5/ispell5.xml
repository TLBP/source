<?xml version="1.0" encoding="UTF-8"?>
<!-- ********************************************************************
     $Id: ispell5.xml,v 1.1 2002/09/30 18:07:50 nilgun Exp $
     ******************************************************************** -->

<sect1 id="archive-man-5-ispell">
  <sect1info>
    <title>ispell(5)</title>
  </sect1info>
<div>
<h2>İSİM</h2>
<p/>

ispell - sözlük ile ek dosyalarının biçemi

<h2>AÇIKLAMA</h2>

<p/>

<em>Ispell</em>(1)

dilin sözdizimi denetimi için iki dosyaya gerek duyar.Birinci
dosya dil icin gerekli sozcukleri iceren sozluktur ve ikincisi ise
sozlukteki ozel seçeneklerin anlamini tanimlayan bir onek dosyasidir.
Bu iki dosya birlestirilmis
<em>buildhash</em> (bkz:<em>ispell</em>(1))
dosyasina ve burda tanimlanmayan bir hash dosyasina yazilmistir
<p/>
Ham bir <em>ispell</em>
sozlugu (ana sozluk ya da kendi sozlugunuz olmayacak) cizgi basina sozcuk
listesi icerir.Her sozcukten sonra istege bagli olarak bölü çizgisi (&quot;/&quot;)
kullanilabilir ve asagidaki gibi aciklanan asil sozcugu degistiren bir veya birden
fazla seçenek.
Secimlere bagli olarak
<em>ispell</em> ile birlikte yapilan
durum ayrica asil sozcugun ve seçeneğin icinde onemli olabilir veya olmayabilir.
Eger çalışma-anı seciminin büyük harfli dönüşümü tanimlanmissa, asil
sozcukteki durum onemlidir;
eger degilse, ana sozcukteki durum onemsenmez
Eger çalışma-anı seciminin MASKBITS'i 32'nin bir degeri ile baslarsa
seçeneklerdeki durum onemsenmez;
eger degilse seçeneklerdeki durum onemlidir.
Sistem yoneticinize ya da <em>ispell</em>
surdurucunuze daha fazla bilgi icin baglanin (ya da ogrenmek icin
<b>-vv</b> seçeneği kullanin.)
Bu sozluk <b>-f</b> seçeneğin <em>sort</em>(1)
ile birlikte hash dosyalari yapilandirilmadan once uygun hale getirilmeli;
bu otomatik olarak normal bicimde yapilandirilmis sozcuk olan
<em>munchlist</em>(1) tarafindan yapilacaktir.
<p/>

Eger sozluk dizge karakteri olan (bkz. belgedeki onek dosyasi) sozcukler
iceriyorsa bunlar onek dosyasinda <b>defstringtype</b>
ifadesi ile verilen biçem ile yazilmali. Bu hic Ingilizce icermeyen diller
icin bir sorun olacaktir. Bir sozluge sozcuk eklerken, kendi begendiginiz
biçemleyicinizi kullanmanizdan daha dikkatli olun. (Eger kisisel dosyaniza
bir sozcuk eklerseniz bir <em>ispell</em>
kullanimi sirasinda,bunlar otomatik olarak dogru biçemli olarak olarak
cevrilecek. Bu ozellik eger gerekirse tam sozlugu cevirmek icin kullanilir:)
<p/>

<dl><dd>
<pre>
        echo qqqqq &gt; ham.sözlük
        buildhash ham.sözlük <em>ek-dosyası</em> ham.hash
        awk '{print &quot;*&quot;}END{print &quot;#&quot;}' <em>eski-sözlük-dosyası</em> \
        | ispell -a -T <em>eski-sözlük-dizge-türü</em> \
          -d ./ham.hash -p ./<em>yeni-sözlük-dosyası</em> \
          &gt; /dev/null
        rm ham.*
</pre>
</dd>
</dl>

<p/>

Asil sozcugun durumu <em>ispell</em>
tarafindan kabul edilen sozcuklerin durumu ile kontrol edilir, asagidaki gibi
<dl>
<dt>(1)</dt><dd>
Eger ana sozcuk daha asagi bir durumda gorunurse (mesela,
<em>bob</em>), bu daha asagi durumda kabul edilir, faydalanilir.
<p/></dd>
<dt>(2)</dt><dd>
Eger ana büyük başharfli olarak gorunurse (ornegin, <em>Robert</em>),
bu asagi durumda kabul edilmeyecek,
ama büyük başharfli ya da butun buyuk harflerin icinde kabul edilecektir.
<p/></dd>
<dt>(3)</dt><dd>
Eger ana sozcugun hepsi buyuk harfli olursa(ornegin, <em>UNIX</em>),
bu sadece hepsi buyuk harf olarak kabul edilecektir.
<p/></dd>
<dt>(4)</dt><dd>
Eger ana sozcuk degisik bir büyük harfliliğe sahipse(ornegin, <em>ITCorp</em>),
sadece bit sozcuk beklenebilir eger bu büyük harlfleme ile devam ederse,
ya da hepsi buyuk harf olarak gorunur.
<p/></dd>
<dt>(5)</dt><dd>
Birden ana sozcugun büyük harfe dönüştürülmesi sozlukte gorulebilir.Farkli
büyük harfe dönüşüm seçenekleri VEYA-lama ile birlestirilmistir.
<p/></dd></dl>
<p/>

Gereksiz büyük harfe dönüşümler (ornegin,
<em>bob</em> ve <em>Bob</em>)
<p/>
<em>buildhash</em> ve <em>ispell</em> (kisisel sozlukler icin),
tarafindan birlestirilecek ve ham bir sozlukten <em>munchlist</em>
tarafindan cikarilabilecektir.
<p/>
Ornegin, sozluk;
<p/>

<dl><dd>
<pre>
bob
Robert
UNIX
ITcorp
ITCorp
</pre>
</dd>
</dl>

<p/>

seklinde kabul edecek
<em>bob</em>, <em>Bob</em>, <em>BOB</em>, <em>Robert</em>, <em>ROBERT</em>, <em>UNIX</em>,
<em>ITcorp</em>, <em>ITCorp</em> ve <em>ITCORP</em> ve digerlerini rededecektir
Bazi kabul edilmeyecek formlar:
<em>bOb</em>, <em>robert</em>, <em>Unix</em>, ve<em>ItCorp</em>.
<p/>

Yukarda sozu edildigi gibi,hicbir sozlukteki ana sozcukler seçeneklerle
uzatilamaz. Her yeni bir sozcuk koke eklenen onek ve soneki gosteren basit
bir karakterdir.
Örnegin Ingilizce bir sozlukte
<b>D</b> seçeneği <em>bathe</em>'i <em>bathed</em>
yapmak icin eklenebilir. Seçenekler hashed sozlukte basit bir parca olarak
gosterildiginden beri, bu onemli alan kazanmalarla sonuclaniyor.
<em>munchlist</em> el yazisi, seçenekler eklenerek mevcut olan ham sozluge
indirilebilir.
<p/>

Bir sozcuk bir onek ile uzatildigi zaman, bu onek ancak sozcugun ilk
(onek) ve son (sonek) harfi olma durumlarinda gorunurse kabul edilebilir.
Boylece, <em>UNIX/M</em>'deki /M'nin ana sozlukteki anlami
(possesive yapmak icin bir ' ve s ekle)
<em>UNIX'S</em> seklinde kabul edilebilir.
<em>UNIX's</em> eger <em>UNIX's</em>
acik ise, bu ayri giris sozlugu olarak gorunmeli ve bu
<em>munchlist</em> ile birlestirilemez.
(genelde bu seyler icin kaygilanmaniza gerek yok;
<em>munchlist</em>
kendi cikis sozlugundeki butun sozcuklerin aynisinin giris sozlugunde
beklenebilecegini garanti eder, boylece yapmaniz gereken tek sey
sozluge sozcukleri eklemek ve ara sira munchlist'ti kendi olcusune indirmek
icin calismak)
<p/>

Yukarda sozu edildigi gibi onek dosyanin tanimi ozel seçeneklerle
birlestirilmis onekleri tanimlar.
Ayni zamanda dil tarafindan kullanilan karakter takimini aciklar.
<p/>

Genede onek-tanimi
dilbilgisi yonetilmis satir duzeni icin planlanmistir.
Bu gercekten bir serbest biçemli yacc dilbilgisidir ve eger isterseniz
anlasilmaz bir sekilde yoneltilebilir.
Yorumlar keskin bir isaret (#) ile baslatilir ve satir sonuna kadar
devam eder.
Tersbölüler genel bir tarza dayandirilir.
<b>\n</b>,

<b>\r</b>,

<b>\t</b>,

<b>\v</b>,

<b>\f</b>,

<b>\b</b>,

arti ozelikler ve biçemi <b>\x</b><em>nn</em>).
Dilbilgisindeki cozumleyicide ozel anlami olan hicbir karakter;
öncelemeyle anlami aciklanmamis bir sembole degistirilemez;
ornegin bir seçenek ismi olan
asterisk'i ya da kalan &quot;:&quot; isaretini
<em>flag \*:</em> ya da <em>flag \::</em> ile birlikte ifade edebilirsiniz.
Dilbilgisi top-down tarzini her elemanin aciklanmasi ile birlikte tanitir.
Bir onek-tanim dosyasi acikca bir tablo icermeli:
<p/>

<dl><dd>
<pre>
<em>tablo</em>:       [<em>başlıklar</em>] [<em>önekler</em>] [<em>sonekler</em>]
</pre>
</dd>
</dl>

<p/>

En azindan <em>önekler</em> ve <em>sonekler</em>den biri gereklidir.
Her ikiside sirayla gorulebilir.
<p/>

<dl><dd>
<pre>
<em>başlıklar</em>:       [ <em>seçenekler</em> ] <em>karakter-kümeleri</em>
</pre>
</dd>
</dl>

<p/>

Başlıklar evrensel secimleri bu sozluge ve dile aciklarlar. Bunlar kulla-
nilmak icin karakter kümelerini ve biçemleyiciyi ve kesin
<em>ispell</em>

flamaları icin hatalari icerir.
<p/>

<dl><dd>
<pre>
<em>seçenekler</em>:       { <em>biçemleyici-deyimi</em> | <em>eniyileme-deyimi</em> | <em>seçenek-deyimi</em> | <em>num-deyimi</em> }
</pre>
</dd>
</dl>

<p/>

Secim ifadeleri kesin ispell flamaları ve biçemleyiciler tarafindan kulla-
nilacak karakter setleri icin hatalari aciklar.
<p/>

<dl><dd>
<pre>
<em>biçemleyici-deyimi</em>:       { <em>nroff-deyimi</em> | <em>tex-deyimi</em> }
</pre>
</dd>
</dl>
<p/>

Bir
<em>biçemleyici-deyimi</em>

bir biçemleyiciye ozel anlam ifade eden karakterleri aciklar. Normalde bu
ifade onemli degil ama  bazi dillerin ozgun dil karakterleri gibi kullanmak
icin genel hatalari almaya hakki vardir. Bu durumda bu ifadeler
biçemleyici tarafindan beklenen ozel karakterler aciklanmayabilir.
<p/>

<dl><dd>
<pre>
<em>nroff-deyimi</em>:       { <b>nroffchars</b> | <b>troffchars</b> } <em>dizge</em>
</pre>
</dd>
</dl>

<p/>

<p/>
<b>nroffchars</b>

ifadeleri kesin
<em>nroffchars</em>

kontrol karakterlerinin aciklanmayisina izin verir.
Verilen sira bes karakter uzunlugunda olmali ve sag ve sol parantez(&quot;()&quot;),
nokta(&quot;.&quot;), tersbölü (&quot;/&quot;) ve asterisk(*)icin yerine koyulacak
seyler listelenmelidir.
Ornegin:
<p/>

<dl><dd>
<pre>
<b>nroffchars</b> {}.\\*
</pre>
</dd>
</dl>

<p/>

ifadesi
<em>nroff</em>/<em>troff</em>

dizge çözümleme amaclari icin sol sag desteklerle ve digerlerine bir etkisi
olmadan yerine birakilabilir. Not olarak bir tersbölü ile bir tersbölü
kurtulabilir.
<p/>

<dl><dd>
<pre>
<em>tex-deyimi</em>:       { <b>TeXchars</b> | <b>texchars</b> } <em>dizge</em>
</pre>
</dd>
</dl>

<p/>

<b>TeXchars</b>

ifadesi, bazi Tex/Latex control karakterlerinin tekrar tanimlanmasini saglar.
Verilen sira tam olarak onuc karakter uzunlugunda olmali ve sag sol
parantezler(&quot;()&quot;), sol ve sag koseli parantezler(&quot;[]&quot;),sol
ve sag kume parantezler(&quot;{}&quot;), büyük/küçük işaretleri "&lt;>",
bölüler(&quot;/&quot;), dolar isareti(&quot;$&quot;),
yildiz isareti(&quot;*&quot;), nokta(&quot;.&quot;) ve yuzde isareti(&quot;%&quot;)
icin degistirimleri listelenmelidilir. Ornegin:<br/>
<tt>        </tt>texchars()[]&lt;&gt;&lt;/&gt;\$*%<br/>
sol sag kume parantezinin fonksiyonun
<p/>

<dl><dd>
<pre>
<b>texchars</b> ()\[]&lt;\&gt;&lt;\&gt;\\$*.%
</pre>
</dd>
</dl>

<p/>

büyüktür ve küçüktür işaretleriyle; Tex/Latex yapilarinin gramerini inceleme
maksadiyla
<em>tib</em>

kaynakca preprocessor'u
icin fonksiyonlarini muhafaza ederek degistirir.Dikkat edin ki,tersbölüler,
sol ve sağ koseli parante tersbölü (önceleme) ile gozardi edilir.
<p/>

<dl><dd>
<pre>
<em>eniyileme-deyimi</em>:       { <em>birleştirme-deyimi</em> | <em>ek-deyimi</em> }

<em>birleştirme-deyimi</em>:       <b>compoundwords</b> <em>birleştirme-seçenekleri</em>

<em>ek-deyimi</em>:       <b>allaffixes</b> <em>on-veya-off</em>

<em>on-veya-off</em>:       { <b>on</b> | <b>off</b> }

<em>birleştirme-seçenekleri</em>:  { <em>on-veya-off</em> | <b>controlled</b> <em>karakter</em> }
</pre>
</dd>
</dl>

<p/>

Bir
<em>eniyileme-deyimi</em>

ifadesi en iyi dile yapilmis ispell hatalarini kontrol eder.
<b>allaffixes</b>

ifadesi hatasi
<b>-P</b>

ve
<b>-m</b>

secenekleri icin
<em>ispell.</em>


Eger
<b>allaffixes</b>

kapatilirsa
(hata),
<em>ispell</em>

<em>-P</em>

seçeneğinin davranisini ihmal edecektir. root/affix onerileri sadece eger hic
&quot;yakin isabetsizlik&quot; yoksa yapilacaktir.
Eger
<b>allaffixes</b>

acilirsa,
<em>ispell</em>

<em>-m</em>

seçeneğinin davranisini ihmal edecektir. root/affix her zaman yapilacaktir.

<b>compoundwords</b>

ifadesi hatasi
<b>-B</b>

ve
<b>-C</b>

<em>ispell</em>'e secenekleri icin kontrol eder.
Eğer
<b>compoundwords</b>

kapatilirsa
<p/>
(hata),
<em>ispell</em>

<em>-B</em>

seçeneğinin
davranislarini ihmal edecek
birlikte yazilmis kelimeler hata olarak aciklanacak.
Eger
<b>compoundwords</b>

acilirsa ,
<em>ispell</em>

<em>-C</em>

seçeneğinin davranisini ihmal edecektir.
birlikte konuslandirilmis kelimeler, eger her ikiside sozlukte varsa
bilesik olarak degerlendirilecektir.Bu norvec dili ve Almanca gibi
cok sayida bilesik kelime ureten diller icin kullanislidir.
Son olarak eger
<b>compoundwords</b>

<em>controlled</em>'a ayarlanirsa sadece (baska turlu kullanilmasi gereken)
<em>karakter</em>

tarafindan belirlenmis seçenek ile isaretlenmis kelimelere bir bile-
sik olarak bulunma izni verir.
Cunku bu seceneklerin sozcukte belirlenmesine ihtiyac duyar.Komut
satirindan bu mumkun degildir.
<p/>

<dl><dd>
<pre>
<em>seçenek-deyimi</em>:       <b>flagmarker</b> <em>karakter</em>
</pre>
</dd>
</dl>

<p/>
<b>flagmarker</b>
ifadesi ekleme seçenekleri islenmemis sozluk dosyasindaki kok kelimeden
ayirmadan kullanilan karakteri tanimlar.
Bu hic bir kelimede yer almayan bir karakter olmali.(Sira karakterlerinde
icerilen kelimeler: asagi inceleyiniz.
Öntanımlı karakter &quot;/&quot; 'dir.Cunku bu karakter, hicbir dilde bir karakterin
yerini almak icin kullanilmaz.
<p/>

<dl><dd>
<pre>
<em>num-deyimi</em>:       <b>compoundmin</b> <em>rakam</em>
</pre>
</dd>
</dl>

<p/>

<b>compoundmin</b>

ifadesi, bilesik bir kelimedeki iki bilesenin uzunlugunu kontrol eder.
Bu yalnizca eger
<b>compoundwords</b>

aciksa
<b>on</b>

veya eger
<b>-C</b>

seçeneği
<em>ispell</em>.


Bu durumda yalnizca verilen minimum kadar uzunluktaki kelimeler bir
bilesigin bilesenleri olarak kabul edilirler
Öntanımlı uc karakterdir.
<p/>

<dl><dd>
<pre>
<em>karakter-kümeleri</em>       :       <em>norm-kümeler</em> [ <em>alternatif-kümeler</em> ]
</pre>
</dd>
</dl>

<p/>

<em>karakter-kümeleri</em> bolumu, bir kelimenin parcasi olabilecek karakterleri tarif
eder ve onlarin karsilastirma sirasini tanimlar. Her zaman bir &quot;normal&quot;
karakter kumelerinin tanimi bulunmalidir: ek olarak bir ya da daha fazla,
cesitli metin duzenleyicilerle kullanilan &quot;alternatif&quot;kumelerin tanimi
olabilir.
<p/>

<dl><dd>
<pre>
<em>norm-kümeleri</em>:     [ <em>atama-türü</em> ] krkt-grubu
</pre>
</dd>
</dl>

<p/>

Bir &quot;normal&quot; karakter kumesi, secenekli olarak,bu kumenin kullanimini
yapan bir dosya sonek tanimi ile baslayabilir. Bunun ardindan bir ya da
daha fazla karakter kumesi bildirimi vardir.
<p/>

<dl><dd>
<pre>
<em>atama-türü</em>:       <b>defstringtype</b> <em>isim</em> <em>geri-biçemleyici</em> <em>sonek</em>*
</pre>
</dd>
</dl>

<p/>

<b>defstringtype</b>

bildirimi, baz karakter kumesinin parcasi olarak tanimlanmis öntanımlı
sira karakterlerinin kullanimini saglacak dosya soneklerinin bir lis-
tesini verir; bu yalnizca eger sira karakterleri tanimlaniyorsa gerek-
lidir.
<em>isim</em>

bağımsız değişkeni, bu seceneklerle ortaklasmis tek isim veren bir siradir;
genellikle duzenleyicinin ismini
Eger duzenleyici troff ailesinin bir uyesi ise,&quot;nroff&quot; en populer makro
paketi ile ortaklasan isim icin kullanilmalidir. Tex ailesinin uyeleri
&quot;tex&quot;i kullanmalidir.
Diger isimler serbestce secilebilir, ama
<em>ispell 's</em>

<b>-T</b>

isleminde duzenleyici tipini belirlemek icin kullanildiklarindan, basit
tutulmalidirlar.
<em>geri-biçemleyici</em>

bağımsız değişkeni,verilen soneklerle dosyalari bulundururken kullanilacak geri
biçemleyici tarzini belirler.
bu arada bu,
<b>tex</b>

yada
<b>nroff</b>.

olabilir.
<em>sonek</em>

bağımsız değişkenleri, bir dosyanin sonunda bulunuyorsa, ortaklasilmis sira kumesinin
öntanımlısı tarafindan kullanilmasi gerektigi anlamina gelen,
boslukla ayrilmis sira karakter kumeleridir. Ornek olarak.Troff ailesi
icin olan listesi tipik olarak &quot;.ms&quot;, &quot;.me&quot;, &quot;.mm&quot;,vb.
gibi sonekleri icerir.
<p/>

<dl><dd>
<pre>
<em>krkt-grubu</em>: { <em>karakter-deyimi</em> | <em>dizge-deyimi</em> | <em>tekrar-deyimi</em>}*
</pre>
</dd>
</dl>

<p/>

Bir
<em>karakter-deyimi</em> tekil karakterleri tanimlar;
bir <em>dizge-deyimi</em>

bir sira gibi beraber gorunmesi gereken ve genellikle hedef dilde
tek bir karakterleri simgeleyen karakterleri tanimlar. Ayni zamanda
yukari asagi durumlar arasindaki  donusumude tanimlar.
Bir
<em>tekrar-deyimi</em>

sira karakterlerinin alternatif formlarini tanitmada kullaninlir; boylece tek
bir sozluk, ASCII karakteri olmayan karakterleri simgelemek icin
degisik duzenler kullanilan cesitli duzenleme programlari ile beraber
kullanilabilir.
<p/>

<dl><dd>
<pre>
<em>karakter-deyimi</em>:       <b>wordchars</b> <em>karakter-aralığı</em>
                |       <b>wordchars</b> <em>küçük-harf-aralığı</em> <em>büyük-harf-aralığı</em>
                |       <b>boundarychars</b> <em>karakter-aralığı</em>
                |       <b>boundarychars</b> <em>küçük-harf-aralığı</em> <em>büyük-harf-aralığı</em>
<em>dizge-deyimi</em>:       <b>stringchar</b> <em>dizge</em>
                |       <b>stringchar</b> <em>küçük-harfli-dizge</em> <em>>büyük-harfli dizge</em>
</pre>
</dd>
</dl>

<p/>

<b>boundarychars</b>

ifadesiyle tanimlanmis karakterler, eger sadece tekil olarak
<b>wordchars</b>

ya da
<b>stringchar</b>

ifadeleri ile bildirilmis karakterler arasina yerlestirilmisse
kelimenin bir parcasi olarak degerlendirilebilir.
Ornek olarak, &quot;tire cizgisi&quot; bir sinir karakteri ise (Fransizca icin
kullanisli), &quot;Foo-bar&quot; sirasi ile tek bir kelime olurdu.
<p/>

Eger iki uzaklik sira
<em>karakter-deyimi</em>

veya
<em>dizge-deyimi</em>,

icinde verilmisse, birincisi asagi durum olarak anlasilacak karakteri tanimlanir.
Bir
<b>stringchar</b>

ifadesi halinde iki sira ayni uzunlukta olmali.
Ayni
<b>stringchar</b>

ifadesinde, zorluk olmadan, asil sira yukari durum ve karakterin kendilerinin
her ikisinide kapsayabilir: Ornegin
<p/>

<dl><dd>
<pre>
stringchar      &quot;\\*(sS&quot;        &quot;\\*(Ss&quot;
</pre>
</dd>
</dl>

<p/>

ifadesi gecerlidir ve s ve S'in asagi ve yukari durumlarinin diger
bildirilerini engellemeyecek veya onlar tarafindan engellenmeyecektir.
<p/>

Sira karakterleri uzerine son bir not:
bazi diller belirli ozel karakterleri sanki bir siraymislar gibi
siniflar, örnek olarak Almanya'daki &quot;a-umbut&quot; zamanla &quot;ae&quot;
imis gibi siniflandirilmistir. Ispell bu yetiye sahip degildir; butun karakterler
kacinilmaz olarak islem gormelidirler.Oyle ise bazi durumlarda ispell bir
kelime listesini, hedef standart &quot;sozluk&quot; sirasindan farkli bir siraya koyacaktir.
<p/>
<p/>

<dl><dd>
<pre>
<em>alternatif-kümeler</em>:       <em>alt-tür</em> [ <em>alt-deyim</em>* ]
</pre>
</dd>
</dl>

<p/>

ASCII karakterlerinden olmayanlari simgelemek icin, farkli duzenleyiciler
farklı döngüler kullandigindan,
<em>ispell</em>

bu duzenleyiciler tarafindan kullanilan simgelerden haberdar olmalidir.
Bunlar alternatif sira karakteri olarak bildirilmistir.
<p/>

<dl><dd>
<pre>
 <em>alt-tür</em>:  <b>altstringtype</b> <i>isim</i> <i>sonek</i>*
</pre>
</dd>
</dl>

<p/>

<b>altstringtype</b>

yapisi her takim birlesik biçemleyici ismi ve dosya adi
sonek listesini sunar.
Bu isim ve liste yukardaki
<b>defstringtype</b>

yapisindaki gibi tamamen anlami aciklanmistir.
Bu basligi takip eden bu formatlayici alternate katar karekterlerini
gosteren bir veya daha cok
<em>alt-deyim</em>

vardir.
<p/>

<dl><dd>
<pre>
<em>alt-deyim</em>:  altstringchar alt-dizge std-dizge
</pre>
</dd>
</dl>

<p/>

<em>altstringchar</em>

yapisi katar karakterleri icin alternate gosterimleri tanimlar.
Ornegin, -mm makro
<em>troff</em>

paketi Alman &quot;a-umlaut&quot;
<em>a\*:</em>,

while
<em>TeX</em>

Eger
<em>troff</em>

versiyonlari
<b>stringchar</b>,

kullanan standart versiyonlar olarak gosterilmisse,
<em>TeX</em>

versiyonlari yapi kullanimiyla sira ile birbirlerini izliyorlar olarak ifade
edilebilir.
<p/>

<dl><dd>
<pre>
altstringchar   \
</pre>
</dd>
</dl>

<p/>

<b>altstringchar</b>

yapisi alternate sekilleri kesin belirtmek icin kullanildiginda,
ozel bir biçemleyici icin tum sekiller bir grup olarak birlikte gosterilmelidir.
Ayrica,her biçemleyici veya makro paketi,
karakterleri daha yuksek ve daha dusuk durumlarinin
her ikisinin tam bir tanimini saglamalidir ve her biçemleyici icin
kullanilan karakter durumlari tamamen acik(ayri) olmalidir. Benzer basilabilir
karakterin daha yuksek ve daha dusuk durum versiyonlarini tanimlayan karakter
durumlari, ayni zamanda ayni uzunlukta olmalidir.
Bu sinirlamalari tatmin etmek icin verilen bir biçemleyici icin bazi yeni
makrolar tanimlamak gerekli olabilir.
<em>buildhash</em>'in simdiki versiyonu bu sinirlamalari zorla kabul etmez.
Fakat onlara itaat etmedeki basarisizlik
<i>ispell</i> ile birlikte islenmis dosyalarin icine hatalari sokmaya sebep olabilir.
<p/>

Onemli bir minor nokta olarak
<em>ispell</em>

gosterilen tum karakterleri tahmin eder
<b>wordchars</b>

veya
<b>boundarychars</b>

terminal ekranda bir durumu
tamamen isgal edecektir.
<p/>

Bir tek karakter-kümesi yapilari,bir kelimenin parcasi olabilecek
bir karakterin bitisik dizisini gosterebilir.
Eqrep ve kabuk olarak verilen bir dizi:
[a-z] alfabetik küçük harfler anlamina gelir:
[^a-z] küçük harfli olan butun kelimeler anlamina gelir.
Tum karakter-kümesi yapilari, bir kelimenin parcasi olabilecek karakterlerin
son listesini uretmek icin birlestirilirler.
Karakterlerin collating sirasi bildirimlerinin sirasiyla tanimlanir:
Eger sira kullaniliyorsa, karakterler ASCII sirasinda tanimlanmis olarak
dusunulur.
Belirli bir durumda olan karakterler birinci olarak büyük harfler ile
birlikte her bir yeni gelen ile karsilastirilir.
Karakter-deyimi ifadeleri daha yeni bir davranisa sahiptir. Bu da her bir
küçük harfi bunlar ile denk büyük harflerin karsilastirilmasinin gerekmesine
neden oluyor.

<p/>
Verilen herhangi bir
<b>wordchars</b>

veya
<b>boundarychars</b>

yapisinda her bir siradaki karakterler ilk once ASCII karsilastirma
durumlarinda kisaltilirlar, sonra birer birer diger sira ile eşleştirilirler.
(Iki sira ayni karekter sayısına sahip olmalidir.)
Boylece, ornegin, bu iki yapi:
<p/>

<dl><dd>
<pre>
wordchars [aeiou] [AEIOU]
wordchars [aeiou] [UOIEA]
</pre>
</dd>
</dl>

<p/>

tamamen ayni sonucu uretecekti.
sesli harfleri yanlis karsilastirmak icin  ayri ifadeleri kullanmaniz
gerekir.
<p/>

<dl><dd>
<pre>
<b>wordchars</b> a U
<b>wordchars</b> e O
<b>wordchars</b> i I
<b>wordchars</b> o E
<b>wordchars</b> u A
</pre>
</dd>
</dl>

<p/>

komutlar küçük harf 'e'yi 'O'ya, küçük harf 'O'yu 'e'ye donusturen komutlardir.
Normal olarak bu sadece tuhaf bir ASCII karsilastirma durumunu kullanmaya
zorlayan dillerle ilgili bir problem olmali.
Eger küçük ve büyük harflerinizin her ikisi ayni sirada karsilastirilmis
ise, siz bu &quot;özellik&quot;hakkinda endiselenmek zorunda olmayacaksiniz.
<p/>

Onek ve sonekler kisimlari, anahtar kelime haric ayni yazim kurallarina
sahiptirler.
<p/>

<dl><dd>
<pre>
önekler:  prefixes seçenek-tanımı*
sonekler:  suffixes seçenek-tanımı*
seçenek-tanımı:   flag[*I~] karakter:repl*
</pre>
</dd>
</dl>

<p/>

Onek ve sonek tablosu bildirgec sifreden ve seçenek tanimlarinin bir
sifresinden olusur.
Tanimlarin birlestigi durumda seçenekler birden fazla tanimlanabilir.
Her bir seçenek duruma gore cesitli kelimelerin baslangic veya bitimlerine
uygulanan bir veya daha fazla
<em>repl</em>'i kontrol eder.
<p/>

Seçenekler bir
<em>karakter</em>

karakteriyle isimlendirilir.
Yapılandırma yetenegine bagli olarak, bu karakter herhangi buyuk bir harf
veya 7 bitlik ASCII karakteri olabilir. Cogu dil sadece 26 seçenekle
basa cikabilir.
<p/>

Bir seçenek karakteri bir veya daha fazla secenek karekteriyle
orneklenebilir.(Eger secenek karakterlerinden birini seçenek olarak kullanmak
isterseniz sadece cift tirnak icine alin.)
<p/>

Asterish secenegi bu seçeneğin
<em>çapraz-ürün</em>

formasyonunda calisacagini belirtir.
Bu sadece onek ve sonek tablolarini birlikte
icerdiginde sorun yaratir.
Eger boyleyse,
asterikli butun onek ve sonekler kelimeye butun capraz birleşmelerle
uygulanir.
Ornegin
<em>ek</em>

kokunu onek
<em>ön</em>

ve
<em>son</em>,

ve sonek
<em>ler</em>

ve
<em>li</em>.

ile dusunelim.
Eger bu onek ve sonek kontrol tum seçenekler asterisk ile isaretliyse,
<em>ek</em>

koku asagidakileri uretir.
<em>önek</em>,

<em>önekler</em>,

<em>önekli</em>,

<em>sonek</em>,

<em>sonekler</em>,

<em>sonekli</em>,

<em>ek</em>,

<em>ekler</em>,

ve
<em>ekli</em>.

Carpraz-uretim formasyonu bazisi kuraldışı olan buyuk miktarda kelimeyi cabucak
uretir,dikkatli olun.Eger carpraz uretim kuraldışı kelimeler uretirse
<em>munchlist</em>

bu seçenek birleşimlerini uretmez ve seçenek kullanisli olmaz.
<p/>

<dl><dd>
<pre>
<em>repl</em>:       <em>koşullar</em>* <b>&gt;</b> [ <b>- </b><em>ayraç-dizge</em><b>,</b> ] <em>ek-dizge</em>
</pre>
</dd>
</dl>

<p/>

 <b>~</b> secenegi birlestirilmis seçeneğin sadece birlesik kelime
olusturuyorsa, aktif oldugunu belirtir. Bu kelime formu birlesik kelime
icerisinde degisen Almanca gibi dillerde kullanislidir.
<p/>

Bir
<em>repl</em>

kok kelimenin tamamlanmasinda sartli kuraldir. 8 sarta kadar
<em>koşul</em>

belirtilebilir.
Eger
<em>koşullar</em>

saglanmissa,
<em>repl</em>in sagindaki kurallar uygulanir.
Asagidaki gibi:
<dl>
<dt>(1)</dt><dd>
Eger ayraç-dizge verilirse, once kok kelimenin baslangic veya sonundan ayrılır.
<p/></dd>
<dt>(2)</dt><dd>
Sonra ek-dizge bu noktaya eklenir.<p/></dd>
</dl>
<p/>

Ornegin,
<em>koşul</em>

<b>.</b>


<em>koşul</em>

<b>Y</b>


Asagidaki son ek degistiricileri:
<p/>

<dl><dd>
<pre>
.       &gt;       MENT
Y       &gt;       -Y,IES
</pre>
</dd>
</dl>

<p/>
<em>induce</em>,
<em>inducement</em>


<em>fly</em>'i <em>flies</em>


(Eger ayni seçenek tarafindan kontrol ediliyorlarsa
<em>fly</em>'i
<em>flyment</em>
<em>Munchlist</em>
bu cesit problemlere karsi kullanilabilir;
Altta verilen kisma bkz.)
<p/>

Ne kadar isteginize bakilmaksizin sagdaki dizgeler ozel karakterlerin
dizgeleri olmalidir.
Sebepler
<em>ispell</em>'in calisma seklinde derinlere islenmistir ve daha fazla esneklik
saglamak zor veya imkansizdir.
Ornegin:
<p/>

<dl><dd>
<pre>
[EY]    &gt;       -[EY],IES
</pre>
</dd>
</dl>

<p/>

yazmak isteyebilirsiniz. Bu calismaz.
Yerine iki ayri kural kullanmalisiniz:
<p/>

<dl><dd>
<pre>
E       &gt;       -E,IES
Y       &gt;       -Y,IES
</pre>
</dd>
</dl>

<p/>

<em>repl</em>'in uygulanmasi sartlar ile kesin kelimelere sigdirilabilir.
<em>koşullar</em>:

<p/>

<dl><dd>
<pre>
<em>koşul</em>:       { <b>.</b> | <em>karakter</em> | <em>aralık</em> }
</pre>
</dd>
</dl>

<p/>

Bir
<em>koşul</em>

<em>repl</em>'in sag tarafinda birlesen veya yer degistirilen karakterler uzerindeki
kisitlamadir.
Bir kisi icin yeterli olacak 8'e kadar
<em>koşul</em>

kullanilabilir.
Sag tarafi yalnizca <em>koşul</em> <em>repl</em> içinde belirtilmisse eklenecektir.
<em>koşullar</em> ustu kapali sekilde bir boyu tasvir eder;
kokler testte gecmeyecek
<em>koşullar</em>ın sayisindan azdir.
(Ozel bir durumda, bir
<em>koşul</em>un basit bir noktasi &quot;.&quot; sifirin uzunlugunu tanimlar, boylece
kural butun kelimelere gelisiguzel uygulanir).
Bu uzunluk,tum eklerin urettigi en az dort giris cikis kelimesini iceren yaygin
testlerin serbestligidir.
<p/>

Tekil karakterler olan
<em>koşullar</em> bosluk ile ayrilmalidir.
Ornegin,&quot;ED&quot; ile biten kelimeleri belirtmek icin, yaz
<p/>

<dl><dd>
<pre>
E D     &gt;       -ED,ING         # As in covered &gt; covering
</pre>
</dd>
</dl>

<p/>

Eger:
<p/>

<dl><dd>
<pre>
ED      &gt;       -ED,ING
</pre>
</dd>
</dl>

<p/>

yazarsaniz etki:
<p/>

<dl><dd>
<pre>
[ED]    &gt;       -ED,ING
</pre>
</dd>
</dl>

<p/>

ile ayni olacaktir.
Onemli nokta, bu bazen, tutarsiz sonek dosyasini kullanan sozluk dosyasini
yeniden yapilandirmada yarali olabilir.Ornegin dusunun ki &quot;R&quot; ekini
&quot;er&quot;
veya &quot;ers&quot; yaratmak icin kullandiniz.(Boylece Z ekini yeni birsey yapmak
gereksiz olacak).
Yeni bir sozluk
<em>yeni-sözlük</em>

yapmak icin,kullanilan
<em>yeni-ekler</em>,

<em>eski-ekler</em>'i kullanan eki <i>eski-sözlük</i>
listesi gibi kelimelerin ayni listesini kabul edecektir.
<b>-c</b>

<em>munchlist</em>'in anahtarlanmasında yararlidir ayni ornekte oldugu gibi;
<p/>

<dl><dd>
<pre>
$ munchlist -c eski-ekler -l yeni-ekler eski-sözlük &gt; yeni-sözlük
</pre>
</dd>
</dl>

<p/>

Eger bu uygulamayi kullanirsaniz, sizin yeni sozlugunuz her zaman orjinal
dosya gibi kullanilacaktir
Cunku
<em>munchlist</em>

gecersiz kelimeleri yapmis olan her eki kullanmaya izin verir ve
orjinal kelime listesindeki ekler tarafindan yaratilmis kelimeleri
karsilastirir
(Ama unutmayin ki
<em>munchlist</em>

adimlari uzun zaman alir ve gecici olarak bosluk dosyasini siler).

<h2>ÖRNEKLER</h2>

<p/>

Kosullara bagli soneklere bir ornek olarak, Ingilizce onek dosyasindan
<b>S</b>


<p/>

<dl><dd>
<pre>
flag *S:
    [^AEIOU]Y   &gt;       -Y,IES          # imply &gt; implies gibi
    [AEIOU]Y    &gt;       S               # convey &gt; conveys gibi
    [SXZH]      &gt;       ES              # fix &gt; fixes gibi
    [^SXZHY]    &gt;       S               # bat &gt; bats gibi
</pre>
</dd>
</dl>

<p/>

Ilk olarak Y ile biten kelimeri ekler, ama sesli Y'leri. Ikinci olarak
sesli Y'li kelimeleri dikkate aliriz.
Ucuncu olarak sibilant olan veya sibilant'a yakin olan kelimeleri kullan
ve son olarak butun herseyi devam ettir.
<p/>

Onemli bir nokta olarak
<em>koşullar</em>

cok dikkatli yazilmistir. Boylece onlar kelime gruplarini birbirinden
ayirmak icin basvurur.
Ozel bir nokta olarakta dorduncu cizgi kabul edilmeyen kelimeler acik
SXZH kadar iyi olan  Y ile son bulur.Ancak bu &quot;imply&quot;i &quot;implys&quot;a
cevirebilir.
<p/>

Buna ragmen Ingilizce onek dosyasi bunu yapmaz, bu yuzden ayni zamanda
bir kok kelimedeki bir varyasyondan daha cok bir flag uretime sahip
olunabilir.
Ornegin, Ingilizce'deki&quot;R&quot; ekini asagidaki gibi uzatabiliriz:
<p/>

<dl><dd>
<pre>
flag *R:
   E            &gt;       R               # skate &gt; skater gibi
   E            &gt;       RS              # skate &gt; skaters gibi
   [^AEIOU]Y    &gt;       -Y,IER          # multiply &gt; multiplier gibi
   [^AEIOU]Y    &gt;       -Y,IERS         # multiply &gt; multipliers gibi
   [AEIOU]Y     &gt;       ER              # convey &gt; conveyer gibi
   [AEIOU]Y     &gt;       ERS             # convey &gt; conveyers gibi
   [^EY]        &gt;       ER              # build &gt; builder gibi
   [^EY]        &gt;       ERS             # build &gt; builders gibi
</pre>
</dd>
</dl>

<p/>

Bu ek &quot;paten&quot; kokunden &quot;patenci&quot; ve patencileri turetebilir.
Bu ozellik
cumlelerin sonunda isim sifat ve fiil kullanilan dillerde yararlidir.
Mesela Almanca'da fiille biten zayif cumleleri tureten tek bir ek
belirlenebilir.

<h2>İLGİLİ BELGELER</h2>
<p/>
ispell(1)
<p/>

</div></sect1>
