<?xml version="1.0" encoding="UTF-8"?>
<!-- ********************************************************************
       yerli/iptables-NASIL.xml
     ******************************************************************** -->
<article xml:id="iptables-usage" xmlns="http://docbook.org/ns/docbook"
 xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:lang="tr">
 <info>
  <title>Iptables'ın Basit Kullanımı</title>
  <author>
   <personname>
    <firstname>Levent</firstname>
    <surname>YILDIRIM</surname>
   </personname>
  </author>
  <pubdate>17 Mart 2002</pubdate>
  <revhistory>
   <revision>
    <revnumber>0.1</revnumber>
    <date>17 Mart 2002</date>
    <authorinitials>Levent YILDIRIM</authorinitials>
    <revremark>
     Bu belgede Iptables'ın 1.2.5 sürümü temel alınarak seçenekleri ve
     kullanımı anlatılmıştır.
    </revremark>
   </revision>
  </revhistory>
  <abstract>
   <para>
    Bu belgede,
    <link xlink:href="http://www.netfilter.org/files/iptables-1.2.5.tar.bz2">
    Iptables 1.2.5</link> seçenekleri ve kullanımı anlatılmıştır.
   </para>
  </abstract>
 </info>
 <sect1 xml:id="iptables-usage_intro">
  <title>Giriş</title>
  <para>
   Iptables 2.4.x çekirdek ile birlikte gelen ve <command>ipchains</command>
   ve <command>ipmasqadm</command> gibi yazılımların yerini alan yeni nesil
   bir yazılımdır. Linux-2.3.15 ve sonraki tüm çekirdek sürümlerinde
   çalışabilir.
  </para>
  <para>
   Sunucunuzda Iptables'ın çalışabilmesi için çekirdeğinizde
   <literal>CONFIG_NETFILTER</literal> kısmının onaylanması ve gerekli
   seçeneklerin seçilmesi yeterlidir. Iptables ile,
  </para>
  <itemizedlist>
   <listitem>
    <para>
     Sunucunuzu internet üzerinden gelecek saldırılara karşı koruyabilir.
     Paketlere göre eleme yapabilir,
    </para>
   </listitem>
   <listitem>
    <para>
     NAT ve Maskeleme (masquerading) özelliği sayesinde internet bağlantınızı
     paylaştırabilir,
    </para>
   </listitem>
   <listitem>
    <para>
     NAT özelliği ile zorunlu vekil kurabilirsiniz.
    </para>
   </listitem>
  </itemizedlist>
  <para>
   Bir de baştan belirtmek istiyorum bu zincir tanımı bana pek ters geldi
   ama yerine ne kullanacağımı bilemedim.
  </para>
  <sect2 xml:id="iptables-usage_copyright">
   <title>Telif Hakkı ve Lisans</title>
   <para>
    Bu belgenin, <emphasis>Iptables'ın Basit Kulanımı</emphasis>,
    telif hakkı (c) 2002 <emphasis>Levent YILDIRIM</emphasis>'a
    aittir. Bu belgeyi, Free Software Foundation tarafından yayınlanmış
    bulunan GNU Özgür Belgeleme Lisansının 1.1 ya da daha sonraki sürümünün
    koşullarına bağlı kalarak kopyalayabilir, dağıtabilir ve/veya
    değiştirebilirsiniz. Bu Lisansın bir kopyasını
    <link xlink:href="&gfdl;">GNU Free Documentation License</link> başlıklı bölümde bulabilirsiniz.
   </para>
   <para>
    Linux, Linus Torvalds adına kayıtlı bir ticarî isimdir.
   </para>
  </sect2>
  <sect2 xml:id="iptables-usage_disclaimer">
   <title>Feragatname</title>
   <para>
    Bu belgedeki bilgilerin kullanımından doğacak sorumluluklar,
    ve olası zararlardan belge yazarı sorumlu tutulamaz.
    Bu belgedeki bilgileri uygulama sorumluluğu uygulayana aittir.
   </para>
   <para>
    Tüm telif hakları aksi özellikle belirtilmediği sürece sahibine
    aittir. Belge içinde geçen herhangi bir terim bir ticarî isim
    yada kuruma itibar kazandırma olarak algılanmamalıdır. Bir ürün
    ya da markanın kullanılmış olması ona onay verildiği anlamında
    görülmemelidir.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="iptables-usage_concepts">
  <title>Temel kavramlar</title>
  <para>
   Iptables işlemleri için INPUT, OUTPUT, FORWARD gibi temel kural
   zincirlerini kullanabileceğiniz gibi kendinizde zincirler
   oluşturabilirsiniz.
  </para>
  <para>
   Bu sürümde sadece temel zincirlere değinerek basit işlemler üzerinde
   duracağım. Temel zincirleri kısaca incelersek:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     <emphasis role="bold"><literal>INPUT</literal></emphasis> kural
     zincirinin görevi makinamıza gelen paketlerin denetimidir. Bir
     paket makinamıza geldiğinde bu kural zinciri tarafından incelenir
     ve yorumlanır.
    </para>
   </listitem>
   <listitem>
    <para>
     <emphasis role="bold"><literal>OUTPUT</literal></emphasis> zincirinin
     görevi makinamızdan çıkan paketleri incelemek ve zincirdeki kurallara
     göre yorumlamaktır.
    </para>
   </listitem>
   <listitem>
    <para>
     <emphasis role="bold"><literal>FORWARD</literal></emphasis>
     zinciri ise makinamızdan geçen paketlerin yönlendirilmesi işlemini
     yürütür.
    </para>
   </listitem>
  </itemizedlist>
  <para>Bu 3 zinciri silemezsiniz.</para>
 </sect1>
 <sect1 xml:id="iptables-usage_options">
  <title>Zincir yönetimi</title>
  <sect2>
   <title>Zincir yönetim komutları</title>
   <simplelist>
    <member>Yeni zincir ekleme (<literal>-N</literal>)</member>
    <member>Boş zincir silme (<literal>-X</literal>)</member>
    <member>Temel zincirlerdeki kuralı değiştirme (<literal>-P</literal>)</member>
    <member>Zircir kurallarını listeleme (<literal>-L</literal>)</member>
    <member>Zincirlerdeki kuralları boşaltma (<literal>-F</literal>)</member>
    <member>Zincirlerdeki paket ve bayt sayacını sıfırlama (<literal>-Z</literal>)</member>
   </simplelist>
  </sect2>
  <sect2>
   <title>Zincirlere kural tanımlamak için</title>
   <simplelist>
    <member>Zincire yeni kural ekleme (<literal>-A</literal>)</member>
    <member>Zincirde herhangi bir konuma kural eklemek için (<literal>-I</literal>)</member>
    <member>Zincirde herhangi bir konumdaki kuralı değiştirmek için (<literal>-R</literal>)</member>
    <member>Zincirden herhangibir kural silmek için (<literal>-D</literal>)</member>
   </simplelist>
  </sect2>
  <sect2>
   <title>Zincir yönetim seçenekleri</title>
   <simplelist>
    <member>protokol (<literal>-p</literal>)</member>
    <member>Kaynak makina (<literal>-s</literal>)</member>
    <member>Hedef makina (<literal>-d</literal>)</member>
    <member>Giriş (INPUT) işleminde kullanılacak arabirim (<literal>-i</literal>)</member>
    <member>Uygulanacak kural (<literal>-j</literal>)</member>
    <member>Çıkış (OUTPUT) işleminde kullanılacak arabirim (<literal>-o</literal>)</member>
    <member>Kullanılacak zincir (<literal>-t</literal>)</member>
   </simplelist>
  </sect2>
 </sect1>
 <sect1 xml:id="iptables-usage_optdescr">
  <title>Zincirlerde kullanılan komut ve seçeneklere genel bakış</title>
  <para>
   Iptables kuralları yazılırken çeşitli temel komut ve seçenekler
   kullanılır. Bunların bazılarına 3. bölümde değinmiştim. Şimdi ise
   bunları genel başlıklar altında açıklamaya çalışacağım.
  </para>
  <para>
   Açıklamalardaki "<literal>!</literal>" işareti bir işlemin olmaması yani ters işlem görmesi anlamına geliyor. Örneğin:
  </para>
  <variablelist>
   <varlistentry>
    <term><literal>-s 192.168.1.1</literal></term>
    <listitem>
     <para>
      kaynak adresi <literal>192.168.1.1</literal> demek iken
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><literal>-s ! 192.168.1.1</literal></term>
    <listitem>
     <para>
      kaynak adresi <literal>192.168.1.1</literal>
      <emphasis>olmayan</emphasis> demektir.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <sect2>
   <title>Protokol türü (<literal>-p</literal>)</title>
   <para>
    Bu bağımsız değişken ile kullanacağımz protokol türünü belirliyoruz. Burada
    kullanabileceğimiz türler: <literal>tcp</literal>,
    <literal>udp</literal>, <literal>icmp</literal> ve
    <literal>all</literal>
   </para>
  </sect2>
  <sect2>
   <title>Portun belirtilmesi</title>
   <para>
    <option>--source-port [!] port[:port]</option> veya
    <option>--sport</option> kaynak portu belirler.
   </para>
   <para>
    <option>--destination-port [!] port[:port]</option> veya
    <option>--dport</option> hedef portu belirler.
   </para>
  </sect2>
  <sect2>
   <title>Hedef ve Kaynak adresler</title>
   <para>
    <option>-s [!] adres[/ağmaskesi]</option> ile kaynak adresi belirliyoruz.
   </para>
   <para>
    <option>-d [!] adres[/ağmaskesi]</option> ile hedef adresi belirliyoruz.
   </para>
   <para>
    Bu adres belirleme işleminde IP adresi kullanılabildiği gibi konak ismi de
    kullanılabilir. Örneğin:
   </para>
   <para>
    <option>-s 192.168.1.0/255.255.255.0</option>:
    Ağ maskesi <literal>255.255.255.0</literal> olan
    <literal>192.168.1.0</literal> IP bloğundaki kaynak adresleri
   </para>
   <para>
    <option>-s ! 192.168.1.0/255.255.255.0</option>:
    Ağ maskesi <literal>255.255.255.0</literal> olan     <literal>192.168.1.0</literal> IP bloğundaki adresler dışında kalan kaynak adresleri
   </para>
   <para>
    <option>-s ! mail.yahoo.com</option>:
    Konak ismi <literal>mail.yahoo.com</literal> olmayan adresler
   </para>
  </sect2>
  <sect2>
   <title>Kullanılacak Arabirim</title>
   <para>
    <option>-o</option> seçeneği ile çıkış (<option>OUTPUT</option>) ve <option>-i</option> bağımsız değişkeni ile giriş (<option>INPUT</option>)
    arabirimini tanımlıyoruz. Örnekler:
   </para>
<literallayout><option>-i ppp0</option> giriş birimi ppp0
<option>-o eth0</option> çıkış birimi eth0
<option>-i ppp+</option> ppp ile başlayan giriş birimleri
<option>-o eth+</option> eth ile başlayan çıkış birimleri
</literallayout>
  </sect2>
  <sect2>
   <title>Kuralın davranış şekli</title>
   <para>
    <option>-j</option> bağımsız değişkeni ile kuralın sonucunda davranış şeklini
    belirliyoruz. Bu bağımsız değişken ile kullanılan temel davranışlar:
    <option>ACCEPT</option>, <option>DROP</option> ve
    <option>REJECT</option>'dir.
   </para>
   <para>
    <emphasis role="bold"><option>ACCEPT</option></emphasis> bir zincirdeki
    öntanımlı seçenek olarak uygulanır.
   </para>
   <para>
    <emphasis role="bold"><option>DROP</option></emphasis> zincir kuralının
    uygulanması halinde paketin engelleneceğini belirtir.
   </para>
   <para>
    <emphasis role="bold"><option>REJECT</option></emphasis> ise
    <option>DROP</option> gibi paketi engeller fakat paketin göndericisine
    <option>--reject-with </option> ile aşağıdaki sinyallerden birinin döndürülmesini sağlar:
   </para>
<literallayout>
icmp-net-unreachable
net-unreach                 Ağa ulaşılamıyor.
icmp-host-unreachable
host-unreach                Sunucuya ulaşılamıyor.
icmp-proto-unreachable
proto-unreach               Protokole ulaşılamıyor.
icmp-port-unreachable
port-unreach                Port'a ulaşılamıyor (Öntanımlı)
icmp-net-prohibited
net-prohib                  Ağa ulaşım yasak
icmp-host-prohibited
host-prohib                 Sunucuya ulaşım yasak
tcp-reset
tcp-reset                   TCP Bağlantı sonlandırma
</literallayout>
   <para>
    Burada kullanılan <literal>ICMP</literal> ve <literal>TCP</literal>
    tanımları ağ protokolünü belirler.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="iptables-usage_nat">
  <title>Iptables ile NAT (Network Address Translation) İşlemleri</title>
  <para>
   Bu kısımda ise elimden geldiğince Iptables ile NAT (Network Address
   Translation) işlemlerine değineceğim. Iptables'ın NAT özelliğini:
   <itemizedlist>
    <listitem>
     <para>
      Internet bağlantısını paylaştırmak,
     </para>
    </listitem>
    <listitem>
     <para>
      Sunucu yükünü dağıtmak/paylaştırmak,
     </para>
    </listitem>
    <listitem>
     <para>
      Şeffaf vekil tanımlamak,
     </para>
    </listitem>
   </itemizedlist>
   gibi işlemlerde kullanırız.
  </para>
  <para>
   NAT özelliği temel olarak iki bölümden oluşur. Kaynak NAT (SNAT) ve
   Hedef NAT (DNAT).
  </para>
  <para>
   SNAT (POSTROUTING) kaynak adres üzerinde bir değişiklik yapılmak
   isteniyorsa kullanılır. Maskeleme (Masquerading) işlemi SNAT ile
   yapılır. İç ağdan gelen paket SNAT işlemi sonucunda dış ağa sanki
   bizim ip adresimizden gelmiş gibi iletilir ve gelen sonuç ise bizim
   tarafımızdan, istek yapılan IP'ye iletilir.
  </para>
  <para>
   DNAT (PREROUTING) ise hedef adres üzerinde bir değişiklik yapılmak
   isteniyorsa kullanılır. Örneğin makinamıza gelen bir paketi iç/dış
   ağdaki bir başka makinaya yönlendirmek istiyorsak DNAT kısmı ile
   işlem yaparız. Paket bize gelir fakat bu işlem sonucunda paket hedef
   adres değiştirilmiş olarak yoluna devam eder. Şeffaf vekil, port
   yönlendirme, yük paylaşımı (load sharing) gibi işlemlerde bu kısmı
   kullanıyoruz.
  </para>
  <para>
   Bu işlemler için <option>-t nat</option> bağımsız değişkeni ile belirlediğimiz
   iptables'ın NAT ile ilgili tablosunu kullanıyoruz. O yüzden NAT işlemlerini
   kullanmak için ilk olarak <option>-t nat</option> bağımsız değişkenini
   kullanmamız gerekiyor. Daha sonra ise yapacağımız işlem cinsine göre
   <option>-A</option> komutundan sonra <literal>POSTROUTING</literal> ya da
   <literal>PREROUTING</literal>'i kullanıyoruz.
  </para>
  <para>
   Fakat burada dikkat edilmesi gereken nokta <literal>PREROUTING</literal>
   işleminde sadece giriş bağımsız değişkenlerinin, <literal>POSTROUTING</literal>    işleminde ise sadece çıkış bağımsız değişkenlerinin kullanılması gerektiğidir.
  </para>
  <sect2>
   <title><literal>PREROUTING</literal> işlemleri</title>
   <para>
    <option>-j [DNAT,REDIRECT]</option> pakete uygulanacak işlemi belirler.
    <command>DNAT:</command> Paketin hedef adresini değiştirir ve yollar.
    <command>REDIRECT:</command> Paketi hedef adresini değiştirmeden başka bir
    adrese iletir.  (Şeffaf vekil işlemleri)
   </para>
  </sect2>
  <sect2>
   <title><literal>POSTROUTING</literal> işlemleri</title>
   <para>
    <option>-j [SNAT, MASQUERADE]</option> pakete uygulanacak işlemi
    belirler. <command>SNAT:</command> Paketin kaynak adresini değiştirme
    işlemini gerçekleştirir. <command>MASQUERADE:</command> Pakete  maskeleme
    işlemini uygular. Bu işlem sonucunda paketin kaynak adresi ve kaynak portu
    yerine hedefe sunucu adresi ve boş bir port yollanır.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="iptables-usage_rules">
  <title>Zincir Uygulamaları</title>
  <para>
   Bu bölümde uygulamalarla iptables'da zincirlerin ve kuralların nasıl
   kullanıldığına değineceğim. Benim bir konuyu en iyi anlama yöntemim
   örnek üzerinde çalışmaktır o yüzden ben de örnekler üzerinde anlatacağım.
  </para>
  <sect2>
   <title>INPUT uygulaması</title>
<screen>iptables -t INPUT -p ! tcp --sport ! 21 -s ! 192.168.1.1/255.255.255.0 -d ! 192.168.0.1/255.255.255.0 -i ! ppp0 -j DROP
</screen>
   <para>
    Bu örnekte ilk olarak <option>-t INPUT</option> bağımsız değişkenini
    kullandık bu bize kuralın INPUT yani girişler üzerinde geçerli
    olacağını gösteriyor. Makinamıza bir paket geldiğinde çekirdek
    <literal>INPUT</literal> zincirine bakıyor. Eğer tanımladığımız bir
    kural bulursa uyguluyor yoksa devam ediyor.
  </para>
   <para>
    Daha sonra ise <option>-p ! tcp</option> bağımsız değişkeni kullanılmış.
    Bu ise uygulanacak kuralda <literal>tcp</literal> protokolü haricindeki
    protokolleri kullanacağımızı belirtiyor. Burada <literal>tcp</literal>
    yerine <literal>udp</literal>, <literal>icmp</literal> yada
    <literal>all</literal> kullanabilirdik. <literal>all</literal> kuralın
    tüm protokoller üzerinde etkili olacağını gösterir.
  </para>
   <para>
    <option>--sport 21</option> kuralda incelenecek hedef port'un 21
    olmaması gerekmektedir.
   </para>
   <para>
    <option>-s ! 192.168.1.1/255.255.255.255</option> bağımsız değişkeni ise
    kuralımızın uygulanması için kaynak adresin <literal>192.168.1.1</literal>
    olmaMAsı gerektiğini gösteriyor. Yani bir paket geldiğinde
    ip adresi <literal>192.168.1.1</literal> değilse bu kural uygulanacaktır.
    Burada ip adresi yerine doğrudan konak adresi de kullanabiliriz.
  </para>
   <para>
    <option>-d ! 192.168.0.0/255.255.255.0</option> bağımsız değişkeni kuralımızın
    hedef ip'sinin <literal>192.168.0.0</literal> bloğundaki ilk 253 adreslik
    küme hariç tüm adresler olduğunu gösteriyor. Kural, paketimiz bu adreslere
    gitmiyorsa  uygulanacak. Burada da yine ip adresi yerine doğrudan konak
    adresi de kullanabiliyoruz.
   </para>
   <para>
    <option>-i ! ppp0</option> kuralın uygulanması için paketin geldiği
    arabirimin <literal>ppp0</literal> olmaması gerektiğini gösteriyor.
    Burada <literal>ppp0</literal> yerine <literal>ppp+</literal> da
    kullanabiliyoruz bu bize <literal>ppp</literal> ile başlayan tüm
    arabirimlerde kuralın uygulanmasını sağlar.
  </para>
   <para>
    Ve son olarak <option>-j DROP</option> kullanmışız bu ise kuralın
    uygulanması sonucunda paketin engellenmesini sağlar. Burada
    kullanabileceğimiz bazı bağımsız değişkenler <literal>ALLOW</literal>,
    <literal>REJECT</literal>'dir. Burada <literal>ALLOW</literal>
    paketi kabul eder. <literal>REJECT</literal> paketi kabul etmez
    fakat geri sinyal gönderir. <literal>DROP</literal> ile
    <literal>REJECT</literal> arasındaki fark <literal>DROP</literal>
    paketi geçirmez fakat geri sinyal göndermez, <literal>REJECT</literal>
    ise <option>--reject-with</option> ile verilen sinyali gönderir.
  </para>
  </sect2>
  <sect2>
   <title>OUTPUT uygulaması</title>
<screen>iptables -t OUTPUT -p ! tcp --dport ! 21 -s ! 192.168.1.1/255.255.255.255 -d ! 192.168.0.1/255.255.255.255 -o ! ppp0 -j DROP
</screen>
   <para>
    Bu örnekte farklı olarak:
    <option>-t OUTPUT</option>, <option>-o ! ppp0</option> ve
    <option>--dport ! 21</option> bağımsız değişkenleri kullanılmıştır.
   </para>
   <para>
    Bu kural bize giden paketlerin:
    tcp protokolünde olmayan, hedef portu 21 olmayan, kaynak adresi
    <literal>192.168.1.1</literal> ve ağmaskesi (netmask)
    <literal>255.255.255.255</literal> olmayan, hedef adresi
    <literal>192.168.0.1</literal> ve ağmaskesi (netmask)
    <literal>255.255.255.255</literal> olmayan ve çıkış arabirimi
    <literal>ppp0</literal> olmayan paketlerin geçişinde
    <literal>DROP</literal> kuralının uygulanmasını yani geçememesini
    sağlamaktadır.
  </para>
  </sect2>
  <sect2>
   <title>NAT uygulamaları</title>
<screen># iptables -t nat -A POSTROUTING -o eth0 -j SNAT --to 192.168.1.1
</screen>
   <para>
    Kaynak adresi <literal>192.168.1.1</literal> yaparak paketi yollar.
   </para>
<screen># iptables -t nat -A POSTROUTING -o eth0 -j SNAT --to 192.168.1.1-192.168.1.3
</screen>
   <para>
    Kaynak adresi <literal>192.168.1.1</literal> ile
    <literal>192.168.1.3</literal> arasında bir değer yaparak yollar.
   </para>
<screen># iptables -t nat -A POSTROUTING -p tcp -o eth0 -j SNAT --to 192.168.1.1:1-1023
</screen>
   <para>
    Kaynak adresi <literal>192.168.1.1</literal>, hedef portu ise
    <literal>1</literal> ile <literal>1023</literal> arasında bir değere
    çevirip paketi yollar.
   </para>
<screen># iptables -t nat -A POSTROUTING -o ppp0 -j MASQUERADE
</screen>
   <para>
    Çıkış arabirimi <literal>ppp0</literal> olan paketlerde maskeleme yapar.
    Burada <literal>ppp+</literal> kullanmamız halinde tüm
    <literal>ppp</literal>'lerde işlem yapacaktır.
   </para>
<screen># iptables -t nat -A PREROUTING -i eth0 -j DNAT --to 192.168.1.1
</screen>
   <para>
    Hedef adresi <literal>192.168.1.1</literal> yaparak paketi yollar.
   </para>
<screen># iptables -t nat -A PREROUTING -i eth0 -j DNAT --to 192.168.1.1-192.168.1.3
</screen>
   <para>
    Hedef adresi <literal>192.168.1.1</literal> ile
    <literal>192.168.1.3</literal> arasında bir değer yaparak yollar.
   </para>
<screen># iptables -t nat -A PREROUTING -p tcp --dport 80 -i eth0 -j DNAT --to 192.168.1.1:8080
</screen>
   <para>
    <literal>eth0</literal> arabiriminden <literal>80</literal> portuna
     giden istekleri hedef adresini <literal>192.168.1.1</literal> ve hedef
     portu <literal>8080</literal> yaparak yollar.
   </para>
<screen># iptables -t nat -A PREROUTING -i eth1 -p tcp --dport 80 -j REDIRECT --to-port 3128
</screen>
   <para>
    <literal>eth1</literal> arabiriminden <literal>80</literal> portuna
    gelen tüm istekleri <literal>3128</literal> portuna yönlendirir.
   </para>
<screen># iptables -t nat -A POSTROUTING -s 192.168.1.0/24 -o eth1 -j SNAT --to 1.2.3.0/24
</screen>
   <para>
    <literal>eth1</literal> arabirimi ve <literal>192.168.1.x</literal>
    ağından gelen tüm istekleri kaynak ağı <literal>1.2.3.x</literal>
    olarak değiştirip yollar.
   </para>
<screen># iptables -t nat -A POSTROUTING -s 192.168.1.0/24 -o eth1 -j SNAT --to 1.2.3.0-1.2.3.4 --to 1.2.3.6-1.2.3.254
</screen>
   <para>
    <literal>eth1</literal> arabirimi ve <literal>192.168.1.x</literal>
    ağından gelen tüm istekleri kaynak ağı <literal>1.2.3.x</literal> ağında
    <literal>1.2.3.5</literal> hariç olmak üzere değiştirir ve yollar.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="iptables-usage_biblio">
  <title>Faydalanılan kaynaklar</title>
  <para>Bu belgenin yazılmasında:
   <itemizedlist>
    <listitem>
     <para>Linux Iptables-HOWTO</para>
    </listitem>
    <listitem>
     <para>
      Linux 2.4 <link xlink:href="http://netfilter.samba.org/unreliable-guides/NAT-HOWTO/index.html">NAT HOWTO</link>
     </para>
    </listitem>
   </itemizedlist>
   belgelerinden yararlanılmıştır.
  </para>
 </sect1>
</article>
