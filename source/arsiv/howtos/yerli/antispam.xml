<?xml version="1.0" encoding="UTF-8"?>
<!-- ********************************************************************
      yerli/antispam.xml
     ******************************************************************** -->
<article xml:id="antispam" xmlns="http://docbook.org/ns/docbook"
 xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:lang="tr">
 <info>
  <title>Posta Sunucuları için Spam Önleme Araçları</title>
  <author>
   <personname>
    <firstname>Emin</firstname>
    <surname>Can</surname>
   </personname>
  </author>
  <pubdate>Mart 2005</pubdate>
  <revhistory>
   <revision>
    <revnumber>1.1</revnumber>
    <date>20 Ocak 2007</date>
    <authorinitials>NBB</authorinitials>
    <revremark>Konuyla ilgisi olmadığından apt-get komutunun anlatıldığı
     ek bölüm silindi.</revremark>
   </revision>
   <revision>
    <revnumber>1.0</revnumber>
    <date>20 Mart 2005</date>
    <authorinitials>EC</authorinitials>
    <revremark>İlk sürüm</revremark>
   </revision>
  </revhistory>
  <abstract>
   <para>
    Bu belge; posta sunucular için istenmeyen e-postaları (spam) engelleme
    araçlarının kurulumunu, düzenlenmesini ve kullanımını anlatmaktadır.
    Günümüzde istenmeyen e-postalar birçok kurum için en büyük sorun haline
    gelmiştir. Bu belge sayesinde tamamen özgür yazılımlar kullanılarak
    istenmeyen postalardan kurtulabilirsiniz. Bu belgede kullanılan
    uygulamalar istenmeyen postaları %95 oranında azaltabilmektedir.
   </para>
  </abstract>
  <legalnotice>
   <title>Yasal Açıklamalar</title>
   <para>
    Bu belgenin, <emphasis>Posta Sunucuları için Spam Önleme
    Araçları</emphasis> 1.0 sürümünün <emphasis role="bold"> telif hakkı
    © 2005 <emphasis>Emin Can</emphasis></emphasis>'a aittir. Bu belgeyi,
    Free Software Foundation tarafından yayınlanmış bulunan GNU Özgür
    Belgeleme Lisansının 1.1 ya da daha sonraki sürümünün koşullarına bağlı
    kalarak kopyalayabilir, dağıtabilir ve/veya değiştirebilirsiniz. Bu
    Lisansın bir kopyasını <link xlink:href="&gfdl;">GNU Free Documentation
    License</link> başlıklı bölümde bulabilirsiniz.
   </para>
   <para>
    BU BELGE "ÜCRETSİZ" OLARAK RUHSATLANDIĞI İÇİN, İÇERDİĞİ BİLGİLER İÇİN
    İLGİLİ KANUNLARIN İZİN VERDİĞİ ÖLÇÜDE HERHANGİ BİR GARANTİ
    VERİLMEMEKTEDİR. AKSİ YAZILI OLARAK BELİRTİLMEDİĞİ MÜDDETÇE TELİF HAKKI
    SAHİPLERİ VE/VEYA BAŞKA ŞAHISLAR BELGEYİ "OLDUĞU GİBİ", AŞİKAR VEYA
    ZIMNEN, SATILABİLİRLİĞİ VEYA HERHANGİ BİR AMACA UYGUNLUĞU DA DAHİL OLMAK
    ÜZERE HİÇBİR GARANTİ VERMEKSİZİN DAĞITMAKTADIRLAR. BİLGİNİN KALİTESİ İLE
    İLGİLİ TÜM SORUNLAR SİZE AİTTİR. HERHANGİ BİR HATALI BİLGİDEN DOLAYI
    DOĞABİLECEK OLAN BÜTÜN SERVİS, TAMİR VEYA DÜZELTME MASRAFLARI SİZE AİTTİR.
   </para>
   <para>
    İLGİLİ KANUNUN İCBAR ETTİĞİ DURUMLAR VEYA YAZILI ANLAŞMA HARİCİNDE
    HERHANGİ BİR ŞEKİLDE TELİF HAKKI SAHİBİ VEYA YUKARIDA İZİN VERİLDİĞİ
    ŞEKİLDE BELGEYİ DEĞİŞTİREN VEYA YENİDEN DAĞITAN HERHANGİ BİR KİŞİ,
    BİLGİNİN KULLANIMI VEYA KULLANILAMAMASI (VEYA VERİ KAYBI OLUŞMASI, VERİNİN
    YANLIŞ HALE GELMESİ, SİZİN VEYA ÜÇÜNCÜ ŞAHISLARIN ZARARA UĞRAMASI VEYA
    BİLGİLERİN BAŞKA BİLGİLERLE UYUMSUZ OLMASI) YÜZÜNDEN OLUŞAN GENEL, ÖZEL,
    DOĞRUDAN YA DA DOLAYLI HERHANGİ BİR ZARARDAN, BÖYLE BİR TAZMİNAT TALEBİ
    TELİF HAKKI SAHİBİ VEYA İLGİLİ KİŞİYE BİLDİRİLMİŞ OLSA DAHİ, SORUMLU
    DEĞİLDİR.
   </para>
   <para>
    Tüm telif hakları aksi özellikle belirtilmediği sürece sahibine aittir.
    Belge içinde geçen herhangi bir terim, bir ticari isim ya da kuruma itibar
    kazandırma olarak algılanmamalıdır. Bir ürün ya da markanın kullanılmış
    olması ona onay verildiği anlamında görülmemelidir.
   </para>
  </legalnotice>
 </info>
 <para role="only.html">
  Ek - <link xlink:href="&gfdl;">GNU Free Documentation License</link>
 </para>
 <sect1 xml:id="antispam-giris">
  <title>Giriş</title>
  <para>
   İstenmeyen e-postaların e-posta trafiği içerisindeki oranı gün geçtikçe
   artmaktadır.Bunları engelleyecek birçok ticari yazılım olsa da Özgür
   yazılım bileşenleri ile hem daha istikrarlı, hem düşük maliyetli çözümler
   elde edilebilmektedir.
  </para>
  <para>
   Bu belgede anlatılan uygulamalar Sendmail Posta sunucusu kurulu Red Hat /
   Fedora Linux üzerinde uygulanmıştır.
  </para>
 </sect1>
 <sect1 xml:id="antispam-spamassasin">
  <title>Spamassasin</title>
  <para>
   Spamassassin kural tabanlı bir spam önleme aracıdır. Spamassassin 800 den
   fazla kuralı içinde barındırır. Bu kurallara göre bir postanın spam olup
   olmadığına karar verebilir. Esnek ve gelişmiş yazılımlama arabirimi
   sayesinde hemen hemen tüm posta sunucuları ile çalışabilr. Ayrıca birçok
   spam öneleme aracı ile de birlikte bir bütünlük içinde çalışabilir.Bunların
   başında Razor, Pyzor, Dcc gelir. Ayrıca RBL'leri (kara listeleri) kontrol
   edebilir ve MX kaydı sorgulaması yapabilir.
  </para>
  <para>
   Çalışma mantığı kısaca, iletinin başlık bilgisi, konu kısmı ve iletinin
   gövde kısmı spam denetiminden geçiriliyor. Denetim sırasında her bir adım
   için puanlar veriliyor. Örneğin iletinin konu kısmı boşsa veya büyük
   harfler içeriyorsa, ileti gövdesi çok fazla HTML etiketi içeriyorsa ya da
   ileti birden çok kişiye gönderilmişse gibi kriterler gözönünde
   bulunduruluyor. Bir de bunlara RBL ve MX kontrolu ekleniyor. Bunların
   sonucunda yapılan puanlama bizim belirlediğimiz değere göre spam ya da
   değil şeklinde sonuçlanıyor.
  </para>
  <sect2>
   <title>Spamassassin Kurulumu</title>
   <para>
    Kurulum için <link
    xlink:href="http://spamassassin.apache.org/downloads.cgi"/> adresinden
    en son sürümü indirebilirsiz. Paketler <filename>.tar.gz</filename>,
    <filename>.tar.bz2</filename>, <filename>.zip</filename> biçiminde temin
    edilebilir. Tar paketlerini RPM haline getirdikten sonrada kurulum yapmayı
    tercih edebilirsiniz. <filename>.tar.gz</filename> paketi için,
   </para>
<screen>rpmbuild -tb Mail-SpamAssassin-3.0.2.tar.gz</screen>
   <para><filename>.tar.bz2</filename> paketi için,</para>
<screen>rpmbuild -tb --define "srcext .bz2" Mail-SpamAssassin-3.0.2.tar.bz2</screen>
   <para>ile RPM paketini oluşturduktan sonra</para>
<screen>rpm -ivh <emphasis>paketismi</emphasis>.rpm</screen>
   <para>Ya da tar paketini açıp;</para>
<screen>tar -zxvf Mail-SpamAssassin-3.0.2.tar.gz</screen>
   <para>paketin açıldığı dizine geçip;</para>
<screen>perl Makefile.PL
make
su -c 'make install'
</screen>
   <para>
    komutları ile kurulumu gerçekleştirebilirsiniz.
    <userinput>spamassassin</userinput> Perl dilinde yazılmıştır.Bu yüzden
    sistemde <userinput>perl</userinput> kurulu olmalıdır. Perl modüllerinin
    bağımlılıklarıyla uğraşmak istemiyorsanız ve de sisteminizde
    <userinput>apt-get</userinput> kurulu ise:
   </para>
<screen>apt-get install spamassassin</screen>
   <para>
    komutuyla kurulumu yapabilirsiniz. Böylece paket bağımlılıkları ile
    uğraşmak zorunda kalmazsınız. <userinput>apt-get</userinput> gerekli olan
    tüm paketleri bağımlılıklarına bakarak sisteminize kurar. Kurulumdan hemen
    sonra <userinput>spamassassin</userinput>'i sınayabilirsiniz. Sınamak için
    <filename>ornek.txt</filename> adlı boş bir dosya oluşturun ve aşağıdaki
    komutu kullanın.
   </para>
<screen>spamassassin -t &lt; ornek.txt &gt; ornek.out</screen>
   <warning>
    <para>
     <userinput>spamassassin</userinput>'in 2.6x serisi bir sürümünü
     kullanıyorsanız <userinput>apt-get</userinput> kullanarak en çok 2.64
     sürümünü yükleyebilirsiniz. Eğer <userinput>spamassassin</userinput>'i
     3.x sürümüne yükseltmek istiyorsanız 2.64 sürümünü kaldırmanız gerekir:
    </para>
<screen>rpm -e spamassassin</screen>
    <para>
     Daha sonra <userinput>spamassassin</userinput>'in 3.02 sürümünü
     yükleyebilmek için ilk önce <filename>perl-mail-spamassassin</filename>
     paketini yüklemeleyiz:
    </para>
<screen>rpm -ivh perl-mail-spamassassin-3.0.2.1.i386.rpm
rpm -ivh spamassassin-3.0.2.1.i386.rpm
</screen>
   </warning>
   <para>
    Şimdi <userinput>spamassassin</userinput> hizmetini başlatabirsiniz. Eğer
    <userinput>perl</userinput> ile derleyerek kurmak istiyorsanız, yine işe
    2.6 sürümünü kaldırmakla başlayın. <userinput>spamassassin</userinput> 3.x
    sürümüyle bazı yeni yetenekler kazanmış ve 2.6x sürümünde kullandığı bazı
    özellikleri değiştirmiştir. Biz her iki sürümün ortak özelliklerinden de
    bahsetmeye çalışacağız. Daha ayrıntılı bilgi için <link
    xlink:href="http://spamassassin.apache.org/full/3.0.x/dist/UPGRADE"/>
    adresine bakın.
   </para>
   <para>
    Kurulum sonrasında <userinput>spamassassin</userinput>'in yapılandırma
    dosyası <filename>/etc/mail/spammassassin</filename> dizininin altında
    bulunur. Bu dosyanın adı <filename>local.cf</filename>'dir. Örnek bir
    <filename>local.cf</filename> oluşturmak için <link
    xlink:href="http://www.yrex.com/spam/spamconfig.php"/> adresinde bir
    yazılım mevcuttur. Yanlız bu yazılım
    <userinput>spamassassin</userinput>'in 2.5 sürümü için yapılandırma
    dosyası üretmektedir. Üretilen <filename>local.cf</filename> dosyaları
    2.6 ve 3.0 sürümlerinde doğru çalışmayabilir.
    <userinput>spamassassin</userinput>'in ayarlarını şu şekilde
    sınayabilirsiniz:
   </para>
<screen>spamassassin --lint -D</screen>
   <para>
    Bu komut <filename>local.cf</filename> dosyasındaki kabul edilmeyen
    girdileri bize listeler. Bu şekilde yapılandırmamızı sınayabiliriz.
    <userinput>-D</userinput> seçeneği hata ayıklama yapabilmeyi sağlar.
    Aşağıda <userinput>spamassassin</userinput>'in 3.x sürümü için bir
    <filename>local.cf</filename> örneği verilmiştir.
   </para>
<literallayout># Bu dosya 3.x versiyonu için düzenlenmiştir.
# Kullandığınız Spamassassin versiyonuna ve sisteminizin durumuna
# göre yapılması gereken değişiklikler olabilir.

# How many hits before a message is considered spam. required_hits 5.0
# Text to prepend to subject if rewrite_subject is used
rewrite_header Subject ****SPAM(_SCORE_)****
# Encapsulate spam in an attachment
report_safe 1
# Enable the Bayes system
use_bayes 1
# Enable Bayes auto-learning
bayes_auto_learn 1
# Enable or disable network checks
skip_rbl_checks 0
use_razor2 1
use_pyzor 1
# Allows users to create rules
allow_user_rules 1
# Mail using languages used in these country codes will not be marked
# as being possibly spam in a foreign language.
ok_languages all
# Mail using locales used in these country codes will not be marked
# as being possibly spam in a foreign language.
ok_locales all
</literallayout>
   <para>
    Şimdi yapılandırma dosyasından bazı satırları açıklamaya çalışalım:
   </para>
   <variablelist>
    <varlistentry>
     <term>
      <userinput>required_hits</userinput><literal> 5.0</literal>
     </term>
     <listitem>
      <para>
       Bir iletinin <literal>5.0</literal> puanı aştıktan sonra spam olarak
       değerlendirileceği anlamına gelir. Bu sayıyı arttırmak spam yakalama
       ihtimalini azaltır.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <userinput>rewrite_header</userinput>
      <literal> Subject ****SPAM(_SCORE_)****</literal>
     </term>
     <listitem>
      <para>
       Spam olarak işaretlenen iletinin konu kısmına spam skoru ile birlikte
       spam yazar. <literal>_SCORE_</literal> özelliği 3.0 sürümü ile birlikte
       gelmiştir. Bu özellik iletinin kaç puanla spam olarak işaretlendiğini
       belirtir. Daha önceki sürümlerde bu özellik kullanılamaz. Daha önceki
       sürümlerde bu satırın yerine
      </para>
<literallayout>rewrite_subject 1
subject_tag ****SPAM****
</literallayout>
      <para>satırları vardı.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <userinput>report_safe</userinput><literal> 1</literal>
     </term>
     <listitem>
      <para>
       Eğer ileti spam olarak işaretlenmişse, orjinal iletinin kullanıcıya
       bir eklenti olarak gönderilmesini sağlar. Bu özellik kullanıcının
       iletiyi doğrudan görmesini engeller.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><userinput>use_bayes</userinput><literal> 1</literal></term>
     <term><userinput>bayes_auto_learn</userinput><literal> 1</literal></term>
     <listitem>
      <para>
       Bu iki satır Bayes öğrenme yöntemi ile ilgili olan satırlardır. Temeli
       <link xlink:href="http://www.bayesian.org/bayesian/bayes.html">Thomas
       Bayesian</link> adlı matamatikçi tarafından geliştirilren bu yöntem,
       <emphasis>eğer spam olan bir ileti içerisindeki karakterler ve
       işaretler bir başka ileti içerisinde de geçiyorsa muhtemelen o ileti de
       spamdır</emphasis>, ilkesine göre çalışır. Bu yöntem daha önce gelen
       iletileri esas alarak, olasılık hesaplarıyla, bir sonraki iletinin spam
       olup olmadığını tahmin ederek işler.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><userinput>skip_rbl_checks</userinput><literal> 0</literal></term>
     <term><userinput>use_razor2</userinput><literal> 1</literal></term>
     <term><userinput>use_pyzor</userinput><literal> 1</literal></term>
     <listitem>
      <para>
       Bu satırlar daha sonra ayrıntılı olarak değineceğimiz,
       <userinput>spamassassin</userinput>'in <userinput>razor</userinput>,
       <userinput>pyzor</userinput> ve <userinput>dcc</userinput> gibi
       uygulamalarla bir bütünlük içinde çalışmasını sağlıyacak satırlardır.
      </para>
      <para>
       <userinput>skip_rbl_checks</userinput> değerini <literal>1</literal>
       yaparsanız karaliste (RBL) denetimi yapılmaz.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <userinput>allow_user_rules</userinput><literal> 1</literal>
     </term>
     <listitem>
      <para>
       Bu satır kullanıcıların kendilerine özel kurallar oluşturmalarına izin
       verir. Bu kurallar kullanıcıların ev dizini altındaki
       <filename>~/.spamassassin/user_prefs</filename> adlı dosyada
       tutulmalıdır. Kullanıcılara özel kurallar uygulamak istiyorsanız bu
       dosyayı muhakkak oluşturmanız gerekir. Bu dosyanın içeriği de
       <filename>local.cf</filename> dosyası gibi olacaktır.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><userinput>ok_languages</userinput><literal> all</literal></term>
     <term><userinput>ok_locales</userinput><literal> all</literal></term>
     <listitem>
      <para>
       Bu satırlarda ise belirtilen diller ve karakter kümeleri ile yazılmış
       iletilerin spam potansiyeli taşımadığını belirtiyoruz. Örneğin
       <literal>ok_languages turkish</literal> yazmış olsaydık, türkçe olan
       iletilerin spam olamayacağını belirtmiş olurduk. <literal>ok_locales
       chinese</literal> yazarsak çince karakter içeren iletiler spam değildir
       demiş oluruz. Öntanımlı olarak tüm diller ve karakter kümeleri
       seçilmiştir.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    Şimdi bazı ek özelliklerede göz atabiliriz. Bir alan adından gelen tüm
    iletileri spam olarak işaretlemek istiyorsak,
   </para>
<literallayout>blacklist_from *@spamcı.dom
blacklist_from *@budaspamcı.dom
</literallayout>
   <para>
    satırlarını eklemeliyiz. Benzer bir şekilde yukarıdaki adreslerden gelen
    iletilerin hiçbir zaman spam olarak değerlendirilmemelerini istiyorsak,
   </para>
<literallayout>whitelist_from *@spamcı.dom
whitelist_from *@budaspamcı.dom
</literallayout>
   <para>
    satırlarını eklemeliyiz. Bir iletinin içine kullanıcıları bilgilendirmek
    amacı ile ileti ekleyebiriz. Bu ileti özgün iletiye eklenir. Bunu için
    yine <filename>local.cf</filename> dosyasına aşağıdaki satırları eklememiz
    gerekir.
   </para>
<literallayout>clear_report_template
report bu ileti  spam olabilir.
report eger spam olmadıgını düsünüyorsanız
report destek@linuxegitim.com adresine iletiniz.
</literallayout>
   <para>
    Anlaşılacağı üzere <userinput>report</userinput> deyimi ekleyeceğimiz
    iletiyi satırlar halinde   oluşturmamızı sağlıyor. Bir de bu özelliğin
    etkin olabilmesi için yukarıdaki satırlara ek olarak
    <literal>report_safe 0</literal> satırı
   </para>
<literallayout>report_safe 1</literallayout>
   <para>haline getirilmelidir.</para>
  </sect2>
  <sect2>
   <title><literal>sa-learn</literal> Komutu ile Postaların
    Spamassassin'e Öğretilmesi</title>
   <para>
    Kullanıcılar <userinput>sa-learn</userinput> komutunu kullanarak gelen
    iletileri sisteme spam ya da spam değil (ham) diyerek tanıtabilirler. Bu
    özellik, o zamana kadar spamassasin'e tanıtılan iletileri temel alarak,
    daha sonra gelecek olan iletilerin değerlendirilmesinde yardımcı olur.
   </para>
<screen>sa-learn --ham "iletilerin_bulunduğu_dizin_veya_dosya"</screen>
   <para>
    Bu komut ile <userinput>spamassassin</userinput>'e, bu dizin ya da
    dosyada bulunan ileti ya da iletilerin spam olmadığını bildiriyoruz.
    Sisteme bildirdiğimiz iletilerin benzerleri alındığında spam olarak
    algılanmıyacaklardır.
   </para>
<screen>sa-learn --spam "iletilerin_bulunduğu_dizin_veya_dosya"</screen>
   <para>
    Bu komut ile <userinput>spamassassin</userinput>'e, bu dizin ya da
    dosyada bulunan ileti ya da iletilerin spam olduğunu bildiriyoruz.
    Sisteme bildirdiğimiz iletilerin benzerleri alındığında spam olarak
    algılanacaklardır.
   </para>
   <para>Örnek:</para>
<screen>$ <userinput>sa-learn --spam –mbox /root/evolution/local/Spam/mbox</userinput>
Learned from 6 message(s) (7 message(s) examined).
</screen>
   <para>
    <userinput>--box</userinput> seçeneği bu dosyanın bir
    <literal>mailbox</literal> olduğunu bildiriyor.
   </para>
<screen>$ <userinput>sa-learn --ham --mbox /root/evolution/local/Sent/mbox</userinput>
Learned from 42 message(s) (43 message(s) examined).
</screen>
   <para>
    Gerçekte spam olan fakat <userinput>spamassassin</userinput> tarafından
    bazı iletilerin spam olarak algılanmadığı ya da gerçekte spam olmayan
    fakat <userinput>spammassassin</userinput> tarafından spam olarak
    algılanan iletilerin varlığı durumunda kullanılması çok etkilidir. Belli
    bir zaman sonra, postalar <userinput>spamassassin</userinput>'e
    tanıdıldıkça <userinput>spamassassin</userinput> çok daha verimli bir
    şekilde çalışmaya başlıyacaktır.
   </para>
  </sect2>
  <sect2>
   <title>SpamAssassin ve ProcMail</title>
   <para>
    Procmail ve Maildrop Linux dünyasının en popüler eposta süzücüleridir.
    Eposta süzücüler daha önceden belirlediğimiz kriterlere göre epostalar
    teslim edilmeden önce onlar üzerinde işlem yapabilmemize olanak veririler.
    Örneğin, ileti boyutu bizim belirlediğimiz sınırın üzerinde ise
    reddedilsin ya da bir kullanıcıya gelen ileti bir başka kullanıcıya
    yönlendirilsin ya da iletinin gövde ya da konu kısmında kriterlere uyan
    anahtarlar varsa ileti silinsin gibi. Spamassassin bir iletiyi spam
    sınamasından geçirir fakat sonuç ne olursa olsun o ileti üzerinde kendi
    başına işlem yapamaz. Bunun için bir eposta süzücüsüne ihtiyaç duyar,
    dolayısıyla SpamAssassin'i bir eposta süzücüsüyle çalışacak şekilde
    yapılandırmalıyız. Bunun için ProcMail'i tercih ediyorum. Dilerseniz
    MailDrop ile de yapabilirsiniz. SpamAssassin'i ProcMail ile çalışacak
    şekilde ayarlamak için
  </para>
   <para>
    <filename>/etc/procmailrc</filename> dosyasının içine aşağıdaki satırları
    yazmanız gerekir.
  </para>
<literallayout>DROPPRIVS=yes
:0fw
| /usr/bin/spamassassin
</literallayout>
   <para>
    Bu satırlar ProcMail'e SpamAssasin'le birlikte çalışması gerektiğini
    söyleyecektir. Peki daha fazla ne yapabiliriz. Örneğin konu kısmında
    <literal>*****SPAM*****</literal> olan iletilerin tümünü silebiliriz.
    Bunun için aşağıdaki satırları <filename>procmailrc</filename> dosyasına
    eklemeliyiz.
  </para>
<literallayout>:0w
* ^Subject:.*\*\*\*\*SPAM\*\*\*\*\*
/dev/null
</literallayout>
   <para>
    Fakat bu durumda silinen iletileri geri getirmenin bir yolu yoktur. Bu
    yapılandırmanın tehlikeli olduğu açıktır, spam olmayan iletiler
    silinebileceği gibi ileti kayıplarına da sebep olabilir. Spam iletileri
    bir dosyaya da taşıyabiliriz bunun için <filename>procmailrc</filename>
    dosyasına,
  </para>
<literallayout>:0w
* ^Subject:.*\*\*\*\*SPAM\*\*\*\*\*
/Spam/mbox
</literallayout>
   <para>
    eklemeliyiz. Anadizin altında <filename>/Spam/mbox</filename> adlı spam
    dosyada spam iletileri biriktirebiliriz.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="antispam-razor">
  <title>Razor</title>
  <para>
   Kullanıcılara daha önce gelmiş olan spam iletileri merkezi Razor sunucusuna
   bildirmesi ve daha sonra gelen iletilerin önceki iletilerle
   karşılaştırılması esasına göre çalışır. Spam iletilerin gövde
   karakteristikleri, daha sonra gelen iletilerle karşılaştırılmak üzere Razor
   sunucusunda depolanır. Üzerinde Razor kurulu olan posta sunucusu bir ileti
   aldığında bu iletiyi Razar sunucusundan sorgular. Eğer ileti Razor
   sunucusunda daha önce spam olarak kaydedilmişse, ileti spam olarak
   işaretlenir. SpamAssassin'le birlikte kullanıldığında başarısı %95'e kadar
   çıkmaktadır.
  </para>
<screen>apt-get install razor</screen>
  <para>
   komutuyla kurabilirsiniz. Fakat apt-get kurulumunda bazı sorunlar
   çıkabileceğinden derlenerek kurulumu da anlatmaya çalışacağım. apt-get
   kurulumu ve kullanımı ile ilgili bir eki belgenin sonunda bulabilirsiniz.
  </para>
  <para><link
   xlink:href="http://sourceforge.net/project/showfiles.php?group_id=3978"/>
   adresinde <userinput>razor-agent</userinput> ve
   <userinput>razor-agent-sdk</userinput> tar paketlerinin en son sürümlerini
   bulabilirsiniz.
  </para>
  <para>
   Aşağıdakileri adım adım uygulayalım. Paketleri açalım ve derleyelim.
  </para>
<screen>tar -zxvf razor-agent-sdk-2.xx.tar.gz</screen>
  <para>
   Paket açıldıktan sonra açılan dizine geçelim ve sırayla,
  </para>
<screen>perl Makefile.PL
make
make test
make install
</screen>
  <para>
   komutlarını verelim, daha sonra <userinput>razor-agent</userinput> paketi
   için aynı adımları tekrarlayalım.
  </para>
<screen>tar -zxvf razor-agent-2.xx.tar.gz</screen>
  <para>
   Paket açıldıktan sonra açılan dizine geçelim ve sırayla,
  </para>
<screen>perl Makefile.PL
make
make test
make install
</screen>
  <para>
   komutlarını verelim. Derlenme sırasında çıkabilicek sorunlara karşı ilk
   önce sisteminizde gerekli perl modüllerinin kurulu olup olmadığına bakın.
   Kurulumdan hemen sonra Razor'un gerekli araçlarına sembolik bağları
   ataması için,
  </para>
<screen>razor-client</screen>
  <para>
   komutunu verin. Daha sonra Razor'un gerekli yapılandırma dosyalarını
   oluşturabilmesi için,
  </para>
<screen>razor-admin -create</screen>
  <para>
   komutunu kullanmalıyız. Bu komut o anki kullanıcının ev dizininde
   <filename>.razor</filename> adlı dizinin altında gerekli dosyaları
   oluşturur.
  </para>
  <para>
   Bir sonraki adımda ise Razor sunucusuna raporlama yapabilmesi için gerekli
   kullanıcı adı ve parolayı atıyoruz:
  </para>
<screen>razor-admin -register -user=mehmet -pass=linux</screen>
  <para>ya da</para>
<screen>razor-admin -register</screen>
  <para>
   komutunu kullanarak da kullanıcı adı ve parolanın rastgele üretilmesini
   temin edebiliriz. Kullanıcı adı ve parolalar kullanıcının evdizinindeki
   <filename>.razor/identity-username</filename> dosyasında saklanır.
   Kurulumdan sonra görmemiz gereken birkaç komut daha var. Bu komutlar
   iletilerimizi Razor sunucusuna raporlamak için kullanacağımız komutlardır.
   Kullanımları <userinput>sa-learn</userinput> komutuna çok benzemektedir. Bu
   komutlardan ilki <userinput>razor-report</userinput>'dur.
   <userinput>razor-report</userinput> ile sistemimizde bulunan spam iletileri
   Razor sunucusuna bildiririz:
  </para>
<screen>razor-report -d -M /root/evolution/local/Spam/mbox</screen>
  <para>
   <userinput>-d</userinput> seçeneği hata ayıklaması yapılabilmesini,
   <userinput>-M</userinput> seçeneği ise iletilerin
   <literal>mailbox</literal> türünde tutulduğunu belirtir. Spam olarak
   raporlayacağınız epostaların yönlendirilmemiş olmalarına dikkat edin. Çünkü
   yönlendirilmiş (forward) iletilerin içeriği ya da gövdesi değişeceğinden,
   bu raporlamanın yanlış yapılmasına sebep olur. Raporlamalar özgün
   iletilerle yapılmalıdır. Bir diğer komut,
   <userinput>razor-revoke</userinput> komutudur. Bu komut ise raporladığımız
   iletilerin <emphasis>spam olmadığını</emphasis> bildirir:
  </para>
<screen>razor-revoke -d -M /root/evolution/local/Spam/mbox</screen>
  <para>
   Son olarak, <userinput>razor-check</userinput> komutu, sunucumuzda bulunan
   iletilerin razor sunucusundaki veritabanında kayıtlı sonuçlara göre
   karşılaştırılmasına yarar. Bu karşılaştırmaya göre iletileri spam (1)
   ya da spamdeğil (0) değerleri varilir. Fakat
   <userinput>razor-check</userinput> komutunu bu şekilde kullanmak pratik
   değildir. Komutu bu haliyle kullanmak bir sonuç vermez. Razor iki farklı
   şekilde kullanılabilir. Birincisi Razor'un ProcMail ya da MailDrop gibi
   eposta süzücüleri ile doğrudan çalışacak şekilde yapılandırabiliriz. Ya da
   SpamAssassin ile bir bütünlük içinde çalışacak şekilde yapılandırabiliriz.
   SpamAssassin ile çalıştırmak çok daha pratik bir yoldur ve biz bu yolu
   tercih edeceğiz.
  </para>
  <sect2>
   <title>Razor ve SpamAssasin</title>
   <para>
    Razor'u Spamassasin ile bir bütünlük içinde çalıştırmak için
    <filename>/etc/mail/spamassassin/local.cf</filename> dosyasına şu satırı
    eklememiz yeterli olur.
  </para>
<literallayout>use_razor2 1</literallayout>
   <para>
    Önceki bölümde anlatılan Razor yapılandırmasını yaptıktan ve bu satırı
    ekledikten sonra <userinput>spamassassin</userinput>'i yeniden başlatın:
   </para>
<screen>/etc/init.d/spamassassin restart</screen>
   <para>
    ve daha sonra da ikisinin birlikte çalışmasını sınayalım:
   </para>
<screen>spamassassin --lint -D</screen>
   <para>
    Bu komutun çıktılarında razor sunucusuna bağlanıldığını görmeniz gerekir.
    Unutulmaması gereken bir başka nokta da, eğer sunucunuz bir güvenlik
    duvarı arkasında ise port 2703 (Razor2) ve port 7 (Echo) için gerekli
    ayarlamaları yapmayı unutmayın.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="antispam-pyzor">
  <title>Pyzor</title>
  <para>
   Hemen hemen Razor gibi çalışır. Python dilinde yazılmıştır ve GPL
   lisansına sahiptir. Veritabanının Razor kadar güçlü olduğu söylenemez.
   SpamAssassin hem Razorla hem de Pyzor'la aynı anda çalışabilir. Pyzor'un
   SpamAssassin'le birlikte çalışmasını sağlamak için <filename>/etc/mail/
   spamassassin/local.cf</filename> dosyasına aşağıdaki satırı eklemeliyiz:
  </para>
<literallayout>use_pyzor 1</literallayout>
  <para>Pyzoru kurmak için yine</para>
<screen>apt-get install pyzor</screen>
  <para>
   komutunu verebiliriz. Pyzor, Python dilinde yazıldığından dolayı bu dille
   ilgili bazı modüllere ihtiyaç duyar. <command>apt-get</command> bu
   bağımlılıkları dikkate alarak gerekli olan tüm paketleri kurar.
   Sisteminizde apt-get mevcut değilse , <link
   xlink:href="http://sourceforge.net/project/showfiles.php?group_id=50000"/>
   adresinden tar.bz2 biçiminde temin edebilirsiniz.
  </para>
<screen>tar -jxvf pyzor-0.4x-tar.bz2</screen>
  <para>
   komutunu kullanarak paketi açalım ve paketin açıldığı dizine geçelim.
  </para>
<screen>python setup.py build
python setup.py install
</screen>
  <para>
   komutlarını vererek Pyzor'u kuralım. Aşağıdaki komutu kullanarak dizinler
   için gerekli paylaşım izinlerini ayarlayalım.
  </para>
<screen>chmod -R a+rX /usr/share/doc/pyzor0.4x
chmod -R a+rX /usr/lib/python2.3/site-packages/pyzor
chmod -R a+rX /usr/bin/pyzor
chmod -R a+rX /usr/bin/pyzord
</screen>
  <para>
   dosya/dizin izinleri ayarlamalarını yaptıktan sonra bir de Pyzor'un
   çalışabilmesi için gerekli olan <userinput>python-gdbm</userinput>
   modülünün yüklü olup olmadığına bakalım.
  </para>
<screen>python -c 'import gdbm' &amp;&amp; echo 'gdbm bulundu'</screen>
  <para>
   sonuçta "gdbm bulundu" diye bir çıktı alırsanız
   <userinput>python-gdbm</userinput> modülü yüklü demektir. Eğer yüklü
   değilse <link xlink:href="http://rpm.pbone.net/"/> adresinde bir arama
   yapıp bulabilirsiniz.
  </para>
  <para>
   Komutların kullanımıda Razor'a benzemektedir.
   <userinput>Report</userinput> spam iletiler,
   <userinput>Whitelist</userinput> ise spam olmayan iletiler için
   kullanılmaktadır.Kurulumun şu ana kadar olan haliyle Pyzor sunucusundan
   spam denetimi yapılabilir. Daha fazla ayrıntı için kurulum yaptığımız
   dizindeki <filename>Docs</filename> dizinindeki
   <filename>usage.html</filename> dosyasına bakın. Şimdi
   <filename>local.cf</filename> içerisine <literal>use_pyzor 1</literal>
   yazdıysak, <userinput>spamassassin</userinput>'i yeniden başlatalım ve
   tekrar aşağıdaki komutu kullanalım.
  </para>
<screen>spamassassin --lint -D</screen>
  <para>
   komutun çıktısında
   <literal>pyzor got response :66.250.40.33:24441</literal> görüyorsanız
   Pyzor sorunsuz çalışıyor demektir. Pyzor 24441 no.lu portu kullanmaktadır.
  </para>
 </sect1>
 <sect1 xml:id="antispam-dcc">
  <title>DCC (Distributed Checksum Clearinghouse)</title>
  <para>
   Eğer Razor ve Pyzor yetmedi diyorsanız işte size bir tane daha
   sunucu/istemci tabanlı antispam aracı. Çalışma şekli Razor ve Pyzor'la
   aynı prensiplere dayanıyor. Alınan her ileti DCC sunucularındaki spam
   veritabanı ile karşılaştırılıyor. Sorgulama sonucuna göre iletinin spam
   olup olmadığına karar veriliyor. Razor ve Pyzor'la beraber aynı sunucda
   çalışabilir. Fakat unutulmamalı ki, tüm bu araçların aynı anda çalışması
   sunucu performansını ve internet bant genişliğini önemli ölçüde düşürür.
   Gelen herbir ileti için internetten bu uygulamaların sunucularına
   bağlanılacak ve sorgulama yapılacaktır. Genelde SpamasAssasin ile birlikte
   Razor kullanılmaktadır. Bu haliyle dahi başarı % 95 üzerinde
   gerçekleşmektedir. DCC sendmail ile doğrudan bütünleştirilebilir ya da
   ProcMail gibi bir eposta süzücü ile de çalıştırılabilir. Ama biz her
   zamanki gibi SpamAssassin ile birlikte çalıştıracağız. Kurulum için <link
   xlink:href="http://www.rhyolite.com/anti-spam/dcc/source/dcc.tar.Z"/>
   adresinden arşiv dosyasını indirin.
  </para>
<screen>tar -zxvf dcc-dccproc.tar.Z
cd dcc-dccproc-*
./configure --prefix=/usr
make
su -
make install
</screen>
  <para>
   kurulum bittikten sonraaşağıdaki komutu kullanarak DCC sunucularına
   bağlanabilirliğimizi sınıyoruz.
  </para>
<screen>cdcc info</screen>
  <para>
   komutun çıktısında aşağıdaki satırlara benzer satırlar görüyorsak sorun
   yok demektir.
  </para>
<screen>dcc1.dcc-servers.net,- RTT+0 ms anon
dcc2.dcc-servers.net,- RTT+0 ms anon
</screen>
  <para>
   Her zamanki gibi eğer güvenlik duvarı arkasından bağlanıyorsak DCC için
   gerekli ayarları yapmayı unutmamalıyız. DCC
   <literal>local UDP 1023</literal> ile <literal>remote UDP 6277</literal>
   portlarını kullanır. DCC bir çok ek yapılandırma seçeneğine sahiptir.
   Bunlarla ilgili daha ayrıntılı bilgi için <link
   xlink:href="http://www.rhyolite.com/anti-spam/dcc/"/> adresine bakınız.
   DCC'yi SpamAssassin ile birlikte çalıştırabilmek için
   <filename>/etc/mail/spamassassin/local.cf</filename> dosyasına şu satırı
   ekliyoruz.
  </para>
<literallayout>use_dcc 1</literallayout>
  <para>
   Daha sonra <userinput>spamassassin</userinput>'i yeniden başlatıyoruz.
   DCC'nin <userinput>spamassassin</userinput>'le çalışmasını sınamak için
  </para>
<screen>spamassassin --lint -D</screen>
  <para>
   komutun çıktısında DCC'nin sunucusuna bağlanabildiğini görmelisiniz.
  </para>
 </sect1>
 <sect1 xml:id="antispam-clamav">
  <title>Clamav Antivirus</title>
  <para>
   Clamav unix dünyası için tasarlanmış bir antivirüs yazılımıdır. Kolay
   kullanımı ve esnek yapısı sebebiyle çok tercih edilmektedir. Özdevimli
   virus veritabanı güncelleme özelliğine sahiptir. Otuzbinden fazla virus
   tanıyabilir. Birçok posta sunucusu ile bütünleşik çalışabilir.
   Özelliklerine kısaca bir göz atalım:
  </para>
  <simplelist>
   <member>GNU GPL lisansına sahiptir.</member>
   <member>POSIX Uyumludur.</member>
   <member>Erişim Tarama (Access Scaning) özelliğine sahiptir. (Yanlızca
    Linux ve Free BSD)</member>
   <member>Arşiv dosyalarını ve sıkışmış dosyaları tarayabilir.(Zip, rar,
    tar, gzip, bzip2, Ms OLE2, MS Cabinet Files, MS CHM, MS SZDD) </member>
   <member>Güçlü bir ileti tarayıcıya sahiptir. </member>
   <member>Güncellemesi kolaydır. </member>
  </simplelist>
  <para>
   Kuruluma gelince her zamanki gibi apt-get yöntemi ile kurmayı
   deneyebiliriz.
  </para>
<screen>apt-get install clamav</screen>
  <para>
   ya da rpm paketlerini temin edebiliriz. Bunun için
   <link xlink:href="http://www.clamav.net/binary.html"/> adresinden linux
   sürümümüz için uygun olan paketleri indirip kurulum yapabiliriz. Benim
   sistemim Fedora Core 2 olduğu için ben fc2 paketlerini
   <link xlink:href="http://atrpms.net/dist/fc2/clamav/"/> adresinden
   indirip kurdum.
  </para>
  <para>
   <screen>rpm -ivh clamav-devel-0.83-5.rhfc2.at.i386.rpm
rpm -ivh clamav-0.83-5.rhfc2.at.i386.rpm
</screen>
  </para>
  <para>
ya da herzamanki gibi <filename>tar.gz</filename> dosyasını indirip kaynak koddan derleyebiliriz. Derlemeden önce eğer Clamav'ı sisteme ilk kez kuruyorsak, sistemde <literal>clamav</literal> kullanıcısı ve grubunu oluşturmamız gerekir.
  </para>
<screen>groupadd clamav
useradd -g clamav -s /bin/false -c “Clamav Antivirus” clamav
</screen>
  <para>
   ve de tar dosyasını açarak kuruluma devam edelim.
  </para>
<screen>tar -zxvf clamav-0.83.tar.gz
cd clamav-0.83
./configure --prefix=/usr --sysconfdir=/etc --enable-milter
</screen>
  <para>
   <userinput>--sysconfdir=/etc</userinput> seçeneği yapılandırma dosyasının
   <filename>/etc</filename> altında oluşmasını sağlarken,
   <userinput>--enable-milter</userinput> seçeneği iletileri virus
   taramasından geçirmek için gerekli süzücünün derlenmesini sağlar. Artık
   derlemeye geçebiliriz.
  </para>
<screen>make
su -c "make install"
</screen>
  <para>
   Buraya kadar geldiysek paket sorunsuz kurulmuş demektir. Şimdi
   <userinput>clamav</userinput>'ı kullanmaya başlayabiliriz.
   <userinput>clamav</userinput> iki farklı kipte çalışabilir. Birincisi
   hizmet kipidir. Diğer hizmetleri çalıştırdığımız gibi
   <userinput>clamav</userinput>'ı da çalıştırabiliriz.
  </para>
<screen># <userinput>/etc/init.d/clamav start</userinput>
Starting clamd: [ OK ]
Starting freshclam: [ OK ]
</screen>
  <para>
   <userinput>clamav</userinput> hizmetinin çalışabilir dosyası
   <filename>/usr/sbin/clamd</filename>'dir. Hizmeti başlattığınızda
   antivirus veritabanını güncel tutmak için görevli olan
   <userinput>freshclam</userinput> hizmeti de başlatılır. Hizmetle ilgili
   tüm ayarlar <filename>/etc/clamd.conf</filename> dosyasında tutulur.
   <userinput>freshclam</userinput> hizmetinin ayarları bu dosyaya dahil
   değildir. <userinput>freshclam</userinput> ayarları
   <filename>/etc/freshclam.conf</filename> dosyasında tutulur. Peki
   dosyalarımızı virus taramasından geçirmek için ne yapmalıyız? Bunun içinde
   iki seçeneğe sahibiz. Birincisi <userinput>clamd</userinput> hizmetine
   bağlı olarak çalışan <userinput>clamdscan</userinput> bir diğeri ise
   hizmetten bağımsız olarak çalışabilen <userinput>clamscan</userinput>'dir.
   <userinput>clamdscan</userinput> ile tarama yapmak için
  </para>
<screen># <userinput>clamdscan /home --remove -v --stdout</userinput></screen>
  <para>
   Yukarıdaki örnekte <userinput>clamdscan</userinput> komutu ile
   <filename>/home</filename> dizinini virus taramasından geçiriyoruz.
   Unutmamalıyız ki, <userinput>clamd</userinput> hizmeti çalışmıyorsa bu
   komutu kullanamayız.
  </para>
  <para>
   Kullanılan seçeneklere gelince,
  </para>
  <para>
   <userinput>-–remove</userinput> seçeneği bir dosyada virus bulunursa o
   dosyayının silinmesini sağlar. Bu seçenek tehlikelidir, kullanırken çok
   dikkat edilmelidir. Bu seçeneğe benzer olarak
  </para>
  <para>
   <userinput>--move=/dizin</userinput> seçeneği de kullanılabilir. Virüslü
   dosyaları <filename>/dizin</filename> ile belirtilen dizine kopyalar. Bir
   anlamda ticari antiviruslerdeki karantina seçeneği gibidir. Dikkat
   edilirse Clean (Temizleme) gibi bir seçenek bulunmamaktadır.
   <emphasis>Clamav antivirus taradığı dosyaların ve iletilerin virüslerini
   temizleyemez</emphasis>. Sadece viruslü dosyaları silebilir ve
   taşıyabilir. Viruslü iletilerin ise teslim edilmesini ve gönderilmesini
   engeller.
  </para>
  <para>Diğer seçeneklerden,</para>
  <para>
   <userinput>--stdout</userinput> işlem sonucunun standart çıktının
   görüntülenmesini sağlarken <userinput>-v</userinput> çıktının daha
   ayrıntılı olmasını sağlar.
  </para>
  <para>
   Diğer komutumuz olan <userinput>clamscan</userinput> ise
   <userinput>clamd</userinput> hizmetine gerek duymaz. Hatta bu hizmet
   çalışırken bu komutu kullanmaya kalkarsanız muhtemelen <emphasis>virus
   veritabanı açılamadı</emphasis> gibi bir hata iletisi ile
   karşılaşabilirsiniz. Bu yüzden bu komutu kullanmadan önce
   <emphasis><userinput>clamd</userinput> hizmetini durdurun</emphasis>.
   <userinput>clamscan</userinput> komutunun sçenekleri
   <userinput>clamdscan</userinput> komutununkileden daha fazladır. Şimdi
   bunlara kısaca bir göz atalım.
  </para>
<screen># <userinput>clamscan /home -r --bell -i</userinput>
/home/ayhan/eicar: Eicar-Test-Signature FOUND
/home/eicar: Eicar-Test-Signature FOUND
/home/hakan/eicar: Eicar-Test-Signature FOUND
</screen>
  <para>
   Bir önceki örnekte olduğu gibi yine <filename>/home</filename> dizinini
   antivirus taramasından geçiriyoruz. Burada kullandığımız
   <userinput>-r</userinput> (recursive) seçeneği <filename>/home</filename>
   dizini altındaki tüm altdizinler ve dosyaların taranmasını sağlar.
   <userinput>--bell</userinput> seçeneği virus bulunduğunda ses
   çıkarılmasını sağlar. <userinput>-i</userinput> seçeneği ise sadece virus
   bulunan dosyaların yolunu belirtir. <userinput>remove</userinput> ve
   <userinput>move</userinput> seçenekleri <userinput>clamdscan</userinput>
   komutundaki gibidir. <userinput>clamscan</userinput> daha bir çok seçeneğe
   sahiptir. Bu seçenekler yardımıyla virus taramalarınızı sınırlayabirsiniz.
   Örneğin dosya türlerine ya da büyüklüklerine göre tarama yapabilir belli
   dosyaları bu taramalardan çıkarabilirsiniz. Daha fazla bilgi için
   <userinput>clamscan</userinput> kılavuz sayfasına bakın.
  </para>
  <sect2>
   <title>Clamav Veritabanının Güncellenmesi</title>
   <para>
    Her antivirus yazılımı gibi <userinput>clamav</userinput>'ın
    veritabanının da güncellenmesi gerekir. Güncelleme gerçekten çok
    kolaydır. Yukarıda bahsettiğimiz gibi güncellemeden sorumlu olan
    <userinput>freshclam</userinput> hizmeti <userinput>clamd</userinput>'ye
    bağlı olarak başlatılır. <userinput>freshclam</userinput> hizmeti her
    saat başı internetten güncelleme yapılıp yapılmadığına bakar. Eğer
    güncellemeyi komut satırından kendiniz yapmak istiyorsanız,
   </para>
<screen>freshclam -v</screen>
   <para>
    komutunu kullanmanız gerekir. Güncelleme ile ilgili tüm ayarlar
    <filename>/etc/freshcam.conf</filename> dosyasında tutulur.
   </para>
<literallayout>DatabaseDirectory /var/lib/clamav</literallayout>
   <para>
    Bu satır veritabanı dosyasını yolunu belirtir. Veritabanı yolunu
    değiştirmek için bu satırı kullanmalıyız.
   </para>
<literallayout># Number of database checks per day.
# Default: 12 (every two hours)
Checks 24
</literallayout>
   <para>
    Veritabanını güncellemesinin bir günde kaç defa deneneceğini bu
    satırlardan değiştirebiliriz. Öntanımlı olarak günde 24 kez deneme
    yapılır.
   </para>
<literallayout># Proxy settings
# Default: disabled
#HTTPProxyServer myproxy.com
#HTTPProxyPort 1234
#HTTPProxyUsername myusername
#HTTPProxyPassword mypass
</literallayout>
   <para>
    Eğer bir vekil sunucu arkasından internete çıkıyorsak, vekil ayarlarını
    bu satırları kullanarak etkin duruma getirebiliriz. Öntanımlı olarak
    vekil sunucu ayarları etkin değildir.
  </para>
  </sect2>
  <sect2>
   <title>On-Access Scan Özelliği</title>
   <para>
    Clamav’a Erişim Tarama (Access Scan) özelliği kazandırabilmek için daha
    önce adı Clamuko olan şimdi ise Dazuko olan çekirdek modülünü kullanmamız
    gerekir. Bu çekirdek modülünü kurduktan sonra dosyalarımız virüslere
    karşı zdevimli olarak korunmaya başlar. Dazuko bir anlamda ticari
    antiviruslerdeki özdevimli koruma işlevininin Clamav'la birlikte yerine
    getirilmesini sağlar. Modülün kurulumu ve çekirdeğe dahil edilmesi ile
    ilgili bilgiyi <link xlink:href="http://www.dazuko.org/"/> adresinden
    temin edebilirsiniz.
   </para>
   <para>
    Modül kurulduktan sonra <filename>/etc/clamd.conf</filename> dosyasına
    aşağıdaki satırları eklemelisiniz. Daha sonra
    <userinput>clamd</userinput> hizmetini yeniden başlatabilirsiniz. Aşağıda
    <literal>ClamukoIncludePath /</literal> değeri erişimin bu dizin için
    geçerli olduğunu belirtir. <literal>ClamukoExcludePath</literal> ile de
    bu özelliğin etkin olmadığı dizinleri belirtebiliriz. Örnek vermek
    gerekirse ekinde virüs taşıyan bir ileti aldınız bir iletiyi
    <filename>/</filename> dizini altında herhangi bir yere kaydetmeye
    kalkarsanız, <userinput>clamav</userinput> bu eki hemen siler. Fakat
    viruslü eki <userinput>/temp</userinput> dizini altına kaydetmeniz mümkün
    olabilir. Çünkü bu dizin için bu özellik devre dışı olduğu için
    <userinput>clamav</userinput> kopyalama işini dikkate almaz, böylece eki
    kaydedebilirsiniz.
   </para>
<literallayout>ClamukoScanOnAccess
ClamukoIncludePath /
ClamukoExcludePath /proc
ClamukoExcludePath /temp
</literallayout>
   <para>
    Daha ayrıntılı bilgileri <link xlink:href="http://www.clamav.net/"/> adresinden temin edebilirsiniz.
   </para>
  </sect2>
  <sect2>
   <title>Clamav-Milter(Clamav-Mail-Filter)</title>
   <para>
    Clamav ativirus yazılımının belki de en çok kullanılan özelliklerinden
    birisidir. Clamav bir çok posta sunucusu ile bütünleşik olarak
    çalışabilir. Biz Clamav'ı Sendmail'le birlikte çalışmaya ayarlayacağız.
    İnternette Clamav'ın Qmail ve Postfix ile nasıl bütünleştirileceğini
    anlatan birçok kaynak mevcuttur. Eğer girişte anlattığımız kurulum
    yöntemlerinden birini takip etmişseniz Clamav'la birlikte
    <userinput>clamav-milter</userinput>'da sisteminizde kurulu demektir. İlk
    olarak <filename>/etc/mail/sendmail.mc</filename> dosyasına aşağıdaki
    satırları ekleyelim.
   </para>
<literallayout>INPUT_MAIL_FILTER(clamav-milter,S=local:/var/run/clamav/clamav.sock, F=, T=S:4m;R:4m)dnl
define(confINPUT_MAIL_FILTERS, clamav-milter)
</literallayout>
   <para>
    Daha sonra <filename>sendmail.mc</filename> dosyasını
    <userinput>rebuild</userinput> yapalım ve uçbirimden
   </para>
<screen>clamav-milter -lo /var/run/clamav/clamav.sock</screen>
   <para>
    komutuyla <userinput>clamav-milter</userinput>'i çalıştıralım. Şimdi
    <userinput>sendmail</userinput>'i yeniden başlatalım.
   </para>
<screen># <userinput>/etc/init.d/sendmail restart</userinput>
Shutting down sendmail: [ OK ]
Shutting down sm-client: [ OK ]
Starting sendmail: [ OK ]
Starting sm-client: [ OK ]
</screen>
   <para>
    evet artık <userinput>clamav</userinput>, <userinput>sendmail</userinput>
    ile birlikte çalışıyor.
   </para>
  </sect2>
  <sect2>
   <title>Clamav’ın Sınanması</title>
   <para>
    Bir antivirus yazılımını sınamak için en iyi yöntem elimizde bir virüs
    olmasıdır. <link
    xlink:href="http://www.eicar.org/anti_virus_test_file.htm"/> adresinden
    virus olmasa da bizim işimizi görecek olan, tüm antivirüs yazılımlarının
    tanıdığı küçük dizgeyi temin edebilirsiniz. Sayfanın ortalarına doğru
    aşağıdaki garip dizgeyi göreceksiniz.
  </para>
<literallayout>X5O!P%@AP[4\PZX54(P^)7CC)7}$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*</literallayout>
   <para>
    Bu dizgeyi <filename>eicar.txt</filename> adı ile bir metin dosyasına
    kaydedin. Artık viruslü dosyamız hazır. İlk olarak sınamayı komut
    satırından yapabiliriz. Bunun için <filename>eicar.txt</filename>
    dosyasını <filename>/home</filename> dizini altına kaydedin ve aşağıdaki
    komutu kullanın:
   </para>
<screen><userinput>clamscan /home -r --bell -i</userinput>
/home/eicar: Eicar-Test-Signature FOUND
</screen>
   <para>
    Çıktı yukarıdaki gibi ise sorun yok demektir. Clamav-milter'i denemek
    için de kurulu olduğu sunucudan bir ileti göndermeye çalışın. Bu iletinin
    ekine de <filename>eicar.txt</filename> dosyasını ekleyin. Eğer doğru
    olarak çalışıyorsa iletinin virus taşıdığını ve iletinin
    gönderilemeyeceğini belirten bir ileti almanız gerekir. Clamav iletiyi
    gönderdiğiniz kişiye de bir uyarı iletisini özdevimli olarak yollar.
    Clamav iletilerin başlık bilgisini de değiştirir. <!--Open Relay
    konusunda örnek bir ileti başlığı verilmişti. Başlığı incelerseniz alt
    satırlara doğru clamav'ın eklentilerini görebilirsiniz.-->
   </para>
  </sect2>
 </sect1>
 <appendix xml:id="antispam-refs">
  <title>Kaynakça</title>
  <simplelist>
   <member>LinuxNet Sayı:2 Sayfa:22,23,24</member>
   <member>A.Murat Eren (seminer notları)</member>
   <member><link xlink:href="http://www.yrex.com/spam/spamconfig.php"/></member>
   <member><link xlink:href="http://seminer.linux.org.tr"/></member>
   <member><link xlink:href="http://spamassassin.apache.org/"/></member>
   <member><link xlink:href="http://www.bayesian.org/bayesian/bayes.html"/></member>
   <member><link xlink:href="http://www.spam.org"/></member>
   <member><link xlink:href="http://mail-abuse.org"/></member>
   <member><link xlink:href="http://www.orbl.org"/></member>
   <member><link xlink:href="http://www.ordb.org"/></member>
   <member><link xlink:href="http://www.monkeys.com"/></member>
   <member><link xlink:href="http://razor.sourceforge.net/"/></member>
   <member><link xlink:href="http://sourceforge.net/project/showfiles.php?group_id=3978"/></member>
   <member><link xlink:href="http://pyzor.sourceforge.net/"/></member>
   <member><link xlink:href="http://atrpms.net/dist/fc2/clamav/"/></member>
   <member><link xlink:href="http://www.clamav.net/binary.html"/></member>
   <member><link xlink:href="http://www.dazuko.org"/></member>
   <member><link xlink:href="http://www.eicar.org/anti_virus_test_file.htm"/></member>
  </simplelist>
 </appendix>
</article>
