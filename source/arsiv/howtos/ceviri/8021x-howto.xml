<?xml version="1.0" encoding="UTF-8"?>
<!-- ********************************************************************
       ceviri/8021x-howto.xml
     ******************************************************************** -->
<article xml:id="p8021x-howto" xmlns="http://docbook.org/ns/docbook"
 xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:lang="tr">
 <info>
  <title>802.1X Port Tabanlı Kimlik Kanıtlama NASIL</title>
  <titleabbrev>802.1X</titleabbrev>
  <authorgroup>
   <author>
    <personname>
     <firstname>Lars</firstname>
     <surname>Strand</surname>
    </personname>
   </author>
   <author role="editor">
    <personname>
     <firstname>Rick</firstname>
     <surname>Moen</surname>
    </personname>
    <contrib>0.0 taslağının dil düzenlemesi</contrib>
   </author>
   <author role="translator">
    <personname>
     <firstname>Olcay</firstname>
     <surname>Kabal</surname>
    </personname>
   </author>
  </authorgroup>
  <pubdate>2004-08-18</pubdate>
  <revhistory>
   <title>Bu çevirinin sürüm bilgileri:</title>
   <revision>
    <revnumber>1.0</revnumber>
    <date>Aralık 2005</date>
    <authorinitials>OK</authorinitials>
    <revremark>İlk çeviri</revremark>
   </revision>
  </revhistory>
  <revhistory>
   <title>Özgün belgenin sürüm bilgileri:</title>
   <revision>
    <revnumber>1.0</revnumber>
    <date>2004-10-18</date>
    <authorinitials>LKS</authorinitials>
    <revremark>TLDP tarafından gözden geçirilen İlk Sürüm.</revremark>
   </revision>
   <revision>
    <revnumber>0.2b</revnumber>
    <date>2004-10-13</date>
    <authorinitials>LKS</authorinitials>
    <revremark>Çeşitli güncellemeler. Dil gözden geçirmesi için Rick Moen'e
     teşekkür ederim. </revremark>
   </revision>
   <revision>
    <revnumber>0.0</revnumber>
    <date>2004-07-23</date>
    <authorinitials>LKS</authorinitials>
    <revremark>İlk taslak.</revremark>
   </revision>
  </revhistory>
  <abstract>
   <para>
    Bu belge arka-uç Kimlik Kanıtlama Sunucusu olarak
    <link xlink:href="http://www.freeradius.org">FreeRADIUS</link> ile
    birlikte <link xlink:href="http://www.open1x.org">Xsupplicant</link>
    kullanarak <link xlink:href="http://standards.ieee.org/getieee802/download/802.1X-2001.pdf">IEEE
    802.1X Port Tabanlı Ağ Erişim Denetimi</link>'ni kurmak ve kullanmak için
    yazılımı ve yordamları tanımlar.
   </para>
  </abstract>
  <copyright>
   <year>2004</year>
   <holder>Lars Strand - Özgün belge</holder>
  </copyright>
  <copyright>
   <year>2005</year>
   <holder>Olcay Kabal - Türkçe çeviri</holder>
  </copyright>
  <legalnotice>
   <title>Yasal Açıklamalar</title>
   <para>
    Bu belgenin, <emphasis>802.1X Port Tabanlı Kimlik Kanıtlama
    NASIL</emphasis> çevirisinin 1.0 sürümünün <emphasis role="bold">telif
    hakkı © 2005 <emphasis>Olcay Kabal</emphasis>'a</emphasis>, özgün
    İngilizce sürümünün  <emphasis role="bold">telif hakkı © 2004
    <emphasis>Lars Strand</emphasis>'a</emphasis> aittir. Bu belgeyi, Free
    Software Foundation tarafından yayınlanmış bulunan GNU Özgür Belgeleme
    Lisansının 1.2 ya da daha sonraki sürümünün koşullarına bağlı kalarak
    kopyalayabilir, dağıtabilir ve/veya değiştirebilirsiniz. Bu Lisansın bir
    kopyasını <link xlink:href="&gfdl;">GNU Free Documentation License</link>
    başlıklı bölümde bulabilirsiniz.
  </para>
   <para>
    BU BELGE "ÜCRETSİZ" OLARAK RUHSATLANDIĞI İÇİN, İÇERDİĞİ BİLGİLER İÇİN
    İLGİLİ KANUNLARIN İZİN VERDİĞİ ÖLÇÜDE HERHANGİ BİR GARANTİ
    VERİLMEMEKTEDİR. AKSİ YAZILI OLARAK BELİRTİLMEDİĞİ MÜDDETÇE TELİF HAKKI
    SAHİPLERİ VE/VEYA BAŞKA ŞAHISLAR BELGEYİ "OLDUĞU GİBİ", AŞİKAR VEYA
    ZIMNEN, SATILABİLİRLİĞİ VEYA HERHANGİ BİR AMACA UYGUNLUĞU DA DAHİL OLMAK
    ÜZERE HİÇBİR GARANTİ VERMEKSİZİN DAĞITMAKTADIRLAR. BİLGİNİN KALİTESİ İLE
    İLGİLİ TÜM SORUNLAR SİZE AİTTİR. HERHANGİ BİR HATALI BİLGİDEN DOLAYI
    DOĞABİLECEK OLAN BÜTÜN SERVİS, TAMİR VEYA DÜZELTME MASRAFLARI SİZE AİTTİR.
   </para>
   <para>
    İLGİLİ KANUNUN İCBAR ETTİĞİ DURUMLAR VEYA YAZILI ANLAŞMA HARİCİNDE
    HERHANGİ BİR ŞEKİLDE TELİF HAKKI SAHİBİ VEYA YUKARIDA İZİN VERİLDİĞİ
    ŞEKİLDE BELGEYİ DEĞİŞTİREN VEYA YENİDEN DAĞITAN HERHANGİ BİR KİŞİ,
    BİLGİNİN KULLANIMI VEYA KULLANILAMAMASI (VEYA VERİ KAYBI OLUŞMASI, VERİNİN
    YANLIŞ HALE GELMESİ, SİZİN VEYA ÜÇÜNCÜ ŞAHISLARIN ZARARA UĞRAMASI VEYA
    BİLGİLERİN BAŞKA BİLGİLERLE UYUMSUZ OLMASI) YÜZÜNDEN OLUŞAN GENEL, ÖZEL,
    DOĞRUDAN YA DA DOLAYLI HERHANGİ BİR ZARARDAN, BÖYLE BİR TAZMİNAT TALEBİ
    TELİF HAKKI SAHİBİ VEYA İLGİLİ KİŞİYE BİLDİRİLMİŞ OLSA DAHİ, SORUMLU
    DEĞİLDİR.
   </para>
   <para>
    Tüm telif hakları aksi özellikle belirtilmediği sürece sahibine aittir.
    Belge içinde geçen herhangi bir terim, bir ticari isim ya da kuruma itibar
    kazandırma olarak algılanmamalıdır. Bir ürün ya da markanın kullanılmış
    olması ona onay verildiği anlamında görülmemelidir.
   </para>
  </legalnotice>
 </info>
 <!-- ##################################################### -->
 <para role="only.html">
  Ek - <link xlink:href="&gfdl;">GNU Free Documentation License</link>
 </para>
 <sect1 xml:id="p8021x-howto-intro">
  <title>Giriş</title>
  <para>
   Bu belge kimlik kanıtlama yöntemi olarak PEAP'li (PEAP/MS-CHAPv2)
   <link xlink:href="http://www.open1x.org">Xsupplicant</link>'ı
   ve arka-uç Kimlik Kanıtlama Sunucusu olarak
   <link xlink:href="http://www.freeradius.org">FreeRADIUS</link>'u kullanarak
   <link xlink:href="http://standards.ieee.org/getieee802/download/802.1X-2001.pdf">IEEE
   802.1X Port Tabanlı Ağ Erişim Denetimi</link>'ni kurmak ve kullanmak için
   yazılımı ve yordamları tanımlar.
  </para>
  <para>
   Eğer PEAP'ten başka bir kimlik kanıtlama mekanizması tercih edilirse,
   örneğin, EAP-TLS veya EAP-TTLS, sadece az sayıda yapılandırma seçeneğinin
   değiştirilmesine gerek vardır. PEAP/MS-CHAPv2 de Windows XP SP1/Windows
   2000 SP3 tarafından desteklenir.
  </para>
  <!-- ################## -->
  <sect2 xml:id="p8021x-howto-what8021x">
   <title>802.1X nedir?</title>
   <para>
    802.1X-2001 standardı şudur:
   </para>
   <blockquote>
    <attribution>802.1X-2001, 1. sayfa</attribution>
    <para>
     <quote>Port tabanlı ağ erişim denetimi, noktadan-noktaya bağlantı
     özelliklerine sahip bir yerel ağ portuna takılan cihazların
     <emphasis>kimlik doğrulaması</emphasis> ve
     <emphasis>yetkilendirme</emphasis> için ve bu sayede kimlik doğrulaması
     ve yetkilendirmesi başarısız olması durumunda o portu
     <emphasis>erişimden koruyarak</emphasis> IEEE 802 yerel ağ altyapılarının
     fiziksel erişim özelliklerinin kullanımına olanak sağlar. Bu bağlamda bir
     port, yerel ağ altyapısına ekli tekil bir noktadır.</quote>
    </para>
   </blockquote>
   <figure xml:id="p8021x-howto-p8021x">
    <title>802.1X</title>
    <mediaobject>
     <imageobject>
      <imagedata fileref="p8021x/8021X-Overview.png" format="PNG" width="550" align="center" scalefit="1"/>
     </imageobject>
     <caption>
      <para>
       Bir kablosuz düğümün diğer yerel ağ kaynaklarına erişebilmesi için
       kimlik kanıtlaması yapılmalıdır.
      </para>
     </caption>
    </mediaobject>
   </figure>
   <orderedlist>
    <listitem>
     <para>
      Yeni bir telsiz düğüm (TD) bir yerel ağ kaynağına erişim isterse,
      erişim noktası (EN) TD'nin kimliğini sorar.<emphasis>TD'nin kimliği
      doğrulanmadan EAP'den başka hiçbir akışa izin verilmez ("port"
      kapalıdır).</emphasis>
     </para>
     <para>
      Kimlik kanıtlaması isteyen telsiz düğüme genellikle
      <emphasis>İstemci</emphasis> denir, aslında telsiz düğümün bir İstemci
      <emphasis>içerdiğini</emphasis> söylemek daha doğru olur. İstemci güven
      ortamını oluşturacak Kimlik Kanıtlayıcı veriye cevap  vermekle
      sorumludur. Aynısı erişim noktası için de geçerlidir; <emphasis>Kimlik
      Kanıtlayıcı</emphasis> erişim noktası değildir. Şöyle ki, erişim noktası
      bir Kimlik Kanıtlayıcı içerir ama Kimlik Kanıtlayıcı erişim noktasında
      olmasa da olur; harici bir unsur da olabilir.
     </para>
     <para>
      Kimlik kanıtlama için kullanılan EAP ilk olarak çevirmeli PPP için
      kullanıldı. Kimlik olarak kullanıcı adı ile birlikte PAP veya CHAP
      [<link xlink:href="http://www.ietf.org/rfc/rfc1994.txt">RFC1994</link>]
      tarafından doğrulaması yapılacak kullanıcı parolası kullanılır. Kimlik
      açık (şifrelenmemiş) gönderildiği için kötü niyetli bir dinleyici
      kullanıcının kimliğini öğrenebilir. O zaman "Kimlik saklama" (Identity
      hiding) kullanılır; şifrelenmiş TLS tüneli kurulmadan gerçek kimlik
      gönderilmez.
     </para>
    </listitem>
    <listitem>
     <para>
      Kimlik gönderildikten sonra kimlik kanıtlama süreci başlar. İstemci ve
      Kimlik Kanıtlayıcı arasında kullanılan protokol EAP'tır; veya daha doğru
      olarak EAP kaplamalı yerel ağ'dır (EAPOL). Kimlik Kanıtlayıcı EAP
      iletilerini RADIUS biçimine yeniden dönüştürür ve onları Kimlik
      Kanıtlayıcı Sunucuya aktarır.
     </para>
     <para>
      Kimlik kanıtlama süresince, Kimlik Kanıtlayıcı sadece İstemci ve Kimlik
      Kanıtlama Sunucusu arasında paketleri nakleder. Kimlik kanıtlama süreci
      bittiğinde Kimlik Kanıtlama Sunucusu başarı (veya doğrulama başarısız
      olursa, başarısızlık) iletisi gönderir ve <emphasis>Kimlik Kanıtlayıcı
      "port"'u İstemci için açar.</emphasis>
     </para>
    </listitem>
    <listitem>
     <para>
      Başarılı bir kimlik kanıtlamadan sonra İstemci diğer yerel ağ
      kaynaklarına/Internete erişmeye hak kazanır.
     </para>
    </listitem>
   </orderedlist>
   <para>
    Açıklama için <xref linkend="p8021x-howto-p8021x"/>'e bakınız.
   </para>
   <para>
    Neden "port" tabanlı kimlik kanıtlama deniyor? Çünkü, Kimlik Kanıtlayıcı
    <emphasis>denetimli</emphasis> ve <emphasis>denetimsiz</emphasis>
    portlarla uğraşır. Denetimli port da denetimsiz port da mantıksal
    varlıklardır (sanal portlar); ama yerel ağa aynı fiziksel bağlantıyı
    kullanırlar (aynı bağlama noktası).
   </para>
   <figure xml:id="p8021x-howto-port">
    <title>802.1X denetimli/denetimsiz port</title>
    <mediaobject>
     <imageobject>
      <imagedata fileref="p8021x/8021X-Ports.png" format="PNG" width="550" align="center" scalefit="1"/>
     </imageobject>
     <caption>
      <para>Denetimli portun yetkilendirme durumu.</para>
     </caption>
    </mediaobject>
   </figure>
   <para>
    Kimlik kanıtlama öncesinde sadece denetimsiz port <quote>açıktır</quote>.
    Sadece EAPOL trafiğine izin verilir;
    <xref linkend="p8021x-howto-port"/>'de Authenticator System 1'e bakınız.
    İstemci kimliği kanıtlandıktan sonra, denetimli port açılır ve diğer yerel
    ağ kaynaklarına erişim hakkı verilir;
    <xref linkend="p8021x-howto-port"/>'de Authenticator System 2'ye bakınız.
   </para>
   <para>
    802.1X, yeni IEEE telsiz standardı 802.11i'de önemli bir rol oynar.
   </para>
  </sect2>
  <sect2 xml:id="p8021x-howto-what80211i">
   <title>802.11i nedir?</title>
   <sect3 xml:id="p8021x-howto-WEP">
    <title>WEP</title>
    <para>
     Asıl 802.11 standartının parçası olan Wired Equivalent Privacy (WEP)
     güvenilirlik sağlamalıydı. Maalesef WEP güçsüz tasarlanmıştır ve kolayca
     kırılır. Kimlik kanıtlama mekanizması yoktur, erişim denetimi için sadece
     zayıf bir form mevcuttur (iletişim kurmak için paylaşımlı anahtara sahip
     olunmalıdır). Daha fazlasını <link
     xlink:href="http://www.isaac.cs.berkeley.edu/isaac/wep-faq.html"
     >buradan</link> okuyun.
    </para>
    <para>
     WEP'in bozuk güvenliğine cevap olarak, IEEE 802.11i olarak isimlendirilen
     yeni bir telsiz güvenlik standartı ile gelmiştir. 802.1X bu yeni
     standartta önemli bir rol oynar.
    </para>
   </sect3>
   <sect3 xml:id="p8021x-howto-RSN">
    <title>802.11i</title>
    <para>
     Haziran 2004'te onaylanan yeni güvenlik standartı, 802.11i tüm WEP
     zayıflıklarını onarır. Üç ana kategoriye ayrılır:
    </para>
    <orderedlist>
     <listitem>
      <para>
       <emphasis>Geçici Anahtar Tümleşikliği Protokolü</emphasis> (Temporary
       Key Integrity Protocol TKIP) tüm WEP zayıflıklarını onaran kısa-vadeli
       bir çözümdür. TKIP eski 802.11 ekipmanlarıyla kullanılabilir (sürücü/
       aygıt yazılımı güncellemesinden sonra) ve tümleşiklik ile güvenilirlik
       sağlar.
      </para>
     </listitem>
     <listitem>
      <para>
       <emphasis>CBC-MAC ile Sayaç Modu Protokolü</emphasis> (Counter Mode
       with CBC-MAC Protocol CCMP) [<link
       xlink:href="http://www.ietf.org/rfc/rfc3610.txt">RFC2610</link>]
       tepeden tırnağa yeni bir protokoldür. Şifreleme algoritması olarak AES
       [<link xlink:href="http://csrc.nist.gov/publications/fips/fips197/fips-197.pdf"
       >FIPS 197</link>] kullanır ve bu RC4'ten (WEP ve TKIP'ta kullanıldı)
       daha yoğun işlemci kullandığından yeni 802.11 donanımına ihtiyaç
       duyulabilir.  Bazı sürücüler yazılımda CCMP'yi uygulayabilirler. CCMP
       tümleşiklik ve güvenilirlik sağlar.
      </para>
     </listitem>
     <listitem>
      <para>
       <emphasis>802.1X Port Tabanlı Ağ Erişim Denetimi:</emphasis> TKIP veya
       CCMP kullanılırken kimlik kanıtlama için 802.1X kullanılır.
      </para>
     </listitem>
    </orderedlist>
    <para>
     Ek olarak, seçimlik bir şifreleme yöntemi olan "Wireless Robust
     Authentication Protocol" (WRAP) CCMP'nin yerine kullanılabilir. WRAP,
     802.11i için AES-tabanlı asıl teklifti, ama sahiplik yükümlülükleriyle
     sorun yaşanınca CCMP ile değiştirildi. WRAP için destek seçime bağlıdır,
     ama 802.11i'de CCMP desteği zorunludur.
    </para>
    <para>
     802.11i bir sonraki kısımda tanımlanan genişletilmiş bir anahtar türetme/
     yönetim işlevine sahiptir.
    </para>
   </sect3>
   <sect3 xml:id="p8021x-howto-Key">
    <title>Anahtar Yönetimi</title>
    <sect4 xml:id="p8021x-howto-DynKey">
     <title>Dinamik anahtar değişimi ve yönetimi</title>
     <para>
      Şifreleme ve tümleşiklik algoritmaları kullanarak bir güvenlik kuralları
      bütünü oluşturmak için anahtarlar kullanılmalıdır. Neyse ki 802.11i bir
      anahtar türetme/yönetim tarzını içerir. Aşağıdaki şekle bakınız.
     </para>
     <figure xml:id="p8021x-howto-keyman">
      <title>802.1X Anahtar Yönetimi</title>
      <mediaobject>
       <imageobject>
        <imagedata fileref="p8021x/8021X-KeyManagement.png" format="PNG" width="550" align="center" scalefit="1"/>
       </imageobject>
       <caption>
        <para>802.11i'de anahtar yönetimi ve dağıtımı.</para>
       </caption>
      </mediaobject>
     </figure>
     <orderedlist>
      <listitem>
       <para>
        İstemci (WN) ve Kimlik Kanıtlama Sunucusu (AS) doğrulama yaparken
        AS'den gönderilen doğrulamanın başarılı olduğunu söyleyen son
        iletilerden biri bir <emphasis>Ana Anahtar</emphasis>'dır (MK - Master
        Key). Gönderildikren sonra MK sadece WN ve AS tarafından bilinir. MK,
        WN ve AS arasındaki bu oturuma bağlıdır.
       </para>
      </listitem>
      <listitem>
       <para>
        Hem WN hem AS, MK'dan bir <emphasis>Ana Oturum Anahtarı</emphasis>
        (PMK - Pairwise Master Key) üretir.
       </para>
      </listitem>
      <listitem>
       <para>
        O zaman PMK AS'den Kimlik Kanıtlayıcıya (AP) taşınır. PMK'yi sadece WN
        ve AS türetebilir, bunun yanında AP, AS'nin yerine erişim-denetim
        kararları verebilir. PMK, WN ve AP arasındaki bu oturuma bağlı yepyeni
        bir simetrik anahtardır.
       </para>
      </listitem>
      <listitem>
       <para>
        <emphasis>Ana Oturum Anahtarını</emphasis> türetmek, bağlamak ve
        doğrulamak için WN ve AP arasında PMK ve 4 yönlü el sıkışma
        kullanılır. PTK işletimsel anahtarlar topluluğudur:
       </para>
       <itemizedlist>
        <listitem>
         <para>
          <emphasis>Anahtar Doğrulama Anahtarı</emphasis> (KCK - Key
          Confirmation Key ), isminden de anlaşılacağı üzere PMK'ye sahipliği
          kanıtlamak ve PMK'yi AP'ye bağlamak için kullanılır.
         </para>
        </listitem>
        <listitem>
         <para>
          <emphasis>Anahtar Şifreleme Anahtarı</emphasis> (KEK - Key
          Encryption Key), <emphasis>Grup Geçiş Anahtarı</emphasis> (GTK -
          Group Transient Key) dağıtımı için kullanılır. Aşağıda
          tanımlanmıştır.
         </para>
        </listitem>
        <listitem>
         <para>
          <emphasis>Geçici Anahtar 1 ve 2</emphasis> (TK1/TK2 - Temporal
          Key 1 &amp; 2) şifreleme için kullanılır. TK1 ve TK2'nin kullanımı
          şifreleme türüne özeldir.
         </para>
        </listitem>
       </itemizedlist>
       <para>
        Ana Oturum Anahtarına göz atmak için
        <xref linkend="p8021x-howto-pkh"/>'e bakınız.
       </para>
      </listitem>
      <listitem>
       <para>
        KEK ve 4 yönlü grup elşıkışması AS'den WN'ye <emphasis>Grup Geçiş
        Anahtarı</emphasis>nı (GTK) göndermek için kullanılır. GTK aynı
        Kimlik kanıtlayıcıya bağlı tüm İstemciler (WN'ler) arasında paylaşılan
        bir anahtardır ve çoğa gönderimli iletişim akışını güvenli kılmak için
        kullanılır.
       </para>
      </listitem>
     </orderedlist>
     <figure xml:id="p8021x-howto-pkh">
      <title>Ana Oturum Anahtarı (PMK) Düzeni</title>
      <mediaobject>
       <imageobject>
        <imagedata fileref="p8021x/8021X-KeyHierarchy.png" format="PNG" width="550" align="center" scalefit="1"/>
       </imageobject>
       <caption>
        <para>Ana Oturum Anahtarı Düzeni</para>
       </caption>
      </mediaobject>
     </figure>
    </sect4>
    <sect4 xml:id="p8021x-howto-PSK">
     <title>Önpaylaşımlı Anahtar</title>
     <para>
      Küçük çalışma odaları / evdeki çalışma odaları, amaca-yönelik ağlar
      veya ev kullanımı için Önpaylaşımlı Anahtar (PSK - Pre-Shared Key)
      kullanılabilir. PSK kullanırken tüm 802.1X kimlik kanıtlama sürecinde
      birşeyler eksik olur. EAP (ve RADIUS) kullanan WPA'ya "Kurumsal WPA"
      veya sadece "WPA" dendiği gibi buna da "Kişisel WPA" (WPA-PSK)
      denmiştir.
     </para>
     <para>
      [<link xlink:href="http://www.ietf.org/rfc/rfc2898.txt"
      >RFC2898</link>]'den PBKDFv2 kullanılarak verilen bir paroladan 256
      bitlik PSK üretilir ve yukarıdaki anahtar yönetim usulünde tanımlandığı
      gibi Ana Anahtar (MK) olarak kullanılır. Tüm ağ için tek bir PSK
      (emniyetsiz) veya her İstemciye bir PSK olabilir (daha emniyetli).
     </para>
    </sect4>
   </sect3>
   <sect3 xml:id="p8021x-howto-WPA">
    <title>TSN (WPA) / RSN (WPA2)</title>
    <para>
     Endüstrinin 802.11i standartının tamamlanmasını bekleyecek kadar vakti
     yoktu. WEP sorunlarının hemen onarılmasını istediler. <link
     xlink:href="http://www.wi-fi.org/">Wi-Fi Alliance</link> baskıyı
     hissetti, standardın (3. taslağa dayanan) "bir anlık görüntüsünü" aldı ve
     ona <emphasis>Wi-Fi Korumalı Erişim</emphasis> (WPA - Wi-Fi Protected
     Access) dedi. Tek gereksinim mevcut 802.11 ekipmanının WPA ile
     kullanılabilmesiydi, dolayısıyla WPA temelde TKIP + 802.1X'tir.
    </para>
    <para>
     WPA uzun vadeli çözüm değildir. <emphasis>Çok Güvenli Ağ</emphasis> (RSN
     - Robust Secure Network) elde etmek için donanım CCMP'yi desteklemeli ve
     kullanmalıdır. RSN temel olarak CCMP + 802.1X'tir.
    </para>
    <para>
     CCMP'nin yerine TKIP kullanan RSN'ye
     <emphasis>Geçiş Güvenlik Ağı</emphasis>'da(TSN - Transition Security
     Network) denir. RSN'ye WPA2 de denir, bu sayede piyasanın aklı karışmaz.
    </para>
    <para>Aklınız mı karıştı? </para>
    <para>Temel olarak:</para>
    <simplelist>
     <member>TSN = TKIP + 802.1X = WPA(1)</member>
     <member>RSN = CCMP + 802.1X = WPA2</member>
    </simplelist>
    <para>
     Önceki bölümde tanımlandığı gibi bunlar kendi anahtar yönetimleri
     ile gelir.
    </para>
   </sect3>
  </sect2>
  <sect2 xml:id="p8021x-howto-EAP">
   <title>EAP nedir?</title>
   <para>
    <emphasis>Genişletilebilir Kimlik Kanıtlama Protokolü</emphasis>
    (EAP - Extensible Authentication Protocol)
    [<link xlink:href="http://www.ietf.org/rfc/rfc3748.txt">RFC 3748</link>]
    kimlik kanıtlama için sadece iyileştirilmiş bir iletim protokolüdür,
    kendisi bir kimlik kanıtlama yöntemi değildir:
   </para>
   <blockquote>
    <attribution>RFC 3748, 3. sayfa</attribution>
    <para>
     <quote>EAP çoklu kimlik kanıtlama yöntemlerini destekleyen bir kimlik
     kanıtlama çalışma çerçevesidir. EAP tipik olarak Point-to-Point
     Protokol(PPP) veya IEEE 802 gibi doğrudan veri iletim katmanları üzerinde
     IP'ye ihtiyaç duymadan çalışır. EAP çift eleme ve tekrar iletim için
     kendi desteğini sağlar, ama daha düşük seviyeli garantilere güvenmek
     durumundadır. EAP'nin kendisinde serpiştirme desteklenmez; bununla
     birlikte, başka bazı EAP yöntemleri bunu destekleyebilir.</quote>
    </para>
   </blockquote>
  </sect2>
  <sect2 xml:id="p8021x-howto-auth">
   <title>EAP kimlik kanıtlama yöntemleri</title>
   <para>
    802.1X EAP kullanıyor olduğundan çok farklı kimlik kanıtlama planları
    eklenebilir; akıllı kartlar, Kerberos, açık anahtar, bir kerelik parolalar
    ve diğerleri dahil.
   </para>
   <para>
    En çok kullanılan EAP kimlik kanıtlama mekanizmalarından  bazıları aşağıda
    listelenmiştir. Kayıtlı EAP kimlik kanıtlama  türlerinin tam bir listesi
    IANA'da <link xlink:href="http://www.iana.org/assignments/eap-numbers"/>
    adresinde mevcuttur:
   </para>
   <warning>
    <para>
     Tüm kimlik kanıtlama mekanizmaları güvenlidir denemez!
    </para>
   </warning>
   <itemizedlist>
    <listitem>
     <para>
      <emphasis role="bold">EAP-MD5:</emphasis> MD5'li Kimlik Kanıtaması
      kullanıcı adı/parolaya gereksinim duyar ve PPP CHAP protokolünün
      [<link xlink:href="http://www.ietf.org/rfc/rfc1994.txt">RFC1994</link>]
      eşdeğeridir. Bu yöntem sözlük saldırısı direnci, karşılıklı kimlik
      kanıtlama veya anahtar türetimi içermez ve telsiz kimlik kanıtlama
      ortamında az kullanılır.
     </para>
    </listitem>
    <listitem>
     <para>
      <emphasis role="bold">Hafif EAP (LEAP):</emphasis> Kimlik kanıtlama için
      Kimlik Kanıtlama Sunucusuna (RADIUS) bir kullanıcı adı/parola çifti
      gönderilir. Leap, Cisco tarafından geliştirilmiş müseccel bir
      protokoldür ve güvenli olduğu düşünülmez. Cisco LEAP'i PEAP niyetine
      sunmuştur. Yayınlanmış bir standarta en yakın şey <link
      xlink:href="http://lists.cistron.nl/pipermail/cistron-radius/2001-September/002042.html"
      >burada</link> bulunabilir.
     </para>
    </listitem>
    <listitem>
     <para>
      <emphasis role="bold">EAP-TLS:</emphasis> EAP ile İstemci ve Kimlik
      Kanıtlama Sunucusu arasında bir TLS oturumu oluşturur. Hem sunucu hem
      istemci(ler) geçerli bir sertifikaya (x509) ve bununla birlikte bir
      PKI'ya ihtiyaç duyar. bu yöntem her iki yönde kimlik kanıtlama sağlar.
      EAP-TLS <link xlink:href="http://www.ietf.org/rfc/rfc2716.txt"
      >RFC2716</link>]'da tanımlanmıştır.
     </para>
    </listitem>
    <listitem>
     <para>
      <emphasis role="bold">EAP-TTLS:</emphasis> Kimlik kanıtlama verisinin
      emniyetli iletimi için şifreli bir TLS tüneli kurar. TLS tünelinden
      diğer (herhangi) kimlik kanıtlama yöntemleri faydalanır. Funk Software
      ve Meetinghouse tarafından geliştirlmiştir ve şu an bir IETF taslağı
      halindedir.
     </para>
    </listitem>
    <listitem>
     <para>
      <emphasis role="bold">Korumalı EAP (PEAP):</emphasis> EAP-TTLS gibi
      şifreli bir TLS tüneli kullanır. Hem EAP-TTLS hem EAP-PEAP için istemci
      (WN) sertifikaları seçimliktir, ama sunucu (AS) sertifikaları
      gereklidir. Microsoft, Cisco ve RSA Security tarafından geliştirimiştir
      ve şu an bir IETF taslağıdır.
     </para>
    </listitem>
    <listitem>
     <para>
      <emphasis role="bold">EAP-MSCHAPv2:</emphasis> Kullanıcı adı/parolaya
      ihtiyaç duyar ve temel olarak MS-CHAP-v2'nin [<link
      xlink:href="http://www.ietf.org/rfc/rfc2759.txt">RFC2759</link>] EAP
      kaplamalı olanıdır. Genellikle PEAP şifreli tünelde kullanılır.
      Microsoft tarafından geliştirilmiştir ve şu an bir IETF taslağıdır.
     </para>
    </listitem>
   </itemizedlist>
  </sect2>
  <sect2 xml:id="p8021x-howto-AAA">
   <title>RADIUS nedir?</title>
   <para>
    Uzaktan Aramalı Kullanıcı Kimlik Kanıtlama Servisi (RADIUS - Remote
    Authentication Dial-In User Service) (ve arkadaşları) [<link
    xlink:href="http://www.ietf.org/rfc/rfc2865.txt">RFC2865</link>]'te
    tanımlanmıştır ve ilk olarak, kullanıcılar, ISS'nin ağını kullanmak için
    yetkilendirilmeden önce kullanıcı adı ve parola doğrulaması yapacak olan
    ISS'ler tarafından kullanılmıştır.
   </para>
   <para>
    802.1X ne çeşit bir arka-uç kimlik kanıtlama sunucusu olması gerektiğini
    belirtmez, ama RADIUS, 802.1X'te kullanılan fiili arka-uç kimlik kanıtlama
    sunucusudur.
   </para>
   <para>
    Mevcut birçok AAA (Authentication, Authorization, Accounting) protokolü
    yoktur, ama hem RADIUS hem DIAMETER [<link
    xlink:href="http://www.ietf.org/rfc/rfc3588.txt">RFC3588</link>]
    (genişletmeler dahil) tam AAA desteği sağlarlar. AAA, Authentication
    (Kimlik Kanıtlama), Authorization (Yetkilendirme) ve Accounting (Hesap
    Yönetimi) kelimelerinin baş harflerinden oluşur (<link
    xlink:href="http://www.ietf.org/html.charters/aaa-charter.html">IETF'nin
    AAA Çalışma Grubu</link>).
   </para>
  </sect2>
 </sect1>
 <!-- ####################################################### -->
 <sect1 xml:id="p8021x-howto-cert">
  <title>Sertifikaların Sağlanması</title>
  <note>
   <para>
    EAP-TLS, EAP-TTLS veya PEAP'i kullanmak için OpenSSL kurulmalıdır!
   </para>
  </note>
  <para>
   EAP-TLS'yi kullanırken hem Kimlik Kanıtlama Sunucusu hem de tüm
   istemciler sertifikalara ihtiyaç duyar [<link
   xlink:href="http://www.ietf.org/rfc/rfc2459.txt">RFC2459</link>].
   EAP-TTLS veya PEAP'i kullanırken ise sadece Kimlik Kanıtlama Sunucusu
   sertifikalara gereksinim duyar; İstemci sertifikaları seçimliktir.
  </para>
  <para>
   Sertifikaları yerel sertifika yetkilisinden (SY) alırsınız. Eğer hiç yerel
   SY yoksa <application>OpenSSL</application> kendinden-imzalı sertifikalar
   üretmek için kullanılabilir.
  </para>
  <para>
   <application>FreeRADIUS</application> kaynağına dahil edilmiş,
   kendinden-imzalı sertifikalar üretmek için bazı yardımcı betikler
   mevcuttur. Betikler, <application>FreeRADIUS</application> kaynağında
   bulunan <filename>scripts/</filename> klasörünün altında bulunmaktadır:
  </para>
  <para>
   <filename>CA.all</filename> sorduğu bazı sorulara dayanarak sertifikalar
   üreten bir kabuk betiğidir. <filename>CA.certs</filename> betiğin
   başlangıcında önceden tanımlanmış bilgiye dayanarak etkileşimsiz olarak
   sertifikalar üretir.
  </para>
  <note>
   <para>
    Betikler OpenSSL'de mevcut olan <filename>CA.pl</filename> denilen bir
    Perl betiği kullanır. <filename>CA.all</filename> ve
    <filename>CA.certs</filename>'te bu Perl betiğine olan yol, betiğin
    çalıştırılabilmesi için değiştirilmeye ihtiyaç duyabilir.
   </para>
  </note>
  <tip>
   <para>
    Kendi sertifikalarınızı nasıl üretebileceğiniz hakkında daha fazla bilgiyi
    <link xlink:href="http://www.tldp.org/HOWTO/SSL-Certificates-HOWTO/">SSL
    certificates HOWTO</link> belgesinde bulabilirsiniz.
   </para>
  </tip>
 </sect1>
 <!-- ####################################################### -->
 <sect1 xml:id="p8021x-howto-FreeRADIUS">
  <title>Kimlik Kanıtlama Sunucusu: FreeRADIUS'un Kurulması</title>
  <para>
   <application>FreeRADIUS</application> tamamen GPL'li RADIUS sunucu
   uygulamasıdır. Kimlik kanıtlama mekanizmalarını geniş çapta destekler, ama
   bu belgede örnek olarak PEAP kullanılmıştır.
  </para>
  <!-- ################## -->
  <sect2 xml:id="p8021x-howto-instradius">
   <title>FreeRADIUS'un Kurulumu</title>
   <procedure>
    <title>Kurulum</title>
    <step performance="required">
     <para>
      <application>FreeRADIUS</application> sitesine gidin,
      <link xlink:href="http://www.freeradius.org/"/> ve en son sürümü
      indirin.
     </para>
<screen># <command>cd /usr/local/src</command>
# <command>wget ftp://ftp.freeradius.org/pub/radius/freeradius-1.0.0.tar.gz</command>
# <command>tar zxfv freeradius-1.0.0.tar.gz</command>
# <command>cd freeradius-1.0.0</command>
</screen>
    </step>
    <step performance="required">
     <para>
      Paketi yapılandırın, derleyin ve kurun:
     </para>
<screen># <command>./configure</command>
# <command>make</command>
# <command>make install</command>
</screen>
     <para>
      <command>configure</command> <emphasis> betiğini çalıştırırken seçenek
      belirtebilirsiniz. Daha fazla bilgi için</emphasis>
      <command>./configure --help</command>
      <emphasis> kullanın veya README dosyasını okuyun.</emphasis>
     </para>
    </step>
   </procedure>
   <para>
    Çalıştırabilir dosyalar <filename>/usr/local/bin</filename> ve
    <filename>/usr/local/sbin</filename>'e, yapılandırma dosyaları ise
    <filename>/usr/local/etc/raddb</filename> altına kurulur.
   </para>
   <para>
    Eğer birşey yanlış giderse, kaynakla birlikte gelen
    <filename>INSTALL</filename> ve <filename>README</filename> dosyalarını
    okuyun. <link xlink:href="http://www.freeradius.org/faq/">RADIUS
    SSS</link>'de değerli bilgiler içerir.
   </para>
  </sect2>
  <sect2 xml:id="p8021x-howto-confradius">
   <title>FreeRADIUS'un Yapılandırılması</title>
   <para>
    <application>FreeRADIUS</application> büyük ve güçlü bir yapılandırma
    dosyasına sahiptir. O kadar büyüktür ki, bu dosya daha küçük birkaç
    dosyaya parçalanıp daha sonra bu dosyalar ana
    <filename>radius.conf</filename> dosyasına "dahil edilmektedir".
   </para>
   <para>
    İstediğinizi yapmanız için FreeRADIUS'u kullanmanın ve ayağa kaldırmanın
    çeşitli yolları vardır: örn., kullanıcı bilgisini LDAP, SQL, PDC,
    Kerberos, vs.'den alın. Bu belgede, düz metin dosyası
    <filename>users</filename>'taki kullanıcı bilgisi kullanılmaktadır.
   </para>
   <tip>
    <para>
     Yapılandırma dosyalarına ayrıntılı bir şekilde yorum satırları
     eklenmiştir, ama eğer yeterli gelmezse kaynakla birlikte gelen
     <filename>doc/</filename> dizini ek bilgi içerir.
    </para>
   </tip>
   <procedure>
    <title>Yapılandırma</title>
    <step performance="required">
     <para>
      Yapılandırma dosyaları <filename>/usr/local/etc/raddb/</filename>
      altında bulunabilir.
     </para>
<screen># <command>cd /usr/local/etc/raddb/</command></screen>
    </step>
    <step performance="required">
     <para>
      Ana yapılandırma dosyası<filename>radiusd.conf</filename>'u açın,
      <emphasis>ve yorum satırlarını okuyun!</emphasis> Şifreli PEAP tüneli
      içinde, MS-CHAPv2 kimlik kanıtlama mekanizması kullanılır.
     </para>
     <substeps>
      <step performance="required">
       <para>
        MPPE [<link xlink:href="http://www.ietf.org/rfc/rfc3078.txt"
        >RFC3078</link>] PMK'yi AP'ye göndermekten sorumdur. Aşağıdaki
        ayarların yapıldığından emin olun:
       </para>
<screen># MODULES altında mschap'ın yorum satırı gibi yer
# almadığından emin olun!
mschap {
  # authtype değeri, eğer varsa, kimlik kanıtlama süresince
  # Auth-Type'ın üstüne yazmak (veya eklemek) için kullanılacak.
  # Normalde, MS-CHAP olmalı.
  authtype = MS-CHAP

  # eğer use_mppe no'ya ayarlanmamışsa, mschap,
  # MS-CHAPv2 için,MS-CHAPv1 ve MS-MPPE-Recv-Key/MS-MPPE-Send-Key
  # için MS-CHAP-MPPE-Keys ekleyecektir.
  use_mppe = yes

  # eğer mppe etkinse, require_encryption ile
  # şifreleme etkinleştirilebilir.
  #
  require_encryption = yes

  # require_strong her zaman 128 bitlik anahtar
  # şifrelemesi gerektirir.
  #
  require_strong = yes

  authtype = MS-CHAP
  # modül kimlik kanıtlamayı kendi kendine yapabilir VEYA
  # bir Windows Domain Controller kullanabilir. Bunun nasıl
  # yapılacağı için radius.conf dosyasına bakınız.
}
</screen>
      </step>
      <step performance="required">
       <para>
        <literal>authorize</literal> ve <literal>authenticate</literal>'in
        şunları içerdiğinden emin olun:
       </para>
<screen>authorize {
    preprocess
    mschap
    suffix
    eap
    files
}

authenticate {

      #
      #  MSCHAP kimlik kanıtlaması.
      Auth-Type MS-CHAP {
            mschap
      }

      #
      #  EAP kimlik kanıtlamasına izin ver.
      eap
  }
</screen>
      </step>
     </substeps>
    </step>
    <step performance="required">
     <para>
      <filename>clients.conf</filename> dosyasını hangi ağa hizmet ettiğini
      belirlemek için değiştirin:
     </para>
<screen># Burada, hangi ağa hizmet verdiğimizi belirliyoruz:
client 192.168.0.0/16 {
    # Bu Kimlik Kanıtlayıcı (erişim noktası) ve Kimlik
    # Kanıtlama Sunucusu (RADIUS) arasında paylaşılan sırdır.
    secret          = SharedSecret99
    shortname       = testnet
}
</screen>
    </step>
    <step performance="required">
     <para><filename>eap.conf</filename> da oldukça açık olmalı.
    </para>
     <substeps>
      <step performance="required">
       <para>
        <literal>default_eap_type</literal>'ı <literal>peap</literal>'e
        ayarlayınız:
       </para>
<screen>default_eap_type = peap</screen>
      </step>
      <step performance="required">
       <para>
        PEAP TLS kullandığı için TLS bölümü şunları içermeli:
       </para>
<screen>tls {
    # Özel anahtar parolası
       private_key_password = SecretKeyPass77
    # Özel anahtar
    private_key_file = ${raddbdir}/certs/cert-srv.pem
    # Güvenilir Üst Sertifika Yetkilisi
    CA_file = ${raddbdir}/certs/demoCA/cacert.pem
    dh_file = ${raddbdir}/certs/dh
    random_file = /dev/urandom
    }
</screen>
      </step>
      <step performance="required">
       <para>
        <literal>peap</literal> bölümünü bulun ve aşağıdakini içerdiğinden
        emin olun:
       </para>
<screen>peap {
  #  Tünelli EAP oturumu tünelsiz EAP modülünden farklı
  #  bir EAP türüne ihtiyaç duyar.
  #  PEAP tünelinde Windows istemcileri tarafından
  #  desteklenen öntanımlı tür olarak MS-CHAPv2
  #  kullanmanızı tavsiye ederiz.
  default_eap_type = mschapv2
}
</screen>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      Kullanıcı bilgisi bir düz metin dosyası olan
      <filename>users</filename>'ta tutulur. Kullanıcı bilgisini tutmak için
      daha karmaşık bir çözüm tercih edilebilirdi (SQL, LDAP, PDC, vs.)., şu
      an bir IETF taslağıdır.
     </para>
     <para>
      <filename>users</filename> dosyasının aşağıdaki kaydı içerdiğinden emin olun:
     </para>
<screen>"testuser"      User-Password == "Secret149"</screen>
    </step>
   </procedure>
  </sect2>
 </sect1>
 <!-- ####################################################### -->
 <sect1 xml:id="p8021x-howto-xsupplicant">
  <title>İstemci: Xsupplicant'ın Kurulması</title>
  <para>
   İstemci kimlik kanıtlamasına gereksinim duyan genellikle bir dizüstü
   bilgisayar veya diğer  başka bir (telsiz) aygıttır.
   <application>Xsupplicant</application> IEEE 802.1X-2001 standartının
   "İstemci" parçası olduğunu bildirir.
  </para>
  <sect2 xml:id="p8021x-howto-instxsup">
   <title>Xsupplicant'ın Kurulumu</title>
   <procedure>
    <title>Kurulum</title>
    <step performance="required">
     <para>
      En güncel kaynağı <link xlink:href="http://www.open1x.org/"/> adresinden
      indirin.
     </para>
<screen># <command>cd usr/local/src</command>
# <command>wget http://belnet.dl.sourceforge.net/sourceforge/open1x/xsupplicant-</command>
<command>1.0.tar.gz</command>
# <command>tar zxfv xsupplicant-1.0.tar.gz</command>
# <command>cd xsupplicant</command>
</screen>
    </step>
    <step performance="required">
     <para>
      Paketi yapılandırın, derleyin ve kurun:
     </para>
<screen># <command>./configure</command>
# <command>make</command>
# <command>make install</command>
</screen>
    </step>
    <step performance="required">
     <para>
      Eğer yapılandırma  dosyası <filename>etc</filename> dizininin altına
      kurulmamışsa kendiniz yapın:
     </para>
<screen># <command>mkdir -p /usr/local/etc/1x</command>
# <command>cp etc/tls-example.conf /usr/local/etc/1x</command>
</screen>
    </step>
   </procedure>
   <para>
    Eğer kurulum başarısız olursa kaynağa dahil edilmiş olan
    <filename>README</filename> ve <filename>INSTALL</filename> dosyalarını
    okuyun. Ayrıca, <link
    xlink:href="http://sourceforge.net/docman/display_doc.php?docid=23371&amp;group_id=60236">Resmi
    Belgelendirme</link>'yi de okuyabilirsiniz.
  </para>
  </sect2>
  <sect2 xml:id="p8021x-howto-confxsup">
   <title>Xsupplicant'ın Yapılandırılması</title>
   <procedure>
    <title>Yapılandırma</title>
    <step performance="required">
     <para>
      İstemci root sertifikasına erişebilmelidir.
     </para>
     <para>
      Eğer İstemci Kimlik Kanıtlama Sunucusundan (çift yönlü) doğrulamaya
      ihtiyaç duyuyorsa, İstemci sertifikalarına da erişebilmelidir.
     </para>
     <para>
      Bir sertifika dizini oluşturun ve sertifikaları onun içine taşıyın:
     </para>
<screen># <command>mkdir -p /usr/local/etc/1x/certs</command>
# <command>cp root.pem /usr/local/etc/1x/certs/</command>
<emphasis>(seçimlik istemci sertifikalarını aynı dizine kopyalayın)</emphasis>
</screen>
    </step>
    <step performance="required">
     <para>
      Yapılandırma dosyasını açın ve düzenleyin:
     </para>
<screen># startup_command: Xsupplicant ilk başlatılırken çalıştırılacak komut.
# Bu komut, kartın ağ ile kusursuz ilişkilendirilmesi için yapılandırılması
# gibi şeyleri yapabilir.
startup_command = &lt;BEGIN_COMMAND&gt;/usr/local/etc/1x/startup.sh&lt;END_COMMAND&gt;
</screen>
     <para>
      <filename>startup.sh</filename> çabucak oluşturulacak.
     </para>
    </step>
    <step performance="required">
     <para>
      İstemcinin kimlik doğrulaması olunca, bir DHCP isteği iletecektir veya
      elle bir IP adresi atayacaktır. Burada, İstemci kendi IP adresini
      <filename>startup2.sh</filename> dosyasında elle ayarlıyor:
     </para>
<screen># first_auth_command: Xsupplicant telsiz bir ağa kimlik doğrulaması
#   yapacağı zaman çalıştırılacak ilk komut. Bu genellikle
#   bir DHCP istemci sürecini başlatmak için kullanılır.
#first_auth_command = &lt;BEGIN_COMMAND&gt;dhclient %i&lt;END_COMMAND&gt;
first_auth_command=&lt;BEGIN_COMMAND&gt;/usr/local/etc/1x/startup2.sh&lt;END_COMMAND&gt;
</screen>
    </step>
    <step performance="optional">
     <para>
      <option>-i</option> sadece hata ayıklama amacıyla (geliştiricilere
      göre bu seçenek çıkarılabilir) kullanılabileceği için,
      <literal>allow_interfaces</literal> ayarlanmalı:
     </para>
<screen>allow_interfaces = eth0
deny_interfaces = eth1
</screen>
    </step>
    <step performance="required">
     <para>
      Sonra, NETWORK SECTION'ın altında, PEAP'i yapılandıracağız:
     </para>
<screen># PEAP'i kullanıyor olacağız
allow_types = eap_peap

# İlk aşamada (şifrelenmemiş aşama) kullanıcı adını
# öğrenmek için kulak misafiri olmak isteyenleri istemiyoruz,
# bu nedenle 'identity hiding' kullanılır
# (sahte bir kullanıcı adı kullanılır).
identity = &lt;BEGIN_ID&gt;anonymous&lt;END_ID&gt;

eap-peap {
  # tls'de olduğu gibi ya bir root sertifikası ya da
  # root sertifikalarırı içeren bir dizin tanımlayın.
  root_cert = /usr/local/etc/1x/certs/root.pem
  #root_dir = /path/to/root/certificate/dir
  #crl_dir = /path/to/dir/with/crl
  chunk_size = 1398
  random_file = /dev/urandom
  #cncheck = myradius.radius.com   # Sunucu sertifikasının CN alanında
                                   # bu değere sahip olduğundan emin olun.
  #cnexact = yes                   # Tam bir eşleşme olmalı mı?
  session_resume = yes

  # Şu an 'all' sadece mschapv2.
  # Eğer hiç allow_types tanımlanmamışsa 'all' öntanımlıdır.
  #allow_types = all # burada all = MSCHAPv2, MD5, OTP, GTC, SIM
  allow_types = eap_mschapv2

  # Şimdi, PEAP'te bu yöntemlerden her hangi birini uygulayabilirsiniz:
  eap-mschapv2 {
    username = &lt;BEGIN_UNAME&gt;testuser&lt;END_UNAME&gt;
    password = &lt;BEGIN_PASS&gt;Secret149&lt;END_PASS&gt;
  }
}
</screen>
    </step>
    <step performance="required">
     <para>
      İstemci ilk olarak erişim noktası ile ilişkilendirilmeli.
      <filename>startup.sh</filename> betiği o işi yapar. O aynı zamanda
      <application>Xsupplicant</application>'ın çalıştırdığı ilk komuttur.
     </para>
     <note>
      <para>
       <command>iwconfig</command>'e verdiğimiz sahte anahtara dikkat edin
       (<emphasis>enc 000000000</emphasis>)! Bu anahtar sürücüye şifreli kipte
       çalışmasını söyler. Anahtar, başarılı kimlik kanıtlamanın ardından
       başkasıyla değiştirilir. Eğer şifreleme AP'de (deneme amacıyla)
       kapalıysa bu <literal>enc off</literal>'a ayarlanabilir.
      </para>
     </note>
     <para>
      <filename>startup.sh</filename> ve <filename>startup2.sh</filename>, her
      ikisi de <filename>/usr/local/etc/1x/</filename> altında olmalı.
     </para>
<screen>#!/bin/bash
echo "$0: işlem başlatılıyor"
# Arayüzü devredışı bırakın (eğer çalışıyor ise)
/sbin/ifconfig eth0 down
# Rotaların boşaltıldığından emin olmak için
sleep 1
# Arayüzü sahte bir anahtarla yapılandırın
/sbin/iwconfig eth0 mode managed essid testnet enc 000000000
# Arayüzü başlatın ve çoğa gönderim paketlerini dinlediğinden emin olun
/sbin/ifconfig eth0 allmulti up
echo "$0: işlem tamam"
</screen>
    </step>
    <step performance="required">
     <para>
      Sonraki dosya IP adresini statik olarak ayarlamak için kullanılır. Eğer
      bir DHCP sunucusu varsa (birçok erişim noktasında genellikle vardır), bu
      dosya olmayabilir.
     </para>
<screen>#!/bin/bash
echo "$0: işlem başlatılıyor"
# IP adresinin atanması
/sbin/ifconfig eth0 192.168.1.5 netmask 255.255.255.0
echo "$0: işlem tamam"
</screen>
    </step>
   </procedure>
  </sect2>
 </sect1>
 <!-- ##################################################### -->
 <sect1 xml:id="p8021x-howto-authenticator">
  <title>Kimlik Kanıtlayıcı: Kimlik Kanıtlayıcının Kurulması (Erişim Noktası)</title>
  <para>
   Kimlik kanıtlama işlemi süresince Kimlik Kanıtlayıcı sadece İstemci ve
   Kimlik Kanıtlama Sunucusu (RADIUS) arasındaki iletileri taşır. İstemci ile
   Kimlik Kanıtlayıcı arasında EAPOL ve Kimlik Kanıtlayıcı ile Kimlik
   Kanıtlama Sunucusu arasında UDP kullanılır.
  </para>
  <sect2 xml:id="p8021x-howto-AP">
   <title>Erişim Noktası</title>
   <para>
    Birçok erişim noktası 802.1X (ve RADIUS) kimlik kanıtlaması için desteğe
    sahiptir. Önce 802.1X kimlik kanıtlaması kullanabilmesi için
    yapılandırılmalıdır.
   </para>
   <note>
    <para>
     <emphasis>EN'de 802.1X'i yapılandırma ve ayarlama işlemleri satıcılar
     arasında farklılık gösterebilir.</emphasis> Aşağıda Cisco AP350'yi
     çalıştırmak için gereken ayarlar listelenmiştir. TIKP, CCMP vs. gibi
     diğer ayarlar da ayrıca yapılabilir.
    </para>
   </note>
   <para>
    AP, ESSID'i deneme ağına ayarlanmalı ve etkinleştirilmeli:
   </para>
   <figure xml:id="p8021x-howto-ciscoAP">
    <title>Cisco AP350 RADIUS yapılandırma ekranı</title>
    <mediaobject>
     <imageobject>
      <imagedata fileref="p8021x/8021X-CiscoAP.png" format="PNG" width="599" align="center" scalefit="1"/>
     </imageobject>
     <caption>
      <para>Cisco AP-350 için RADIUS yapılandırma ekranı</para>
     </caption>
    </mediaobject>
   </figure>
   <itemizedlist>
    <listitem>
     <para>
      <emphasis>802.1X-2001:</emphasis> 802.1X Protokol sürümünün
      "802.1X-2001" 'e ayarlandığından emin olun. Bazı eski Erişim Noktaları
      802.1X standartının sadece taslak sürümünü destekler (ve bu nedenle
      çalışmayabilir).
     </para>
    </listitem>
    <listitem>
     <para>
      <emphasis>RADIUS Sunucu:</emphasis> RADIUS sunucunun isim/IP adresi ve
      RADIUS sunucu ile Erişim Noktası arasında paylaşılan sır (ki bu belgede
      "SharedSecret99" olarak geçer). <xref linkend="p8021x-howto-ciscoAP"/>'e
      bakınız.
     </para>
    </listitem>
    <listitem>
     <para>
      <emphasis>EAP Kimlik Kanıtlama:</emphasis> RADIUS sunucu EAP kimlik
      kanıtlaması için kullanılmalıdır.
     </para>
    </listitem>
   </itemizedlist>
   <para>
    <figure xml:id="p8021x-howto-ciscoAP2">
     <title>Cisco AP350 Şifreleme yapılandırma ekranı</title>
     <mediaobject>
      <imageobject>
       <imagedata fileref="p8021x/8021X-CiscoAP2.png" format="PNG" width="604" align="center" scalefit="1"/>
      </imageobject>
      <caption>
       <para>Cisco AP-350 için Şifreleme yapılandırma ekranı</para>
      </caption>
     </mediaobject>
    </figure>
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Sadece şifreli akışa izin vermek için <emphasis>Tam Şifreleme</emphasis>
      kullanılır. 802.1X'in şifrelemesiz kullanılabileceğine dikkat edin.
     </para>
    </listitem>
    <listitem>
     <para>
      Şifreleme anahtarları gelmeden önce İstemci ile Erişim Noktasını
      ilişkilendirmek için <emphasis>Açık Kimlik Kanıtlama</emphasis>
      kullanılır. İlişkilendirme yapılır yapılmaz İstemci, EAP kimlik
      kanıtlamasına başlayabilir.
     </para>
    </listitem>
    <listitem>
     <para>
      "Açık Kimlik Kanıtlama" için
      <emphasis>EAP'ye ihtiyaç duyulur</emphasis>. Bu, sadece kimlik
      kanıtlaması yapılmış kullanıcıların ağa girmesine izin verilmesini
      sağlar.
     </para>
    </listitem>
   </itemizedlist>
  </sect2>
  <sect2 xml:id="p8021x-howto-LinuxAP">
   <title>Linux Kimlik Kanıtlayıcı</title>
   <para>
    Sıradan bir Linux düğümü bir telsiz Erişim Noktası ve Kimlik Kanıtlayıcı
    gibi davranacak şekilde ayarlanabilir. Linux'un Erişim Noktası olarak
    nasıl kurulup kullanılacağı bu belgenin kapsamı dışındadır.
    Simon Anderson'un  <link
    xlink:href="http://oob.freeshell.org/nzwireless/LWAP-HOWTO.html">Linux
    Wireless Access Point HOWTO</link> belgesi size kılavuzluk edebilir.
   </para>
  </sect2>
 </sect1>
 <!-- ##################################################### -->
 <sect1 xml:id="p8021x-howto-testbed">
  <title>Deneme Ağı</title>
  <sect2 xml:id="p8021x-howto-testcase">
   <title>Deneme Sistemi</title>
   <figure xml:id="p8021x-howto-testbedimg">
    <title>Deneme Sistemi</title>
    <mediaobject>
     <imageobject>
      <imagedata fileref="p8021x/8021X-Testbed.png" format="PNG" width="500" align="center" scalefit="1"/>
     </imageobject>
     <caption>
      <para>
       Telsiz düğümlerinden biri kimlik doğrulaması yapmak istiyor.
      </para>
     </caption>
    </mediaobject>
   </figure>
   <para>
    Bizim deneme sistemimiz iki düğüm ve bir Erişim Noktasından (AP) oluşur.
    Bir düğüm İstemci (WN) gibi, diğeri RADIUS (AS) çalıştıran artalan Kimlik
    Kanıtlama Sunucusu gibi davranır. Erişim Noktası Kimlik Kanıtlayıcıdır.
    Açıklama için <xref linkend="p8021x-howto-testbedimg"/>'ye bakınız
   </para>
   <important>
    <para>
     Erişim Noktasının Kimlik Kanıtlama Sunucusuna erişebilmesi (ping)
     ve tam tersi son derece önemlidir!
    </para>
   </important>
  </sect2>
  <sect2 xml:id="p8021x-howto-startrad">
   <title>Bazı denemeler</title>
   <procedure>
    <title>bazı denemeler</title>
    <step performance="required">
     <para>
      RADIUS sunucu hata ayıklama kipinde başlatılır. Bu <emphasis>çok
      miktarda</emphasis> hata ayıklama bilgisi üretir. Önemli noktalar
      aşağıdadır:
     </para>
<screen># <command>radiusd -X</command>
Starting - reading configuration files ...
reread_config:  radiusd.conf'u okuyor
Config:   including file: /usr/local/etc/raddb/proxy.conf
Config:   including file: /usr/local/etc/raddb/clients.conf
Config:   including file: /usr/local/etc/raddb/snmp.conf
Config:   including file: /usr/local/etc/raddb/eap.conf
Config:   including file: /usr/local/etc/raddb/sql.conf
......
Module: Loaded MS-CHAP
  mschap: use_mppe = yes
  mschap: require_encryption = no
  mschap: require_strong = no
  mschap: with_ntdomain_hack = no
  mschap: passwd = "(null)"
  mschap: authtype = "MS-CHAP"
  mschap: ntlm_auth = "(null)"
Module: Instantiated mschap (mschap)
......
Module: Loaded eap
  eap: default_eap_type = "peap" <co xml:id="p8021x-howto-rad_peap"/>
  eap: timer_expire = 60
  eap: ignore_unknown_eap_types = no
  eap: cisco_accounting_username_bug = no
rlm_eap: Loaded and initialized type md5
  tls: rsa_key_exchange = no <co xml:id="p8021x-howto-rad_tls"/>
  tls: dh_key_exchange = yes
  tls: rsa_key_length = 512
  tls: dh_key_length = 512
  tls: verify_depth = 0
  tls: CA_path = "(null)"
  tls: pem_file_type = yes
  tls: private_key_file = "/usr/local/etc/raddb/certs/cert-srv.pem"
  tls: certificate_file = "/usr/local/etc/raddb/certs/cert-srv.pem"
  tls: CA_file = "/usr/local/etc/raddb/certs/demoCA/cacert.pem"
  tls: private_key_password = "SecretKeyPass77"
  tls: dh_file = "/usr/local/etc/raddb/certs/dh"
  tls: random_file = "/usr/local/etc/raddb/certs/random"
  tls: fragment_size = 1024
  tls: include_length = yes
  tls: check_crl = no
  tls: check_cert_cn = "(null)"
rlm_eap: Loaded and initialized type tls
  peap: default_eap_type = "mschapv2" <co xml:id="p8021x-howto-rad_mschapv2"/>
  peap: copy_request_to_tunnel = no
  peap: use_tunneled_reply = no
  peap: proxy_tunneled_request_as_eap = yes
rlm_eap: Loaded and initialized type peap
  mschapv2: with_ntdomain_hack = no
rlm_eap: Loaded and initialized type mschapv2
Module: Instantiated eap (eap)
......
Module: Loaded files
  files: usersfile = "/usr/local/etc/raddb/users" <co xml:id="p8021x-howto-rad_users"/>
......
Module: Instantiated radutmp (radutmp)
Listening on authentication *:1812
Listening on accounting *:1813
İstekleri işlemek için hazır. <co xml:id="p8021x-howto-rad_finished"/>
</screen>
     <calloutlist>
      <callout arearefs="p8021x-howto-rad_peap">
       <para>Varsayılan EAP türü PEAP'e ayarlanmıştır.</para>
      </callout>
      <callout arearefs="p8021x-howto-rad_tls">
       <para>
        RADIUS'un TLS ayarları burada ilklendirilir. Sertifika türü, yer ve
        parola burada listelenir.
       </para>
      </callout>
      <callout arearefs="p8021x-howto-rad_mschapv2">
       <para>
        PEAP tünelinin içinde MS-CHAPv2 kullanılır.
       </para>
      </callout>
      <callout arearefs="p8021x-howto-rad_users">
       <para>
        Kullanıcı adı/parola bilgisi <filename>users</filename> dosyasında
        bulunur.
       </para>
      </callout>
      <callout arearefs="p8021x-howto-rad_finished">
       <para>
        RADIUS sunucu başarılı bir şekilde başladı. Gelen istekler için
        bekliyor.
       </para>
      </callout>
     </calloutlist>
     <para>
      Radius sunucu istekleri işlemek için artık hazır!
     </para>
     <para>
      En ilginç çıktı yukarıda gösterilmiştir. Eğer en son satırın yerine
      her hangi bir hata iletisi alıyorsanız yapılandırmaya (yukarıda)
      dikkatli bir şekilde bakın.
     </para>
    </step>
    <step performance="required">
     <para>
      Şimdi İstemci kimlik doğrulaması için hazır.
      <application>Xsupplicant</application>'ı hata ayıklama kipinde başlatın.
      İki başlatma betiği tarafından üretilen çıktıyı göreceğimize dikkat
      edin: <filename>startup.sh</filename> ve
      <filename>startup2.sh</filename>.
     </para>
<screen># <command>xsupplicant -c /usr/local/etc/1x/1x.conf -i eth0 -d 6</command>
/etc/1x/startup.sh: işlem başlatılıyor
/etc/1x/startup.sh: işlem tamam
/etc/1x/startup2.sh: işlem başlatılıyor
/etc/1x/startup2.sh: işlem tamam
</screen>
    </step>
    <step performance="required">
     <para>
      Aynı zamanda RADIUS sunucu da çok miktarda çıktı üretiyor olacak.
      Başlıca bilgiler aşağıda gösterilmiştir:
     </para>
<screen>......
rlm_eap: Request found, released from the list
rlm_eap: EAP/peap
rlm_eap: processing type peap
rlm_eap_peap: Authenticate
rlm_eap_tls: processing TLS <co xml:id="p8021x-howto-rpro_tls"/>
eaptls_verify returned 7
rlm_eap_tls: Done initial handshake
eaptls_process returned 7
rlm_eap_peap: EAPTLS_OK <co xml:id="p8021x-howto-rpro_peap"/>
rlm_eap_peap: Session established.  Decoding tunneled attributes.
rlm_eap_peap: Received EAP-TLV response.
rlm_eap_peap: Tunneled data is valid.
rlm_eap_peap: Success
rlm_eap: Freeing handler
modcall[authenticate]: module "eap" returns ok for request 8
modcall: group authenticate returns ok for request 8
Login OK: [testuser/&lt;no User-Password attribute&gt;] (from client testnet port
37 cli 0002a56fa08a)
Sending Access-Accept of id 8 to 192.168.2.1:1032 <co xml:id="p8021x-howto-rpro_accept"/>
      MS-MPPE-Recv-Key = 0xf21757b96f52ddaefe084c343778d0082c2c8e12ce18ae10
a79c550ae61a5206 <co xml:id="p8021x-howto-rpro_reckey"/>
      MS-MPPE-Send-Key = 0x5e1321e06a45f7ac9f78fb9d398cab5556bff6c9d003cdf8
161683bfb7e7af18
      EAP-Message = 0x030a0004
      Message-Authenticator = 0x00000000000000000000000000000000
      User-Name = "testuser"
</screen>
     <calloutlist>
      <callout arearefs="p8021x-howto-rpro_tls">
       <para>
        TLS oturumu başlatılıyor. TLS el sıkışması yapılıyor.
       </para>
      </callout>
      <callout arearefs="p8021x-howto-rpro_peap">
       <para>TLS oturumu (PEAP-şifreli tünel) çalışıyor.</para>
      </callout>
      <callout arearefs="p8021x-howto-rpro_accept">
       <para>
        İstemcinin RADIUS sunucu tarafından başarıyla kimlik kanıtlaması
        yapılmıştır. "Access-Accept" iletisi gönderilir.
       </para>
      </callout>
      <callout arearefs="p8021x-howto-rpro_reckey">
       <para>
        <emphasis>MS-MPPE-Recv-Key</emphasis> [<link
        xlink:href="http://www.ietf.org/rfc/rfc2548.txt">RFC2548</link>
        bölüm 2.4.3], Kimlik Kanıtlayıcıya (erişim noktası) yönelmiş,
        MPPE Protokolüyle [<link
        xlink:href="http://www.ietf.org/rfc/rfc3078.txt">RFC3078</link>]
        şifrelenmiş Kimlik Kanıtlayıcı ve Kimlik Kanıtlama Sunucusu arasında
        paylaşılan sırrı anahtar olarak kullanan Ana Oturum Anahtarını (PMK)
        içerir. İstemci <xref linkend="p8021x-howto-Key"/> bölümünde
        tanımlandığı gibi MK'den aynı PMK'yi türetir.
       </para>
      </callout>
     </calloutlist>
    </step>
    <step performance="required">
     <para>
      Kimlik Kanıtlayıcı (erişim noktası) buna benzer günlük kayıtları gösterebilir:
     </para>
<screen>00:02:16 (Info): Station 0002a56fa08a Associated
00:02:17 (Info): Station=0002a56fa08a User="testuser" EAP-Authenticated
</screen>
    </step>
   </procedure>
   <para>
    İşte bu! İstemicini artık Erişim Noktasını kullanması için kimlik
    doğrulaması yapılmış oldu!
   </para>
  </sect2>
 </sect1>
 <!-- ##################################################### -->
 <sect1 xml:id="p8021x-howto-dynWEP">
  <title>Xsupplicant ve Sürücü desteği hakkında</title>
  <para>
   <xref linkend="p8021x-howto-Key"/> bölümünde açıklandığı gibi 802.1X ile
   Dynamic WEP/802.11i kullanmanın büyük avantajlarından biri oturum
   anahtarları için destektir. Her bir oturum için yeni bir şifreleme anahtarı
   üretilir.
  </para>
  <para>
   <application>Xsupplicant</application> bu belge yazılırken sadece
   "Dynamic WEP" 'i destekliyordu. WPA ve RSN/WPA2 için destek (802.11i)
   üzerinde çalışılıyor ve Chris Hessing'e
   (<application>Xsupplicants</application> geliştiricilerinden biri) göre
   2004/2005 sonuna kadar destekleneceği tahmin ediliyor.
  </para>
  <para>
   Tüm telsiz ürünler dynamic WEP'i veya WPA'yı desteklemez. RSN'yi (WPA)
   kullanmak için donanımda yeni desteğe dahi gereksinim duyulabilir. Birçok
   eski sürücü ağda her hangi bir zamanda tek bir WEP anahtarı kullanılacağını
   farzeder. Anahtar değiştirildiğinde yeni anahtarın etkinleşmesi için kart
   yeniden başlatılır. Bu yeni bir kimlik kanıtlamayı tetikler ve hiç bitmeyen
   bir döngü vardır.
  </para>
  <para>
   Yazım sırasında temel Linux çekirdeğindeki telsiz sürücülerin çoğu dynamic
   WEP/WPA'nın çalışması için yamalanmaya gereksinim duyuyordu. Zamanla bu
   yeni özellikleri destekleyecek şekilde güncelleneceklerdir. Bununla
   birlikte çekirdeğin dışında geliştirilen birçok sürücü dynamic WEP için
   desteğe sahiptir; HostAP, madwifi, Orinoco ve atmel sorunsuz çalışmalıdır.
  </para>
  <para>
   Xsupplicant kullanmak yerine, <link
   xlink:href="http://hostap.epitest.fi/wpa_supplicant/">wpa_supplicant</link>
   kullanılabilir. Hem WPA hem RSN (WPA2) hem de geniş çapta EAP kimlik
   kanıtlama yöntemleri için desteği vardır.
  </para>
 </sect1>
 <!-- ##################################################### -->
 <sect1 xml:id="p8021x-howto-faq">
  <title>SSS</title>
  <para>
   <link xlink:href="http://www.freeradius.org/faq/">FreeRADIUS</link>
   (mutlaka tavsiye edilir!) ve <link
   xlink:href="http://sourceforge.net/docman/display_doc.php?docid=23371&amp;group_id=60236#ch7"
   >Xsupplicant</link> sitelerinin SSS bölümlerine bakmayı unutmayın.
  </para>
  <qandaset defaultlabel="number">
   <qandaentry>
    <question>
     <para>
      Global bir yapılandırma dosyası yerine kullanıcıya özel
      <application>Xsupplicant</application> yapılandırmasına izin
      vermek mümkün mü?
     </para>
    </question>
    <answer>
     <para>Hayır, şu an değil.</para>
    </answer>
   </qandaentry>
   <qandaentry>
    <question>
     <para>
      PEAP'i kullanmak istemiyorum; Onun yerine EAP-TTLS veya EAP-TLS'yi
      kullanabilir miyim?
     </para>
    </question>
    <answer>
     <para>
      Evet. EAP-TTLS'yi kullanmak için bu belgede kullanılan yapılandırmaya
      sadece ufak değişiklikler yapmanız gerekir. EAP-TLS'yi kullanmak için
      istemci sertifikaları kullanılmalıdır.
     </para>
    </answer>
   </qandaentry>
   <qandaentry>
    <question>
     <para>
      GNU/Linux yerine bir Windows Supplicant (istemci) kullanabilir miyim?
     </para>
    </question>
    <answer>
     <para>
      Evet. Windows XP SP1/Windows 2000 SP3 PEAP MSCHAPv2 için desteğe sahip
      (bu belgede kullanıldı). Bir Windows NASIL'ı burada bulunabilir:
      <link xlink:href="http://text.dslreports.com/forum/remark,9286052~mode=flat"
      >FreeRADIUS/WinXP  Authentication Setup</link>
     </para>
    </answer>
   </qandaentry>
   <qandaentry>
    <question>
     <para>
      Kullanıcı kimlik kanıtlamaları için bir Active Directory
      kullanabilir miyim?
     </para>
    </question>
    <answer>
     <para>
      Evet. FreeRADIUS "ntlm_auth"'u kullanarak AD'den kullanıcı kimlik
      kanıtlamalarını yapabilir.
     </para>
    </answer>
   </qandaentry>
   <qandaentry>
    <question>
     <para>Hiç Windows Supplicant istemcisi var mı?</para>
    </question>
    <answer>
     <para>
      Evet. Windows XP SP1 veya Windows 2000 SP3 ile WPA (PEAP/MS-CHAPv2)
      için destek mevcuttur. Diğer istemciler (denenmedi) <link
      xlink:href="http://www.securew2.com">Secure W2</link> (ticari olmayan
      kullanım için bedavadır) ve <link
      xlink:href="http://wire.cs.nthu.edu.tw/wire1x/">WIRE1X</link> içerir.
      <link xlink:href="http://www.funk.com">Funk Software</link> de ticari
      bir istemciye sahiptir.
     </para>
    </answer>
   </qandaentry>
  </qandaset>
 </sect1>
 <!-- ##################################################### -->
 <sect1 xml:id="p8021x-howto-resources">
  <title>Faydalı Kaynaklar</title>
  <para>
   Genel olarak sadece 12 aydan daha eski olan IEEE standartları halka açıktır
   (şu bağdan <link xlink:href="http://standards.ieee.org/getieee802/">"IEEE
   802 Programını Alın"</link>). Dolayısıyla yeni <emphasis>802.11i</emphasis>
   ve <emphasis>802.1X-2004</emphasis> standartlarının belgeleri mevcut
   değildir. Gelişim sürecindeki her hangi bir taslak/iş ile alakalı
   makalelere erişmek için  IEEE katılımcısı olmalısınız (ki bu gerçekten hiç
   de zor değildir - sadece bir e-posta listesine katılın ve ilgili olduğunuzu
   söyleyin).
  </para>
  <orderedlist>
   <listitem>
    <simpara>
     FreeRADIUS Sunucu Projesi
     <link xlink:href="http://www.freeradius.org/"/>
   </simpara>
   </listitem>
   <listitem>
    <simpara>
     Open1x: IEEE 802.1X'in Açık Kaynak Uygulaması (Xsupplicant)
     <link xlink:href="http://www.open1x.org/"/>
   </simpara>
   </listitem>
   <listitem>
    <simpara>
     Open1x Kullanıcı Klavuzu
     <link xlink:href="http://sourceforge.net/docman/display_doc.php?docid=23371&amp;group_id=60236"/>
   </simpara>
   </listitem>
   <listitem>
    <simpara>
     Port-Tabanlı Ağ Erişim Denetimi (802.1X-2001)
     <link xlink:href="http://standards.ieee.org/getieee802/download/802.1X-2001.pdf"/>
   </simpara>
   </listitem>
   <listitem>
    <simpara>
     RFC2246: TLS Protokolü Sürüm 1.0
     <link xlink:href="http://www.ietf.org/rfc/rfc2246.txt"/>
   </simpara>
   </listitem>
   <listitem>
    <simpara>
     RFC2459: Internet X.509 Açık Anahtar Altyapı Sistemi -
     Sertifika ve CRL Profili
     <link xlink:href="http://www.ietf.org/rfc/rfc2459.txt"/>
   </simpara>
   </listitem>
   <listitem>
    <simpara>
     RFC2548: Microsoft Satıcıya Özel RADIUS Özellikleri
     <link xlink:href="http://www.ietf.org/rfc/rfc2548.txt"/>
   </simpara>
   </listitem>
   <listitem>
    <simpara>
     RFC2716: PPP EAP TLS Kimlik Kanıtlama Protokolü
     <link xlink:href="http://www.ietf.org/rfc/rfc2716.txt"/>
   </simpara>
   </listitem>
   <listitem>
    <simpara>
     RFC2865: Uzaktan Aramalı Kullanıcı Kimlik Kanıtlama Hizmeti (RADIUS)
     <link xlink:href="http://www.ietf.org/rfc/rfc2865.txt"/>
   </simpara>
   </listitem>
   <listitem>
    <simpara>
     RFC3079: Microsoft Noktadan-Noktaya Şifreleme (MPPE) ile kullanmak
     için Anahtarlar Türetmek
     <link xlink:href="http://www.ietf.org/rfc/rfc3079.txt"/>
   </simpara>
   </listitem>
   <listitem>
    <simpara>
     RFC3579: EAP için RADIUS desteği
     <link xlink:href="http://www.ietf.org/rfc/rfc3579.txt"/>
   </simpara>
   </listitem>
   <listitem>
    <simpara>
     RFC3580: IEEE 802.1X RADIUS Kullanım Yönergeleri
     <link xlink:href="http://www.ietf.org/rfc/rfc3580.txt"/>
   </simpara>
   </listitem>
   <listitem>
    <simpara>
     RFC3588: Çap Tabanlı Protokol
     <link xlink:href="http://www.ietf.org/rfc/rfc3588.txt"/>
   </simpara>
   </listitem>
   <listitem>
    <simpara>
     RFC3610: CBC-MAC (CCM) ile Sayaç
     <link xlink:href="http://www.ietf.org/rfc/rfc3610.txt"/>
   </simpara>
   </listitem>
   <listitem>
    <simpara>
     RFC3748: Genişleyebilir Kimlik Kanıtlama Protokolü (Extensible
     Authentication Protocol) (EAP)
     <link xlink:href="http://www.ietf.org/rfc/rfc3748.txt"/>
   </simpara>
   </listitem>
   <listitem>
    <simpara>
     Linux Telsiz Erişim Noktası NASIL
     <link xlink:href="http://oob.freeshell.org/nzwireless/LWAP-HOWTO.html"/>
   </simpara>
   </listitem>
   <listitem>
    <simpara>
     SSL Sertifikaları NASIL
     <link xlink:href="http://www.tldp.org/HOWTO/SSL-Certificates-HOWTO/"/>
   </simpara>
   </listitem>
   <listitem>
    <simpara>
     OpenSSL: x509(1)
     <link xlink:href="http://www.openssl.org/docs/apps/x509.html"/>
   </simpara>
   </listitem>
  </orderedlist>
 </sect1>
 <!-- ##################################################### -->
 <sect1 xml:id="p8021x-howto-copyack">
  <title>Teşekkür vs.</title>
  <sect2 xml:id="p8021x-howto-produced">
   <title>Bu belge nasıl üretildi?</title>
   <para>
    Bu belge Emacs kullanılarak DocBook XML olarak yazıldı.
   </para>
  </sect2>
  <sect2 xml:id="p8021x-howto-feedback">
   <title>Geri bildirim</title>
   <para>
    Öneriler, düzeltmeler ve eklemelere açığım. Katkıda bulunmak isteyenler
    benimle iletişime geçebilirler.Yıkıcı eleştiriler istemiyorum.
   </para>
   <para>
    Ana sayfa: <link xlink:href="http://www.gnist.org/~lars/"/>
   </para>
  </sect2>
  <sect2 xml:id="p8021x-howto-ack">
   <title>Teşekkür</title>
   <para>
    Andreas Hafslund'a ve Thales Communication'a desteklerinden
    ötürü teşekkür ederim.
   </para>
   <para>
    Değerleri katkıları için Artur Hecker'e, Chris Hessing'e, Jouni Malinen'e
    ve Terry Simons'a da teşekkür ederim!
   </para>
   <para>
    Dil gözden geçirmesi için Rick Moen'e teşekkür ederim!
   </para>
  </sect2>
 </sect1>
</article>
