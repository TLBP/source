<?xml version="1.0" encoding="UTF-8"?>

<!--DOCTYPE article SYSTEM "../docbook/dtd/docbookx.dtd"-->
<!-- ********************************************************************
     $Id: yazici-kullanimi-nasil.xml,v 1.2 2002/10/03 19:49:13 nilgun Exp $
     ******************************************************************** -->

<article id="archive-yazici-kullanimi-nasil">
  <articleinfo>
    <title>Linux'da Yazıcı Kullanımı NASIL</title>
    <author role="translator">
      <firstname>Değer Cenk Erdil</firstname>
      <affiliation>
          <address><email>degere@linux.org.tr</email></address>
      </affiliation>
    </author>
    <author>
      <firstname>Mark Komarinski</firstname>
      <affiliation>
     <address><email>markk@auratek.com</email></address>
   </affiliation>
   </author>
    <pubdate>Çeviri: v1.0, 21 Aralık 1997</pubdate>
    <pubdate>Özgün Belge: v1.2, 10 Eylül 1996</pubdate>
  </articleinfo>
<div>

<pre>

 </pre><h2> 1.  Giriş</h2><pre>

 Bu belge, Linux İşletim Sistemi ile birlikte gelen satır yazıcı
 kuyruklama sisteminin nasıl kullanılacağını açıklar. Bu NASIL
 dosyası, Linux yazdırma sistemi'nin kurulumu ve ayarlarından
 bahseden Yazıcı-NASIL belgesine yardımcı olarak hazırlanmıştır.

 </pre><h3> 1.1.  Copyrights and Trademarks </h3><pre>

 Some names mentioned in this HOWTO are claimed as copyrights and/or
 trademarks of certain persons and/or companies.  These names appear in
 full or initial caps in this HOWTO.

 (c) 1995 Matt Foster (mwf@engr.uark.edu)

 (c) 1996 Mark F. Komarinski (markk@auratek.com)

 All translations, derivative works, or aggregate works incorporating
 any Linux HOWTO documents must be covered under this copyright notice.

 That is, you may not produce a derivative work from a HOWTO and impose
 additional restrictions on its distribution. Exceptions to these rules
 may be granted under certain conditions; please contact the Linux
 HOWTO coordinator at the address given below.

 In short, we wish to promote dissemination of this information through
 as many channels as possible. However, we do wish to retain copyright
 on the HOWTO documents, and would like to be notified of any plans to
 redistribute the HOWTOs.

 If you have questions, please contact Greg Hankins, the Linux HOWTO
 coordinator, at &lt;gregh@sunsite.unc.edu>. You may finger this address
 for phone number and additional contact information.

 </pre><h3> 1.2.  Telif Hakları ve Tescilli Markalar</h3><pre>

 Bu NASIL dosyasındaki bazı isimler, belirli kişilerin ve/veya
 şirketlerin telif hakkı ve/veya tescilli markasıdır.

 (c) 1995 Matt Foster (mwf@engr.uark.edu)

 (c) 1996 Mark F. Komarinski (markk@auratek.com)

 Linux NASIL belgelerini içeren bütün çeviriler, türev veya toplama
 işler, bu telif hakkı bildirisinin içeriğine uygun olarak
 gerçekleştirilmelidir.

 Yani, bir NASIL dosyasını kullanarak yeni bir şey üretip, bu yeni
 ürünün dağıtımı hakkında fazladan kısıtlamalar getiremezsiniz.
 Belirli şartlar altında bu kurala istisnalar olabilir; aşağıda
 adresi verilen Linux HOWTO eşgüdümcüsüne başvurun.

 </pre><h3> 1.5.  Geribildirim</h3><pre>

 Bu nasıl dosyası için sorular, yorumlar veya düzeltmeler
 &lt;markk@auratek.com> adresine bildirilebilir.

 </pre><h2> 2.  Linux'ta Yazdırma </h2><pre>

 Bu bölüm dosyaların nasıl yazıcıdan basılacağı, yazdırma kuyruğunun
 nasıl gözlemleneceği, yazdırma kuyruğundan işlerin nasıl silineceği,
 dosyaların basmadan önce nasıl biçimleneceği ve yazdırma ortamının
 nasıl ayarlanacağı hakkında bilgiler içermektedir.

 </pre><h3> 2.1.  Linux'ta Yazdırmanın Tarihi</h3><pre>

 Linux yazdırma sistemi - lp sistemi -, UNIX işletim sistemi için,
 Kaliforniya Üniversitesi'nde bir öbek kişi tarafından yazılan kaynak
 kodunun Berkeley Yazılım Dağıtımı(BSD) sürümünün bir uyarlamasıdır.

 </pre><h3> 2.2.  lpr Komutunu Kullanarak Bir Dosyayı Basma</h3><pre>

 Linux İşletim Sistemi'nde bir dosyayı basmanın en kolay yolu,
 yazdırılacak olan dosyayı dogrudan yazıcı aygıtına göndermektir. Bunu
 yapmanın yollarından birisi de cat komutunu kullanmaktır. Yetkili
 kullanıcı olarak söyle bir komut yazarsınız:

      # cat tez.txt > /dev/lp

 Bu durumda, /dev/lp gerçek yazdırma aygıtı (nokta-vuruşlu yazıcı,
 lazer yazıcı, karakter dizicisi ya da çizici) için simgesel bağdır.
 (Simgesel bağlar hakkında daha fazla bilgi için ln(1) 'e bakınız).

 Güvenlik için, sadece yetkili kullanıcı ve yazıcı sunucu süreciyle
 (printer daemon) aynı gruptaki kullanıcılar doğrudan yazıcıya
 yazabilirler ve bu nedenledir ki, yazıcıya ulaşabilmek için lpr,
 lprm ve lpq gibi komutların kullanılması gerekmektedir.

 Bu sebeple, bir dosyayı yazdırmak için kullanıcıların lpr komutunu
 kullanmaları gerekir. lpr komutu, dosyayı bastırmak için gerekli olan
 bütün ön-işleri yapar ve ondan sonra da denetimi lpd (satır yazdırma
 sunucu süreci) programına geçirir. lpd, yazıcıya dosyayı nasıl
 basacağını söyler.

 lpr çalıştırıldığında, ilk olarak yazdırılacak olan dosyayı bir dizine
 (kuyruk dizinine) kopyalar. Yazdırılacak olan dosya, lpd onu yazdırana
 kadar bu dizinde kalır. lpd programına yazdırılacak bir dosya olduğu
 söylendiğinde, bu program kendisinin bir kopyasını çıkarır (bu işleme
 çatallanma -forking- denir). Özgün kopya yeni istekler için beklerken,
 bu yeni yaratılan kopya dosyanın yazıcıdan çıkmasını sağlar. Bu işlem
 birden çok işin bir anda kuyruğa atılmasını sağlar.

 lpr(1)'ın sözdizimi çok bilinen bir dizimdir,

      $ lpr [ seçenekler ] [ dosyaismi ... ]

 Dosyaismi belirtilmezse, lpr girdinin stardart girdiden (genellikle
 klavye ya da başka bir programın çıktısı) geleceğini kabul eder. Bu
 da kullanıcının, bir komutun çıktısını yazıcı kuyruğuna
 yönlendirebilmesini sağlar. Örneğin,

      $ cat tez.txt | lpr

 ya da,

      $ pr -l60 tez.txt | lpr

 lpr komutu, kullanıcının komutun çalışmasını kontrol edebilmesini
 sağlayan bir çok değişke kabul eder. Bunlardan en çok kullanılanlar
 şunlardır: "-Pyazıcı" hangi yazıcının kullanılacağını belirtir,
 "-h" o anda yazılan sayfanın yazılmasını keser, "-s" dosyayı kuyruk
 dizinine kopyalamak yerine kuyruk dizininden dosyaya bir simgesel
 bağ yaratır (büyük dosyalar için kullanışlıdır) ve "-#sayı" o
 çıktıdan kaç kopya alınacağını belirtir. Örneğin, lpr komutuna
 şöyle değişkeler verilebilir:

      $ lpr -#2 -sP dj tez.txt

 Bu komut lpd tarafından işlenecek olan dj isimli yazıcının kuyruk
 dizini altından, tez.txt isimli dosyaya simgesel bağ yaratacaktır.
 Yazıcıdan bu dosyanın çıktısını iki defa verecektir.

 lpr komutunun tanıyacağı seçeneklerin tam listesi için lpr(1) kılavuz
 sayfasına bakınız.

 </pre><h3> 2.3.  lpq Komutu ile Yazıcı Kuyruğunu Görmek</h3><pre>

 Yazıcı kuyruğunun içeriğini görmek için lpq komutunu kullanın. Hiç
 bir değişke verilmeden kullanıldığında, öntanımlı yazıcının kuyruk
 içeriğini gösterir.

 lpq komutundan gelen bilgiler bir çok amaçla kullanılabilir:

      $ lpq
      lp is ready and printing
      Rank   Owner      Job  Files            Total Size
      active mwf        31   tez.txt          682048 bytes

 Türkçe karşılığını yazmak istersek:

      $ lpq
      lp hazır durumda ve yazıyor
      Derece Sahibi     İş   Dosyalar         Toplam Büyüklük
      etken  mwf        31   tez.txt          682048 bayt

 </pre><h3> 2.4.  lprm Komutunu Kullanarak bir Yazdırma İşini İptal Etmek</h3><pre>

 Herhangi bir yazdırma sisteminin kullanışlı olan başka bir özelliği
 de, daha önceden kuyruğa yazlmış olan bir işin iptal edilebilmesidir.
 Bunu gerçekleştirmek için, lprm komutu kullanılır.

      $ lprm -

 Yukarıdaki komut, komutu çalıştıran kullanıcının yazıcıya
 gönderilmiş olan işlerini iptal eder. Tek bir işi iptal etmek için
 önce lpq komutu ile o işin numarasını öğrenmeniz; ve daha sonra da
 bu numarayı lprm komutuna vermeniz gerekir. Örneğin,

      $ lprm 31

 komutunun çalıştırılması, öntanımlı yazıcıdaki 31 numaralı işi
 (tez.txt) iptal eder.

 </pre><h3> 2.5.  lpd Programını lpc Komutu ile Kontrol Etmek</h3><pre>

 lpd sunucu sürecinin sunduğu yazıcıları kontrol etmek için lpc(8)
 komutu kullanılır. Bu komutu kullanarak, yazıcıları ve yazıcı
 kuyruklarını geçerli veya geçersiz hale getirebilirsiniz; bir
 kuyruktaki işlerin sırasını değiştirebilirsiniz; ve yazıcılar ve
 yazıcı kuyrukları hakkında durum raporları alınabilir. lpc
 komutu genellikle bir makinaya bağlı birden çok yazıcının makinayı
 kilitlemesi gibi durumlarda, yazıcıları kurmak için kullanılır.

      $ lpc

 Bu komut, lpc programını çalıştırır. lpc programı öntanımlı olarak
 etkileşimli kipte çalışır ve program çalışırken komutlarını
 uygulayabilirsiniz. Başka bir seçenek de, lpc programının kendi
 komutlarını komut satırınızdan vermektir:

      $ lpc status all

 Mevcut komutların listesi lpd kılavuz sayfasında bulunmaktadır.
 Burada sadece bilmeniz gereken bazı önemli komutlardan
 bahsedilmiştir. Komutlarda "option" olarak geçen yerler ya bir
 yazıcı ismi ya da bütün yazıcıları ifade eden "all" anahtar
 sözcüğü olabilir.

 ·  disable option - yazıcı kuyruğuna yeni iş verilmesini engeller

 ·  down option - yazıcının bütün yazdırma işlerini geçersiz yapar

 ·  enable option - yazıcı kuyruğuna yeni iş verilmesine izin verir

 ·  quit (or exit) - lpc programından çıkar

 ·  restart option - o yazıcı için lpd'yi yeniden başlatır

 ·  status option - yazıcının durumunu verir

 ·  up option - yazıcının bütün işlevlerini geçerli yapar ve yeni
                bir lpd çalıştırır.

 </pre><h2> 3.  Bilinmesi Gereken Diğer Şeyler</h2><pre>

 Bu bölümde, Linux'ta yazıcı kullanımı hakkında bilmek isteyeceğiniz
 çeşitli bazı şeylerden bahsetmektedir.

 </pre><h3> 3.1.  Yazdırmadan Önce Biçimlendirme</h3><pre>

 ASCII dosyalarının çoğu yazıcı için biçimlendirilmediğinden,
 yazıcıdan çıktılarının alınmasından önce bu dosyaları bir şekilde
 biçimlemek yararlıdır. Biçimlendirme işlemi, her sayfaya bir başlık
 ve sayfa numarası koyma, kenarları ayarlama, çift satır aralığı
 bırakma, içerlek yazma ya da dosyayı birden çok kolon halinde
 basma gibi seyler olabilir. Bunları yapmak için çok kullanılan bir
 yöntem, pr gibi bir yazdırma önişlemcisi kullanmaktır.

      $ pr +4 -d -h"Doktora Tezi, 2. Taslak" -l60 tez.txt | lpr

 Yukarıdaki örnekte, pr programı tez.txt isimli dosyayı alacak ve
 ilk üç sayfayı atlayacak (+4), sayfa uzunluğunu altmış satıra
 ayarlayacak (-l60), çıktıyı çift satır aralığıyla oluşturacak ve
 son olarak da her sayfanın başına "Doktora Tezi, 2.Taslak"
 tümcesini ekleyecektir (-h). lpr da daha sonra pr'nin çıktısını
 kuyruğa aktaracaktır. pr progrmının kullanımı hakkında, onun
 kendi kılavuz sayfasına bakın.

 </pre><h3> 3.2.  PRINTER Çevre Değişkenleri</h3><pre>

 Linux yazdırma sistemindeki bütün komutlar -P seçeneğini kabul
 ederler. Bu seçenek, kullanıcının çıktıyı hangi yazıcıdan almak
 istediğini belirtmesine yarar. Eğer kullanıcı hangi yazıcıyı
 kullanmak istediğini belirtmezse, çıktı için öntanımlı olan yazıcı
 kullanılacaktır.

 Yazıcıdan her çıktı almak istediğinizde bir yazıcı belirtmek yerine,
 kullanmak istediğiniz yazıcıyı PRINTER çevre değişkeninde
 belirtebilirsiniz. Bu işlem her kabuk için değişik şekilde
 gerçekleştirilir. bash kabuğu için bu işlemi aşağıdaki komutla
 yapabilirsiniz:

      $ PRINTER="yazıcı_ismi"; export PRINTER

 csh kabuğunda da, bu komutu yazabilirsiniz:

      % setenv PRINTER "yazıcı_ismi"

 Bu komutlar, giriş kabuk programcıklarınıza yazılabilir (bash için
 .profile ya da csh için .cshrc gibi) veya komut satırından
 çalıştırılabilirler. (Çevre değişkenleri hakkında daha fazla bilgi
 için bash(1) ve csh(1) kılavuz sayfalarına bakın.)

 </pre><h3> 3.3.  Çizim dosyalarını bastırmak</h3><pre>

 Çizim dosyalarını bir yazıcıdan bastırmak genellikle çevrim
 yaptığınız çizim çeşidine ve çıktıyı almak istediğiniz yazıcının
 türüne bağlıdır. Nokta vuruşlu yazıcılar, bu tip yazıcıların
 çizimleri işlemelerindeki farklar nedeniyle konumuzun dışındadır.
 Bu gibi bir durumda yapabileceğiniz en iyi şey yazıcınızın Epson
 yada IBM ProPrinter uyumlu olup olmadığına bakmak (uyumlu olması
 gerekir :) ), sonra çizim dosyasını PostScript'e çevirmek ve en
 sonunda da çizimi bastırmak için Ghostscript(bir sonraki bölüm)'i
 kullanmaktır. (Bu işleri yaparken sağ elinizi başınızın üstünden
 geçirip sol kulağınızı tutmayı unutmayın sakın! :( ).

 Eğer lazer yazıcınız varsa, bu tür yazıcıların çoğu PCL uyumlu
 olduğundan işiniz biraz daha kolaylaşacaktır. Bu durumda bir kaç
 seçeneğiniz var. Bazı programlar, doğrudan PCL içine çıktı
 gönderebilirler. Ya da, NetPBM gibi programlarla çıktıyı PCL'e
 çevirebilirsiniz. En son olarak da yine Ghostscript'i
 kullanabilirsiniz (bir sonraki bölümde).

 Yapacağınız en kesin ve iyi iş, NetPBM ve Ghostscript gibi paketleri
 yüklemek ve daha sonra da çizim dosyalarını otomatik olarak
 sihirleyecek bir sihirli süzgeç (bakınız Yazıcı-Ayarları-NASIL)
 yüklemektir.

 </pre><h3> 3.4.  PostScript dosyaları bastırmak</h3><pre>

 PostScript dosyaları, PostScript yorumlayıcısı olan bir yazıcıda
 bastırmak basit bir işlemdir; sadece lpr komutunu kullanmanız
 yeterli olacak, yazıcınız geri kalan ayrıntılarla ilgilenecektir.
 Yazıcısında PostScript özelliği olamayanlar için de, PostScript
 biçimini anlayabilen ve dosyayı çoğu yazıcının anlayabileceği bir
 dile çeviren programlar bulunmaktadır. Bu tür programların en çok
 bilineni Ghostscript'tir.

 Ghostscript, bir PostScript dosyasınındaki bütün tanımlamaları
 yazıcının anlayabileceği komutlara çevirir. PostScript dosyayı
 Ghostscript kullanarak basmak için, aşağıdakine benzer bir
 komut yazmalısınız:

      $ gs -dSAFER -dNOPAUSE -sDEVICE=deskjet -sOutputFile=|lpr tez.ps

 Yukarıdaki örneğe dikkatlice baktığımızda, aslında yaptığımız işin,
 -sOutputFile seçeneğini kullanarak, Ghostscript programının çıktısını
 lpr komutuna yönlendirmek olduğunu görürüz.

 Ghostview programı da, X Windows Sistemi için Ghostscript'e bir
 arayüzdür. PostScript dosyayı bastırmadan önce bir önizleme
 yapmanızı sağlar.

 </pre><h3> 3.5.  PDF dosyalarını bastırmak</h3><pre>

 Adobe PDF izleyicisi olmamasına rağmen, Postscript bilgileri
 yazıcıdan bastırabilen xpdf isimli bir program vardır.

 </pre><h3> 3.6.  TeX dosyalarını bastırmak</h3><pre>

 TeX dosyalarını bastırmanın en kolay yollarından birisi, bu
 dosyaları PostScript'e çevirip, daha sonra da Ghostscript'i
 kullanarak bastırmaktır. Bu işlemi gerçekleştirmek için, önce
 bu dosyaları TeX biçiminden, DVI (device-independent:
 aygıt-bağımsız anlamında) biçimine çevirmeniz gerekir. Bunu tex(1)
 komutu ile yapabilirsiniz. Sonra dvips programını kullanarak,
 DVI dosyasını PostScript biçimine çevireceksiniz. Komutlarla
 ifade edersek:

      $ tex tez.tex
      $ dvips tez.dvi

 Bu işlemlerden sonra, oluşan PostScript dosyayı, yukarıda
 anlatıldığı gibi yazıcıdan bastırabilirsiniz.

 </pre><h3> 3.7.  troff biçimindeki dosyaları bastırmak </h3><pre>

      $ groff -Tascii tez.tr | lpr

 ya da, eğer isterseniz,

      $ groff tez.tr > tez.ps

 ve PostScript dosyayı yukarıda anlatıldığı gibi basarsınız.

 </pre><h3> 3.8.  Kılavuz (man) sayfalarını bastırmak </h3><pre>

      $ man man | col -b | lpr

 Kılavuz (man) sayfaları, ön-biçimlenmiş troff bilgileri içerirler,
 bu nedenle olabilecek aydınlatma, altını çizme vb. şeyleri
 temizlememiz gerekir. col programı bu işlemi kolayca yapmanızı
 sağlar; ve çıktıyı da yönlendirerek başka birşey yapmamıza gerek
 kalmaz.

 </pre><h2> 4.  Çokça Sorulan Sorulara Cevaplar</h2><pre>

 <b>S1.  Çıktıdaki merdivenimsi görüntüyü nasıl engellerim?</b>

 C1.  Yazıcıdan alınan çıktıda merdivenimsi bir görüntü (staircase
 effect) oluşmasının sebebi, bazı yazıcıların kendilerine gönderilen
 satırların sonlandırılmasını beklemesinden dolayı oluşur. Bazı
 yazıcılar satır sonlarına, UNIX-tipi sistemlerde kullanılan
 satır-atlatma (LF line-feed) karakteri yerine, DOS-tarzı
 satır-başı/satır-atlatma (CR-LF carriage-return/line-feed) karakter
 ikilisinin konulmasını ister. Bu durumu düzeltmek için i
 yapılabilecek en kolay iş, yazıcınızda böyle bir ayarlamanın
 yapılıp yapılamadığına - ya DIP anahtarını değiştirerek ya da
 her yazıcı işinden önce bir ESC karakteri göndererek -
 bakmaktır. Sonuncu işlem (ESC karakteri gönderme), bir süzgeç
 yaratılarak gerçekleştirilebilir (S2 ve Foster95b'ye bakın).

 Çabuk bir düzeltme de komut satırında bir süzgeç kullanmaktır.
 Örneğin:

      $ cat tez.txt | todos | lpr

 <b>S2.  Süzgeç nedir?</b>

 C2.  Süzgeç, standart girdiden bilgi okuyan, daha sonra bu bilgi
 üzerinde bir işlem gerçekleştirip, standart çıktıya geri yazan
 bir programdır. Süzgeçler metin işleme de dahil olmak üzere, bir
 çok iş için kullanılırlar.

 <b>S3.  Sihirli süzgeç nedir?</b>

 C3.  Sihirli süzgeç, dosya türüne göre süzgeçleme işini yapan bir
 süzgeç programdır. Örneğin, eğer dosya salt-metin dosyası ise,
 sihirli süzgeç bu dosyayı normal yöntemleri kullanarak basacaktır.
 Ancak dosya bir PostScript ya da başka bir biçimde ise, normalden
 bir farklı bir yöntem kullanarak bu dosyayı basacaktır (PostScript
 için Ghostscript gibi). Bu duruma başka iki örnek de, magicfilter
 ve APSfilter programlarıdır. Bu süzgeçler yüklenmeden önce,
 gerekli olacak diğer programlar yüklenmelidir.

 Bunun sebebi, magicfilter yüklendiğinde, belirli bazı programlar
 için sisteminizi sorgular (örneğin ghostscript - eğer bu programı
 bulursa, PostScript bilgileri işleyebileceğini anlar) ve bu
 sorgulama sonucunda kendisini ayarlar. Bütün yazıcı dosyalarını
 bastırabilmek için, en azından aşağıdakilerin sisteminizde yüklü
 olması gerekir:

 ·  GhostScript

 ·  TeX

 ·  NetPBM

 ·  jpeg yardımcı programları

 ·  gzip

 <b>S4.  Ya Windows Yazdırma Sistemi? Linux bu sistemle çalışır mı?</b>

 C4.  Belki. Sadece Windows Yazdırma Sistemi komutlarını kabul eden
 yazıcılar Linux'la çalışmazlar. Bu sistemle birlikte diğer
 komutları da kabul edenler (Canon BJC 610 gibi), Windows Yazdırma
 Sisteminden başka bir biçime ayarlandıkları takdirde çalışırlar.

 <b>S5.  Sadece 6 sayfa çıktı alabiliyorum, daha fazlasına
 "file too large" (dosya uzunluğu çok fazla) hatası veriyor.</b>

 C5.  /etc/printcap dosyasının ilgili olduğu seçeneklerden biri de
 yazdırılacak dosyanın en fazla uzunluğudur. Bu bilgi için
 öntanımlı değer 1000 disk bloğudur (yaklaşık 500k?). Postscript ve
 onun gibi biçimlenmiş dosyalar için, bu uzunluk size yaklaşık 6-8
 sayfaya karşılık gelir (çizim de varsa). Yazıcı tanımlamasına
 aşağıdaki satırı ekleyin:

      mx=0

 Bunu yapmanızın nedeni yazıcı kuyruk bölümlendirmesinin dolmasını
 engellemektir. Bunu engellemenin başka bir yolu da lpr komutunun,
 kuyruk dizininden yazdırılacak olan dosyanıza simgesel bir bağ
 oluşturmasını sağlamaktır. Ancak bu durumda, lpr komutunu her
 defasında -s seçeneği ile çalıştırmayı unutmamanız gerekir.

 </pre><h2> 5.  Sorun giderme</h2><pre>

 Bu bölüm, yazıcı sisteminde genellikle yapılan yanlışlıklardan
 bahseder.

 Eğer yazıcınız çalışmıyorsa:

 ·  Diğer yazıcı işleri çalışıyor mu? (uygulamalar)

 ·  lpd çalışıyor mu? (lpc ile kontrol edin) (yazdırma denetleyicisi)

 ·  Yetkili kullanıcı yazıcıya doğrudan birşey gönderebiliyor mu?
    (yazdırma servisleri)

 ·  DOS altından çıktı alabiliyor musunuz? (kablo/yazıcı sorunu?)

    Bu soruları cevaplandırmanız, bir çözüm bulmanıza yardımcı
 olabilir. Bu bölüme eklenebilecek diğer önerileri, İngilizce için
 &lt;markk@auratek.com>, Türkçe için &lt;degere@linux.org.tr> adresine
 gönderin.

 </pre><h2> 6.  Başvuru Kaynakları</h2><pre>

 Bu bölümde, bu belgenin hazırlanmasında başvurulan ve Linux Yazdırma
 Sistemi için başvurulabilecek çeşitli kaynaklardan bahsedilmiştir.
 Bu belgenin yazarı (markk@auratek.com), bu NASIL dosyasının
 hazırlanmasında bu kaynaklara gerektiği zaman gönderme yaptığını
 ve eksiklerin bulunması durumunda kendisi ile ilişkiye geçilmesini
 istediğini belirtmiştir.

    Kılavuz Sayfaları

    ·  cat(1)  dosyaları birleştirir ve yazar

    ·  dvips(1)  TeX DVI dosyasını PostScript biçimine çevirir

    ·  ghostview(1)  Ghostscript kullanarak PostScript belgeleri
                     görmenizi sağlar

    ·  groff(1)  groff belge biçimlendirme sisteminin ön-ucu

    ·  gs(1)  Ghostscript yorumlayıcısı/izleyicisi

    ·  lpc(8)  satır yazıcı denetleme programı

    ·  lpd(8)  satır yazıcı kuyruklarını denetleyici süreç

    ·  lpq(1)  kuyruk sırası inceleme programı

    ·  lpr(1)  çevrim-dışı (off-line) yazıcı

    ·  lprm(1)  satır yazıcı kuyruk sırasındaki dosyaları siler

    ·  pr(1)  metin dosyalarını - yazdırma için - çevirir

    ·  tex(1)  metin biçimleme ve karakter dizileme

    USENET haber öbekleri

    ·  comp.os.linux.*  Linux hakkında en genel bilgiler

    ·  comp.unix.*  UNIX işletim sistemi ile ilgili tartışmalar


</pre></div></article>
